<!DOCTYPE html><html class="" lang="en"><head><meta charSet="utf-8"/><meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1"/><link rel="stylesheet" href="/chat-static/_next/static/css/a44d21ac22c4f1d7.css?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1" data-precedence="next"/><link rel="stylesheet" href="/chat-static/_next/static/css/e2e6f6fcc0a2ad47.css?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1" data-precedence="next"/><link rel="stylesheet" href="/chat-static/_next/static/css/65cd4b1de85fd597.css?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1" data-precedence="next"/><link rel="stylesheet" href="/chat-static/_next/static/css/a7c91a1e3cfba1fe.css?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1" data-precedence="next"/><link rel="stylesheet" href="/chat-static/_next/static/css/168dfb3a8e8dbb8f.css?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1" data-precedence="next"/><link rel="stylesheet" href="/chat-static/_next/static/css/449dec528a3f9bce.css?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1" data-precedence="next"/><link rel="stylesheet" href="/chat-static/_next/static/css/54c3b2ac976d95a6.css?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1" data-precedence="next"/><link rel="stylesheet" href="/chat-static/_next/static/css/1792a0c06bc67cfd.css?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1" data-precedence="next"/><link rel="preload" as="script" fetchPriority="low" href="/chat-static/_next/static/chunks/webpack-5ca612d5db53cd74.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1"/><script src="/chat-static/_next/static/chunks/8ea07a94-50e9314361b21743.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1" async=""></script><script src="/chat-static/_next/static/chunks/62638-da271a535087a0e0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1" async=""></script><script src="/chat-static/_next/static/chunks/main-app-73bb9cb05718fe6f.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1" async=""></script><script src="/chat-static/_next/static/chunks/dd702a79-b6c7661c8a838128.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1" async=""></script><script src="/chat-static/_next/static/chunks/b7a1a8c0-72ee0f814ed13c32.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1" async=""></script><script src="/chat-static/_next/static/chunks/8d598023-196a80608fdd6eee.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1" async=""></script><script src="/chat-static/_next/static/chunks/73535-103b6060cf97ab6d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1" async=""></script><script src="/chat-static/_next/static/chunks/51679-08aafdbd5acc6aa3.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1" async=""></script><script src="/chat-static/_next/static/chunks/8557-c2a5e618ccff242d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1" async=""></script><script src="/chat-static/_next/static/chunks/3357-a437bd9e1280840c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1" async=""></script><script src="/chat-static/_next/static/chunks/56497-9a15f5e7fc5e058e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1" async=""></script><script src="/chat-static/_next/static/chunks/69053-2a18fec337af0c69.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1" async=""></script><script src="/chat-static/_next/static/chunks/69790-06e2618fe911421e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1" async=""></script><script src="/chat-static/_next/static/chunks/69241-23922ef52da5b76b.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1" async=""></script><script src="/chat-static/_next/static/chunks/19199-c732e5ac6f8e2141.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1" async=""></script><script src="/chat-static/_next/static/chunks/43207-f2d4fa16ab44d090.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1" async=""></script><script src="/chat-static/_next/static/chunks/13280-b6a1193602500b08.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1" async=""></script><script src="/chat-static/_next/static/chunks/7921-73dfed29e8c02165.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1" async=""></script><script src="/chat-static/_next/static/chunks/40626-7aa1c4c6db827c91.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1" async=""></script><script src="/chat-static/_next/static/chunks/42626-46c65f92250a4525.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1" async=""></script><script src="/chat-static/_next/static/chunks/93590-52e31b4cbcf9e82d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1" async=""></script><script src="/chat-static/_next/static/chunks/93307-40c92ad52815d0a2.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1" async=""></script><script src="/chat-static/_next/static/chunks/6905-cb9cabc11de7c1e0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1" async=""></script><script src="/chat-static/_next/static/chunks/11139-f96710a45351a03f.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1" async=""></script><script src="/chat-static/_next/static/chunks/20514-f3407bf5b06a848a.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1" async=""></script><script src="/chat-static/_next/static/chunks/47682-0d778b613e9847fb.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1" async=""></script><script src="/chat-static/_next/static/chunks/53320-a7193a327838943e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1" async=""></script><script src="/chat-static/_next/static/chunks/41599-7a7f7cf9c09e7ac7.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1" async=""></script><script src="/chat-static/_next/static/chunks/20144-63eeced46f10ea05.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1" async=""></script><script src="/chat-static/_next/static/chunks/32349-21720b7e60216f19.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1" async=""></script><script src="/chat-static/_next/static/chunks/26877-7997e28f400c72fa.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1" async=""></script><script src="/chat-static/_next/static/chunks/48223-7ea74e070987a567.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1" async=""></script><script src="/chat-static/_next/static/chunks/40390-c9bfaa0de0b72f67.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1" async=""></script><script src="/chat-static/_next/static/chunks/17077-6a46ded038f54266.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1" async=""></script><script src="/chat-static/_next/static/chunks/33871-ce5211be2bca40e6.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1" async=""></script><script src="/chat-static/_next/static/chunks/app/chat/%5Bvariants%5D/(dynamic-root)/(home)/(chat)/%40header/default-4579a9896135ba23.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1" async=""></script><script src="/chat-static/_next/static/chunks/92984-3d1fd3239dfc3153.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1" async=""></script><script src="/chat-static/_next/static/chunks/app/chat/%5Bvariants%5D/(dynamic-root)/layout-a61c83508084f7d0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1" async=""></script><script src="/chat-static/_next/static/chunks/76442-21e0af1e9dcba237.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1" async=""></script><script src="/chat-static/_next/static/chunks/29753-628fdf7767ca547c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1" async=""></script><script src="/chat-static/_next/static/chunks/68223-f371eb2e74f42a9c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1" async=""></script><script src="/chat-static/_next/static/chunks/67343-0a8a43eba0b25445.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1" async=""></script><script src="/chat-static/_next/static/chunks/20897-32692800f1878a20.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1" async=""></script><script src="/chat-static/_next/static/chunks/60114-1dd8b378f278c46d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1" async=""></script><script src="/chat-static/_next/static/chunks/app/chat/%5Bvariants%5D/(dynamic-root)/(home)/(chat)/%40chat/id/page-6849e2289adc65f4.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1" async=""></script><script src="/chat-static/_next/static/chunks/app/chat/%5Bvariants%5D/(dynamic-root)/(home)/(chat)/%40chat/layout-106e138d16c3d622.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1" async=""></script><script src="/chat-static/_next/static/chunks/app/chat/%5Bvariants%5D/(dynamic-root)/(home)/(chat)/error-f77ab1b9f286726a.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1" async=""></script><script src="/chat-static/_next/static/chunks/app/chat/%5Bvariants%5D/(dynamic-root)/(home)/(chat)/layout-75dd7bd5642f6618.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1" async=""></script><script src="/chat-static/_next/static/chunks/91612-64319b240b0dbe95.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1" async=""></script><script src="/chat-static/_next/static/chunks/app/chat/%5Bvariants%5D/(dynamic-root)/(home)/layout-18a927c6067422da.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1" async=""></script><meta name="next-size-adjust" content=""/><link as="image" href="/chat-static/sign-in-visual.svg" rel="preload" type="image/svg+xml"/><link as="image" href="/chat-static/sign-in-visual-dark.svg" rel="preload" type="image/svg+xml"/><script>(function() {
  !function(){try{var d=document.documentElement,c=d.classList;c.remove('light','dark');var e=localStorage.getItem('theme');if('system'===e||(!e&&true)){var t='(prefers-color-scheme: dark)',m=window.matchMedia(t);if(m.media!==t||m.matches){d.style.colorScheme = 'dark';c.add('dark')}else{d.style.colorScheme = 'light';c.add('light')}}else if(e){c.add(e|| '')}if(e==='light'||e==='dark')d.style.colorScheme=e}catch(e){}}()
  var html = document.documentElement;
  var meta = document.querySelector('meta[name="theme-color"]');
  if (!meta) {
    meta = document.createElement('meta');
    meta.setAttribute('name', 'theme-color');
    document.head.appendChild(meta);
  }
  function updateThemeColor() {
    window.themeClass = html.className;
    var isDark = html.classList.contains('dark');
    meta.setAttribute('content', isDark ? 'hsl(240deg 3% 6%)' : 'hsl(0 0% 100%)');
  }
  var observer = new MutationObserver(updateThemeColor);
  observer.observe(html, { attributes: true, attributeFilter: ['class'] });
  updateThemeColor();
})();
            (function(){let e=localStorage.getItem("sidebar");return document.documentElement.dataset.state="collapsed"===e?"collapsed":"expanded","collapsed"===e?"collapsed":"expanded"})();</script><script src="/chat-static/_next/static/chunks/polyfills-42372ed130431b0a.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1" noModule=""></script></head><body class="font-sans text-gray-900 antialiased __variable_ad2de5 __variable_3db593 __variable_40217a"><div hidden=""><!--$?--><template id="B:1"></template><!--/$--></div><!--$--><!--/$--><div class="min-h-screen-patched bg-background flex w-full flex-col" vaul-drawer-wrapper=""><!--$--><!--/$--><div role="region" aria-label="Notifications (F8)" tabindex="-1" style="pointer-events:none"><ol tabindex="-1" class="fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col lg:max-w-[420px]"></ol></div><section aria-label="Notifications alt+T" tabindex="-1" aria-live="polite" aria-relevant="additions text" aria-atomic="false"></section><!--$?--><template id="B:2"></template><!--/$--><div class="flex flex-1"><main class="min-h-screen-patched relative min-w-0 flex-1"><!--$--><!--$?--><template id="B:3"></template><div class="bg-background fixed inset-0 z-50"></div><!--/$--><!--$--><!--/$--><!--/$--></main></div><!--$--><!--/$--></div><style>
            #fides-overlay {
              display: none !important;
            }
            </style><!--$--><!--/$--><!--$--><!--/$--><!--$--><!--/$--><script src="/chat-static/_next/static/chunks/webpack-5ca612d5db53cd74.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1" async=""></script><script>(self.__next_f=self.__next_f||[]).push([0])</script><script>self.__next_f.push([1,"1:\"$Sreact.fragment\"\n2:I[57472,[],\"\"]\n3:I[71750,[],\"\"]\n7:\"$Sreact.suspense\"\nb:I[65360,[],\"OutletBoundary\"]\n10:I[76056,[],\"AsyncMetadataOutlet\"]\n"])</script><script>self.__next_f.push([1,"12:I[7089,[\"86365\",\"static/chunks/dd702a79-b6c7661c8a838128.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"38058\",\"static/chunks/b7a1a8c0-72ee0f814ed13c32.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"79660\",\"static/chunks/8d598023-196a80608fdd6eee.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"73535\",\"static/chunks/73535-103b6060cf97ab6d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"51679\",\"static/chunks/51679-08aafdbd5acc6aa3.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"8557\",\"static/chunks/8557-c2a5e618ccff242d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"3357\",\"static/chunks/3357-a437bd9e1280840c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"56497\",\"static/chunks/56497-9a15f5e7fc5e058e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69053\",\"static/chunks/69053-2a18fec337af0c69.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69790\",\"static/chunks/69790-06e2618fe911421e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69241\",\"static/chunks/69241-23922ef52da5b76b.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"19199\",\"static/chunks/19199-c732e5ac6f8e2141.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"43207\",\"static/chunks/43207-f2d4fa16ab44d090.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"13280\",\"static/chunks/13280-b6a1193602500b08.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"7921\",\"static/chunks/7921-73dfed29e8c02165.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40626\",\"static/chunks/40626-7aa1c4c6db827c91.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"42626\",\"static/chunks/42626-46c65f92250a4525.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93590\",\"static/chunks/93590-52e31b4cbcf9e82d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93307\",\"static/chunks/93307-40c92ad52815d0a2.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"6905\",\"static/chunks/6905-cb9cabc11de7c1e0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"11139\",\"static/chunks/11139-f96710a45351a03f.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20514\",\"static/chunks/20514-f3407bf5b06a848a.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"47682\",\"static/chunks/47682-0d778b613e9847fb.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"53320\",\"static/chunks/53320-a7193a327838943e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"41599\",\"static/chunks/41599-7a7f7cf9c09e7ac7.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20144\",\"static/chunks/20144-63eeced46f10ea05.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"32349\",\"static/chunks/32349-21720b7e60216f19.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"26877\",\"static/chunks/26877-7997e28f400c72fa.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"48223\",\"static/chunks/48223-7ea74e070987a567.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40390\",\"static/chunks/40390-c9bfaa0de0b72f67.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"17077\",\"static/chunks/17077-6a46ded038f54266.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"33871\",\"static/chunks/33871-ce5211be2bca40e6.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"98259\",\"static/chunks/app/chat/%5Bvariants%5D/(dynamic-root)/(home)/(chat)/%40header/default-4579a9896135ba23.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\"],\"Header\"]\n"])</script><script>self.__next_f.push([1,"18:I[65360,[],\"ViewportBoundary\"]\n1a:I[65360,[],\"MetadataBoundary\"]\n1c:I[5264,[],\"\"]\n1d:I[76056,[],\"AsyncMetadata\"]\n"])</script><script>self.__next_f.push([1,"20:I[51420,[\"86365\",\"static/chunks/dd702a79-b6c7661c8a838128.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"38058\",\"static/chunks/b7a1a8c0-72ee0f814ed13c32.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"79660\",\"static/chunks/8d598023-196a80608fdd6eee.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"73535\",\"static/chunks/73535-103b6060cf97ab6d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"51679\",\"static/chunks/51679-08aafdbd5acc6aa3.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"8557\",\"static/chunks/8557-c2a5e618ccff242d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"3357\",\"static/chunks/3357-a437bd9e1280840c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"56497\",\"static/chunks/56497-9a15f5e7fc5e058e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69053\",\"static/chunks/69053-2a18fec337af0c69.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69790\",\"static/chunks/69790-06e2618fe911421e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69241\",\"static/chunks/69241-23922ef52da5b76b.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"19199\",\"static/chunks/19199-c732e5ac6f8e2141.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"43207\",\"static/chunks/43207-f2d4fa16ab44d090.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"13280\",\"static/chunks/13280-b6a1193602500b08.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"7921\",\"static/chunks/7921-73dfed29e8c02165.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40626\",\"static/chunks/40626-7aa1c4c6db827c91.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93590\",\"static/chunks/93590-52e31b4cbcf9e82d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93307\",\"static/chunks/93307-40c92ad52815d0a2.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"6905\",\"static/chunks/6905-cb9cabc11de7c1e0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"11139\",\"static/chunks/11139-f96710a45351a03f.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20514\",\"static/chunks/20514-f3407bf5b06a848a.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"47682\",\"static/chunks/47682-0d778b613e9847fb.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"53320\",\"static/chunks/53320-a7193a327838943e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"41599\",\"static/chunks/41599-7a7f7cf9c09e7ac7.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20144\",\"static/chunks/20144-63eeced46f10ea05.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"92984\",\"static/chunks/92984-3d1fd3239dfc3153.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"32349\",\"static/chunks/32349-21720b7e60216f19.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"26877\",\"static/chunks/26877-7997e28f400c72fa.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"48223\",\"static/chunks/48223-7ea74e070987a567.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40390\",\"static/chunks/40390-c9bfaa0de0b72f67.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"17077\",\"static/chunks/17077-6a46ded038f54266.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"33871\",\"static/chunks/33871-ce5211be2bca40e6.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"88069\",\"static/chunks/app/chat/%5Bvariants%5D/(dynamic-root)/layout-a61c83508084f7d0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\"],\"ThemeProvider\"]\n"])</script><script>self.__next_f.push([1,"21:I[38598,[\"86365\",\"static/chunks/dd702a79-b6c7661c8a838128.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"38058\",\"static/chunks/b7a1a8c0-72ee0f814ed13c32.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"79660\",\"static/chunks/8d598023-196a80608fdd6eee.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"73535\",\"static/chunks/73535-103b6060cf97ab6d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"51679\",\"static/chunks/51679-08aafdbd5acc6aa3.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"8557\",\"static/chunks/8557-c2a5e618ccff242d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"3357\",\"static/chunks/3357-a437bd9e1280840c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"56497\",\"static/chunks/56497-9a15f5e7fc5e058e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69053\",\"static/chunks/69053-2a18fec337af0c69.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69790\",\"static/chunks/69790-06e2618fe911421e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69241\",\"static/chunks/69241-23922ef52da5b76b.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"19199\",\"static/chunks/19199-c732e5ac6f8e2141.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"43207\",\"static/chunks/43207-f2d4fa16ab44d090.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"13280\",\"static/chunks/13280-b6a1193602500b08.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"7921\",\"static/chunks/7921-73dfed29e8c02165.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40626\",\"static/chunks/40626-7aa1c4c6db827c91.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93590\",\"static/chunks/93590-52e31b4cbcf9e82d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93307\",\"static/chunks/93307-40c92ad52815d0a2.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"6905\",\"static/chunks/6905-cb9cabc11de7c1e0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"11139\",\"static/chunks/11139-f96710a45351a03f.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20514\",\"static/chunks/20514-f3407bf5b06a848a.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"47682\",\"static/chunks/47682-0d778b613e9847fb.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"53320\",\"static/chunks/53320-a7193a327838943e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"41599\",\"static/chunks/41599-7a7f7cf9c09e7ac7.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20144\",\"static/chunks/20144-63eeced46f10ea05.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"92984\",\"static/chunks/92984-3d1fd3239dfc3153.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"32349\",\"static/chunks/32349-21720b7e60216f19.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"26877\",\"static/chunks/26877-7997e28f400c72fa.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"48223\",\"static/chunks/48223-7ea74e070987a567.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40390\",\"static/chunks/40390-c9bfaa0de0b72f67.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"17077\",\"static/chunks/17077-6a46ded038f54266.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"33871\",\"static/chunks/33871-ce5211be2bca40e6.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"88069\",\"static/chunks/app/chat/%5Bvariants%5D/(dynamic-root)/layout-a61c83508084f7d0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\"],\"LocaleProvider\"]\n"])</script><script>self.__next_f.push([1,"22:I[96368,[\"86365\",\"static/chunks/dd702a79-b6c7661c8a838128.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"38058\",\"static/chunks/b7a1a8c0-72ee0f814ed13c32.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"79660\",\"static/chunks/8d598023-196a80608fdd6eee.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"73535\",\"static/chunks/73535-103b6060cf97ab6d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"51679\",\"static/chunks/51679-08aafdbd5acc6aa3.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"8557\",\"static/chunks/8557-c2a5e618ccff242d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"3357\",\"static/chunks/3357-a437bd9e1280840c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"56497\",\"static/chunks/56497-9a15f5e7fc5e058e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69053\",\"static/chunks/69053-2a18fec337af0c69.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69790\",\"static/chunks/69790-06e2618fe911421e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69241\",\"static/chunks/69241-23922ef52da5b76b.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"19199\",\"static/chunks/19199-c732e5ac6f8e2141.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"43207\",\"static/chunks/43207-f2d4fa16ab44d090.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"13280\",\"static/chunks/13280-b6a1193602500b08.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"7921\",\"static/chunks/7921-73dfed29e8c02165.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40626\",\"static/chunks/40626-7aa1c4c6db827c91.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93590\",\"static/chunks/93590-52e31b4cbcf9e82d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93307\",\"static/chunks/93307-40c92ad52815d0a2.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"6905\",\"static/chunks/6905-cb9cabc11de7c1e0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"11139\",\"static/chunks/11139-f96710a45351a03f.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20514\",\"static/chunks/20514-f3407bf5b06a848a.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"47682\",\"static/chunks/47682-0d778b613e9847fb.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"53320\",\"static/chunks/53320-a7193a327838943e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"41599\",\"static/chunks/41599-7a7f7cf9c09e7ac7.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20144\",\"static/chunks/20144-63eeced46f10ea05.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"92984\",\"static/chunks/92984-3d1fd3239dfc3153.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"32349\",\"static/chunks/32349-21720b7e60216f19.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"26877\",\"static/chunks/26877-7997e28f400c72fa.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"48223\",\"static/chunks/48223-7ea74e070987a567.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40390\",\"static/chunks/40390-c9bfaa0de0b72f67.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"17077\",\"static/chunks/17077-6a46ded038f54266.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"33871\",\"static/chunks/33871-ce5211be2bca40e6.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"88069\",\"static/chunks/app/chat/%5Bvariants%5D/(dynamic-root)/layout-a61c83508084f7d0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\"],\"MotionConfig\"]\n"])</script><script>self.__next_f.push([1,"23:I[58364,[\"86365\",\"static/chunks/dd702a79-b6c7661c8a838128.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"38058\",\"static/chunks/b7a1a8c0-72ee0f814ed13c32.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"79660\",\"static/chunks/8d598023-196a80608fdd6eee.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"73535\",\"static/chunks/73535-103b6060cf97ab6d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"51679\",\"static/chunks/51679-08aafdbd5acc6aa3.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"8557\",\"static/chunks/8557-c2a5e618ccff242d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"3357\",\"static/chunks/3357-a437bd9e1280840c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"56497\",\"static/chunks/56497-9a15f5e7fc5e058e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69053\",\"static/chunks/69053-2a18fec337af0c69.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69790\",\"static/chunks/69790-06e2618fe911421e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69241\",\"static/chunks/69241-23922ef52da5b76b.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"19199\",\"static/chunks/19199-c732e5ac6f8e2141.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"43207\",\"static/chunks/43207-f2d4fa16ab44d090.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"13280\",\"static/chunks/13280-b6a1193602500b08.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"7921\",\"static/chunks/7921-73dfed29e8c02165.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40626\",\"static/chunks/40626-7aa1c4c6db827c91.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"42626\",\"static/chunks/42626-46c65f92250a4525.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"76442\",\"static/chunks/76442-21e0af1e9dcba237.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93590\",\"static/chunks/93590-52e31b4cbcf9e82d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93307\",\"static/chunks/93307-40c92ad52815d0a2.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"6905\",\"static/chunks/6905-cb9cabc11de7c1e0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"11139\",\"static/chunks/11139-f96710a45351a03f.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20514\",\"static/chunks/20514-f3407bf5b06a848a.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"47682\",\"static/chunks/47682-0d778b613e9847fb.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"53320\",\"static/chunks/53320-a7193a327838943e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"41599\",\"static/chunks/41599-7a7f7cf9c09e7ac7.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20144\",\"static/chunks/20144-63eeced46f10ea05.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"29753\",\"static/chunks/29753-628fdf7767ca547c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"68223\",\"static/chunks/68223-f371eb2e74f42a9c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"67343\",\"static/chunks/67343-0a8a43eba0b25445.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"32349\",\"static/chunks/32349-21720b7e60216f19.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"26877\",\"static/chunks/26877-7997e28f400c72fa.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"48223\",\"static/chunks/48223-7ea74e070987a567.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40390\",\"static/chunks/40390-c9bfaa0de0b72f67.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"17077\",\"static/chunks/17077-6a46ded038f54266.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"33871\",\"static/chunks/33871-ce5211be2bca40e6.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20897\",\"static/chunks/20897-32692800f1878a20.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"60114\",\"static/chunks/60114-1dd8b378f278c46d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"51742\",\"static/chunks/app/chat/%5Bvariants%5D/(dynamic-root)/(home)/(chat)/%40chat/id/page-6849e2289adc65f4.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\"],\"AtomicContextSWRProvider\"]\n"])</script><script>self.__next_f.push([1,"25:I[58460,[\"86365\",\"static/chunks/dd702a79-b6c7661c8a838128.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"38058\",\"static/chunks/b7a1a8c0-72ee0f814ed13c32.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"79660\",\"static/chunks/8d598023-196a80608fdd6eee.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"73535\",\"static/chunks/73535-103b6060cf97ab6d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"51679\",\"static/chunks/51679-08aafdbd5acc6aa3.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"8557\",\"static/chunks/8557-c2a5e618ccff242d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"3357\",\"static/chunks/3357-a437bd9e1280840c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"56497\",\"static/chunks/56497-9a15f5e7fc5e058e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69053\",\"static/chunks/69053-2a18fec337af0c69.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69790\",\"static/chunks/69790-06e2618fe911421e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69241\",\"static/chunks/69241-23922ef52da5b76b.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"19199\",\"static/chunks/19199-c732e5ac6f8e2141.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"43207\",\"static/chunks/43207-f2d4fa16ab44d090.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"13280\",\"static/chunks/13280-b6a1193602500b08.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"7921\",\"static/chunks/7921-73dfed29e8c02165.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40626\",\"static/chunks/40626-7aa1c4c6db827c91.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93590\",\"static/chunks/93590-52e31b4cbcf9e82d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93307\",\"static/chunks/93307-40c92ad52815d0a2.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"6905\",\"static/chunks/6905-cb9cabc11de7c1e0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"11139\",\"static/chunks/11139-f96710a45351a03f.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20514\",\"static/chunks/20514-f3407bf5b06a848a.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"47682\",\"static/chunks/47682-0d778b613e9847fb.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"53320\",\"static/chunks/53320-a7193a327838943e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"41599\",\"static/chunks/41599-7a7f7cf9c09e7ac7.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20144\",\"static/chunks/20144-63eeced46f10ea05.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"92984\",\"static/chunks/92984-3d1fd3239dfc3153.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"32349\",\"static/chunks/32349-21720b7e60216f19.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"26877\",\"static/chunks/26877-7997e28f400c72fa.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"48223\",\"static/chunks/48223-7ea74e070987a567.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40390\",\"static/chunks/40390-c9bfaa0de0b72f67.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"17077\",\"static/chunks/17077-6a46ded038f54266.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"33871\",\"static/chunks/33871-ce5211be2bca40e6.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"88069\",\"static/chunks/app/chat/%5Bvariants%5D/(dynamic-root)/layout-a61c83508084f7d0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\"],\"Analytics\"]\n"])</script><script>self.__next_f.push([1,"26:I[27185,[\"86365\",\"static/chunks/dd702a79-b6c7661c8a838128.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"38058\",\"static/chunks/b7a1a8c0-72ee0f814ed13c32.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"79660\",\"static/chunks/8d598023-196a80608fdd6eee.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"73535\",\"static/chunks/73535-103b6060cf97ab6d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"51679\",\"static/chunks/51679-08aafdbd5acc6aa3.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"8557\",\"static/chunks/8557-c2a5e618ccff242d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"3357\",\"static/chunks/3357-a437bd9e1280840c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"56497\",\"static/chunks/56497-9a15f5e7fc5e058e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69053\",\"static/chunks/69053-2a18fec337af0c69.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69790\",\"static/chunks/69790-06e2618fe911421e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69241\",\"static/chunks/69241-23922ef52da5b76b.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"19199\",\"static/chunks/19199-c732e5ac6f8e2141.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"43207\",\"static/chunks/43207-f2d4fa16ab44d090.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"13280\",\"static/chunks/13280-b6a1193602500b08.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"7921\",\"static/chunks/7921-73dfed29e8c02165.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40626\",\"static/chunks/40626-7aa1c4c6db827c91.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93590\",\"static/chunks/93590-52e31b4cbcf9e82d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93307\",\"static/chunks/93307-40c92ad52815d0a2.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"6905\",\"static/chunks/6905-cb9cabc11de7c1e0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"11139\",\"static/chunks/11139-f96710a45351a03f.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20514\",\"static/chunks/20514-f3407bf5b06a848a.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"47682\",\"static/chunks/47682-0d778b613e9847fb.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"53320\",\"static/chunks/53320-a7193a327838943e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"41599\",\"static/chunks/41599-7a7f7cf9c09e7ac7.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20144\",\"static/chunks/20144-63eeced46f10ea05.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"92984\",\"static/chunks/92984-3d1fd3239dfc3153.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"32349\",\"static/chunks/32349-21720b7e60216f19.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"26877\",\"static/chunks/26877-7997e28f400c72fa.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"48223\",\"static/chunks/48223-7ea74e070987a567.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40390\",\"static/chunks/40390-c9bfaa0de0b72f67.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"17077\",\"static/chunks/17077-6a46ded038f54266.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"33871\",\"static/chunks/33871-ce5211be2bca40e6.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"88069\",\"static/chunks/app/chat/%5Bvariants%5D/(dynamic-root)/layout-a61c83508084f7d0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\"],\"SpeedInsights\"]\n"])</script><script>self.__next_f.push([1,"27:I[82263,[\"86365\",\"static/chunks/dd702a79-b6c7661c8a838128.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"38058\",\"static/chunks/b7a1a8c0-72ee0f814ed13c32.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"79660\",\"static/chunks/8d598023-196a80608fdd6eee.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"73535\",\"static/chunks/73535-103b6060cf97ab6d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"51679\",\"static/chunks/51679-08aafdbd5acc6aa3.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"8557\",\"static/chunks/8557-c2a5e618ccff242d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"3357\",\"static/chunks/3357-a437bd9e1280840c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"56497\",\"static/chunks/56497-9a15f5e7fc5e058e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69053\",\"static/chunks/69053-2a18fec337af0c69.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69790\",\"static/chunks/69790-06e2618fe911421e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69241\",\"static/chunks/69241-23922ef52da5b76b.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"19199\",\"static/chunks/19199-c732e5ac6f8e2141.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"43207\",\"static/chunks/43207-f2d4fa16ab44d090.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"13280\",\"static/chunks/13280-b6a1193602500b08.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"7921\",\"static/chunks/7921-73dfed29e8c02165.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40626\",\"static/chunks/40626-7aa1c4c6db827c91.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93590\",\"static/chunks/93590-52e31b4cbcf9e82d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93307\",\"static/chunks/93307-40c92ad52815d0a2.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"6905\",\"static/chunks/6905-cb9cabc11de7c1e0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"11139\",\"static/chunks/11139-f96710a45351a03f.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20514\",\"static/chunks/20514-f3407bf5b06a848a.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"47682\",\"static/chunks/47682-0d778b613e9847fb.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"53320\",\"static/chunks/53320-a7193a327838943e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"41599\",\"static/chunks/41599-7a7f7cf9c09e7ac7.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20144\",\"static/chunks/20144-63eeced46f10ea05.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"92984\",\"static/chunks/92984-3d1fd3239dfc3153.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"32349\",\"static/chunks/32349-21720b7e60216f19.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"26877\",\"static/chunks/26877-7997e28f400c72fa.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"48223\",\"static/chunks/48223-7ea74e070987a567.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40390\",\"static/chunks/40390-c9bfaa0de0b72f67.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"17077\",\"static/chunks/17077-6a46ded038f54266.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"33871\",\"static/chunks/33871-ce5211be2bca40e6.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"88069\",\"static/chunks/app/chat/%5Bvariants%5D/(dynamic-root)/layout-a61c83508084f7d0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\"],\"SessionManager\"]\n"])</script><script>self.__next_f.push([1,"28:I[82120,[\"86365\",\"static/chunks/dd702a79-b6c7661c8a838128.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"38058\",\"static/chunks/b7a1a8c0-72ee0f814ed13c32.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"79660\",\"static/chunks/8d598023-196a80608fdd6eee.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"73535\",\"static/chunks/73535-103b6060cf97ab6d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"51679\",\"static/chunks/51679-08aafdbd5acc6aa3.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"8557\",\"static/chunks/8557-c2a5e618ccff242d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"3357\",\"static/chunks/3357-a437bd9e1280840c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"56497\",\"static/chunks/56497-9a15f5e7fc5e058e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69053\",\"static/chunks/69053-2a18fec337af0c69.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69790\",\"static/chunks/69790-06e2618fe911421e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69241\",\"static/chunks/69241-23922ef52da5b76b.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"19199\",\"static/chunks/19199-c732e5ac6f8e2141.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"43207\",\"static/chunks/43207-f2d4fa16ab44d090.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"13280\",\"static/chunks/13280-b6a1193602500b08.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"7921\",\"static/chunks/7921-73dfed29e8c02165.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40626\",\"static/chunks/40626-7aa1c4c6db827c91.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93590\",\"static/chunks/93590-52e31b4cbcf9e82d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93307\",\"static/chunks/93307-40c92ad52815d0a2.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"6905\",\"static/chunks/6905-cb9cabc11de7c1e0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"11139\",\"static/chunks/11139-f96710a45351a03f.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20514\",\"static/chunks/20514-f3407bf5b06a848a.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"47682\",\"static/chunks/47682-0d778b613e9847fb.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"53320\",\"static/chunks/53320-a7193a327838943e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"41599\",\"static/chunks/41599-7a7f7cf9c09e7ac7.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20144\",\"static/chunks/20144-63eeced46f10ea05.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"92984\",\"static/chunks/92984-3d1fd3239dfc3153.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"32349\",\"static/chunks/32349-21720b7e60216f19.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"26877\",\"static/chunks/26877-7997e28f400c72fa.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"48223\",\"static/chunks/48223-7ea74e070987a567.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40390\",\"static/chunks/40390-c9bfaa0de0b72f67.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"17077\",\"static/chunks/17077-6a46ded038f54266.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"33871\",\"static/chunks/33871-ce5211be2bca40e6.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"88069\",\"static/chunks/app/chat/%5Bvariants%5D/(dynamic-root)/layout-a61c83508084f7d0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\"],\"TrackInfo\"]\n"])</script><script>self.__next_f.push([1,"29:I[82777,[\"86365\",\"static/chunks/dd702a79-b6c7661c8a838128.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"38058\",\"static/chunks/b7a1a8c0-72ee0f814ed13c32.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"79660\",\"static/chunks/8d598023-196a80608fdd6eee.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"73535\",\"static/chunks/73535-103b6060cf97ab6d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"51679\",\"static/chunks/51679-08aafdbd5acc6aa3.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"8557\",\"static/chunks/8557-c2a5e618ccff242d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"3357\",\"static/chunks/3357-a437bd9e1280840c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"56497\",\"static/chunks/56497-9a15f5e7fc5e058e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69053\",\"static/chunks/69053-2a18fec337af0c69.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69790\",\"static/chunks/69790-06e2618fe911421e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69241\",\"static/chunks/69241-23922ef52da5b76b.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"19199\",\"static/chunks/19199-c732e5ac6f8e2141.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"43207\",\"static/chunks/43207-f2d4fa16ab44d090.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"13280\",\"static/chunks/13280-b6a1193602500b08.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"7921\",\"static/chunks/7921-73dfed29e8c02165.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40626\",\"static/chunks/40626-7aa1c4c6db827c91.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93590\",\"static/chunks/93590-52e31b4cbcf9e82d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93307\",\"static/chunks/93307-40c92ad52815d0a2.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"6905\",\"static/chunks/6905-cb9cabc11de7c1e0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"11139\",\"static/chunks/11139-f96710a45351a03f.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20514\",\"static/chunks/20514-f3407bf5b06a848a.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"47682\",\"static/chunks/47682-0d778b613e9847fb.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"53320\",\"static/chunks/53320-a7193a327838943e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"41599\",\"static/chunks/41599-7a7f7cf9c09e7ac7.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20144\",\"static/chunks/20144-63eeced46f10ea05.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"92984\",\"static/chunks/92984-3d1fd3239dfc3153.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"32349\",\"static/chunks/32349-21720b7e60216f19.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"26877\",\"static/chunks/26877-7997e28f400c72fa.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"48223\",\"static/chunks/48223-7ea74e070987a567.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40390\",\"static/chunks/40390-c9bfaa0de0b72f67.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"17077\",\"static/chunks/17077-6a46ded038f54266.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"33871\",\"static/chunks/33871-ce5211be2bca40e6.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"88069\",\"static/chunks/app/chat/%5Bvariants%5D/(dynamic-root)/layout-a61c83508084f7d0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\"],\"PageViewTracker\"]\n"])</script><script>self.__next_f.push([1,"2a:I[75736,[\"86365\",\"static/chunks/dd702a79-b6c7661c8a838128.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"38058\",\"static/chunks/b7a1a8c0-72ee0f814ed13c32.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"79660\",\"static/chunks/8d598023-196a80608fdd6eee.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"73535\",\"static/chunks/73535-103b6060cf97ab6d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"51679\",\"static/chunks/51679-08aafdbd5acc6aa3.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"8557\",\"static/chunks/8557-c2a5e618ccff242d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"3357\",\"static/chunks/3357-a437bd9e1280840c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"56497\",\"static/chunks/56497-9a15f5e7fc5e058e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69053\",\"static/chunks/69053-2a18fec337af0c69.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69790\",\"static/chunks/69790-06e2618fe911421e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69241\",\"static/chunks/69241-23922ef52da5b76b.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"19199\",\"static/chunks/19199-c732e5ac6f8e2141.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"43207\",\"static/chunks/43207-f2d4fa16ab44d090.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"13280\",\"static/chunks/13280-b6a1193602500b08.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"7921\",\"static/chunks/7921-73dfed29e8c02165.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40626\",\"static/chunks/40626-7aa1c4c6db827c91.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93590\",\"static/chunks/93590-52e31b4cbcf9e82d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93307\",\"static/chunks/93307-40c92ad52815d0a2.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"6905\",\"static/chunks/6905-cb9cabc11de7c1e0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"11139\",\"static/chunks/11139-f96710a45351a03f.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20514\",\"static/chunks/20514-f3407bf5b06a848a.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"47682\",\"static/chunks/47682-0d778b613e9847fb.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"53320\",\"static/chunks/53320-a7193a327838943e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"41599\",\"static/chunks/41599-7a7f7cf9c09e7ac7.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20144\",\"static/chunks/20144-63eeced46f10ea05.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"92984\",\"static/chunks/92984-3d1fd3239dfc3153.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"32349\",\"static/chunks/32349-21720b7e60216f19.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"26877\",\"static/chunks/26877-7997e28f400c72fa.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"48223\",\"static/chunks/48223-7ea74e070987a567.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40390\",\"static/chunks/40390-c9bfaa0de0b72f67.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"17077\",\"static/chunks/17077-6a46ded038f54266.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"33871\",\"static/chunks/33871-ce5211be2bca40e6.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"88069\",\"static/chunks/app/chat/%5Bvariants%5D/(dynamic-root)/layout-a61c83508084f7d0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\"],\"DubClient\"]\n"])</script><script>self.__next_f.push([1,"2e:I[11096,[\"86365\",\"static/chunks/dd702a79-b6c7661c8a838128.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"38058\",\"static/chunks/b7a1a8c0-72ee0f814ed13c32.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"73535\",\"static/chunks/73535-103b6060cf97ab6d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"51679\",\"static/chunks/51679-08aafdbd5acc6aa3.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"8557\",\"static/chunks/8557-c2a5e618ccff242d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"3357\",\"static/chunks/3357-a437bd9e1280840c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"56497\",\"static/chunks/56497-9a15f5e7fc5e058e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69053\",\"static/chunks/69053-2a18fec337af0c69.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69790\",\"static/chunks/69790-06e2618fe911421e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69241\",\"static/chunks/69241-23922ef52da5b76b.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"19199\",\"static/chunks/19199-c732e5ac6f8e2141.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"43207\",\"static/chunks/43207-f2d4fa16ab44d090.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"13280\",\"static/chunks/13280-b6a1193602500b08.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"7921\",\"static/chunks/7921-73dfed29e8c02165.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"42626\",\"static/chunks/42626-46c65f92250a4525.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93590\",\"static/chunks/93590-52e31b4cbcf9e82d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93307\",\"static/chunks/93307-40c92ad52815d0a2.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"32349\",\"static/chunks/32349-21720b7e60216f19.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"26877\",\"static/chunks/26877-7997e28f400c72fa.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"48223\",\"static/chunks/48223-7ea74e070987a567.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"76985\",\"static/chunks/app/chat/%5Bvariants%5D/(dynamic-root)/(home)/(chat)/%40chat/layout-106e138d16c3d622.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\"],\"default\"]\n2f:I[47119,[\"86365\",\"static/chunks/dd702a79-b6c7661c8a838128.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"38058\",\"static/chunks/b7a1a8c0-7"])</script><script>self.__next_f.push([1,"2ee0f814ed13c32.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"73535\",\"static/chunks/73535-103b6060cf97ab6d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"51679\",\"static/chunks/51679-08aafdbd5acc6aa3.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"8557\",\"static/chunks/8557-c2a5e618ccff242d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"3357\",\"static/chunks/3357-a437bd9e1280840c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"56497\",\"static/chunks/56497-9a15f5e7fc5e058e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69053\",\"static/chunks/69053-2a18fec337af0c69.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69790\",\"static/chunks/69790-06e2618fe911421e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69241\",\"static/chunks/69241-23922ef52da5b76b.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"19199\",\"static/chunks/19199-c732e5ac6f8e2141.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"43207\",\"static/chunks/43207-f2d4fa16ab44d090.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"13280\",\"static/chunks/13280-b6a1193602500b08.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"7921\",\"static/chunks/7921-73dfed29e8c02165.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"42626\",\"static/chunks/42626-46c65f92250a4525.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93590\",\"static/chunks/93590-52e31b4cbcf9e82d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93307\",\"static/chunks/93307-40c92ad52815d0a2.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"32349\",\"static/chunks/32349-21720b7e60216f19.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"26877\",\"static/chunks/26877-7997e28f400c72fa.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"48223\",\"static/chunks/48223-7ea74e070987a567.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"76985\",\"static/chunks/app/chat/%5Bvariants%5D/(dynamic-root)/(home)/(chat)/%40chat/layout-106e138d16c3d622.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\"],\"ImportFromFigmaModal\"]\n"])</script><script>self.__next_f.push([1,"30:I[38513,[\"86365\",\"static/chunks/dd702a79-b6c7661c8a838128.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"38058\",\"static/chunks/b7a1a8c0-72ee0f814ed13c32.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"79660\",\"static/chunks/8d598023-196a80608fdd6eee.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"73535\",\"static/chunks/73535-103b6060cf97ab6d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"51679\",\"static/chunks/51679-08aafdbd5acc6aa3.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"8557\",\"static/chunks/8557-c2a5e618ccff242d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"3357\",\"static/chunks/3357-a437bd9e1280840c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"56497\",\"static/chunks/56497-9a15f5e7fc5e058e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69053\",\"static/chunks/69053-2a18fec337af0c69.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69790\",\"static/chunks/69790-06e2618fe911421e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69241\",\"static/chunks/69241-23922ef52da5b76b.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"19199\",\"static/chunks/19199-c732e5ac6f8e2141.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"43207\",\"static/chunks/43207-f2d4fa16ab44d090.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"13280\",\"static/chunks/13280-b6a1193602500b08.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"7921\",\"static/chunks/7921-73dfed29e8c02165.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40626\",\"static/chunks/40626-7aa1c4c6db827c91.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"42626\",\"static/chunks/42626-46c65f92250a4525.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"76442\",\"static/chunks/76442-21e0af1e9dcba237.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93590\",\"static/chunks/93590-52e31b4cbcf9e82d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93307\",\"static/chunks/93307-40c92ad52815d0a2.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"6905\",\"static/chunks/6905-cb9cabc11de7c1e0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"11139\",\"static/chunks/11139-f96710a45351a03f.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20514\",\"static/chunks/20514-f3407bf5b06a848a.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"47682\",\"static/chunks/47682-0d778b613e9847fb.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"53320\",\"static/chunks/53320-a7193a327838943e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"41599\",\"static/chunks/41599-7a7f7cf9c09e7ac7.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20144\",\"static/chunks/20144-63eeced46f10ea05.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"29753\",\"static/chunks/29753-628fdf7767ca547c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"68223\",\"static/chunks/68223-f371eb2e74f42a9c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"67343\",\"static/chunks/67343-0a8a43eba0b25445.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"32349\",\"static/chunks/32349-21720b7e60216f19.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"26877\",\"static/chunks/26877-7997e28f400c72fa.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"48223\",\"static/chunks/48223-7ea74e070987a567.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40390\",\"static/chunks/40390-c9bfaa0de0b72f67.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"17077\",\"static/chunks/17077-6a46ded038f54266.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"33871\",\"static/chunks/33871-ce5211be2bca40e6.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20897\",\"static/chunks/20897-32692800f1878a20.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"60114\",\"static/chunks/60114-1dd8b378f278c46d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"51742\",\"static/chunks/app/chat/%5Bvariants%5D/(dynamic-root)/(home)/(chat)/%40chat/id/page-6849e2289adc65f4.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\"],\"ChatWarning\"]\n"])</script><script>self.__next_f.push([1,"31:I[79379,[\"3344\",\"static/chunks/app/chat/%5Bvariants%5D/(dynamic-root)/(home)/(chat)/error-f77ab1b9f286726a.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\"],\"default\"]\n"])</script><script>self.__next_f.push([1,"32:I[87944,[\"86365\",\"static/chunks/dd702a79-b6c7661c8a838128.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"38058\",\"static/chunks/b7a1a8c0-72ee0f814ed13c32.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"79660\",\"static/chunks/8d598023-196a80608fdd6eee.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"73535\",\"static/chunks/73535-103b6060cf97ab6d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"51679\",\"static/chunks/51679-08aafdbd5acc6aa3.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"8557\",\"static/chunks/8557-c2a5e618ccff242d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"3357\",\"static/chunks/3357-a437bd9e1280840c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"56497\",\"static/chunks/56497-9a15f5e7fc5e058e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69053\",\"static/chunks/69053-2a18fec337af0c69.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69790\",\"static/chunks/69790-06e2618fe911421e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69241\",\"static/chunks/69241-23922ef52da5b76b.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"19199\",\"static/chunks/19199-c732e5ac6f8e2141.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"43207\",\"static/chunks/43207-f2d4fa16ab44d090.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"13280\",\"static/chunks/13280-b6a1193602500b08.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"7921\",\"static/chunks/7921-73dfed29e8c02165.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40626\",\"static/chunks/40626-7aa1c4c6db827c91.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"42626\",\"static/chunks/42626-46c65f92250a4525.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93590\",\"static/chunks/93590-52e31b4cbcf9e82d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93307\",\"static/chunks/93307-40c92ad52815d0a2.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"6905\",\"static/chunks/6905-cb9cabc11de7c1e0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"11139\",\"static/chunks/11139-f96710a45351a03f.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20514\",\"static/chunks/20514-f3407bf5b06a848a.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"47682\",\"static/chunks/47682-0d778b613e9847fb.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"53320\",\"static/chunks/53320-a7193a327838943e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"41599\",\"static/chunks/41599-7a7f7cf9c09e7ac7.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20144\",\"static/chunks/20144-63eeced46f10ea05.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"32349\",\"static/chunks/32349-21720b7e60216f19.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"26877\",\"static/chunks/26877-7997e28f400c72fa.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"48223\",\"static/chunks/48223-7ea74e070987a567.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40390\",\"static/chunks/40390-c9bfaa0de0b72f67.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"17077\",\"static/chunks/17077-6a46ded038f54266.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"33871\",\"static/chunks/33871-ce5211be2bca40e6.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"46688\",\"static/chunks/app/chat/%5Bvariants%5D/(dynamic-root)/(home)/(chat)/layout-75dd7bd5642f6618.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\"],\"SidebarLayout\"]\n"])</script><script>self.__next_f.push([1,"33:I[46560,[\"86365\",\"static/chunks/dd702a79-b6c7661c8a838128.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"38058\",\"static/chunks/b7a1a8c0-72ee0f814ed13c32.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"79660\",\"static/chunks/8d598023-196a80608fdd6eee.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"73535\",\"static/chunks/73535-103b6060cf97ab6d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"51679\",\"static/chunks/51679-08aafdbd5acc6aa3.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"8557\",\"static/chunks/8557-c2a5e618ccff242d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"3357\",\"static/chunks/3357-a437bd9e1280840c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"56497\",\"static/chunks/56497-9a15f5e7fc5e058e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69053\",\"static/chunks/69053-2a18fec337af0c69.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69790\",\"static/chunks/69790-06e2618fe911421e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69241\",\"static/chunks/69241-23922ef52da5b76b.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"19199\",\"static/chunks/19199-c732e5ac6f8e2141.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"43207\",\"static/chunks/43207-f2d4fa16ab44d090.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"13280\",\"static/chunks/13280-b6a1193602500b08.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"7921\",\"static/chunks/7921-73dfed29e8c02165.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40626\",\"static/chunks/40626-7aa1c4c6db827c91.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"42626\",\"static/chunks/42626-46c65f92250a4525.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93590\",\"static/chunks/93590-52e31b4cbcf9e82d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93307\",\"static/chunks/93307-40c92ad52815d0a2.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"6905\",\"static/chunks/6905-cb9cabc11de7c1e0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"11139\",\"static/chunks/11139-f96710a45351a03f.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20514\",\"static/chunks/20514-f3407bf5b06a848a.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"47682\",\"static/chunks/47682-0d778b613e9847fb.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"53320\",\"static/chunks/53320-a7193a327838943e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"41599\",\"static/chunks/41599-7a7f7cf9c09e7ac7.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20144\",\"static/chunks/20144-63eeced46f10ea05.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"32349\",\"static/chunks/32349-21720b7e60216f19.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"26877\",\"static/chunks/26877-7997e28f400c72fa.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"48223\",\"static/chunks/48223-7ea74e070987a567.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40390\",\"static/chunks/40390-c9bfaa0de0b72f67.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"17077\",\"static/chunks/17077-6a46ded038f54266.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"33871\",\"static/chunks/33871-ce5211be2bca40e6.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"46688\",\"static/chunks/app/chat/%5Bvariants%5D/(dynamic-root)/(home)/(chat)/layout-75dd7bd5642f6618.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\"],\"AppCard\"]\n"])</script><script>self.__next_f.push([1,"34:I[54787,[\"86365\",\"static/chunks/dd702a79-b6c7661c8a838128.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"38058\",\"static/chunks/b7a1a8c0-72ee0f814ed13c32.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"79660\",\"static/chunks/8d598023-196a80608fdd6eee.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"73535\",\"static/chunks/73535-103b6060cf97ab6d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"51679\",\"static/chunks/51679-08aafdbd5acc6aa3.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"8557\",\"static/chunks/8557-c2a5e618ccff242d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"3357\",\"static/chunks/3357-a437bd9e1280840c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"56497\",\"static/chunks/56497-9a15f5e7fc5e058e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69053\",\"static/chunks/69053-2a18fec337af0c69.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69790\",\"static/chunks/69790-06e2618fe911421e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69241\",\"static/chunks/69241-23922ef52da5b76b.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"19199\",\"static/chunks/19199-c732e5ac6f8e2141.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"43207\",\"static/chunks/43207-f2d4fa16ab44d090.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"13280\",\"static/chunks/13280-b6a1193602500b08.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"7921\",\"static/chunks/7921-73dfed29e8c02165.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40626\",\"static/chunks/40626-7aa1c4c6db827c91.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"42626\",\"static/chunks/42626-46c65f92250a4525.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93590\",\"static/chunks/93590-52e31b4cbcf9e82d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93307\",\"static/chunks/93307-40c92ad52815d0a2.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"6905\",\"static/chunks/6905-cb9cabc11de7c1e0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"11139\",\"static/chunks/11139-f96710a45351a03f.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20514\",\"static/chunks/20514-f3407bf5b06a848a.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"47682\",\"static/chunks/47682-0d778b613e9847fb.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"53320\",\"static/chunks/53320-a7193a327838943e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"41599\",\"static/chunks/41599-7a7f7cf9c09e7ac7.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20144\",\"static/chunks/20144-63eeced46f10ea05.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"32349\",\"static/chunks/32349-21720b7e60216f19.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"26877\",\"static/chunks/26877-7997e28f400c72fa.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"48223\",\"static/chunks/48223-7ea74e070987a567.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40390\",\"static/chunks/40390-c9bfaa0de0b72f67.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"17077\",\"static/chunks/17077-6a46ded038f54266.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"33871\",\"static/chunks/33871-ce5211be2bca40e6.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"46688\",\"static/chunks/app/chat/%5Bvariants%5D/(dynamic-root)/(home)/(chat)/layout-75dd7bd5642f6618.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\"],\"DynamicCMDK\"]\n"])</script><script>self.__next_f.push([1,"35:I[13438,[\"86365\",\"static/chunks/dd702a79-b6c7661c8a838128.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"38058\",\"static/chunks/b7a1a8c0-72ee0f814ed13c32.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"79660\",\"static/chunks/8d598023-196a80608fdd6eee.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"73535\",\"static/chunks/73535-103b6060cf97ab6d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"51679\",\"static/chunks/51679-08aafdbd5acc6aa3.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"8557\",\"static/chunks/8557-c2a5e618ccff242d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"3357\",\"static/chunks/3357-a437bd9e1280840c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"56497\",\"static/chunks/56497-9a15f5e7fc5e058e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69053\",\"static/chunks/69053-2a18fec337af0c69.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69790\",\"static/chunks/69790-06e2618fe911421e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69241\",\"static/chunks/69241-23922ef52da5b76b.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"19199\",\"static/chunks/19199-c732e5ac6f8e2141.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"43207\",\"static/chunks/43207-f2d4fa16ab44d090.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"13280\",\"static/chunks/13280-b6a1193602500b08.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"7921\",\"static/chunks/7921-73dfed29e8c02165.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40626\",\"static/chunks/40626-7aa1c4c6db827c91.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"42626\",\"static/chunks/42626-46c65f92250a4525.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"76442\",\"static/chunks/76442-21e0af1e9dcba237.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93590\",\"static/chunks/93590-52e31b4cbcf9e82d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93307\",\"static/chunks/93307-40c92ad52815d0a2.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"6905\",\"static/chunks/6905-cb9cabc11de7c1e0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"11139\",\"static/chunks/11139-f96710a45351a03f.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20514\",\"static/chunks/20514-f3407bf5b06a848a.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"47682\",\"static/chunks/47682-0d778b613e9847fb.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"53320\",\"static/chunks/53320-a7193a327838943e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"41599\",\"static/chunks/41599-7a7f7cf9c09e7ac7.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20144\",\"static/chunks/20144-63eeced46f10ea05.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"29753\",\"static/chunks/29753-628fdf7767ca547c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"68223\",\"static/chunks/68223-f371eb2e74f42a9c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"67343\",\"static/chunks/67343-0a8a43eba0b25445.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"32349\",\"static/chunks/32349-21720b7e60216f19.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"26877\",\"static/chunks/26877-7997e28f400c72fa.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"48223\",\"static/chunks/48223-7ea74e070987a567.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40390\",\"static/chunks/40390-c9bfaa0de0b72f67.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"17077\",\"static/chunks/17077-6a46ded038f54266.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"33871\",\"static/chunks/33871-ce5211be2bca40e6.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20897\",\"static/chunks/20897-32692800f1878a20.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"60114\",\"static/chunks/60114-1dd8b378f278c46d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"51742\",\"static/chunks/app/chat/%5Bvariants%5D/(dynamic-root)/(home)/(chat)/%40chat/id/page-6849e2289adc65f4.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\"],\"SWRDataProvider\"]\n"])</script><script>self.__next_f.push([1,"36:I[86774,[\"86365\",\"static/chunks/dd702a79-b6c7661c8a838128.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"38058\",\"static/chunks/b7a1a8c0-72ee0f814ed13c32.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"73535\",\"static/chunks/73535-103b6060cf97ab6d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"51679\",\"static/chunks/51679-08aafdbd5acc6aa3.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"8557\",\"static/chunks/8557-c2a5e618ccff242d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"3357\",\"static/chunks/3357-a437bd9e1280840c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"56497\",\"static/chunks/56497-9a15f5e7fc5e058e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69053\",\"static/chunks/69053-2a18fec337af0c69.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69790\",\"static/chunks/69790-06e2618fe911421e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69241\",\"static/chunks/69241-23922ef52da5b76b.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"19199\",\"static/chunks/19199-c732e5ac6f8e2141.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"43207\",\"static/chunks/43207-f2d4fa16ab44d090.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"13280\",\"static/chunks/13280-b6a1193602500b08.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"7921\",\"static/chunks/7921-73dfed29e8c02165.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"42626\",\"static/chunks/42626-46c65f92250a4525.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93590\",\"static/chunks/93590-52e31b4cbcf9e82d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93307\",\"static/chunks/93307-40c92ad52815d0a2.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"91612\",\"static/chunks/91612-64319b240b0dbe95.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"32349\",\"static/chunks/32349-21720b7e60216f19.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"26877\",\"static/chunks/26877-7997e28f400c72fa.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"48223\",\"static/chunks/48223-7ea74e070987a567.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"87130\",\"static/chunks/app/chat/%5Bvariants%5D/(dynamic-root)/(home)/layout-18a927c6067422da.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\"],\"ChatBackground\"]\n38:I[70943,[\"86365\",\"static/chunks/dd702a79-b6c7661c8a83"])</script><script>self.__next_f.push([1,"8128.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"38058\",\"static/chunks/b7a1a8c0-72ee0f814ed13c32.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"73535\",\"static/chunks/73535-103b6060cf97ab6d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"51679\",\"static/chunks/51679-08aafdbd5acc6aa3.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"8557\",\"static/chunks/8557-c2a5e618ccff242d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"3357\",\"static/chunks/3357-a437bd9e1280840c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"56497\",\"static/chunks/56497-9a15f5e7fc5e058e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69053\",\"static/chunks/69053-2a18fec337af0c69.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69790\",\"static/chunks/69790-06e2618fe911421e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69241\",\"static/chunks/69241-23922ef52da5b76b.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"19199\",\"static/chunks/19199-c732e5ac6f8e2141.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"43207\",\"static/chunks/43207-f2d4fa16ab44d090.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"13280\",\"static/chunks/13280-b6a1193602500b08.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"7921\",\"static/chunks/7921-73dfed29e8c02165.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"42626\",\"static/chunks/42626-46c65f92250a4525.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93590\",\"static/chunks/93590-52e31b4cbcf9e82d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93307\",\"static/chunks/93307-40c92ad52815d0a2.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"91612\",\"static/chunks/91612-64319b240b0dbe95.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"32349\",\"static/chunks/32349-21720b7e60216f19.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"26877\",\"static/chunks/26877-7997e28f400c72fa.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"48223\",\"static/chunks/48223-7ea74e070987a567.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"87130\",\"static/chunks/app/chat/%5Bvariants%5D/(dynamic-root)/(home)/layout-18a927c6067422da.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\"],\"Toaster\"]\n39:I[15890,[\"86365\",\"static/chunks/dd702a79-b6c7661c8a838128.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"38058\",\"static/c"])</script><script>self.__next_f.push([1,"hunks/b7a1a8c0-72ee0f814ed13c32.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"73535\",\"static/chunks/73535-103b6060cf97ab6d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"51679\",\"static/chunks/51679-08aafdbd5acc6aa3.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"8557\",\"static/chunks/8557-c2a5e618ccff242d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"3357\",\"static/chunks/3357-a437bd9e1280840c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"56497\",\"static/chunks/56497-9a15f5e7fc5e058e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69053\",\"static/chunks/69053-2a18fec337af0c69.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69790\",\"static/chunks/69790-06e2618fe911421e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69241\",\"static/chunks/69241-23922ef52da5b76b.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"19199\",\"static/chunks/19199-c732e5ac6f8e2141.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"43207\",\"static/chunks/43207-f2d4fa16ab44d090.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"13280\",\"static/chunks/13280-b6a1193602500b08.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"7921\",\"static/chunks/7921-73dfed29e8c02165.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"42626\",\"static/chunks/42626-46c65f92250a4525.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93590\",\"static/chunks/93590-52e31b4cbcf9e82d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93307\",\"static/chunks/93307-40c92ad52815d0a2.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"91612\",\"static/chunks/91612-64319b240b0dbe95.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"32349\",\"static/chunks/32349-21720b7e60216f19.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"26877\",\"static/chunks/26877-7997e28f400c72fa.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"48223\",\"static/chunks/48223-7ea74e070987a567.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"87130\",\"static/chunks/app/chat/%5Bvariants%5D/(dynamic-root)/(home)/layout-18a927c6067422da.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\"],\"Toaster\"]\n"])</script><script>self.__next_f.push([1,"3a:I[70542,[\"86365\",\"static/chunks/dd702a79-b6c7661c8a838128.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"38058\",\"static/chunks/b7a1a8c0-72ee0f814ed13c32.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"79660\",\"static/chunks/8d598023-196a80608fdd6eee.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"73535\",\"static/chunks/73535-103b6060cf97ab6d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"51679\",\"static/chunks/51679-08aafdbd5acc6aa3.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"8557\",\"static/chunks/8557-c2a5e618ccff242d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"3357\",\"static/chunks/3357-a437bd9e1280840c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"56497\",\"static/chunks/56497-9a15f5e7fc5e058e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69053\",\"static/chunks/69053-2a18fec337af0c69.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69790\",\"static/chunks/69790-06e2618fe911421e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69241\",\"static/chunks/69241-23922ef52da5b76b.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"19199\",\"static/chunks/19199-c732e5ac6f8e2141.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"43207\",\"static/chunks/43207-f2d4fa16ab44d090.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"13280\",\"static/chunks/13280-b6a1193602500b08.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"7921\",\"static/chunks/7921-73dfed29e8c02165.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40626\",\"static/chunks/40626-7aa1c4c6db827c91.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93590\",\"static/chunks/93590-52e31b4cbcf9e82d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93307\",\"static/chunks/93307-40c92ad52815d0a2.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"6905\",\"static/chunks/6905-cb9cabc11de7c1e0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"11139\",\"static/chunks/11139-f96710a45351a03f.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20514\",\"static/chunks/20514-f3407bf5b06a848a.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"47682\",\"static/chunks/47682-0d778b613e9847fb.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"53320\",\"static/chunks/53320-a7193a327838943e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"41599\",\"static/chunks/41599-7a7f7cf9c09e7ac7.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20144\",\"static/chunks/20144-63eeced46f10ea05.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"92984\",\"static/chunks/92984-3d1fd3239dfc3153.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"32349\",\"static/chunks/32349-21720b7e60216f19.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"26877\",\"static/chunks/26877-7997e28f400c72fa.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"48223\",\"static/chunks/48223-7ea74e070987a567.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40390\",\"static/chunks/40390-c9bfaa0de0b72f67.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"17077\",\"static/chunks/17077-6a46ded038f54266.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"33871\",\"static/chunks/33871-ce5211be2bca40e6.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"88069\",\"static/chunks/app/chat/%5Bvariants%5D/(dynamic-root)/layout-a61c83508084f7d0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\"],\"JotaiProvider\"]\n"])</script><script>self.__next_f.push([1,"3b:I[41014,[\"86365\",\"static/chunks/dd702a79-b6c7661c8a838128.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"38058\",\"static/chunks/b7a1a8c0-72ee0f814ed13c32.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"79660\",\"static/chunks/8d598023-196a80608fdd6eee.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"73535\",\"static/chunks/73535-103b6060cf97ab6d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"51679\",\"static/chunks/51679-08aafdbd5acc6aa3.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"8557\",\"static/chunks/8557-c2a5e618ccff242d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"3357\",\"static/chunks/3357-a437bd9e1280840c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"56497\",\"static/chunks/56497-9a15f5e7fc5e058e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69053\",\"static/chunks/69053-2a18fec337af0c69.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69790\",\"static/chunks/69790-06e2618fe911421e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69241\",\"static/chunks/69241-23922ef52da5b76b.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"19199\",\"static/chunks/19199-c732e5ac6f8e2141.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"43207\",\"static/chunks/43207-f2d4fa16ab44d090.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"13280\",\"static/chunks/13280-b6a1193602500b08.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"7921\",\"static/chunks/7921-73dfed29e8c02165.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40626\",\"static/chunks/40626-7aa1c4c6db827c91.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93590\",\"static/chunks/93590-52e31b4cbcf9e82d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93307\",\"static/chunks/93307-40c92ad52815d0a2.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"6905\",\"static/chunks/6905-cb9cabc11de7c1e0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"11139\",\"static/chunks/11139-f96710a45351a03f.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20514\",\"static/chunks/20514-f3407bf5b06a848a.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"47682\",\"static/chunks/47682-0d778b613e9847fb.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"53320\",\"static/chunks/53320-a7193a327838943e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"41599\",\"static/chunks/41599-7a7f7cf9c09e7ac7.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20144\",\"static/chunks/20144-63eeced46f10ea05.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"92984\",\"static/chunks/92984-3d1fd3239dfc3153.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"32349\",\"static/chunks/32349-21720b7e60216f19.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"26877\",\"static/chunks/26877-7997e28f400c72fa.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"48223\",\"static/chunks/48223-7ea74e070987a567.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40390\",\"static/chunks/40390-c9bfaa0de0b72f67.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"17077\",\"static/chunks/17077-6a46ded038f54266.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"33871\",\"static/chunks/33871-ce5211be2bca40e6.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"88069\",\"static/chunks/app/chat/%5Bvariants%5D/(dynamic-root)/layout-a61c83508084f7d0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\"],\"ActionSWRProviderServer\"]\n"])</script><script>self.__next_f.push([1,"3d:I[67407,[\"86365\",\"static/chunks/dd702a79-b6c7661c8a838128.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"38058\",\"static/chunks/b7a1a8c0-72ee0f814ed13c32.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"79660\",\"static/chunks/8d598023-196a80608fdd6eee.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"73535\",\"static/chunks/73535-103b6060cf97ab6d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"51679\",\"static/chunks/51679-08aafdbd5acc6aa3.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"8557\",\"static/chunks/8557-c2a5e618ccff242d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"3357\",\"static/chunks/3357-a437bd9e1280840c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"56497\",\"static/chunks/56497-9a15f5e7fc5e058e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69053\",\"static/chunks/69053-2a18fec337af0c69.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69790\",\"static/chunks/69790-06e2618fe911421e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69241\",\"static/chunks/69241-23922ef52da5b76b.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"19199\",\"static/chunks/19199-c732e5ac6f8e2141.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"43207\",\"static/chunks/43207-f2d4fa16ab44d090.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"13280\",\"static/chunks/13280-b6a1193602500b08.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"7921\",\"static/chunks/7921-73dfed29e8c02165.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40626\",\"static/chunks/40626-7aa1c4c6db827c91.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93590\",\"static/chunks/93590-52e31b4cbcf9e82d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93307\",\"static/chunks/93307-40c92ad52815d0a2.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"6905\",\"static/chunks/6905-cb9cabc11de7c1e0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"11139\",\"static/chunks/11139-f96710a45351a03f.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20514\",\"static/chunks/20514-f3407bf5b06a848a.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"47682\",\"static/chunks/47682-0d778b613e9847fb.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"53320\",\"static/chunks/53320-a7193a327838943e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"41599\",\"static/chunks/41599-7a7f7cf9c09e7ac7.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20144\",\"static/chunks/20144-63eeced46f10ea05.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"92984\",\"static/chunks/92984-3d1fd3239dfc3153.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"32349\",\"static/chunks/32349-21720b7e60216f19.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"26877\",\"static/chunks/26877-7997e28f400c72fa.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"48223\",\"static/chunks/48223-7ea74e070987a567.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40390\",\"static/chunks/40390-c9bfaa0de0b72f67.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"17077\",\"static/chunks/17077-6a46ded038f54266.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"33871\",\"static/chunks/33871-ce5211be2bca40e6.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"88069\",\"static/chunks/app/chat/%5Bvariants%5D/(dynamic-root)/layout-a61c83508084f7d0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\"],\"HydrateDurableAtoms\"]\n"])</script><script>self.__next_f.push([1,"3e:I[72027,[\"86365\",\"static/chunks/dd702a79-b6c7661c8a838128.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"38058\",\"static/chunks/b7a1a8c0-72ee0f814ed13c32.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"79660\",\"static/chunks/8d598023-196a80608fdd6eee.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"73535\",\"static/chunks/73535-103b6060cf97ab6d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"51679\",\"static/chunks/51679-08aafdbd5acc6aa3.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"8557\",\"static/chunks/8557-c2a5e618ccff242d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"3357\",\"static/chunks/3357-a437bd9e1280840c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"56497\",\"static/chunks/56497-9a15f5e7fc5e058e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69053\",\"static/chunks/69053-2a18fec337af0c69.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69790\",\"static/chunks/69790-06e2618fe911421e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69241\",\"static/chunks/69241-23922ef52da5b76b.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"19199\",\"static/chunks/19199-c732e5ac6f8e2141.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"43207\",\"static/chunks/43207-f2d4fa16ab44d090.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"13280\",\"static/chunks/13280-b6a1193602500b08.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"7921\",\"static/chunks/7921-73dfed29e8c02165.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40626\",\"static/chunks/40626-7aa1c4c6db827c91.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93590\",\"static/chunks/93590-52e31b4cbcf9e82d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93307\",\"static/chunks/93307-40c92ad52815d0a2.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"6905\",\"static/chunks/6905-cb9cabc11de7c1e0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"11139\",\"static/chunks/11139-f96710a45351a03f.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20514\",\"static/chunks/20514-f3407bf5b06a848a.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"47682\",\"static/chunks/47682-0d778b613e9847fb.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"53320\",\"static/chunks/53320-a7193a327838943e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"41599\",\"static/chunks/41599-7a7f7cf9c09e7ac7.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20144\",\"static/chunks/20144-63eeced46f10ea05.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"92984\",\"static/chunks/92984-3d1fd3239dfc3153.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"32349\",\"static/chunks/32349-21720b7e60216f19.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"26877\",\"static/chunks/26877-7997e28f400c72fa.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"48223\",\"static/chunks/48223-7ea74e070987a567.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40390\",\"static/chunks/40390-c9bfaa0de0b72f67.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"17077\",\"static/chunks/17077-6a46ded038f54266.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"33871\",\"static/chunks/33871-ce5211be2bca40e6.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"88069\",\"static/chunks/app/chat/%5Bvariants%5D/(dynamic-root)/layout-a61c83508084f7d0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\"],\"DataProvider\"]\n"])</script><script>self.__next_f.push([1,"3f:I[85427,[\"86365\",\"static/chunks/dd702a79-b6c7661c8a838128.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"38058\",\"static/chunks/b7a1a8c0-72ee0f814ed13c32.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"79660\",\"static/chunks/8d598023-196a80608fdd6eee.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"73535\",\"static/chunks/73535-103b6060cf97ab6d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"51679\",\"static/chunks/51679-08aafdbd5acc6aa3.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"8557\",\"static/chunks/8557-c2a5e618ccff242d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"3357\",\"static/chunks/3357-a437bd9e1280840c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"56497\",\"static/chunks/56497-9a15f5e7fc5e058e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69053\",\"static/chunks/69053-2a18fec337af0c69.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69790\",\"static/chunks/69790-06e2618fe911421e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69241\",\"static/chunks/69241-23922ef52da5b76b.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"19199\",\"static/chunks/19199-c732e5ac6f8e2141.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"43207\",\"static/chunks/43207-f2d4fa16ab44d090.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"13280\",\"static/chunks/13280-b6a1193602500b08.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"7921\",\"static/chunks/7921-73dfed29e8c02165.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40626\",\"static/chunks/40626-7aa1c4c6db827c91.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93590\",\"static/chunks/93590-52e31b4cbcf9e82d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93307\",\"static/chunks/93307-40c92ad52815d0a2.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"6905\",\"static/chunks/6905-cb9cabc11de7c1e0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"11139\",\"static/chunks/11139-f96710a45351a03f.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20514\",\"static/chunks/20514-f3407bf5b06a848a.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"47682\",\"static/chunks/47682-0d778b613e9847fb.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"53320\",\"static/chunks/53320-a7193a327838943e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"41599\",\"static/chunks/41599-7a7f7cf9c09e7ac7.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20144\",\"static/chunks/20144-63eeced46f10ea05.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"92984\",\"static/chunks/92984-3d1fd3239dfc3153.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"32349\",\"static/chunks/32349-21720b7e60216f19.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"26877\",\"static/chunks/26877-7997e28f400c72fa.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"48223\",\"static/chunks/48223-7ea74e070987a567.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40390\",\"static/chunks/40390-c9bfaa0de0b72f67.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"17077\",\"static/chunks/17077-6a46ded038f54266.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"33871\",\"static/chunks/33871-ce5211be2bca40e6.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"88069\",\"static/chunks/app/chat/%5Bvariants%5D/(dynamic-root)/layout-a61c83508084f7d0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\"],\"UserProvider\"]\n"])</script><script>self.__next_f.push([1,"40:I[44889,[\"86365\",\"static/chunks/dd702a79-b6c7661c8a838128.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"38058\",\"static/chunks/b7a1a8c0-72ee0f814ed13c32.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"79660\",\"static/chunks/8d598023-196a80608fdd6eee.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"73535\",\"static/chunks/73535-103b6060cf97ab6d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"51679\",\"static/chunks/51679-08aafdbd5acc6aa3.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"8557\",\"static/chunks/8557-c2a5e618ccff242d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"3357\",\"static/chunks/3357-a437bd9e1280840c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"56497\",\"static/chunks/56497-9a15f5e7fc5e058e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69053\",\"static/chunks/69053-2a18fec337af0c69.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69790\",\"static/chunks/69790-06e2618fe911421e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69241\",\"static/chunks/69241-23922ef52da5b76b.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"19199\",\"static/chunks/19199-c732e5ac6f8e2141.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"43207\",\"static/chunks/43207-f2d4fa16ab44d090.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"13280\",\"static/chunks/13280-b6a1193602500b08.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"7921\",\"static/chunks/7921-73dfed29e8c02165.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40626\",\"static/chunks/40626-7aa1c4c6db827c91.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93590\",\"static/chunks/93590-52e31b4cbcf9e82d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93307\",\"static/chunks/93307-40c92ad52815d0a2.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"6905\",\"static/chunks/6905-cb9cabc11de7c1e0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"11139\",\"static/chunks/11139-f96710a45351a03f.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20514\",\"static/chunks/20514-f3407bf5b06a848a.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"47682\",\"static/chunks/47682-0d778b613e9847fb.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"53320\",\"static/chunks/53320-a7193a327838943e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"41599\",\"static/chunks/41599-7a7f7cf9c09e7ac7.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20144\",\"static/chunks/20144-63eeced46f10ea05.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"92984\",\"static/chunks/92984-3d1fd3239dfc3153.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"32349\",\"static/chunks/32349-21720b7e60216f19.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"26877\",\"static/chunks/26877-7997e28f400c72fa.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"48223\",\"static/chunks/48223-7ea74e070987a567.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40390\",\"static/chunks/40390-c9bfaa0de0b72f67.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"17077\",\"static/chunks/17077-6a46ded038f54266.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"33871\",\"static/chunks/33871-ce5211be2bca40e6.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"88069\",\"static/chunks/app/chat/%5Bvariants%5D/(dynamic-root)/layout-a61c83508084f7d0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\"],\"AnimatedIconProvider\"]\n"])</script><script>self.__next_f.push([1,"41:I[92848,[\"86365\",\"static/chunks/dd702a79-b6c7661c8a838128.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"38058\",\"static/chunks/b7a1a8c0-72ee0f814ed13c32.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"79660\",\"static/chunks/8d598023-196a80608fdd6eee.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"73535\",\"static/chunks/73535-103b6060cf97ab6d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"51679\",\"static/chunks/51679-08aafdbd5acc6aa3.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"8557\",\"static/chunks/8557-c2a5e618ccff242d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"3357\",\"static/chunks/3357-a437bd9e1280840c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"56497\",\"static/chunks/56497-9a15f5e7fc5e058e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69053\",\"static/chunks/69053-2a18fec337af0c69.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69790\",\"static/chunks/69790-06e2618fe911421e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69241\",\"static/chunks/69241-23922ef52da5b76b.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"19199\",\"static/chunks/19199-c732e5ac6f8e2141.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"43207\",\"static/chunks/43207-f2d4fa16ab44d090.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"13280\",\"static/chunks/13280-b6a1193602500b08.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"7921\",\"static/chunks/7921-73dfed29e8c02165.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40626\",\"static/chunks/40626-7aa1c4c6db827c91.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93590\",\"static/chunks/93590-52e31b4cbcf9e82d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93307\",\"static/chunks/93307-40c92ad52815d0a2.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"6905\",\"static/chunks/6905-cb9cabc11de7c1e0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"11139\",\"static/chunks/11139-f96710a45351a03f.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20514\",\"static/chunks/20514-f3407bf5b06a848a.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"47682\",\"static/chunks/47682-0d778b613e9847fb.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"53320\",\"static/chunks/53320-a7193a327838943e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"41599\",\"static/chunks/41599-7a7f7cf9c09e7ac7.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20144\",\"static/chunks/20144-63eeced46f10ea05.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"92984\",\"static/chunks/92984-3d1fd3239dfc3153.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"32349\",\"static/chunks/32349-21720b7e60216f19.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"26877\",\"static/chunks/26877-7997e28f400c72fa.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"48223\",\"static/chunks/48223-7ea74e070987a567.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40390\",\"static/chunks/40390-c9bfaa0de0b72f67.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"17077\",\"static/chunks/17077-6a46ded038f54266.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"33871\",\"static/chunks/33871-ce5211be2bca40e6.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"88069\",\"static/chunks/app/chat/%5Bvariants%5D/(dynamic-root)/layout-a61c83508084f7d0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\"],\"PortalProvider\"]\n"])</script><script>self.__next_f.push([1,"42:I[18535,[\"86365\",\"static/chunks/dd702a79-b6c7661c8a838128.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"38058\",\"static/chunks/b7a1a8c0-72ee0f814ed13c32.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"79660\",\"static/chunks/8d598023-196a80608fdd6eee.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"73535\",\"static/chunks/73535-103b6060cf97ab6d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"51679\",\"static/chunks/51679-08aafdbd5acc6aa3.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"8557\",\"static/chunks/8557-c2a5e618ccff242d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"3357\",\"static/chunks/3357-a437bd9e1280840c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"56497\",\"static/chunks/56497-9a15f5e7fc5e058e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69053\",\"static/chunks/69053-2a18fec337af0c69.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69790\",\"static/chunks/69790-06e2618fe911421e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69241\",\"static/chunks/69241-23922ef52da5b76b.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"19199\",\"static/chunks/19199-c732e5ac6f8e2141.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"43207\",\"static/chunks/43207-f2d4fa16ab44d090.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"13280\",\"static/chunks/13280-b6a1193602500b08.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"7921\",\"static/chunks/7921-73dfed29e8c02165.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40626\",\"static/chunks/40626-7aa1c4c6db827c91.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93590\",\"static/chunks/93590-52e31b4cbcf9e82d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93307\",\"static/chunks/93307-40c92ad52815d0a2.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"6905\",\"static/chunks/6905-cb9cabc11de7c1e0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"11139\",\"static/chunks/11139-f96710a45351a03f.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20514\",\"static/chunks/20514-f3407bf5b06a848a.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"47682\",\"static/chunks/47682-0d778b613e9847fb.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"53320\",\"static/chunks/53320-a7193a327838943e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"41599\",\"static/chunks/41599-7a7f7cf9c09e7ac7.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20144\",\"static/chunks/20144-63eeced46f10ea05.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"92984\",\"static/chunks/92984-3d1fd3239dfc3153.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"32349\",\"static/chunks/32349-21720b7e60216f19.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"26877\",\"static/chunks/26877-7997e28f400c72fa.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"48223\",\"static/chunks/48223-7ea74e070987a567.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40390\",\"static/chunks/40390-c9bfaa0de0b72f67.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"17077\",\"static/chunks/17077-6a46ded038f54266.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"33871\",\"static/chunks/33871-ce5211be2bca40e6.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"88069\",\"static/chunks/app/chat/%5Bvariants%5D/(dynamic-root)/layout-a61c83508084f7d0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\"],\"NewSidebarProvider\"]\n"])</script><script>self.__next_f.push([1,"43:I[28911,[\"86365\",\"static/chunks/dd702a79-b6c7661c8a838128.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"38058\",\"static/chunks/b7a1a8c0-72ee0f814ed13c32.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"79660\",\"static/chunks/8d598023-196a80608fdd6eee.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"73535\",\"static/chunks/73535-103b6060cf97ab6d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"51679\",\"static/chunks/51679-08aafdbd5acc6aa3.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"8557\",\"static/chunks/8557-c2a5e618ccff242d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"3357\",\"static/chunks/3357-a437bd9e1280840c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"56497\",\"static/chunks/56497-9a15f5e7fc5e058e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69053\",\"static/chunks/69053-2a18fec337af0c69.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69790\",\"static/chunks/69790-06e2618fe911421e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69241\",\"static/chunks/69241-23922ef52da5b76b.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"19199\",\"static/chunks/19199-c732e5ac6f8e2141.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"43207\",\"static/chunks/43207-f2d4fa16ab44d090.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"13280\",\"static/chunks/13280-b6a1193602500b08.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"7921\",\"static/chunks/7921-73dfed29e8c02165.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40626\",\"static/chunks/40626-7aa1c4c6db827c91.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93590\",\"static/chunks/93590-52e31b4cbcf9e82d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93307\",\"static/chunks/93307-40c92ad52815d0a2.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"6905\",\"static/chunks/6905-cb9cabc11de7c1e0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"11139\",\"static/chunks/11139-f96710a45351a03f.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20514\",\"static/chunks/20514-f3407bf5b06a848a.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"47682\",\"static/chunks/47682-0d778b613e9847fb.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"53320\",\"static/chunks/53320-a7193a327838943e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"41599\",\"static/chunks/41599-7a7f7cf9c09e7ac7.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20144\",\"static/chunks/20144-63eeced46f10ea05.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"92984\",\"static/chunks/92984-3d1fd3239dfc3153.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"32349\",\"static/chunks/32349-21720b7e60216f19.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"26877\",\"static/chunks/26877-7997e28f400c72fa.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"48223\",\"static/chunks/48223-7ea74e070987a567.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40390\",\"static/chunks/40390-c9bfaa0de0b72f67.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"17077\",\"static/chunks/17077-6a46ded038f54266.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"33871\",\"static/chunks/33871-ce5211be2bca40e6.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"88069\",\"static/chunks/app/chat/%5Bvariants%5D/(dynamic-root)/layout-a61c83508084f7d0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\"],\"FlagsProvider\"]\n"])</script><script>self.__next_f.push([1,"45:I[17619,[\"86365\",\"static/chunks/dd702a79-b6c7661c8a838128.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"38058\",\"static/chunks/b7a1a8c0-72ee0f814ed13c32.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"79660\",\"static/chunks/8d598023-196a80608fdd6eee.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"73535\",\"static/chunks/73535-103b6060cf97ab6d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"51679\",\"static/chunks/51679-08aafdbd5acc6aa3.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"8557\",\"static/chunks/8557-c2a5e618ccff242d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"3357\",\"static/chunks/3357-a437bd9e1280840c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"56497\",\"static/chunks/56497-9a15f5e7fc5e058e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69053\",\"static/chunks/69053-2a18fec337af0c69.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69790\",\"static/chunks/69790-06e2618fe911421e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69241\",\"static/chunks/69241-23922ef52da5b76b.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"19199\",\"static/chunks/19199-c732e5ac6f8e2141.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"43207\",\"static/chunks/43207-f2d4fa16ab44d090.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"13280\",\"static/chunks/13280-b6a1193602500b08.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"7921\",\"static/chunks/7921-73dfed29e8c02165.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40626\",\"static/chunks/40626-7aa1c4c6db827c91.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93590\",\"static/chunks/93590-52e31b4cbcf9e82d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93307\",\"static/chunks/93307-40c92ad52815d0a2.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"6905\",\"static/chunks/6905-cb9cabc11de7c1e0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"11139\",\"static/chunks/11139-f96710a45351a03f.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20514\",\"static/chunks/20514-f3407bf5b06a848a.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"47682\",\"static/chunks/47682-0d778b613e9847fb.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"53320\",\"static/chunks/53320-a7193a327838943e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"41599\",\"static/chunks/41599-7a7f7cf9c09e7ac7.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20144\",\"static/chunks/20144-63eeced46f10ea05.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"92984\",\"static/chunks/92984-3d1fd3239dfc3153.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"32349\",\"static/chunks/32349-21720b7e60216f19.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"26877\",\"static/chunks/26877-7997e28f400c72fa.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"48223\",\"static/chunks/48223-7ea74e070987a567.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40390\",\"static/chunks/40390-c9bfaa0de0b72f67.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"17077\",\"static/chunks/17077-6a46ded038f54266.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"33871\",\"static/chunks/33871-ce5211be2bca40e6.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"88069\",\"static/chunks/app/chat/%5Bvariants%5D/(dynamic-root)/layout-a61c83508084f7d0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\"],\"SqlExecutionProvider\"]\n"])</script><script>self.__next_f.push([1,"46:I[85427,[\"86365\",\"static/chunks/dd702a79-b6c7661c8a838128.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"38058\",\"static/chunks/b7a1a8c0-72ee0f814ed13c32.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"79660\",\"static/chunks/8d598023-196a80608fdd6eee.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"73535\",\"static/chunks/73535-103b6060cf97ab6d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"51679\",\"static/chunks/51679-08aafdbd5acc6aa3.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"8557\",\"static/chunks/8557-c2a5e618ccff242d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"3357\",\"static/chunks/3357-a437bd9e1280840c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"56497\",\"static/chunks/56497-9a15f5e7fc5e058e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69053\",\"static/chunks/69053-2a18fec337af0c69.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69790\",\"static/chunks/69790-06e2618fe911421e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69241\",\"static/chunks/69241-23922ef52da5b76b.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"19199\",\"static/chunks/19199-c732e5ac6f8e2141.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"43207\",\"static/chunks/43207-f2d4fa16ab44d090.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"13280\",\"static/chunks/13280-b6a1193602500b08.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"7921\",\"static/chunks/7921-73dfed29e8c02165.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40626\",\"static/chunks/40626-7aa1c4c6db827c91.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93590\",\"static/chunks/93590-52e31b4cbcf9e82d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93307\",\"static/chunks/93307-40c92ad52815d0a2.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"6905\",\"static/chunks/6905-cb9cabc11de7c1e0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"11139\",\"static/chunks/11139-f96710a45351a03f.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20514\",\"static/chunks/20514-f3407bf5b06a848a.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"47682\",\"static/chunks/47682-0d778b613e9847fb.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"53320\",\"static/chunks/53320-a7193a327838943e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"41599\",\"static/chunks/41599-7a7f7cf9c09e7ac7.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20144\",\"static/chunks/20144-63eeced46f10ea05.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"92984\",\"static/chunks/92984-3d1fd3239dfc3153.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"32349\",\"static/chunks/32349-21720b7e60216f19.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"26877\",\"static/chunks/26877-7997e28f400c72fa.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"48223\",\"static/chunks/48223-7ea74e070987a567.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40390\",\"static/chunks/40390-c9bfaa0de0b72f67.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"17077\",\"static/chunks/17077-6a46ded038f54266.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"33871\",\"static/chunks/33871-ce5211be2bca40e6.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"88069\",\"static/chunks/app/chat/%5Bvariants%5D/(dynamic-root)/layout-a61c83508084f7d0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\"],\"FutureUserProvider\"]\n"])</script><script>self.__next_f.push([1,"47:I[42804,[\"86365\",\"static/chunks/dd702a79-b6c7661c8a838128.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"38058\",\"static/chunks/b7a1a8c0-72ee0f814ed13c32.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"79660\",\"static/chunks/8d598023-196a80608fdd6eee.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"73535\",\"static/chunks/73535-103b6060cf97ab6d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"51679\",\"static/chunks/51679-08aafdbd5acc6aa3.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"8557\",\"static/chunks/8557-c2a5e618ccff242d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"3357\",\"static/chunks/3357-a437bd9e1280840c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"56497\",\"static/chunks/56497-9a15f5e7fc5e058e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69053\",\"static/chunks/69053-2a18fec337af0c69.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69790\",\"static/chunks/69790-06e2618fe911421e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69241\",\"static/chunks/69241-23922ef52da5b76b.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"19199\",\"static/chunks/19199-c732e5ac6f8e2141.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"43207\",\"static/chunks/43207-f2d4fa16ab44d090.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"13280\",\"static/chunks/13280-b6a1193602500b08.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"7921\",\"static/chunks/7921-73dfed29e8c02165.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40626\",\"static/chunks/40626-7aa1c4c6db827c91.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93590\",\"static/chunks/93590-52e31b4cbcf9e82d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93307\",\"static/chunks/93307-40c92ad52815d0a2.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"6905\",\"static/chunks/6905-cb9cabc11de7c1e0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"11139\",\"static/chunks/11139-f96710a45351a03f.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20514\",\"static/chunks/20514-f3407bf5b06a848a.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"47682\",\"static/chunks/47682-0d778b613e9847fb.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"53320\",\"static/chunks/53320-a7193a327838943e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"41599\",\"static/chunks/41599-7a7f7cf9c09e7ac7.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20144\",\"static/chunks/20144-63eeced46f10ea05.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"92984\",\"static/chunks/92984-3d1fd3239dfc3153.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"32349\",\"static/chunks/32349-21720b7e60216f19.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"26877\",\"static/chunks/26877-7997e28f400c72fa.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"48223\",\"static/chunks/48223-7ea74e070987a567.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40390\",\"static/chunks/40390-c9bfaa0de0b72f67.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"17077\",\"static/chunks/17077-6a46ded038f54266.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"33871\",\"static/chunks/33871-ce5211be2bca40e6.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"88069\",\"static/chunks/app/chat/%5Bvariants%5D/(dynamic-root)/layout-a61c83508084f7d0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\"],\"Dialogs\"]\n"])</script><script>self.__next_f.push([1,"48:I[13371,[\"86365\",\"static/chunks/dd702a79-b6c7661c8a838128.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"38058\",\"static/chunks/b7a1a8c0-72ee0f814ed13c32.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"79660\",\"static/chunks/8d598023-196a80608fdd6eee.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"73535\",\"static/chunks/73535-103b6060cf97ab6d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"51679\",\"static/chunks/51679-08aafdbd5acc6aa3.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"8557\",\"static/chunks/8557-c2a5e618ccff242d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"3357\",\"static/chunks/3357-a437bd9e1280840c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"56497\",\"static/chunks/56497-9a15f5e7fc5e058e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69053\",\"static/chunks/69053-2a18fec337af0c69.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69790\",\"static/chunks/69790-06e2618fe911421e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69241\",\"static/chunks/69241-23922ef52da5b76b.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"19199\",\"static/chunks/19199-c732e5ac6f8e2141.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"43207\",\"static/chunks/43207-f2d4fa16ab44d090.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"13280\",\"static/chunks/13280-b6a1193602500b08.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"7921\",\"static/chunks/7921-73dfed29e8c02165.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40626\",\"static/chunks/40626-7aa1c4c6db827c91.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93590\",\"static/chunks/93590-52e31b4cbcf9e82d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93307\",\"static/chunks/93307-40c92ad52815d0a2.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"6905\",\"static/chunks/6905-cb9cabc11de7c1e0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"11139\",\"static/chunks/11139-f96710a45351a03f.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20514\",\"static/chunks/20514-f3407bf5b06a848a.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"47682\",\"static/chunks/47682-0d778b613e9847fb.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"53320\",\"static/chunks/53320-a7193a327838943e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"41599\",\"static/chunks/41599-7a7f7cf9c09e7ac7.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20144\",\"static/chunks/20144-63eeced46f10ea05.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"92984\",\"static/chunks/92984-3d1fd3239dfc3153.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"32349\",\"static/chunks/32349-21720b7e60216f19.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"26877\",\"static/chunks/26877-7997e28f400c72fa.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"48223\",\"static/chunks/48223-7ea74e070987a567.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40390\",\"static/chunks/40390-c9bfaa0de0b72f67.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"17077\",\"static/chunks/17077-6a46ded038f54266.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"33871\",\"static/chunks/33871-ce5211be2bca40e6.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"88069\",\"static/chunks/app/chat/%5Bvariants%5D/(dynamic-root)/layout-a61c83508084f7d0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\"],\"SignInDialog\"]\n"])</script><script>self.__next_f.push([1,"49:I[92473,[\"86365\",\"static/chunks/dd702a79-b6c7661c8a838128.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"38058\",\"static/chunks/b7a1a8c0-72ee0f814ed13c32.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"79660\",\"static/chunks/8d598023-196a80608fdd6eee.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"73535\",\"static/chunks/73535-103b6060cf97ab6d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"51679\",\"static/chunks/51679-08aafdbd5acc6aa3.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"8557\",\"static/chunks/8557-c2a5e618ccff242d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"3357\",\"static/chunks/3357-a437bd9e1280840c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"56497\",\"static/chunks/56497-9a15f5e7fc5e058e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69053\",\"static/chunks/69053-2a18fec337af0c69.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69790\",\"static/chunks/69790-06e2618fe911421e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69241\",\"static/chunks/69241-23922ef52da5b76b.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"19199\",\"static/chunks/19199-c732e5ac6f8e2141.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"43207\",\"static/chunks/43207-f2d4fa16ab44d090.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"13280\",\"static/chunks/13280-b6a1193602500b08.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"7921\",\"static/chunks/7921-73dfed29e8c02165.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40626\",\"static/chunks/40626-7aa1c4c6db827c91.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93590\",\"static/chunks/93590-52e31b4cbcf9e82d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93307\",\"static/chunks/93307-40c92ad52815d0a2.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"6905\",\"static/chunks/6905-cb9cabc11de7c1e0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"11139\",\"static/chunks/11139-f96710a45351a03f.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20514\",\"static/chunks/20514-f3407bf5b06a848a.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"47682\",\"static/chunks/47682-0d778b613e9847fb.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"53320\",\"static/chunks/53320-a7193a327838943e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"41599\",\"static/chunks/41599-7a7f7cf9c09e7ac7.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20144\",\"static/chunks/20144-63eeced46f10ea05.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"92984\",\"static/chunks/92984-3d1fd3239dfc3153.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"32349\",\"static/chunks/32349-21720b7e60216f19.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"26877\",\"static/chunks/26877-7997e28f400c72fa.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"48223\",\"static/chunks/48223-7ea74e070987a567.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40390\",\"static/chunks/40390-c9bfaa0de0b72f67.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"17077\",\"static/chunks/17077-6a46ded038f54266.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"33871\",\"static/chunks/33871-ce5211be2bca40e6.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"88069\",\"static/chunks/app/chat/%5Bvariants%5D/(dynamic-root)/layout-a61c83508084f7d0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\"],\"AnalyticsScripts\"]\n"])</script><script>self.__next_f.push([1,"4a:I[71419,[\"86365\",\"static/chunks/dd702a79-b6c7661c8a838128.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"38058\",\"static/chunks/b7a1a8c0-72ee0f814ed13c32.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"79660\",\"static/chunks/8d598023-196a80608fdd6eee.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"73535\",\"static/chunks/73535-103b6060cf97ab6d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"51679\",\"static/chunks/51679-08aafdbd5acc6aa3.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"8557\",\"static/chunks/8557-c2a5e618ccff242d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"3357\",\"static/chunks/3357-a437bd9e1280840c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"56497\",\"static/chunks/56497-9a15f5e7fc5e058e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69053\",\"static/chunks/69053-2a18fec337af0c69.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69790\",\"static/chunks/69790-06e2618fe911421e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69241\",\"static/chunks/69241-23922ef52da5b76b.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"19199\",\"static/chunks/19199-c732e5ac6f8e2141.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"43207\",\"static/chunks/43207-f2d4fa16ab44d090.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"13280\",\"static/chunks/13280-b6a1193602500b08.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"7921\",\"static/chunks/7921-73dfed29e8c02165.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40626\",\"static/chunks/40626-7aa1c4c6db827c91.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93590\",\"static/chunks/93590-52e31b4cbcf9e82d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93307\",\"static/chunks/93307-40c92ad52815d0a2.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"6905\",\"static/chunks/6905-cb9cabc11de7c1e0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"11139\",\"static/chunks/11139-f96710a45351a03f.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20514\",\"static/chunks/20514-f3407bf5b06a848a.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"47682\",\"static/chunks/47682-0d778b613e9847fb.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"53320\",\"static/chunks/53320-a7193a327838943e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"41599\",\"static/chunks/41599-7a7f7cf9c09e7ac7.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20144\",\"static/chunks/20144-63eeced46f10ea05.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"92984\",\"static/chunks/92984-3d1fd3239dfc3153.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"32349\",\"static/chunks/32349-21720b7e60216f19.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"26877\",\"static/chunks/26877-7997e28f400c72fa.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"48223\",\"static/chunks/48223-7ea74e070987a567.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40390\",\"static/chunks/40390-c9bfaa0de0b72f67.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"17077\",\"static/chunks/17077-6a46ded038f54266.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"33871\",\"static/chunks/33871-ce5211be2bca40e6.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"88069\",\"static/chunks/app/chat/%5Bvariants%5D/(dynamic-root)/layout-a61c83508084f7d0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\"],\"AnalyticsHooks\"]\n"])</script><script>self.__next_f.push([1,"4b:I[24735,[\"86365\",\"static/chunks/dd702a79-b6c7661c8a838128.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"38058\",\"static/chunks/b7a1a8c0-72ee0f814ed13c32.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"79660\",\"static/chunks/8d598023-196a80608fdd6eee.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"73535\",\"static/chunks/73535-103b6060cf97ab6d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"51679\",\"static/chunks/51679-08aafdbd5acc6aa3.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"8557\",\"static/chunks/8557-c2a5e618ccff242d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"3357\",\"static/chunks/3357-a437bd9e1280840c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"56497\",\"static/chunks/56497-9a15f5e7fc5e058e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69053\",\"static/chunks/69053-2a18fec337af0c69.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69790\",\"static/chunks/69790-06e2618fe911421e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69241\",\"static/chunks/69241-23922ef52da5b76b.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"19199\",\"static/chunks/19199-c732e5ac6f8e2141.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"43207\",\"static/chunks/43207-f2d4fa16ab44d090.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"13280\",\"static/chunks/13280-b6a1193602500b08.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"7921\",\"static/chunks/7921-73dfed29e8c02165.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40626\",\"static/chunks/40626-7aa1c4c6db827c91.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93590\",\"static/chunks/93590-52e31b4cbcf9e82d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93307\",\"static/chunks/93307-40c92ad52815d0a2.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"6905\",\"static/chunks/6905-cb9cabc11de7c1e0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"11139\",\"static/chunks/11139-f96710a45351a03f.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20514\",\"static/chunks/20514-f3407bf5b06a848a.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"47682\",\"static/chunks/47682-0d778b613e9847fb.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"53320\",\"static/chunks/53320-a7193a327838943e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"41599\",\"static/chunks/41599-7a7f7cf9c09e7ac7.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20144\",\"static/chunks/20144-63eeced46f10ea05.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"92984\",\"static/chunks/92984-3d1fd3239dfc3153.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"32349\",\"static/chunks/32349-21720b7e60216f19.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"26877\",\"static/chunks/26877-7997e28f400c72fa.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"48223\",\"static/chunks/48223-7ea74e070987a567.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40390\",\"static/chunks/40390-c9bfaa0de0b72f67.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"17077\",\"static/chunks/17077-6a46ded038f54266.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"33871\",\"static/chunks/33871-ce5211be2bca40e6.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"88069\",\"static/chunks/app/chat/%5Bvariants%5D/(dynamic-root)/layout-a61c83508084f7d0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\"],\"ConsentBanner\"]\n"])</script><script>self.__next_f.push([1,"4c:I[85427,[\"86365\",\"static/chunks/dd702a79-b6c7661c8a838128.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"38058\",\"static/chunks/b7a1a8c0-72ee0f814ed13c32.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"79660\",\"static/chunks/8d598023-196a80608fdd6eee.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"73535\",\"static/chunks/73535-103b6060cf97ab6d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"51679\",\"static/chunks/51679-08aafdbd5acc6aa3.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"8557\",\"static/chunks/8557-c2a5e618ccff242d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"3357\",\"static/chunks/3357-a437bd9e1280840c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"56497\",\"static/chunks/56497-9a15f5e7fc5e058e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69053\",\"static/chunks/69053-2a18fec337af0c69.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69790\",\"static/chunks/69790-06e2618fe911421e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69241\",\"static/chunks/69241-23922ef52da5b76b.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"19199\",\"static/chunks/19199-c732e5ac6f8e2141.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"43207\",\"static/chunks/43207-f2d4fa16ab44d090.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"13280\",\"static/chunks/13280-b6a1193602500b08.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"7921\",\"static/chunks/7921-73dfed29e8c02165.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40626\",\"static/chunks/40626-7aa1c4c6db827c91.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93590\",\"static/chunks/93590-52e31b4cbcf9e82d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93307\",\"static/chunks/93307-40c92ad52815d0a2.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"6905\",\"static/chunks/6905-cb9cabc11de7c1e0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"11139\",\"static/chunks/11139-f96710a45351a03f.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20514\",\"static/chunks/20514-f3407bf5b06a848a.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"47682\",\"static/chunks/47682-0d778b613e9847fb.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"53320\",\"static/chunks/53320-a7193a327838943e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"41599\",\"static/chunks/41599-7a7f7cf9c09e7ac7.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20144\",\"static/chunks/20144-63eeced46f10ea05.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"92984\",\"static/chunks/92984-3d1fd3239dfc3153.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"32349\",\"static/chunks/32349-21720b7e60216f19.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"26877\",\"static/chunks/26877-7997e28f400c72fa.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"48223\",\"static/chunks/48223-7ea74e070987a567.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40390\",\"static/chunks/40390-c9bfaa0de0b72f67.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"17077\",\"static/chunks/17077-6a46ded038f54266.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"33871\",\"static/chunks/33871-ce5211be2bca40e6.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"88069\",\"static/chunks/app/chat/%5Bvariants%5D/(dynamic-root)/layout-a61c83508084f7d0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\"],\"SetUser\"]\n"])</script><script>self.__next_f.push([1,":HL[\"/chat-static/_next/static/media/3a8dc5763a8ae4b2-s.p.woff2\",\"font\",{\"crossOrigin\":\"\",\"type\":\"font/woff2\"}]\n:HL[\"/chat-static/_next/static/media/66f30814ff6d7cdf.p.woff2\",\"font\",{\"crossOrigin\":\"\",\"type\":\"font/woff2\"}]\n:HL[\"/chat-static/_next/static/media/e11418ac562b8ac1-s.p.woff2\",\"font\",{\"crossOrigin\":\"\",\"type\":\"font/woff2\"}]\n:HL[\"/chat-static/_next/static/css/a44d21ac22c4f1d7.css?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"style\"]\n:HL[\"/chat-static/_next/static/css/e2e6f6fcc0a2ad47.css?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"style\"]\n:HL[\"/chat-static/_next/static/css/65cd4b1de85fd597.css?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"style\"]\n:HL[\"/chat-static/_next/static/css/a7c91a1e3cfba1fe.css?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"style\"]\n:HL[\"/chat-static/_next/static/css/168dfb3a8e8dbb8f.css?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"style\"]\n:HL[\"/chat-static/_next/static/css/449dec528a3f9bce.css?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"style\"]\n:HL[\"/chat-static/_next/static/css/54c3b2ac976d95a6.css?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"style\"]\n:HL[\"/chat-static/_next/static/css/1792a0c06bc67cfd.css?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"style\"]\n"])</script><script>self.__next_f.push([1,"0:{\"P\":null,\"b\":\"R5ByDfqTwZJf_253-zQ6n\",\"p\":\"/chat-static\",\"c\":[\"\",\"chat\",\"v0pprvariant-0-0-en-nl\",\"react-frontend-code-xwMbPfe8hWt?b=b_DsBjUrm49AS\u0026p=0\"],\"i\":false,\"f\":[[[\"\",{\"children\":[\"chat\",{\"children\":[[\"variants\",\"v0pprvariant-0-0-en-nl\",\"d\"],{\"children\":[\"(dynamic-root)\",{\"children\":[\"(home)\",{\"children\":[\"(chat)\",{\"chat\":[\"children\",{\"children\":[\"id\",{\"children\":[\"__PAGE__?{\\\"b\\\":\\\"b_DsBjUrm49AS\\\",\\\"p\\\":\\\"0\\\",\\\"id\\\":\\\"react-frontend-code-xwMbPfe8hWt\\\",\\\"variants\\\":\\\"v0pprvariant-0-0-en-nl\\\"}\",{}]}]}],\"children\":[\"__DEFAULT__\",{}],\"header\":[\"__DEFAULT__\",{}],\"sidebar\":[\"__DEFAULT__\",{}]}]}]},\"$undefined\",\"$undefined\",true]}]}]}],[\"\",[\"$\",\"$1\",\"c\",{\"children\":[null,[\"$\",\"$L2\",null,{\"parallelRouterKey\":\"children\",\"error\":\"$undefined\",\"errorStyles\":\"$undefined\",\"errorScripts\":\"$undefined\",\"template\":[\"$\",\"$L3\",null,{}],\"templateStyles\":\"$undefined\",\"templateScripts\":\"$undefined\",\"notFound\":[[[\"$\",\"title\",null,{\"children\":\"404: This page could not be found.\"}],[\"$\",\"div\",null,{\"style\":{\"fontFamily\":\"system-ui,\\\"Segoe UI\\\",Roboto,Helvetica,Arial,sans-serif,\\\"Apple Color Emoji\\\",\\\"Segoe UI Emoji\\\"\",\"height\":\"100vh\",\"textAlign\":\"center\",\"display\":\"flex\",\"flexDirection\":\"column\",\"alignItems\":\"center\",\"justifyContent\":\"center\"},\"children\":[\"$\",\"div\",null,{\"children\":[[\"$\",\"style\",null,{\"dangerouslySetInnerHTML\":{\"__html\":\"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}\"}}],[\"$\",\"h1\",null,{\"className\":\"next-error-h1\",\"style\":{\"display\":\"inline-block\",\"margin\":\"0 20px 0 0\",\"padding\":\"0 23px 0 0\",\"fontSize\":24,\"fontWeight\":500,\"verticalAlign\":\"top\",\"lineHeight\":\"49px\"},\"children\":404}],[\"$\",\"div\",null,{\"style\":{\"display\":\"inline-block\"},\"children\":[\"$\",\"h2\",null,{\"style\":{\"fontSize\":14,\"fontWeight\":400,\"lineHeight\":\"49px\",\"margin\":0},\"children\":\"This page could not be found.\"}]}]]}]}]],[]],\"forbidden\":\"$undefined\",\"unauthorized\":\"$undefined\"}]]}],{\"children\":[\"chat\",[\"$\",\"$1\",\"c\",{\"children\":[null,[\"$\",\"$L2\",null,{\"parallelRouterKey\":\"children\",\"error\":\"$undefined\",\"errorStyles\":\"$undefined\",\"errorScripts\":\"$undefined\",\"template\":[\"$\",\"$L3\",null,{}],\"templateStyles\":\"$undefined\",\"templateScripts\":\"$undefined\",\"notFound\":\"$undefined\",\"forbidden\":\"$undefined\",\"unauthorized\":\"$undefined\"}]]}],{\"children\":[[\"variants\",\"v0pprvariant-0-0-en-nl\",\"d\"],[\"$\",\"$1\",\"c\",{\"children\":[null,[\"$\",\"$L2\",null,{\"parallelRouterKey\":\"children\",\"error\":\"$undefined\",\"errorStyles\":\"$undefined\",\"errorScripts\":\"$undefined\",\"template\":[\"$\",\"$L3\",null,{}],\"templateStyles\":\"$undefined\",\"templateScripts\":\"$undefined\",\"notFound\":\"$undefined\",\"forbidden\":\"$undefined\",\"unauthorized\":\"$undefined\"}]]}],{\"children\":[\"(dynamic-root)\",[\"$\",\"$1\",\"c\",{\"children\":[[[\"$\",\"link\",\"0\",{\"rel\":\"stylesheet\",\"href\":\"/chat-static/_next/static/css/a44d21ac22c4f1d7.css?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"precedence\":\"next\",\"crossOrigin\":\"$undefined\",\"nonce\":\"$undefined\"}],[\"$\",\"link\",\"1\",{\"rel\":\"stylesheet\",\"href\":\"/chat-static/_next/static/css/e2e6f6fcc0a2ad47.css?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"precedence\":\"next\",\"crossOrigin\":\"$undefined\",\"nonce\":\"$undefined\"}],[\"$\",\"link\",\"2\",{\"rel\":\"stylesheet\",\"href\":\"/chat-static/_next/static/css/65cd4b1de85fd597.css?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"precedence\":\"next\",\"crossOrigin\":\"$undefined\",\"nonce\":\"$undefined\"}],[\"$\",\"link\",\"3\",{\"rel\":\"stylesheet\",\"href\":\"/chat-static/_next/static/css/a7c91a1e3cfba1fe.css?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"precedence\":\"next\",\"crossOrigin\":\"$undefined\",\"nonce\":\"$undefined\"}],[\"$\",\"link\",\"4\",{\"rel\":\"stylesheet\",\"href\":\"/chat-static/_next/static/css/168dfb3a8e8dbb8f.css?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"precedence\":\"next\",\"crossOrigin\":\"$undefined\",\"nonce\":\"$undefined\"}],[\"$\",\"link\",\"5\",{\"rel\":\"stylesheet\",\"href\":\"/chat-static/_next/static/css/449dec528a3f9bce.css?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"precedence\":\"next\",\"crossOrigin\":\"$undefined\",\"nonce\":\"$undefined\"}],[\"$\",\"link\",\"6\",{\"rel\":\"stylesheet\",\"href\":\"/chat-static/_next/static/css/54c3b2ac976d95a6.css?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"precedence\":\"next\",\"crossOrigin\":\"$undefined\",\"nonce\":\"$undefined\"}],[\"$\",\"link\",\"7\",{\"rel\":\"stylesheet\",\"href\":\"/chat-static/_next/static/css/1792a0c06bc67cfd.css?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"precedence\":\"next\",\"crossOrigin\":\"$undefined\",\"nonce\":\"$undefined\"}]],\"$L4\"]}],{\"children\":[\"(home)\",[\"$\",\"$1\",\"c\",{\"children\":[null,\"$L5\"]}],{\"children\":[\"(chat)\",[\"$\",\"$1\",\"c\",{\"children\":[null,\"$L6\"]}],{\"chat\":[\"children\",[\"$\",\"$1\",\"c\",{\"children\":[null,[[\"$\",\"$L2\",null,{\"parallelRouterKey\":\"children\",\"error\":\"$undefined\",\"errorStyles\":\"$undefined\",\"errorScripts\":\"$undefined\",\"template\":[\"$\",\"$L3\",null,{}],\"templateStyles\":\"$undefined\",\"templateScripts\":\"$undefined\",\"notFound\":[[\"$\",\"div\",null,{\"className\":\"mx-auto flex h-[calc(100vh-3.5rem)] max-w-2xl items-center justify-center px-4 text-lg font-medium md:text-xl lg:text-2xl\",\"children\":[\"$\",\"h1\",null,{\"id\":\"not-found\",\"children\":\"404 - Page Not Found\"}]}],[]],\"forbidden\":\"$undefined\",\"unauthorized\":\"$undefined\"}],[\"$\",\"$7\",null,{\"fallback\":null,\"children\":\"$L8\"}]]]}],{\"children\":[\"id\",[\"$\",\"$1\",\"c\",{\"children\":[null,[\"$\",\"$L2\",null,{\"parallelRouterKey\":\"children\",\"error\":\"$undefined\",\"errorStyles\":\"$undefined\",\"errorScripts\":\"$undefined\",\"template\":[\"$\",\"$L3\",null,{}],\"templateStyles\":\"$undefined\",\"templateScripts\":\"$undefined\",\"notFound\":[\"$L9\",[]],\"forbidden\":\"$undefined\",\"unauthorized\":\"$undefined\"}]]}],{\"children\":[\"__PAGE__\",[\"$\",\"$1\",\"c\",{\"children\":[\"$La\",null,[\"$\",\"$Lb\",null,{\"children\":[\"$Lc\",\"$Ld\",\"$undefined\"]}]]}],{},null,false]},null,false]},null,false],\"children\":[\"__DEFAULT__\",[\"$\",\"$1\",\"c\",{\"children\":[null,null,[\"$\",\"$Lb\",null,{\"children\":[\"$Le\",\"$Lf\",[\"$\",\"$L10\",null,{\"promise\":\"$@11\"}]]}]]}],{},null,false],\"header\":[\"__DEFAULT__\",[\"$\",\"$1\",\"c\",{\"children\":[[\"$\",\"$L12\",null,{}],null,[\"$\",\"$Lb\",null,{\"children\":[\"$L13\",\"$L14\",\"$undefined\"]}]]}],{},null,false],\"sidebar\":[\"__DEFAULT__\",[\"$\",\"$1\",\"c\",{\"children\":[\"$L15\",null,[\"$\",\"$Lb\",null,{\"children\":[\"$L16\",\"$L17\",\"$undefined\"]}]]}],{},null,false]},null,false]},null,false]},null,false]},null,false]},null,false]},null,false],[\"$\",\"$1\",\"h\",{\"children\":[null,[\"$\",\"$1\",\"OIGSqdLtToQwuuQG4rnPHv\",{\"children\":[[\"$\",\"$L18\",null,{\"children\":\"$L19\"}],[\"$\",\"meta\",null,{\"name\":\"next-size-adjust\",\"content\":\"\"}]]}],[\"$\",\"$L1a\",null,{\"children\":\"$L1b\"}]]}],false]],\"m\":\"$undefined\",\"G\":[\"$1c\",\"$undefined\"],\"s\":true,\"S\":false}\n"])</script><script>self.__next_f.push([1,"1b:[\"$\",\"div\",null,{\"hidden\":true,\"children\":[\"$\",\"$7\",null,{\"fallback\":null,\"children\":[\"$\",\"$L1d\",null,{\"promise\":\"$@1e\"}]}]}]\n1f:T4dd,(function() {\n  !function(){try{var d=document.documentElement,c=d.classList;c.remove('light','dark');var e=localStorage.getItem('theme');if('system'===e||(!e\u0026\u0026true)){var t='(prefers-color-scheme: dark)',m=window.matchMedia(t);if(m.media!==t||m.matches){d.style.colorScheme = 'dark';c.add('dark')}else{d.style.colorScheme = 'light';c.add('light')}}else if(e){c.add(e|| '')}if(e==='light'||e==='dark')d.style.colorScheme=e}catch(e){}}()\n  var html = document.documentElement;\n  var meta = document.querySelector('meta[name=\"theme-color\"]');\n  if (!meta) {\n    meta = document.createElement('meta');\n    meta.setAttribute('name', 'theme-color');\n    document.head.appendChild(meta);\n  }\n  function updateThemeColor() {\n    window.themeClass = html.className;\n    var isDark = html.classList.contains('dark');\n    meta.setAttribute('content', isDark ? 'hsl(240deg 3% 6%)' : 'hsl(0 0% 100%)');\n  }\n  var observer = new MutationObserver(updateThemeColor);\n  observer.observe(html, { attributes: true, attributeFilter: ['class'] });\n  updateThemeColor();\n})();\n            (function(){let e=localStorage.getItem(\"sidebar\");return document.documentElement.dataset.state=\"collapsed\"===e?\"collapsed\":\"expanded\",\"collapsed\"===e?\"collapsed\":\"expanded\"})();4:[\"$\",\"html\",null,{\"className\":\"\",\"lang\":\"en\",\"suppressHydrationWarning\":true,\"children\":[[\"$\",\"head\",null,{\"children\":[[\"$\",\"script\",null,{\"dangerouslySetInnerHTML\":{\"__html\":\"$1f\"}}],[[\"$\",\"link\",null,{\"as\":\"image\",\"href\":\"/chat-static/sign-in-visual.svg\",\"rel\":\"preload\",\"type\":\"image/svg+xml\"}],[\"$\",\"link\",null,{\"as\":\"image\",\"href\":\"/chat-static/sign-in-visual-dark.svg\",\"rel\":\"preload\",\"type\":\"image/svg+xml\"}]]]}],[\"$\",\"body\",null,{\"className\":\"font-sans text-gray-900 antialiased __variable_ad2de5 __variable_3db593 __variable_40217a\",\"children\":[[\"$\",\"$L20\",null,{\"children\":[\"$\",\"$L21\",null,{\"locale\":\"en\",\"children\":[\"$\",\"$L22\",null,{\"reducedMotion\":\"use"])</script><script>self.__next_f.push([1,"r\",\"children\":[\"$\",\"$L23\",null,{\"routes\":{\"chat\":{\"data\":{\"path\":\"/chat/api/chat/v3/chat-data\",\"method\":\"GET\"},\"permissions\":{\"path\":\"/chat/api/chat/v3/chat-permissions\",\"method\":\"GET\"},\"project\":{\"path\":\"/chat/api/chat/v3/project-for-chat\",\"method\":\"GET\"},\"deploymentStatus\":{\"path\":\"/chat/api/chat/v3/deployments/status\",\"method\":\"GET\"}},\"scoped\":{\"user\":{\"path\":\"/chat/api/chat/v3/user\",\"method\":\"GET\"},\"scopes\":{\"path\":\"/chat/api/chat/v3/scopes\",\"method\":\"GET\"},\"projects\":{\"path\":\"/chat/api/chat/v3/projects\",\"method\":\"GET\"},\"chats\":{\"path\":\"/chat/api/chat/v3/chats\",\"method\":\"GET\"},\"rateLimit\":{\"path\":\"/chat/api/chat/v3/rate-limit\",\"method\":\"GET\"},\"newFeatureBanner\":{\"path\":\"/chat/api/chat/v3/new-feature-banner\",\"method\":\"GET\"}}},\"children\":\"$L24\"}]}]}]}],[\"$\",\"$L25\",null,{}],[\"$\",\"$L26\",null,{}],[\"$\",\"$L27\",null,{}],[\"$\",\"$L28\",null,{}],[\"$\",\"$L29\",null,{}],[\"$\",\"$L2a\",null,{}]]}]]}]\na:[\"$\",\"$7\",null,{\"fallback\":[\"$\",\"div\",null,{\"className\":\"bg-background fixed inset-0 z-50\"}],\"children\":\"$L2b\"}]\nc:null\nd:null\nf:null\n13:null\n14:null\n15:null\n16:null\n17:null\n8:[\"$L2c\",\"$L2d\",[\"$\",\"$L2e\",null,{}],[\"$\",\"$L2f\",null,{}]]\n9:[\"$\",\"$L30\",null,{\"className\":\"min-h-[100dvh]\",\"description\":\"This chat was deleted, made private, or no longer exists.\",\"title\":\"Chat Not Found\",\"children\":null}]\n2d:null\n2c:null\n6:[[\"$\",\"$L2\",null,{\"parallelRouterKey\":\"header\",\"error\":\"$31\",\"errorStyles\":[],\"errorScripts\":[],\"template\":[\"$\",\"$L3\",null,{}],\"templateStyles\":\"$undefined\",\"templateScripts\":\"$undefined\",\"notFound\":\"$undefined\",\"forbidden\":\"$undefined\",\"unauthorized\":\"$undefined\"}],[\"$\",\"$L32\",null,{\"children\":[false,[\"$\",\"$L2\",null,{\"parallelRouterKey\":\"children\",\"error\":\"$31\",\"errorStyles\":\"$6:0:props:errorStyles\",\"errorScripts\":\"$6:0:props:errorScripts\",\"template\":[\"$\",\"$L3\",null,{}],\"templateStyles\":\"$undefined\",\"templateScripts\":\"$undefined\",\"notFound\":\"$undefined\",\"forbidden\":\"$undefined\",\"unauthorized\":\"$undefined\"}],[\"$\",\"$L33\",null,{\"children\":[\"$\",\"$7\",null,{\"children\":[\"$\",\"$L2\",null,{\"parallelRouterKey\":\"chat\",\"error\":\"$31\",\""])</script><script>self.__next_f.push([1,"errorStyles\":\"$6:0:props:errorStyles\",\"errorScripts\":\"$6:0:props:errorScripts\",\"template\":[\"$\",\"$L3\",null,{}],\"templateStyles\":\"$undefined\",\"templateScripts\":\"$undefined\",\"notFound\":\"$undefined\",\"forbidden\":\"$undefined\",\"unauthorized\":\"$undefined\"}]}]}]]}],false,[\"$\",\"$L34\",null,{}]]\n5:[\"$\",\"$L35\",null,{\"data\":{\"homepage:theme\":\"default\"},\"children\":[\"$\",\"$L36\",null,{\"children\":[[\"$\",\"$7\",null,{\"fallback\":null,\"children\":\"$L37\"}],[\"$\",\"$L38\",null,{}],[\"$\",\"$L39\",null,{}],[\"$\",\"$L2\",null,{\"parallelRouterKey\":\"children\",\"error\":\"$undefined\",\"errorStyles\":\"$undefined\",\"errorScripts\":\"$undefined\",\"template\":[\"$\",\"$L3\",null,{}],\"templateStyles\":\"$undefined\",\"templateScripts\":\"$undefined\",\"notFound\":\"$undefined\",\"forbidden\":\"$undefined\",\"unauthorized\":\"$undefined\"}]]}]}]\n24:[\"$\",\"$L3a\",null,{\"children\":[\"$\",\"$L3b\",null,{\"registry\":{\"getDeploymentLogs\":{\"path\":\"/chat/api/chat/v3/deployments/logs\",\"method\":\"GET\"},\"getDeploymentErrors\":{\"path\":\"/chat/api/chat/v3/deployments/errors\",\"method\":\"GET\"}},\"children\":\"$L3c\"}]}]\n3c:[\"$\",\"$L3d\",null,{\"serverData\":{\"chat\":null,\"scoped\":null,\"root\":null},\"children\":[\"$\",\"$L3e\",null,{\"children\":[\"$\",\"$L3f\",null,{\"expectUser\":false,\"children\":[\"$\",\"$L40\",null,{\"children\":[[\"$\",\"$L41\",null,{\"children\":[\"$\",\"$L42\",null,{\"value\":false,\"children\":[\"$\",\"$L43\",null,{\"promise\":\"$@44\",\"middlewareFlags\":[\"nl\"],\"children\":[\"$\",\"$L45\",null,{\"children\":[\"$\",\"$L46\",null,{\"children\":[[\"$\",\"$L47\",null,{}],[\"$\",\"$L48\",null,{}],[\"$\",\"$L2\",null,{\"parallelRouterKey\":\"children\",\"error\":\"$undefined\",\"errorStyles\":\"$undefined\",\"errorScripts\":\"$undefined\",\"template\":[\"$\",\"$L3\",null,{}],\"templateStyles\":\"$undefined\",\"templateScripts\":\"$undefined\",\"notFound\":\"$undefined\",\"forbidden\":\"$undefined\",\"unauthorized\":\"$undefined\"}],[\"$\",\"$L49\",null,{\"children\":[[\"$\",\"$L4a\",null,{}],[\"$\",\"$L4b\",null,{}]]}]]}]}]}]}]}],[\"$\",\"$7\",null,{\"fallback\":null,\"children\":[\"$\",\"$L4c\",null,{\"userPromise\":\"$@4d\"}]}]]}]}]}]}]\n37:null\n44:{\"ep\":false,\"nl\":true,\"cf\":false,\"fi\":true,\"dc\":false,\"fia\":true,\"afre\":false,\"pe\":true,\"mi\":true,"])</script><script>self.__next_f.push([1,"\"ml\":false,\"ppe\":true,\"pu\":false,\"lcw\":false,\"tme\":false,\"ocd\":true,\"scp\":false,\"tp\":true,\"gs\":true,\"mpe\":false,\"sqle\":true,\"mme\":false,\"ape\":false,\"aicp\":true,\"es\":true,\"ake\":false,\"aie\":true,\"cpe\":true,\"tbb\":false,\"ve\":false,\"dm\":false,\"oivs\":false}\n19:[[\"$\",\"meta\",\"0\",{\"charSet\":\"utf-8\"}],[\"$\",\"meta\",\"1\",{\"name\":\"viewport\",\"content\":\"width=device-width, initial-scale=1, maximum-scale=1\"}]]\ne:null\n4d:\"$undefined\"\n"])</script><script>self.__next_f.push([1,"11:{\"metadata\":[[\"$\",\"title\",\"0\",{\"children\":\"React frontend code – v0 by Vercel\"}],[\"$\",\"meta\",\"1\",{\"name\":\"description\",\"content\":\"I am building a task management web app using React.js (frontend), Node.js (backend), and MongoDB (database). I want you to generate optimized, scalable,...\"}],[\"$\",\"link\",\"2\",{\"rel\":\"manifest\",\"href\":\"/manifest.json\",\"crossOrigin\":\"$undefined\"}],[\"$\",\"meta\",\"3\",{\"name\":\"robots\",\"content\":\"noindex\"}],[\"$\",\"link\",\"4\",{\"rel\":\"canonical\",\"href\":\"/chat/react-frontend-code-xwMbPfe8hWt\"}],[\"$\",\"meta\",\"5\",{\"property\":\"og:title\",\"content\":\"React frontend code – v0 by Vercel\"}],[\"$\",\"meta\",\"6\",{\"property\":\"og:description\",\"content\":\"I am building a task management web app using React.js (frontend), Node.js (backend), and MongoDB (database). I want you to generate optimized, scalable,...\"}],[\"$\",\"meta\",\"7\",{\"property\":\"og:image\",\"content\":\"https://v0chat.vercel.sh/chat/api/og/xwMbPfe8hWt\"}],[\"$\",\"meta\",\"8\",{\"name\":\"twitter:card\",\"content\":\"summary_large_image\"}],[\"$\",\"meta\",\"9\",{\"name\":\"twitter:title\",\"content\":\"React frontend code – v0 by Vercel\"}],[\"$\",\"meta\",\"10\",{\"name\":\"twitter:description\",\"content\":\"I am building a task management web app using React.js (frontend), Node.js (backend), and MongoDB (database). I want you to generate optimized, scalable,...\"}],[\"$\",\"meta\",\"11\",{\"name\":\"twitter:image\",\"content\":\"https://v0chat.vercel.sh/chat/api/og/xwMbPfe8hWt\"}],[\"$\",\"link\",\"12\",{\"rel\":\"icon\",\"href\":\"/assets/icon-light-32x32.png\",\"media\":\"(prefers-color-scheme: light)\",\"sizes\":\"32x32\",\"type\":\"image/png\"}],[\"$\",\"link\",\"13\",{\"rel\":\"icon\",\"href\":\"/assets/icon-dark-32x32.png\",\"media\":\"(prefers-color-scheme: dark)\",\"sizes\":\"32x32\",\"type\":\"image/png\"}],[\"$\",\"link\",\"14\",{\"rel\":\"icon\",\"href\":\"/assets/icon.svg\",\"sizes\":\"32x32\",\"type\":\"image/svg+xml\"}],[\"$\",\"link\",\"15\",{\"rel\":\"apple-touch-icon\",\"href\":\"/assets/apple-icon.png\",\"type\":\"image/png\"}]],\"error\":null,\"digest\":\"$undefined\"}\n1e:{\"metadata\":\"$11:metadata\",\"error\":null,\"digest\":\"$undefined\"}\n"])</script><title>React frontend code – v0 by Vercel</title><meta name="description" content="I am building a task management web app using React.js (frontend), Node.js (backend), and MongoDB (database). I want you to generate optimized, scalable,..."/><link rel="manifest" href="/manifest.json"/><meta name="robots" content="noindex"/><link rel="canonical" href="/chat/react-frontend-code-xwMbPfe8hWt"/><meta property="og:title" content="React frontend code – v0 by Vercel"/><meta property="og:description" content="I am building a task management web app using React.js (frontend), Node.js (backend), and MongoDB (database). I want you to generate optimized, scalable,..."/><meta property="og:image" content="https://v0chat.vercel.sh/chat/api/og/xwMbPfe8hWt"/><meta name="twitter:card" content="summary_large_image"/><meta name="twitter:title" content="React frontend code – v0 by Vercel"/><meta name="twitter:description" content="I am building a task management web app using React.js (frontend), Node.js (backend), and MongoDB (database). I want you to generate optimized, scalable,..."/><meta name="twitter:image" content="https://v0chat.vercel.sh/chat/api/og/xwMbPfe8hWt"/><link rel="icon" href="/assets/icon-light-32x32.png" media="(prefers-color-scheme: light)" sizes="32x32" type="image/png"/><link rel="icon" href="/assets/icon-dark-32x32.png" media="(prefers-color-scheme: dark)" sizes="32x32" type="image/png"/><link rel="icon" href="/assets/icon.svg" sizes="32x32" type="image/svg+xml"/><link rel="apple-touch-icon" href="/assets/apple-icon.png" type="image/png"/><script>document.querySelectorAll('body link[rel="icon"], body link[rel="apple-touch-icon"]').forEach(el => document.head.appendChild(el))</script><div hidden id="S:2"></div><script>$RC=function(b,c,e){c=document.getElementById(c);c.parentNode.removeChild(c);var a=document.getElementById(b);if(a){b=a.previousSibling;if(e)b.data="$!",a.setAttribute("data-dgst",e);else{e=b.parentNode;a=b.nextSibling;var f=0;do{if(a&&8===a.nodeType){var d=a.data;if("/$"===d)if(0===f)break;else f--;else"$"!==d&&"$?"!==d&&"$!"!==d||f++}d=a.nextSibling;e.removeChild(a);a=d}while(a);for(;c.firstChild;)e.insertBefore(c.firstChild,a);b.data="$"}b._reactRetry&&b._reactRetry()}};$RC("B:2","S:2")</script><div hidden id="S:1"></div><script>$RC("B:1","S:1")</script><script>self.__next_f.push([1,"4e:I[58364,[\"86365\",\"static/chunks/dd702a79-b6c7661c8a838128.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"38058\",\"static/chunks/b7a1a8c0-72ee0f814ed13c32.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"79660\",\"static/chunks/8d598023-196a80608fdd6eee.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"73535\",\"static/chunks/73535-103b6060cf97ab6d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"51679\",\"static/chunks/51679-08aafdbd5acc6aa3.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"8557\",\"static/chunks/8557-c2a5e618ccff242d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"3357\",\"static/chunks/3357-a437bd9e1280840c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"56497\",\"static/chunks/56497-9a15f5e7fc5e058e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69053\",\"static/chunks/69053-2a18fec337af0c69.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69790\",\"static/chunks/69790-06e2618fe911421e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69241\",\"static/chunks/69241-23922ef52da5b76b.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"19199\",\"static/chunks/19199-c732e5ac6f8e2141.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"43207\",\"static/chunks/43207-f2d4fa16ab44d090.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"13280\",\"static/chunks/13280-b6a1193602500b08.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"7921\",\"static/chunks/7921-73dfed29e8c02165.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40626\",\"static/chunks/40626-7aa1c4c6db827c91.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"42626\",\"static/chunks/42626-46c65f92250a4525.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"76442\",\"static/chunks/76442-21e0af1e9dcba237.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93590\",\"static/chunks/93590-52e31b4cbcf9e82d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93307\",\"static/chunks/93307-40c92ad52815d0a2.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"6905\",\"static/chunks/6905-cb9cabc11de7c1e0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"11139\",\"static/chunks/11139-f96710a45351a03f.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20514\",\"static/chunks/20514-f3407bf5b06a848a.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"47682\",\"static/chunks/47682-0d778b613e9847fb.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"53320\",\"static/chunks/53320-a7193a327838943e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"41599\",\"static/chunks/41599-7a7f7cf9c09e7ac7.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20144\",\"static/chunks/20144-63eeced46f10ea05.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"29753\",\"static/chunks/29753-628fdf7767ca547c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"68223\",\"static/chunks/68223-f371eb2e74f42a9c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"67343\",\"static/chunks/67343-0a8a43eba0b25445.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"32349\",\"static/chunks/32349-21720b7e60216f19.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"26877\",\"static/chunks/26877-7997e28f400c72fa.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"48223\",\"static/chunks/48223-7ea74e070987a567.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40390\",\"static/chunks/40390-c9bfaa0de0b72f67.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"17077\",\"static/chunks/17077-6a46ded038f54266.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"33871\",\"static/chunks/33871-ce5211be2bca40e6.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20897\",\"static/chunks/20897-32692800f1878a20.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"60114\",\"static/chunks/60114-1dd8b378f278c46d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"51742\",\"static/chunks/app/chat/%5Bvariants%5D/(dynamic-root)/(home)/(chat)/%40chat/id/page-6849e2289adc65f4.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\"],\"ChatPromiseContextProvider\"]\n"])</script><script>self.__next_f.push([1,"8e:I[56794,[\"86365\",\"static/chunks/dd702a79-b6c7661c8a838128.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"38058\",\"static/chunks/b7a1a8c0-72ee0f814ed13c32.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"79660\",\"static/chunks/8d598023-196a80608fdd6eee.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"73535\",\"static/chunks/73535-103b6060cf97ab6d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"51679\",\"static/chunks/51679-08aafdbd5acc6aa3.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"8557\",\"static/chunks/8557-c2a5e618ccff242d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"3357\",\"static/chunks/3357-a437bd9e1280840c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"56497\",\"static/chunks/56497-9a15f5e7fc5e058e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69053\",\"static/chunks/69053-2a18fec337af0c69.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69790\",\"static/chunks/69790-06e2618fe911421e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69241\",\"static/chunks/69241-23922ef52da5b76b.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"19199\",\"static/chunks/19199-c732e5ac6f8e2141.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"43207\",\"static/chunks/43207-f2d4fa16ab44d090.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"13280\",\"static/chunks/13280-b6a1193602500b08.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"7921\",\"static/chunks/7921-73dfed29e8c02165.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40626\",\"static/chunks/40626-7aa1c4c6db827c91.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"42626\",\"static/chunks/42626-46c65f92250a4525.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"76442\",\"static/chunks/76442-21e0af1e9dcba237.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93590\",\"static/chunks/93590-52e31b4cbcf9e82d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93307\",\"static/chunks/93307-40c92ad52815d0a2.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"6905\",\"static/chunks/6905-cb9cabc11de7c1e0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"11139\",\"static/chunks/11139-f96710a45351a03f.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20514\",\"static/chunks/20514-f3407bf5b06a848a.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"47682\",\"static/chunks/47682-0d778b613e9847fb.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"53320\",\"static/chunks/53320-a7193a327838943e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"41599\",\"static/chunks/41599-7a7f7cf9c09e7ac7.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20144\",\"static/chunks/20144-63eeced46f10ea05.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"29753\",\"static/chunks/29753-628fdf7767ca547c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"68223\",\"static/chunks/68223-f371eb2e74f42a9c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"67343\",\"static/chunks/67343-0a8a43eba0b25445.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"32349\",\"static/chunks/32349-21720b7e60216f19.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"26877\",\"static/chunks/26877-7997e28f400c72fa.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"48223\",\"static/chunks/48223-7ea74e070987a567.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40390\",\"static/chunks/40390-c9bfaa0de0b72f67.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"17077\",\"static/chunks/17077-6a46ded038f54266.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"33871\",\"static/chunks/33871-ce5211be2bca40e6.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20897\",\"static/chunks/20897-32692800f1878a20.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"60114\",\"static/chunks/60114-1dd8b378f278c46d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"51742\",\"static/chunks/app/chat/%5Bvariants%5D/(dynamic-root)/(home)/(chat)/%40chat/id/page-6849e2289adc65f4.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\"],\"SharedByPill\"]\n"])</script><script>self.__next_f.push([1,"90:I[66683,[\"86365\",\"static/chunks/dd702a79-b6c7661c8a838128.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"38058\",\"static/chunks/b7a1a8c0-72ee0f814ed13c32.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"79660\",\"static/chunks/8d598023-196a80608fdd6eee.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"73535\",\"static/chunks/73535-103b6060cf97ab6d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"51679\",\"static/chunks/51679-08aafdbd5acc6aa3.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"8557\",\"static/chunks/8557-c2a5e618ccff242d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"3357\",\"static/chunks/3357-a437bd9e1280840c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"56497\",\"static/chunks/56497-9a15f5e7fc5e058e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69053\",\"static/chunks/69053-2a18fec337af0c69.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69790\",\"static/chunks/69790-06e2618fe911421e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69241\",\"static/chunks/69241-23922ef52da5b76b.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"19199\",\"static/chunks/19199-c732e5ac6f8e2141.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"43207\",\"static/chunks/43207-f2d4fa16ab44d090.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"13280\",\"static/chunks/13280-b6a1193602500b08.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"7921\",\"static/chunks/7921-73dfed29e8c02165.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40626\",\"static/chunks/40626-7aa1c4c6db827c91.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"42626\",\"static/chunks/42626-46c65f92250a4525.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"76442\",\"static/chunks/76442-21e0af1e9dcba237.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93590\",\"static/chunks/93590-52e31b4cbcf9e82d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93307\",\"static/chunks/93307-40c92ad52815d0a2.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"6905\",\"static/chunks/6905-cb9cabc11de7c1e0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"11139\",\"static/chunks/11139-f96710a45351a03f.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20514\",\"static/chunks/20514-f3407bf5b06a848a.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"47682\",\"static/chunks/47682-0d778b613e9847fb.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"53320\",\"static/chunks/53320-a7193a327838943e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"41599\",\"static/chunks/41599-7a7f7cf9c09e7ac7.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20144\",\"static/chunks/20144-63eeced46f10ea05.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"29753\",\"static/chunks/29753-628fdf7767ca547c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"68223\",\"static/chunks/68223-f371eb2e74f42a9c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"67343\",\"static/chunks/67343-0a8a43eba0b25445.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"32349\",\"static/chunks/32349-21720b7e60216f19.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"26877\",\"static/chunks/26877-7997e28f400c72fa.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"48223\",\"static/chunks/48223-7ea74e070987a567.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40390\",\"static/chunks/40390-c9bfaa0de0b72f67.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"17077\",\"static/chunks/17077-6a46ded038f54266.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"33871\",\"static/chunks/33871-ce5211be2bca40e6.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20897\",\"static/chunks/20897-32692800f1878a20.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"60114\",\"static/chunks/60114-1dd8b378f278c46d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"51742\",\"static/chunks/app/chat/%5Bvariants%5D/(dynamic-root)/(home)/(chat)/%40chat/id/page-6849e2289adc65f4.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\"],\"KeepClientOnUpToDateSlugPath\"]\n"])</script><script>self.__next_f.push([1,"55:[]\n56:[[\"b_ziXtDRY6T4u\",null],[\"b_DsBjUrm49AS\",null],[\"b_licofAqb22B\",null],[\"b_dQFv16063iB\",null],[\"b_aWSIXSqhU7z\",null],[\"b_dw1WvYsMPad\",null],[\"b_TaCaAzHRcKS\",null],[\"b_Fe77xFVKTs4\",null],[\"b_4IaEDoUN54E\",null],[\"b_vgL82lhdt0R\",null],[\"b_r7kaWysF38W\",null],[\"b_LVFWZIx1NAn\",null],[\"b_Yz55zBYhKP2\",null],[\"b_EhgUWUE9ELV\",null],[\"b_56bCXte5aZW\",null],[\"b_JDRupuXoNDJ\",null],[\"b_HvByXziVBAQ\",null],[\"b_EiyqaDkSPt5\",null],[\"b_wa7sA2Uqpfy\",null],[\"b_4Ip545uDOCJ\",null],[\"b_tkUnrsg5LdA\",null],[\"b_RMVpqoDSbDW\",null],[\"b_ZjGn6OWeTM5\",null],[\"b_xuNsm3mxjhy\",null],[\"b_r20rrt0by07\",null],[\"b_TR4z7KynM4h\",null]]\n57:[[\"b_ziXtDRY6T4u\",{\"templateVersionId\":null,\"templateCanonId\":null}],[\"b_DsBjUrm49AS\",{\"templateVersionId\":null,\"templateCanonId\":null}],[\"b_licofAqb22B\",{\"templateVersionId\":null,\"templateCanonId\":null}],[\"b_dQFv16063iB\",{\"templateVersionId\":null,\"templateCanonId\":null}],[\"b_aWSIXSqhU7z\",{\"templateVersionId\":null,\"templateCanonId\":null}],[\"b_dw1WvYsMPad\",{\"templateVersionId\":null,\"templateCanonId\":null}],[\"b_TaCaAzHRcKS\",{\"templateVersionId\":null,\"templateCanonId\":null}],[\"b_Fe77xFVKTs4\",{\"templateVersionId\":null,\"templateCanonId\":null}],[\"b_4IaEDoUN54E\",{\"templateVersionId\":null,\"templateCanonId\":null}],[\"b_vgL82lhdt0R\",{\"templateVersionId\":null,\"templateCanonId\":null}],[\"b_r7kaWysF38W\",{\"templateVersionId\":null,\"templateCanonId\":null}],[\"b_LVFWZIx1NAn\",{\"templateVersionId\":null,\"templateCanonId\":null}],[\"b_Yz55zBYhKP2\",{\"templateVersionId\":null,\"templateCanonId\":null}],[\"b_EhgUWUE9ELV\",{\"templateVersionId\":null,\"templateCanonId\":null}],[\"b_56bCXte5aZW\",{\"templateVersionId\":null,\"templateCanonId\":null}],[\"b_JDRupuXoNDJ\",{\"templateVersionId\":null,\"templateCanonId\":null}],[\"b_HvByXziVBAQ\",{\"templateVersionId\":null,\"templateCanonId\":null}],[\"b_EiyqaDkSPt5\",{\"templateVersionId\":null,\"templateCanonId\":null}],[\"b_wa7sA2Uqpfy\",{\"templateVersionId\":null,\"templateCanonId\":null}],[\"b_4Ip545uDOCJ\",{\"templateVersionId\":null,\"templateCanonId\":null}],[\"b_tkUnrsg5LdA\",{\"templateVersionId\":null,\"templateCanonId\":null}],[\"b_RMV"])</script><script>self.__next_f.push([1,"pqoDSbDW\",{\"templateVersionId\":null,\"templateCanonId\":null}],[\"b_ZjGn6OWeTM5\",{\"templateVersionId\":null,\"templateCanonId\":null}],[\"b_xuNsm3mxjhy\",{\"templateVersionId\":null,\"templateCanonId\":null}],[\"b_r20rrt0by07\",{\"templateVersionId\":null,\"templateCanonId\":null}],[\"b_TR4z7KynM4h\",{\"templateVersionId\":null,\"templateCanonId\":null}]]\n58:[[\"b_ziXtDRY6T4u\",\"$D2025-03-12T07:42:38.101Z\"],[\"b_DsBjUrm49AS\",\"$D2025-03-12T07:50:36.699Z\"],[\"b_licofAqb22B\",\"$D2025-03-16T04:50:55.274Z\"],[\"b_dQFv16063iB\",\"$D2025-03-16T04:52:11.837Z\"],[\"b_aWSIXSqhU7z\",\"$D2025-03-16T04:52:20.259Z\"],[\"b_dw1WvYsMPad\",\"$D2025-03-16T04:52:29.874Z\"],[\"b_TaCaAzHRcKS\",\"$D2025-03-16T04:52:38.349Z\"],[\"b_Fe77xFVKTs4\",\"$D2025-03-16T04:52:41.590Z\"],[\"b_4IaEDoUN54E\",\"$D2025-03-16T04:52:45.687Z\"],[\"b_vgL82lhdt0R\",\"$D2025-03-16T04:52:54.782Z\"],[\"b_r7kaWysF38W\",\"$D2025-03-16T04:52:56.783Z\"],[\"b_LVFWZIx1NAn\",\"$D2025-03-16T04:53:04.501Z\"],[\"b_Yz55zBYhKP2\",\"$D2025-03-16T04:53:26.976Z\"],[\"b_EhgUWUE9ELV\",\"$D2025-03-16T04:54:09.441Z\"],[\"b_56bCXte5aZW\",\"$D2025-03-16T04:54:09.607Z\"],[\"b_JDRupuXoNDJ\",\"$D2025-03-16T04:54:52.186Z\"],[\"b_HvByXziVBAQ\",\"$D2025-03-16T04:55:14.667Z\"],[\"b_EiyqaDkSPt5\",\"$D2025-03-16T04:55:36.178Z\"],[\"b_wa7sA2Uqpfy\",\"$D2025-03-16T04:56:04.702Z\"],[\"b_4Ip545uDOCJ\",\"$D2025-03-16T04:56:05.558Z\"],[\"b_tkUnrsg5LdA\",\"$D2025-03-16T04:56:12.411Z\"],[\"b_RMVpqoDSbDW\",\"$D2025-03-16T04:56:20.751Z\"],[\"b_ZjGn6OWeTM5\",\"$D2025-03-16T04:56:35.805Z\"],[\"b_xuNsm3mxjhy\",\"$D2025-03-16T04:56:43.092Z\"],[\"b_r20rrt0by07\",\"$D2025-03-16T04:56:45.275Z\"],[\"b_TR4z7KynM4h\",\"$D2025-03-16T04:56:50.164Z\"]]\n59:T66f,I am building a task management web app using React.js (frontend), Node.js (backend), and MongoDB (database). I want you to generate optimized, scalable, and secure code for the following feature: [1. Task Assignment and Prioritization* Assign tasks to specific team members.* Set priority levels (High, Medium, Low) for better task management.* Display tasks in a structured Kanban board or list view.2. Deadline Tracking and Notifications* Set deadlines for tasks and receive a"])</script><script>self.__next_f.push([1,"utomated reminders.* Send email or push notifications when a deadline is near.* Display overdue tasks in a separate section for better visibility.3. Progress Reporting* Track task completion rates and pending tasks.* Generate visual reports (bar charts, pie charts) for team performance.* Export reports in CSV or PDF format for analysis.4. Role-Based Permissions* Control user access levels by assigning roles:   * Admin: Full control over tasks and user management.   * Editor: Can create and edit tasks but not manage users.   * Viewer: Can only view tasks without making changes.* Secure role management using JWT authentication.5. Real-Time Collaboration* Allow users to comment on tasks and tag teammates.* Enable file sharing for better document collaboration.* Use WebSockets (Socket.io) for real-time updates and notifications.6. Secure Authentication and Authorization* Use JWT-based authentication to verify users securely.* Implement OAuth login (Google, GitHub) for easy access.* Encrypt sensitive user data using bcrypt.]. The code should follow best practices and include necessary comments for better understanding.\" Give me the frontend first in react5a:T18da3,"])</script><script>self.__next_f.push([1,"[V0_FILE]typescriptreact:file=\"app/page.tsx\"\nimport { redirect } from \"next/navigation\"\nimport { DashboardHeader } from \"@/components/dashboard/dashboard-header\"\nimport { DashboardShell } from \"@/components/dashboard/dashboard-shell\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Overview } from \"@/components/dashboard/overview\"\nimport { RecentTasks } from \"@/components/dashboard/recent-tasks\"\nimport { TeamMembers } from \"@/components/dashboard/team-members\"\nimport { getUserSession } from \"@/lib/auth\"\n\nexport default async function DashboardPage() {\n  const user = await getUserSession()\n\n  if (!user) {\n    redirect(\"/login\")\n  }\n\n  return (\n    \u003cDashboardShell\u003e\n      \u003cDashboardHeader heading=\"Dashboard\" text=\"Welcome back! Here's an overview of your team's tasks.\"\u003e\n        \u003cButton\u003e\n          \u003ca href=\"/tasks/new\"\u003eCreate Task\u003c/a\u003e\n        \u003c/Button\u003e\n      \u003c/DashboardHeader\u003e\n      \u003cdiv className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\"\u003e\n        \u003cCard\u003e\n          \u003cCardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\"\u003e\n            \u003cCardTitle className=\"text-sm font-medium\"\u003eTotal Tasks\u003c/CardTitle\u003e\n            \u003csvg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2\"\n              className=\"h-4 w-4 text-muted-foreground\"\n            \u003e\n              \u003cpath d=\"M12 2v20M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6\" /\u003e\n            \u003c/svg\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent\u003e\n            \u003cdiv className=\"text-2xl font-bold\"\u003e24\u003c/div\u003e\n            \u003cp className=\"text-xs text-muted-foreground\"\u003e+10% from last month\u003c/p\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n        \u003cCard\u003e\n          \u003cCardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\"\u003e\n            \u003cCardTitle className=\"text-sm font-medium\"\u003eCompleted\u003c/CardTitle\u003e\n            \u003csvg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2\"\n              className=\"h-4 w-4 text-muted-foreground\"\n            \u003e\n              \u003cpath d=\"M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2\" /\u003e\n              \u003ccircle cx=\"9\" cy=\"7\" r=\"4\" /\u003e\n              \u003cpath d=\"M22 21v-2a4 4 0 0 0-3-3.87M16 3.13a4 4 0 0 1 0 7.75\" /\u003e\n            \u003c/svg\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent\u003e\n            \u003cdiv className=\"text-2xl font-bold\"\u003e16\u003c/div\u003e\n            \u003cp className=\"text-xs text-muted-foreground\"\u003e+12% from last month\u003c/p\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n        \u003cCard\u003e\n          \u003cCardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\"\u003e\n            \u003cCardTitle className=\"text-sm font-medium\"\u003eIn Progress\u003c/CardTitle\u003e\n            \u003csvg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2\"\n              className=\"h-4 w-4 text-muted-foreground\"\n            \u003e\n              \u003crect width=\"20\" height=\"14\" x=\"2\" y=\"5\" rx=\"2\" /\u003e\n              \u003cpath d=\"M2 10h20\" /\u003e\n            \u003c/svg\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent\u003e\n            \u003cdiv className=\"text-2xl font-bold\"\u003e6\u003c/div\u003e\n            \u003cp className=\"text-xs text-muted-foreground\"\u003e-2% from last month\u003c/p\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n        \u003cCard\u003e\n          \u003cCardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\"\u003e\n            \u003cCardTitle className=\"text-sm font-medium\"\u003eOverdue\u003c/CardTitle\u003e\n            \u003csvg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2\"\n              className=\"h-4 w-4 text-muted-foreground\"\n            \u003e\n              \u003cpath d=\"M22 12h-4l-3 9L9 3l-3 9H2\" /\u003e\n            \u003c/svg\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent\u003e\n            \u003cdiv className=\"text-2xl font-bold\"\u003e2\u003c/div\u003e\n            \u003cp className=\"text-xs text-muted-foreground\"\u003e-4% from last month\u003c/p\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n      \u003c/div\u003e\n      \u003cdiv className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-7\"\u003e\n        \u003cCard className=\"col-span-4\"\u003e\n          \u003cCardHeader\u003e\n            \u003cCardTitle\u003eTask Completion Overview\u003c/CardTitle\u003e\n            \u003cCardDescription\u003eTask completion rate over the last 30 days\u003c/CardDescription\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent className=\"pl-2\"\u003e\n            \u003cOverview /\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n        \u003cCard className=\"col-span-3\"\u003e\n          \u003cCardHeader\u003e\n            \u003cCardTitle\u003eRecent Tasks\u003c/CardTitle\u003e\n            \u003cCardDescription\u003eRecently created or updated tasks\u003c/CardDescription\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent\u003e\n            \u003cRecentTasks /\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n      \u003c/div\u003e\n      \u003cdiv className=\"grid gap-4 md:grid-cols-1\"\u003e\n        \u003cCard\u003e\n          \u003cCardHeader\u003e\n            \u003cCardTitle\u003eTeam Members\u003c/CardTitle\u003e\n            \u003cCardDescription\u003eManage your team and their task assignments\u003c/CardDescription\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent\u003e\n            \u003cTeamMembers /\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n      \u003c/div\u003e\n    \u003c/DashboardShell\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"app/tasks/page.tsx\"\nimport { redirect } from \"next/navigation\"\nimport { DashboardHeader } from \"@/components/dashboard/dashboard-header\"\nimport { DashboardShell } from \"@/components/dashboard/dashboard-shell\"\nimport { Button } from \"@/components/ui/button\"\nimport { KanbanBoard } from \"@/components/tasks/kanban-board\"\nimport { TaskFilters } from \"@/components/tasks/task-filters\"\nimport { getUserSession } from \"@/lib/auth\"\n\nexport default async function TasksPage() {\n  const user = await getUserSession()\n\n  if (!user) {\n    redirect(\"/login\")\n  }\n\n  return (\n    \u003cDashboardShell\u003e\n      \u003cDashboardHeader heading=\"Tasks\" text=\"Manage and organize your team's tasks\"\u003e\n        \u003cButton\u003e\n          \u003ca href=\"/tasks/new\"\u003eCreate Task\u003c/a\u003e\n        \u003c/Button\u003e\n      \u003c/DashboardHeader\u003e\n      \u003cdiv className=\"space-y-4\"\u003e\n        \u003cTaskFilters /\u003e\n        \u003cKanbanBoard /\u003e\n      \u003c/div\u003e\n    \u003c/DashboardShell\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"app/tasks/new/page.tsx\"\nimport { redirect } from \"next/navigation\"\nimport { DashboardHeader } from \"@/components/dashboard/dashboard-header\"\nimport { DashboardShell } from \"@/components/dashboard/dashboard-shell\"\nimport { TaskForm } from \"@/components/tasks/task-form\"\nimport { getUserSession } from \"@/lib/auth\"\n\nexport default async function NewTaskPage() {\n  const user = await getUserSession()\n\n  if (!user) {\n    redirect(\"/login\")\n  }\n\n  // Check if user has permission to create tasks\n  if (user.role === \"viewer\") {\n    redirect(\"/dashboard\")\n  }\n\n  return (\n    \u003cDashboardShell\u003e\n      \u003cDashboardHeader heading=\"Create New Task\" text=\"Add a new task and assign it to team members\" /\u003e\n      \u003cdiv className=\"grid gap-4\"\u003e\n        \u003cTaskForm /\u003e\n      \u003c/div\u003e\n    \u003c/DashboardShell\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"app/tasks/[id]/page.tsx\"\nimport { redirect } from \"next/navigation\"\nimport { DashboardHeader } from \"@/components/dashboard/dashboard-header\"\nimport { DashboardShell } from \"@/components/dashboard/dashboard-shell\"\nimport { TaskDetails } from \"@/components/tasks/task-details\"\nimport { TaskComments } from \"@/components/tasks/task-comments\"\nimport { TaskAttachments } from \"@/components/tasks/task-attachments\"\nimport { getUserSession } from \"@/lib/auth\"\n\nexport default async function TaskDetailsPage({ params }: { params: { id: string } }) {\n  const user = await getUserSession()\n\n  if (!user) {\n    redirect(\"/login\")\n  }\n\n  return (\n    \u003cDashboardShell\u003e\n      \u003cDashboardHeader heading=\"Task Details\" text=\"View and manage task details\" /\u003e\n      \u003cdiv className=\"grid gap-6\"\u003e\n        \u003cTaskDetails id={params.id} /\u003e\n        \u003cdiv className=\"grid gap-4 md:grid-cols-2\"\u003e\n          \u003cTaskComments id={params.id} /\u003e\n          \u003cTaskAttachments id={params.id} /\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n    \u003c/DashboardShell\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"app/reports/page.tsx\"\nimport { redirect } from \"next/navigation\"\nimport { DashboardHeader } from \"@/components/dashboard/dashboard-header\"\nimport { DashboardShell } from \"@/components/dashboard/dashboard-shell\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { TaskCompletionChart } from \"@/components/reports/task-completion-chart\"\nimport { TeamPerformanceChart } from \"@/components/reports/team-performance-chart\"\nimport { PriorityDistributionChart } from \"@/components/reports/priority-distribution-chart\"\nimport { getUserSession } from \"@/lib/auth\"\n\nexport default async function ReportsPage() {\n  const user = await getUserSession()\n\n  if (!user) {\n    redirect(\"/login\")\n  }\n\n  return (\n    \u003cDashboardShell\u003e\n      \u003cDashboardHeader heading=\"Reports\" text=\"Analyze task performance and team productivity\"\u003e\n        \u003cdiv className=\"flex space-x-2\"\u003e\n          \u003cButton variant=\"outline\"\u003eExport CSV\u003c/Button\u003e\n          \u003cButton variant=\"outline\"\u003eExport PDF\u003c/Button\u003e\n        \u003c/div\u003e\n      \u003c/DashboardHeader\u003e\n      \u003cdiv className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-2\"\u003e\n        \u003cCard className=\"col-span-1\"\u003e\n          \u003cCardHeader\u003e\n            \u003cCardTitle\u003eTask Completion Rate\u003c/CardTitle\u003e\n            \u003cCardDescription\u003ePercentage of tasks completed on time\u003c/CardDescription\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent className=\"h-80\"\u003e\n            \u003cTaskCompletionChart /\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n        \u003cCard className=\"col-span-1\"\u003e\n          \u003cCardHeader\u003e\n            \u003cCardTitle\u003eTeam Performance\u003c/CardTitle\u003e\n            \u003cCardDescription\u003eTasks completed by team members\u003c/CardDescription\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent className=\"h-80\"\u003e\n            \u003cTeamPerformanceChart /\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n        \u003cCard className=\"col-span-2\"\u003e\n          \u003cCardHeader\u003e\n            \u003cCardTitle\u003eTask Priority Distribution\u003c/CardTitle\u003e\n            \u003cCardDescription\u003eDistribution of tasks by priority level\u003c/CardDescription\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent className=\"h-80\"\u003e\n            \u003cPriorityDistributionChart /\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n      \u003c/div\u003e\n    \u003c/DashboardShell\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"app/settings/page.tsx\"\nimport { redirect } from \"next/navigation\"\nimport { DashboardHeader } from \"@/components/dashboard/dashboard-header\"\nimport { DashboardShell } from \"@/components/dashboard/dashboard-shell\"\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\nimport { ProfileSettings } from \"@/components/settings/profile-settings\"\nimport { NotificationSettings } from \"@/components/settings/notification-settings\"\nimport { SecuritySettings } from \"@/components/settings/security-settings\"\nimport { getUserSession } from \"@/lib/auth\"\n\nexport default async function SettingsPage() {\n  const user = await getUserSession()\n\n  if (!user) {\n    redirect(\"/login\")\n  }\n\n  return (\n    \u003cDashboardShell\u003e\n      \u003cDashboardHeader heading=\"Settings\" text=\"Manage your account settings and preferences\" /\u003e\n      \u003cTabs defaultValue=\"profile\" className=\"space-y-4\"\u003e\n        \u003cTabsList\u003e\n          \u003cTabsTrigger value=\"profile\"\u003eProfile\u003c/TabsTrigger\u003e\n          \u003cTabsTrigger value=\"notifications\"\u003eNotifications\u003c/TabsTrigger\u003e\n          \u003cTabsTrigger value=\"security\"\u003eSecurity\u003c/TabsTrigger\u003e\n        \u003c/TabsList\u003e\n        \u003cTabsContent value=\"profile\" className=\"space-y-4\"\u003e\n          \u003cProfileSettings user={user} /\u003e\n        \u003c/TabsContent\u003e\n        \u003cTabsContent value=\"notifications\" className=\"space-y-4\"\u003e\n          \u003cNotificationSettings user={user} /\u003e\n        \u003c/TabsContent\u003e\n        \u003cTabsContent value=\"security\" className=\"space-y-4\"\u003e\n          \u003cSecuritySettings user={user} /\u003e\n        \u003c/TabsContent\u003e\n      \u003c/Tabs\u003e\n    \u003c/DashboardShell\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"app/users/page.tsx\"\nimport { redirect } from \"next/navigation\"\nimport { DashboardHeader } from \"@/components/dashboard/dashboard-header\"\nimport { DashboardShell } from \"@/components/dashboard/dashboard-shell\"\nimport { Button } from \"@/components/ui/button\"\nimport { UserManagement } from \"@/components/users/user-management\"\nimport { getUserSession } from \"@/lib/auth\"\n\nexport default async function UsersPage() {\n  const user = await getUserSession()\n\n  if (!user) {\n    redirect(\"/login\")\n  }\n\n  // Only admins can access user management\n  if (user.role !== \"admin\") {\n    redirect(\"/dashboard\")\n  }\n\n  return (\n    \u003cDashboardShell\u003e\n      \u003cDashboardHeader heading=\"User Management\" text=\"Manage users and their permissions\"\u003e\n        \u003cButton\u003e\n          \u003ca href=\"/users/new\"\u003eAdd User\u003c/a\u003e\n        \u003c/Button\u003e\n      \u003c/DashboardHeader\u003e\n      \u003cdiv className=\"grid gap-4\"\u003e\n        \u003cUserManagement /\u003e\n      \u003c/div\u003e\n    \u003c/DashboardShell\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"app/login/page.tsx\"\n\"use client\"\n\nimport type React from \"react\"\n\nimport { useState } from \"react\"\nimport Link from \"next/link\"\nimport { useRouter } from \"next/navigation\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { loginUser } from \"@/lib/auth\"\n\nexport default function LoginPage() {\n  const router = useRouter()\n  const [isLoading, setIsLoading] = useState(false)\n  const [error, setError] = useState(\"\")\n\n  async function handleSubmit(event: React.FormEvent\u003cHTMLFormElement\u003e) {\n    event.preventDefault()\n    setIsLoading(true)\n    setError(\"\")\n\n    const formData = new FormData(event.currentTarget)\n    const email = formData.get(\"email\") as string\n    const password = formData.get(\"password\") as string\n\n    try {\n      await loginUser(email, password)\n      router.push(\"/dashboard\")\n    } catch (err) {\n      setError(\"Invalid email or password\")\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    \u003cdiv className=\"flex min-h-screen items-center justify-center bg-gray-50 px-4 py-12 sm:px-6 lg:px-8\"\u003e\n      \u003cCard className=\"w-full max-w-md\"\u003e\n        \u003cCardHeader className=\"space-y-1\"\u003e\n          \u003cCardTitle className=\"text-2xl font-bold\"\u003eLogin\u003c/CardTitle\u003e\n          \u003cCardDescription\u003eEnter your credentials to access your account\u003c/CardDescription\u003e\n        \u003c/CardHeader\u003e\n        \u003cform onSubmit={handleSubmit}\u003e\n          \u003cCardContent className=\"space-y-4\"\u003e\n            {error \u0026\u0026 \u003cdiv className=\"rounded-md bg-red-50 p-2 text-sm text-red-500\"\u003e{error}\u003c/div\u003e}\n            \u003cdiv className=\"space-y-2\"\u003e\n              \u003cLabel htmlFor=\"email\"\u003eEmail\u003c/Label\u003e\n              \u003cInput id=\"email\" name=\"email\" type=\"email\" required /\u003e\n            \u003c/div\u003e\n            \u003cdiv className=\"space-y-2\"\u003e\n              \u003cdiv className=\"flex items-center justify-between\"\u003e\n                \u003cLabel htmlFor=\"password\"\u003ePassword\u003c/Label\u003e\n                \u003cLink href=\"/forgot-password\" className=\"text-sm text-primary\"\u003e\n                  Forgot password?\n                \u003c/Link\u003e\n              \u003c/div\u003e\n              \u003cInput id=\"password\" name=\"password\" type=\"password\" required /\u003e\n            \u003c/div\u003e\n            \u003cdiv className=\"flex items-center space-x-2\"\u003e\n              \u003chr className=\"flex-1\" /\u003e\n              \u003cspan className=\"text-sm text-muted-foreground\"\u003eOR\u003c/span\u003e\n              \u003chr className=\"flex-1\" /\u003e\n            \u003c/div\u003e\n            \u003cdiv className=\"grid grid-cols-2 gap-4\"\u003e\n              \u003cButton variant=\"outline\" type=\"button\" className=\"w-full\"\u003e\n                \u003csvg className=\"mr-2 h-4 w-4\" viewBox=\"0 0 24 24\"\u003e\n                  \u003cpath\n                    d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\"\n                    fill=\"#4285F4\"\n                  /\u003e\n                  \u003cpath\n                    d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\"\n                    fill=\"#34A853\"\n                  /\u003e\n                  \u003cpath\n                    d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\"\n                    fill=\"#FBBC05\"\n                  /\u003e\n                  \u003cpath\n                    d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\"\n                    fill=\"#EA4335\"\n                  /\u003e\n                \u003c/svg\u003e\n                Google\n              \u003c/Button\u003e\n              \u003cButton variant=\"outline\" type=\"button\" className=\"w-full\"\u003e\n                \u003csvg className=\"mr-2 h-4 w-4\" viewBox=\"0 0 24 24\"\u003e\n                  \u003cpath\n                    d=\"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12\"\n                    fill=\"currentColor\"\n                  /\u003e\n                \u003c/svg\u003e\n                GitHub\n              \u003c/Button\u003e\n            \u003c/div\u003e\n          \u003c/CardContent\u003e\n          \u003cCardFooter className=\"flex flex-col space-y-4\"\u003e\n            \u003cButton type=\"submit\" className=\"w-full\" disabled={isLoading}\u003e\n              {isLoading ? \"Logging in...\" : \"Login\"}\n            \u003c/Button\u003e\n            \u003cdiv className=\"text-center text-sm\"\u003e\n              Don\u0026apos;t have an account?{\" \"}\n              \u003cLink href=\"/register\" className=\"text-primary\"\u003e\n                Sign up\n              \u003c/Link\u003e\n            \u003c/div\u003e\n          \u003c/CardFooter\u003e\n        \u003c/form\u003e\n      \u003c/Card\u003e\n    \u003c/div\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"app/register/page.tsx\"\n\"use client\"\n\nimport type React from \"react\"\n\nimport { useState } from \"react\"\nimport Link from \"next/link\"\nimport { useRouter } from \"next/navigation\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { registerUser } from \"@/lib/auth\"\n\nexport default function RegisterPage() {\n  const router = useRouter()\n  const [isLoading, setIsLoading] = useState(false)\n  const [error, setError] = useState(\"\")\n\n  async function handleSubmit(event: React.FormEvent\u003cHTMLFormElement\u003e) {\n    event.preventDefault()\n    setIsLoading(true)\n    setError(\"\")\n\n    const formData = new FormData(event.currentTarget)\n    const name = formData.get(\"name\") as string\n    const email = formData.get(\"email\") as string\n    const password = formData.get(\"password\") as string\n    const confirmPassword = formData.get(\"confirmPassword\") as string\n\n    if (password !== confirmPassword) {\n      setError(\"Passwords do not match\")\n      setIsLoading(false)\n      return\n    }\n\n    try {\n      await registerUser(name, email, password)\n      router.push(\"/dashboard\")\n    } catch (err) {\n      setError(\"Failed to create account\")\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    \u003cdiv className=\"flex min-h-screen items-center justify-center bg-gray-50 px-4 py-12 sm:px-6 lg:px-8\"\u003e\n      \u003cCard className=\"w-full max-w-md\"\u003e\n        \u003cCardHeader className=\"space-y-1\"\u003e\n          \u003cCardTitle className=\"text-2xl font-bold\"\u003eCreate an account\u003c/CardTitle\u003e\n          \u003cCardDescription\u003eEnter your information to create an account\u003c/CardDescription\u003e\n        \u003c/CardHeader\u003e\n        \u003cform onSubmit={handleSubmit}\u003e\n          \u003cCardContent className=\"space-y-4\"\u003e\n            {error \u0026\u0026 \u003cdiv className=\"rounded-md bg-red-50 p-2 text-sm text-red-500\"\u003e{error}\u003c/div\u003e}\n            \u003cdiv className=\"space-y-2\"\u003e\n              \u003cLabel htmlFor=\"name\"\u003eFull Name\u003c/Label\u003e\n              \u003cInput id=\"name\" name=\"name\" required /\u003e\n            \u003c/div\u003e\n            \u003cdiv className=\"space-y-2\"\u003e\n              \u003cLabel htmlFor=\"email\"\u003eEmail\u003c/Label\u003e\n              \u003cInput id=\"email\" name=\"email\" type=\"email\" required /\u003e\n            \u003c/div\u003e\n            \u003cdiv className=\"space-y-2\"\u003e\n              \u003cLabel htmlFor=\"password\"\u003ePassword\u003c/Label\u003e\n              \u003cInput id=\"password\" name=\"password\" type=\"password\" required /\u003e\n            \u003c/div\u003e\n            \u003cdiv className=\"space-y-2\"\u003e\n              \u003cLabel htmlFor=\"confirmPassword\"\u003eConfirm Password\u003c/Label\u003e\n              \u003cInput id=\"confirmPassword\" name=\"confirmPassword\" type=\"password\" required /\u003e\n            \u003c/div\u003e\n          \u003c/CardContent\u003e\n          \u003cCardFooter className=\"flex flex-col space-y-4\"\u003e\n            \u003cButton type=\"submit\" className=\"w-full\" disabled={isLoading}\u003e\n              {isLoading ? \"Creating account...\" : \"Create account\"}\n            \u003c/Button\u003e\n            \u003cdiv className=\"text-center text-sm\"\u003e\n              Already have an account?{\" \"}\n              \u003cLink href=\"/login\" className=\"text-primary\"\u003e\n                Login\n              \u003c/Link\u003e\n            \u003c/div\u003e\n          \u003c/CardFooter\u003e\n        \u003c/form\u003e\n      \u003c/Card\u003e\n    \u003c/div\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/dashboard/dashboard-header.tsx\"\nimport type React from \"react\"\ninterface DashboardHeaderProps {\n  heading: string\n  text?: string\n  children?: React.ReactNode\n}\n\nexport function DashboardHeader({ heading, text, children }: DashboardHeaderProps) {\n  return (\n    \u003cdiv className=\"flex items-center justify-between px-2\"\u003e\n      \u003cdiv className=\"grid gap-1\"\u003e\n        \u003ch1 className=\"font-heading text-3xl md:text-4xl\"\u003e{heading}\u003c/h1\u003e\n        {text \u0026\u0026 \u003cp className=\"text-lg text-muted-foreground\"\u003e{text}\u003c/p\u003e}\n      \u003c/div\u003e\n      {children}\n    \u003c/div\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/dashboard/dashboard-shell.tsx\"\nimport type React from \"react\"\ninterface DashboardShellProps {\n  children: React.ReactNode\n}\n\nexport function DashboardShell({ children }: DashboardShellProps) {\n  return (\n    \u003cdiv className=\"flex min-h-screen flex-col\"\u003e\n      \u003cmain className=\"flex flex-1 flex-col gap-4 p-4 md:gap-8 md:p-8\"\u003e\n        \u003cdiv className=\"mx-auto grid w-full max-w-7xl gap-4 md:gap-8\"\u003e{children}\u003c/div\u003e\n      \u003c/main\u003e\n    \u003c/div\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/dashboard/overview.tsx\"\n\"use client\"\nimport { Area, AreaChart, ResponsiveContainer, Tooltip, XAxis, YAxis } from \"@/components/ui/chart\"\n\nconst data = [\n  {\n    name: \"Jan\",\n    total: 12,\n  },\n  {\n    name: \"Feb\",\n    total: 18,\n  },\n  {\n    name: \"Mar\",\n    total: 24,\n  },\n  {\n    name: \"Apr\",\n    total: 30,\n  },\n  {\n    name: \"May\",\n    total: 22,\n  },\n  {\n    name: \"Jun\",\n    total: 28,\n  },\n  {\n    name: \"Jul\",\n    total: 32,\n  },\n  {\n    name: \"Aug\",\n    total: 36,\n  },\n  {\n    name: \"Sep\",\n    total: 30,\n  },\n  {\n    name: \"Oct\",\n    total: 28,\n  },\n  {\n    name: \"Nov\",\n    total: 34,\n  },\n  {\n    name: \"Dec\",\n    total: 40,\n  },\n]\n\nexport function Overview() {\n  return (\n    \u003cResponsiveContainer width=\"100%\" height={350}\u003e\n      \u003cAreaChart\n        data={data}\n        margin={{\n          top: 10,\n          right: 30,\n          left: 0,\n          bottom: 0,\n        }}\n      \u003e\n        \u003cdefs\u003e\n          \u003clinearGradient id=\"colorTotal\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\"\u003e\n            \u003cstop offset=\"5%\" stopColor=\"#8884d8\" stopOpacity={0.8} /\u003e\n            \u003cstop offset=\"95%\" stopColor=\"#8884d8\" stopOpacity={0} /\u003e\n          \u003c/linearGradient\u003e\n        \u003c/defs\u003e\n        \u003cXAxis dataKey=\"name\" stroke=\"#888888\" fontSize={12} tickLine={false} axisLine={false} /\u003e\n        \u003cYAxis stroke=\"#888888\" fontSize={12} tickLine={false} axisLine={false} tickFormatter={(value) =\u003e `${value}`} /\u003e\n        \u003cTooltip /\u003e\n        \u003cArea type=\"monotone\" dataKey=\"total\" stroke=\"#8884d8\" fillOpacity={1} fill=\"url(#colorTotal)\" /\u003e\n      \u003c/AreaChart\u003e\n    \u003c/ResponsiveContainer\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/dashboard/recent-tasks.tsx\"\n\"use client\"\n\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\nimport { Badge } from \"@/components/ui/badge\"\n\nconst tasks = [\n  {\n    id: \"TASK-8782\",\n    title: \"Create new landing page\",\n    status: \"In Progress\",\n    priority: \"High\",\n    assignee: {\n      name: \"Emma Wilson\",\n      email: \"emma@example.com\",\n      avatar: \"/placeholder.svg?height=32\u0026width=32\",\n    },\n  },\n  {\n    id: \"TASK-7878\",\n    title: \"Update user authentication flow\",\n    status: \"In Review\",\n    priority: \"Medium\",\n    assignee: {\n      name: \"Jackson Lee\",\n      email: \"jackson@example.com\",\n      avatar: \"/placeholder.svg?height=32\u0026width=32\",\n    },\n  },\n  {\n    id: \"TASK-7839\",\n    title: \"Implement notification system\",\n    status: \"Completed\",\n    priority: \"Medium\",\n    assignee: {\n      name: \"Sophia Chen\",\n      email: \"sophia@example.com\",\n      avatar: \"/placeholder.svg?height=32\u0026width=32\",\n    },\n  },\n  {\n    id: \"TASK-7349\",\n    title: \"Fix mobile responsiveness issues\",\n    status: \"In Progress\",\n    priority: \"High\",\n    assignee: {\n      name: \"Liam Johnson\",\n      email: \"liam@example.com\",\n      avatar: \"/placeholder.svg?height=32\u0026width=32\",\n    },\n  },\n  {\n    id: \"TASK-8572\",\n    title: \"Create API documentation\",\n    status: \"Not Started\",\n    priority: \"Low\",\n    assignee: {\n      name: \"Olivia Martinez\",\n      email: \"olivia@example.com\",\n      avatar: \"/placeholder.svg?height=32\u0026width=32\",\n    },\n  },\n]\n\nexport function RecentTasks() {\n  return (\n    \u003cdiv className=\"space-y-8\"\u003e\n      {tasks.map((task) =\u003e (\n        \u003cdiv key={task.id} className=\"flex items-center\"\u003e\n          \u003cAvatar className=\"h-9 w-9\"\u003e\n            \u003cAvatarImage src={task.assignee.avatar} alt={task.assignee.name} /\u003e\n            \u003cAvatarFallback\u003e\n              {task.assignee.name\n                .split(\" \")\n                .map((n) =\u003e n[0])\n                .join(\"\")}\n            \u003c/AvatarFallback\u003e\n          \u003c/Avatar\u003e\n          \u003cdiv className=\"ml-4 space-y-1\"\u003e\n            \u003cp className=\"text-sm font-medium leading-none\"\u003e{task.title}\u003c/p\u003e\n            \u003cp className=\"text-sm text-muted-foreground\"\u003e\n              {task.id} · Assigned to {task.assignee.name}\n            \u003c/p\u003e\n          \u003c/div\u003e\n          \u003cdiv className=\"ml-auto flex items-center gap-2\"\u003e\n            \u003cBadge\n              variant={\n                task.status === \"Completed\"\n                  ? \"success\"\n                  : task.status === \"In Progress\"\n                    ? \"default\"\n                    : task.status === \"In Review\"\n                      ? \"warning\"\n                      : \"secondary\"\n              }\n            \u003e\n              {task.status}\n            \u003c/Badge\u003e\n            \u003cBadge\n              variant={task.priority === \"High\" ? \"destructive\" : task.priority === \"Medium\" ? \"default\" : \"outline\"}\n            \u003e\n              {task.priority}\n            \u003c/Badge\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n      ))}\n    \u003c/div\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/dashboard/team-members.tsx\"\n\"use client\"\n\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\n\nconst teamMembers = [\n  {\n    id: 1,\n    name: \"Emma Wilson\",\n    email: \"emma@example.com\",\n    role: \"Product Manager\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    tasksAssigned: 8,\n    tasksCompleted: 5,\n  },\n  {\n    id: 2,\n    name: \"Jackson Lee\",\n    email: \"jackson@example.com\",\n    role: \"Frontend Developer\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    tasksAssigned: 12,\n    tasksCompleted: 10,\n  },\n  {\n    id: 3,\n    name: \"Sophia Chen\",\n    email: \"sophia@example.com\",\n    role: \"Backend Developer\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    tasksAssigned: 10,\n    tasksCompleted: 7,\n  },\n  {\n    id: 4,\n    name: \"Liam Johnson\",\n    email: \"liam@example.com\",\n    role: \"UI/UX Designer\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    tasksAssigned: 6,\n    tasksCompleted: 4,\n  },\n  {\n    id: 5,\n    name: \"Olivia Martinez\",\n    email: \"olivia@example.com\",\n    role: \"QA Engineer\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    tasksAssigned: 9,\n    tasksCompleted: 8,\n  },\n]\n\nexport function TeamMembers() {\n  return (\n    \u003cdiv className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\"\u003e\n      {teamMembers.map((member) =\u003e (\n        \u003cCard key={member.id}\u003e\n          \u003cCardHeader className=\"flex flex-row items-center gap-4 pb-2\"\u003e\n            \u003cAvatar className=\"h-10 w-10\"\u003e\n              \u003cAvatarImage src={member.avatar} alt={member.name} /\u003e\n              \u003cAvatarFallback\u003e\n                {member.name\n                  .split(\" \")\n                  .map((n) =\u003e n[0])\n                  .join(\"\")}\n              \u003c/AvatarFallback\u003e\n            \u003c/Avatar\u003e\n            \u003cdiv className=\"grid gap-1\"\u003e\n              \u003cCardTitle className=\"text-base\"\u003e{member.name}\u003c/CardTitle\u003e\n              \u003cCardDescription className=\"text-xs\"\u003e{member.role}\u003c/CardDescription\u003e\n            \u003c/div\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent\u003e\n            \u003cdiv className=\"grid gap-2\"\u003e\n              \u003cdiv className=\"grid grid-cols-2 gap-2 text-sm\"\u003e\n                \u003cdiv className=\"flex flex-col\"\u003e\n                  \u003cspan className=\"text-muted-foreground\"\u003eAssigned\u003c/span\u003e\n                  \u003cspan className=\"font-medium\"\u003e{member.tasksAssigned}\u003c/span\u003e\n                \u003c/div\u003e\n                \u003cdiv className=\"flex flex-col\"\u003e\n                  \u003cspan className=\"text-muted-foreground\"\u003eCompleted\u003c/span\u003e\n                  \u003cspan className=\"font-medium\"\u003e{member.tasksCompleted}\u003c/span\u003e\n                \u003c/div\u003e\n              \u003c/div\u003e\n              \u003cdiv className=\"mt-2 flex justify-between\"\u003e\n                \u003cButton size=\"sm\" variant=\"outline\"\u003e\n                  View Profile\n                \u003c/Button\u003e\n                \u003cButton size=\"sm\"\u003eAssign Task\u003c/Button\u003e\n              \u003c/div\u003e\n            \u003c/div\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n      ))}\n    \u003c/div\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/tasks/kanban-board.tsx\"\n\"use client\"\n\nimport { useState } from \"react\"\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\"\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\n\n// Initial task data\nconst initialTasks = {\n  \"to-do\": [\n    {\n      id: \"task-1\",\n      title: \"Create new landing page\",\n      description: \"Design and implement a new landing page for the product\",\n      priority: \"High\",\n      assignee: {\n        name: \"Emma Wilson\",\n        avatar: \"/placeholder.svg?height=32\u0026width=32\",\n      },\n      dueDate: \"2023-12-15\",\n    },\n    {\n      id: \"task-2\",\n      title: \"Update user authentication flow\",\n      description: \"Improve the user authentication experience\",\n      priority: \"Medium\",\n      assignee: {\n        name: \"Jackson Lee\",\n        avatar: \"/placeholder.svg?height=32\u0026width=32\",\n      },\n      dueDate: \"2023-12-20\",\n    },\n    {\n      id: \"task-3\",\n      title: \"Create API documentation\",\n      description: \"Document all API endpoints for developers\",\n      priority: \"Low\",\n      assignee: {\n        name: \"Olivia Martinez\",\n        avatar: \"/placeholder.svg?height=32\u0026width=32\",\n      },\n      dueDate: \"2023-12-30\",\n    },\n  ],\n  \"in-progress\": [\n    {\n      id: \"task-4\",\n      title: \"Implement notification system\",\n      description: \"Create a real-time notification system for users\",\n      priority: \"Medium\",\n      assignee: {\n        name: \"Sophia Chen\",\n        avatar: \"/placeholder.svg?height=32\u0026width=32\",\n      },\n      dueDate: \"2023-12-10\",\n    },\n    {\n      id: \"task-5\",\n      title: \"Fix mobile responsiveness issues\",\n      description: \"Address UI issues on mobile devices\",\n      priority: \"High\",\n      assignee: {\n        name: \"Liam Johnson\",\n        avatar: \"/placeholder.svg?height=32\u0026width=32\",\n      },\n      dueDate: \"2023-12-05\",\n    },\n  ],\n  \"in-review\": [\n    {\n      id: \"task-6\",\n      title: \"Optimize database queries\",\n      description: \"Improve performance of slow database queries\",\n      priority: \"High\",\n      assignee: {\n        name: \"Jackson Lee\",\n        avatar: \"/placeholder.svg?height=32\u0026width=32\",\n      },\n      dueDate: \"2023-12-08\",\n    },\n  ],\n  completed: [\n    {\n      id: \"task-7\",\n      title: \"Set up CI/CD pipeline\",\n      description: \"Implement continuous integration and deployment\",\n      priority: \"Medium\",\n      assignee: {\n        name: \"Sophia Chen\",\n        avatar: \"/placeholder.svg?height=32\u0026width=32\",\n      },\n      dueDate: \"2023-12-01\",\n    },\n    {\n      id: \"task-8\",\n      title: \"Create user onboarding flow\",\n      description: \"Design and implement user onboarding experience\",\n      priority: \"Medium\",\n      assignee: {\n        name: \"Emma Wilson\",\n        avatar: \"/placeholder.svg?height=32\u0026width=32\",\n      },\n      dueDate: \"2023-11-25\",\n    },\n  ],\n}\n\n// Column definitions\nconst columns = [\n  {\n    id: \"to-do\",\n    title: \"To Do\",\n    color: \"bg-gray-100\",\n  },\n  {\n    id: \"in-progress\",\n    title: \"In Progress\",\n    color: \"bg-blue-50\",\n  },\n  {\n    id: \"in-review\",\n    title: \"In Review\",\n    color: \"bg-yellow-50\",\n  },\n  {\n    id: \"completed\",\n    title: \"Completed\",\n    color: \"bg-green-50\",\n  },\n]\n\nexport function KanbanBoard() {\n  const [tasks, setTasks] = useState(initialTasks)\n\n  const handleDragEnd = (result) =\u003e {\n    const { destination, source, draggableId } = result\n\n    // If there's no destination or the item is dropped in the same place\n    if (!destination || (destination.droppableId === source.droppableId \u0026\u0026 destination.index === source.index)) {\n      return\n    }\n\n    // Find the task that was dragged\n    const sourceColumn = tasks[source.droppableId]\n    const taskToMove = sourceColumn.find((task) =\u003e task.id === draggableId)\n\n    // Create new state\n    const newTasks = { ...tasks }\n\n    // Remove from source column\n    newTasks[source.droppableId] = sourceColumn.filter((task) =\u003e task.id !== draggableId)\n\n    // Add to destination column\n    newTasks[destination.droppableId] = [\n      ...newTasks[destination.droppableId].slice(0, destination.index),\n      taskToMove,\n      ...newTasks[destination.droppableId].slice(destination.index),\n    ]\n\n    setTasks(newTasks)\n  }\n\n  return (\n    \u003cDragDropContext onDragEnd={handleDragEnd}\u003e\n      \u003cdiv className=\"grid grid-cols-1 gap-4 md:grid-cols-2 lg:grid-cols-4\"\u003e\n        {columns.map((column) =\u003e (\n          \u003cdiv key={column.id} className=\"flex flex-col\"\u003e\n            \u003cdiv className={`rounded-t-md p-3 ${column.color}`}\u003e\n              \u003ch3 className=\"font-medium\"\u003e{column.title}\u003c/h3\u003e\n              \u003cdiv className=\"text-sm text-muted-foreground\"\u003e{tasks[column.id].length} tasks\u003c/div\u003e\n            \u003c/div\u003e\n            \u003cDroppable droppableId={column.id}\u003e\n              {(provided) =\u003e (\n                \u003cdiv\n                  {...provided.droppableProps}\n                  ref={provided.innerRef}\n                  className=\"flex flex-1 flex-col gap-2 rounded-b-md border border-t-0 bg-background p-2\"\n                \u003e\n                  {tasks[column.id].map((task, index) =\u003e (\n                    \u003cDraggable key={task.id} draggableId={task.id} index={index}\u003e\n                      {(provided) =\u003e (\n                        \u003cCard\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                          className=\"cursor-grab\"\n                        \u003e\n                          \u003cCardHeader className=\"p-3 pb-0\"\u003e\n                            \u003cCardTitle className=\"text-sm font-medium\"\u003e{task.title}\u003c/CardTitle\u003e\n                          \u003c/CardHeader\u003e\n                          \u003cCardContent className=\"p-3\"\u003e\n                            \u003cp className=\"text-xs text-muted-foreground\"\u003e{task.description}\u003c/p\u003e\n                            \u003cdiv className=\"mt-2 flex items-center justify-between\"\u003e\n                              \u003cBadge\n                                variant={\n                                  task.priority === \"High\"\n                                    ? \"destructive\"\n                                    : task.priority === \"Medium\"\n                                      ? \"default\"\n                                      : \"outline\"\n                                }\n                                className=\"text-xs\"\n                              \u003e\n                                {task.priority}\n                              \u003c/Badge\u003e\n                              \u003cdiv className=\"flex items-center gap-1\"\u003e\n                                \u003cspan className=\"text-xs text-muted-foreground\"\u003e\n                                  {new Date(task.dueDate).toLocaleDateString()}\n                                \u003c/span\u003e\n                                \u003cAvatar className=\"h-6 w-6\"\u003e\n                                  \u003cAvatarImage src={task.assignee.avatar} alt={task.assignee.name} /\u003e\n                                  \u003cAvatarFallback className=\"text-xs\"\u003e\n                                    {task.assignee.name\n                                      .split(\" \")\n                                      .map((n) =\u003e n[0])\n                                      .join(\"\")}\n                                  \u003c/AvatarFallback\u003e\n                                \u003c/Avatar\u003e\n                              \u003c/div\u003e\n                            \u003c/div\u003e\n                          \u003c/CardContent\u003e\n                        \u003c/Card\u003e\n                      )}\n                    \u003c/Draggable\u003e\n                  ))}\n                  {provided.placeholder}\n                \u003c/div\u003e\n              )}\n            \u003c/Droppable\u003e\n          \u003c/div\u003e\n        ))}\n      \u003c/div\u003e\n    \u003c/DragDropContext\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/tasks/task-filters.tsx\"\n\"use client\"\n\nimport { useState } from \"react\"\nimport { Input } from \"@/components/ui/input\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { Tabs, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\n\nexport function TaskFilters() {\n  const [view, setView] = useState(\"kanban\")\n\n  return (\n    \u003cdiv className=\"flex flex-col gap-4 sm:flex-row sm:items-center sm:justify-between\"\u003e\n      \u003cdiv className=\"flex items-center gap-2\"\u003e\n        \u003cTabs defaultValue=\"kanban\" className=\"w-[400px]\" onValueChange={setView}\u003e\n          \u003cTabsList\u003e\n            \u003cTabsTrigger value=\"kanban\"\u003eKanban\u003c/TabsTrigger\u003e\n            \u003cTabsTrigger value=\"list\"\u003eList\u003c/TabsTrigger\u003e\n            \u003cTabsTrigger value=\"calendar\"\u003eCalendar\u003c/TabsTrigger\u003e\n          \u003c/TabsList\u003e\n        \u003c/Tabs\u003e\n      \u003c/div\u003e\n      \u003cdiv className=\"flex flex-col gap-2 sm:flex-row sm:items-center\"\u003e\n        \u003cdiv className=\"flex items-center gap-2\"\u003e\n          \u003cInput placeholder=\"Search tasks...\" className=\"h-9 w-[150px] sm:w-[180px] lg:w-[250px]\" /\u003e\n          \u003cSelect defaultValue=\"all\"\u003e\n            \u003cSelectTrigger className=\"h-9 w-[130px]\"\u003e\n              \u003cSelectValue placeholder=\"Priority\" /\u003e\n            \u003c/SelectTrigger\u003e\n            \u003cSelectContent\u003e\n              \u003cSelectItem value=\"all\"\u003eAll Priorities\u003c/SelectItem\u003e\n              \u003cSelectItem value=\"high\"\u003eHigh\u003c/SelectItem\u003e\n              \u003cSelectItem value=\"medium\"\u003eMedium\u003c/SelectItem\u003e\n              \u003cSelectItem value=\"low\"\u003eLow\u003c/SelectItem\u003e\n            \u003c/SelectContent\u003e\n          \u003c/Select\u003e\n          \u003cSelect defaultValue=\"all\"\u003e\n            \u003cSelectTrigger className=\"h-9 w-[130px]\"\u003e\n              \u003cSelectValue placeholder=\"Assignee\" /\u003e\n            \u003c/SelectTrigger\u003e\n            \u003cSelectContent\u003e\n              \u003cSelectItem value=\"all\"\u003eAll Assignees\u003c/SelectItem\u003e\n              \u003cSelectItem value=\"emma\"\u003eEmma Wilson\u003c/SelectItem\u003e\n              \u003cSelectItem value=\"jackson\"\u003eJackson Lee\u003c/SelectItem\u003e\n              \u003cSelectItem value=\"sophia\"\u003eSophia Chen\u003c/SelectItem\u003e\n              \u003cSelectItem value=\"liam\"\u003eLiam Johnson\u003c/SelectItem\u003e\n              \u003cSelectItem value=\"olivia\"\u003eOlivia Martinez\u003c/SelectItem\u003e\n            \u003c/SelectContent\u003e\n          \u003c/Select\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/tasks/task-form.tsx\"\n\"use client\"\n\nimport { useState } from \"react\"\nimport { useRouter } from \"next/navigation\"\nimport { Button } from \"@/components/ui/button\"\nimport { Calendar } from \"@/components/ui/calendar\"\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Form, FormControl, FormDescription, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\"\nimport { Input } from \"@/components/ui/input\"\nimport { Popover, PopoverContent, PopoverTrigger } from \"@/components/ui/popover\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { format } from \"date-fns\"\nimport { CalendarIcon } from \"lucide-react\"\nimport { useForm } from \"react-hook-form\"\n\nexport function TaskForm() {\n  const router = useRouter()\n  const [isLoading, setIsLoading] = useState(false)\n\n  const form = useForm({\n    defaultValues: {\n      title: \"\",\n      description: \"\",\n      priority: \"medium\",\n      assignee: \"\",\n      dueDate: new Date(),\n      tags: \"\",\n    },\n  })\n\n  async function onSubmit(data) {\n    setIsLoading(true)\n\n    try {\n      // Here you would normally send the data to your API\n      console.log(\"Form submitted:\", data)\n\n      // Simulate API call\n      await new Promise((resolve) =\u003e setTimeout(resolve, 1000))\n\n      // Redirect to tasks page\n      router.push(\"/tasks\")\n    } catch (error) {\n      console.error(\"Error creating task:\", error)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    \u003cCard\u003e\n      \u003cCardHeader\u003e\n        \u003cCardTitle\u003eCreate New Task\u003c/CardTitle\u003e\n        \u003cCardDescription\u003eAdd a new task and assign it to team members\u003c/CardDescription\u003e\n      \u003c/CardHeader\u003e\n      \u003cForm {...form}\u003e\n        \u003cform onSubmit={form.handleSubmit(onSubmit)}\u003e\n          \u003cCardContent className=\"space-y-4\"\u003e\n            \u003cFormField\n              control={form.control}\n              name=\"title\"\n              render={({ field }) =\u003e (\n                \u003cFormItem\u003e\n                  \u003cFormLabel\u003eTask Title\u003c/FormLabel\u003e\n                  \u003cFormControl\u003e\n                    \u003cInput placeholder=\"Enter task title\" {...field} /\u003e\n                  \u003c/FormControl\u003e\n                  \u003cFormMessage /\u003e\n                \u003c/FormItem\u003e\n              )}\n            /\u003e\n            \u003cFormField\n              control={form.control}\n              name=\"description\"\n              render={({ field }) =\u003e (\n                \u003cFormItem\u003e\n                  \u003cFormLabel\u003eDescription\u003c/FormLabel\u003e\n                  \u003cFormControl\u003e\n                    \u003cTextarea placeholder=\"Enter task description\" className=\"min-h-[100px]\" {...field} /\u003e\n                  \u003c/FormControl\u003e\n                  \u003cFormMessage /\u003e\n                \u003c/FormItem\u003e\n              )}\n            /\u003e\n            \u003cdiv className=\"grid grid-cols-1 gap-4 md:grid-cols-2\"\u003e\n              \u003cFormField\n                control={form.control}\n                name=\"priority\"\n                render={({ field }) =\u003e (\n                  \u003cFormItem\u003e\n                    \u003cFormLabel\u003ePriority\u003c/FormLabel\u003e\n                    \u003cSelect onValueChange={field.onChange} defaultValue={field.value}\u003e\n                      \u003cFormControl\u003e\n                        \u003cSelectTrigger\u003e\n                          \u003cSelectValue placeholder=\"Select priority\" /\u003e\n                        \u003c/SelectTrigger\u003e\n                      \u003c/FormControl\u003e\n                      \u003cSelectContent\u003e\n                        \u003cSelectItem value=\"high\"\u003eHigh\u003c/SelectItem\u003e\n                        \u003cSelectItem value=\"medium\"\u003eMedium\u003c/SelectItem\u003e\n                        \u003cSelectItem value=\"low\"\u003eLow\u003c/SelectItem\u003e\n                      \u003c/SelectContent\u003e\n                    \u003c/Select\u003e\n                    \u003cFormMessage /\u003e\n                  \u003c/FormItem\u003e\n                )}\n              /\u003e\n              \u003cFormField\n                control={form.control}\n                name=\"assignee\"\n                render={({ field }) =\u003e (\n                  \u003cFormItem\u003e\n                    \u003cFormLabel\u003eAssignee\u003c/FormLabel\u003e\n                    \u003cSelect onValueChange={field.onChange} defaultValue={field.value}\u003e\n                      \u003cFormControl\u003e\n                        \u003cSelectTrigger\u003e\n                          \u003cSelectValue placeholder=\"Select team member\" /\u003e\n                        \u003c/SelectTrigger\u003e\n                      \u003c/FormControl\u003e\n                      \u003cSelectContent\u003e\n                        \u003cSelectItem value=\"emma\"\u003eEmma Wilson\u003c/SelectItem\u003e\n                        \u003cSelectItem value=\"jackson\"\u003eJackson Lee\u003c/SelectItem\u003e\n                        \u003cSelectItem value=\"sophia\"\u003eSophia Chen\u003c/SelectItem\u003e\n                        \u003cSelectItem value=\"liam\"\u003eLiam Johnson\u003c/SelectItem\u003e\n                        \u003cSelectItem value=\"olivia\"\u003eOlivia Martinez\u003c/SelectItem\u003e\n                      \u003c/SelectContent\u003e\n                    \u003c/Select\u003e\n                    \u003cFormMessage /\u003e\n                  \u003c/FormItem\u003e\n                )}\n              /\u003e\n            \u003c/div\u003e\n            \u003cdiv className=\"grid grid-cols-1 gap-4 md:grid-cols-2\"\u003e\n              \u003cFormField\n                control={form.control}\n                name=\"dueDate\"\n                render={({ field }) =\u003e (\n                  \u003cFormItem className=\"flex flex-col\"\u003e\n                    \u003cFormLabel\u003eDue Date\u003c/FormLabel\u003e\n                    \u003cPopover\u003e\n                      \u003cPopoverTrigger asChild\u003e\n                        \u003cFormControl\u003e\n                          \u003cButton variant={\"outline\"} className={\"w-full pl-3 text-left font-normal\"}\u003e\n                            {field.value ? format(field.value, \"PPP\") : \u003cspan\u003ePick a date\u003c/span\u003e}\n                            \u003cCalendarIcon className=\"ml-auto h-4 w-4 opacity-50\" /\u003e\n                          \u003c/Button\u003e\n                        \u003c/FormControl\u003e\n                      \u003c/PopoverTrigger\u003e\n                      \u003cPopoverContent className=\"w-auto p-0\" align=\"start\"\u003e\n                        \u003cCalendar mode=\"single\" selected={field.value} onSelect={field.onChange} initialFocus /\u003e\n                      \u003c/PopoverContent\u003e\n                    \u003c/Popover\u003e\n                    \u003cFormMessage /\u003e\n                  \u003c/FormItem\u003e\n                )}\n              /\u003e\n              \u003cFormField\n                control={form.control}\n                name=\"tags\"\n                render={({ field }) =\u003e (\n                  \u003cFormItem\u003e\n                    \u003cFormLabel\u003eTags\u003c/FormLabel\u003e\n                    \u003cFormControl\u003e\n                      \u003cInput placeholder=\"Enter tags separated by commas\" {...field} /\u003e\n                    \u003c/FormControl\u003e\n                    \u003cFormDescription\u003eE.g. frontend, bug, feature\u003c/FormDescription\u003e\n                    \u003cFormMessage /\u003e\n                  \u003c/FormItem\u003e\n                )}\n              /\u003e\n            \u003c/div\u003e\n          \u003c/CardContent\u003e\n          \u003cCardFooter className=\"flex justify-between\"\u003e\n            \u003cButton variant=\"outline\" type=\"button\" onClick={() =\u003e router.back()}\u003e\n              Cancel\n            \u003c/Button\u003e\n            \u003cButton type=\"submit\" disabled={isLoading}\u003e\n              {isLoading ? \"Creating...\" : \"Create Task\"}\n            \u003c/Button\u003e\n          \u003c/CardFooter\u003e\n        \u003c/form\u003e\n      \u003c/Form\u003e\n    \u003c/Card\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/tasks/task-details.tsx\"\n\"use client\"\n\nimport { useState } from \"react\"\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Progress } from \"@/components/ui/progress\"\nimport { Separator } from \"@/components/ui/separator\"\nimport { format } from \"date-fns\"\n\n// Mock task data - in a real app, this would come from an API\nconst taskData = {\n  id: \"TASK-8782\",\n  title: \"Create new landing page\",\n  description:\n    \"Design and implement a new landing page for the product. The page should highlight key features and include a sign-up form for new users. Make sure it's responsive and works well on mobile devices.\",\n  status: \"In Progress\",\n  priority: \"High\",\n  createdAt: \"2023-11-15T10:30:00Z\",\n  dueDate: \"2023-12-15T23:59:59Z\",\n  progress: 65,\n  assignee: {\n    name: \"Emma Wilson\",\n    email: \"emma@example.com\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n  },\n  creator: {\n    name: \"Liam Johnson\",\n    email: \"liam@example.com\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n  },\n  tags: [\"frontend\", \"design\", \"marketing\"],\n  subtasks: [\n    { id: 1, title: \"Design mockups\", completed: true },\n    { id: 2, title: \"Implement HTML/CSS\", completed: true },\n    { id: 3, title: \"Add JavaScript interactions\", completed: false },\n    { id: 4, title: \"Optimize for mobile\", completed: false },\n    { id: 5, title: \"Test across browsers\", completed: false },\n  ],\n}\n\nexport function TaskDetails({ id }: { id: string }) {\n  const [task, setTask] = useState(taskData)\n  const [isEditing, setIsEditing] = useState(false)\n\n  const toggleSubtask = (subtaskId: number) =\u003e {\n    setTask((prevTask) =\u003e ({\n      ...prevTask,\n      subtasks: prevTask.subtasks.map((subtask) =\u003e\n        subtask.id === subtaskId ? { ...subtask, completed: !subtask.completed } : subtask,\n      ),\n      progress: calculateProgress(\n        prevTask.subtasks.map((subtask) =\u003e\n          subtask.id === subtaskId ? { ...subtask, completed: !subtask.completed } : subtask,\n        ),\n      ),\n    }))\n  }\n\n  const calculateProgress = (subtasks) =\u003e {\n    if (subtasks.length === 0) return 0\n    const completedCount = subtasks.filter((subtask) =\u003e subtask.completed).length\n    return Math.round((completedCount / subtasks.length) * 100)\n  }\n\n  return (\n    \u003cCard\u003e\n      \u003cCardHeader\u003e\n        \u003cdiv className=\"flex items-start justify-between\"\u003e\n          \u003cdiv\u003e\n            \u003cCardTitle className=\"text-xl\"\u003e{task.title}\u003c/CardTitle\u003e\n            \u003cCardDescription\u003e\n              {task.id} · Created on {format(new Date(task.createdAt), \"MMM d, yyyy\")}\n            \u003c/CardDescription\u003e\n          \u003c/div\u003e\n          \u003cdiv className=\"flex items-center gap-2\"\u003e\n            \u003cButton variant=\"outline\" size=\"sm\" onClick={() =\u003e setIsEditing(true)}\u003e\n              Edit\n            \u003c/Button\u003e\n            \u003cButton variant=\"outline\" size=\"sm\"\u003e\n              Delete\n            \u003c/Button\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n        \u003cdiv className=\"mt-2 flex flex-wrap gap-2\"\u003e\n          \u003cBadge\n            variant={\n              task.status === \"Completed\"\n                ? \"success\"\n                : task.status === \"In Progress\"\n                  ? \"default\"\n                  : task.status === \"In Review\"\n                    ? \"warning\"\n                    : \"secondary\"\n            }\n          \u003e\n            {task.status}\n          \u003c/Badge\u003e\n          \u003cBadge\n            variant={task.priority === \"High\" ? \"destructive\" : task.priority === \"Medium\" ? \"default\" : \"outline\"}\n          \u003e\n            {task.priority}\n          \u003c/Badge\u003e\n          {task.tags.map((tag) =\u003e (\n            \u003cBadge key={tag} variant=\"outline\"\u003e\n              {tag}\n            \u003c/Badge\u003e\n          ))}\n        \u003c/div\u003e\n      \u003c/CardHeader\u003e\n      \u003cCardContent className=\"space-y-4\"\u003e\n        \u003cdiv\u003e\n          \u003ch3 className=\"mb-2 font-medium\"\u003eDescription\u003c/h3\u003e\n          \u003cp className=\"text-sm text-muted-foreground\"\u003e{task.description}\u003c/p\u003e\n        \u003c/div\u003e\n\n        \u003cdiv\u003e\n          \u003cdiv className=\"mb-2 flex items-center justify-between\"\u003e\n            \u003ch3 className=\"font-medium\"\u003eProgress\u003c/h3\u003e\n            \u003cspan className=\"text-sm font-medium\"\u003e{task.progress}%\u003c/span\u003e\n          \u003c/div\u003e\n          \u003cProgress value={task.progress} className=\"h-2\" /\u003e\n        \u003c/div\u003e\n\n        \u003cdiv className=\"grid gap-4 md:grid-cols-2\"\u003e\n          \u003cdiv\u003e\n            \u003ch3 className=\"mb-2 font-medium\"\u003eAssignee\u003c/h3\u003e\n            \u003cdiv className=\"flex items-center gap-2\"\u003e\n              \u003cAvatar\u003e\n                \u003cAvatarImage src={task.assignee.avatar} alt={task.assignee.name} /\u003e\n                \u003cAvatarFallback\u003e\n                  {task.assignee.name\n                    .split(\" \")\n                    .map((n) =\u003e n[0])\n                    .join(\"\")}\n                \u003c/AvatarFallback\u003e\n              \u003c/Avatar\u003e\n              \u003cdiv\u003e\n                \u003cp className=\"text-sm font-medium\"\u003e{task.assignee.name}\u003c/p\u003e\n                \u003cp className=\"text-xs text-muted-foreground\"\u003e{task.assignee.email}\u003c/p\u003e\n              \u003c/div\u003e\n            \u003c/div\u003e\n          \u003c/div\u003e\n\n          \u003cdiv\u003e\n            \u003ch3 className=\"mb-2 font-medium\"\u003eDue Date\u003c/h3\u003e\n            \u003cp className=\"text-sm\"\u003e{format(new Date(task.dueDate), \"MMMM d, yyyy\")}\u003c/p\u003e\n            \u003cp className=\"text-xs text-muted-foreground\"\u003e\n              {new Date(task.dueDate) \u003c new Date()\n                ? \"Overdue\"\n                : `${Math.ceil(\n                    (new Date(task.dueDate).getTime() - new Date().getTime()) / (1000 * 60 * 60 * 24),\n                  )} days remaining`}\n            \u003c/p\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n\n        \u003cSeparator /\u003e\n\n        \u003cdiv\u003e\n          \u003ch3 className=\"mb-2 font-medium\"\u003eSubtasks\u003c/h3\u003e\n          \u003cdiv className=\"space-y-2\"\u003e\n            {task.subtasks.map((subtask) =\u003e (\n              \u003cdiv key={subtask.id} className=\"flex items-center gap-2 rounded-md border p-2\"\u003e\n                \u003cinput\n                  type=\"checkbox\"\n                  checked={subtask.completed}\n                  onChange={() =\u003e toggleSubtask(subtask.id)}\n                  className=\"h-4 w-4 rounded border-gray-300\"\n                /\u003e\n                \u003cspan className={`text-sm ${subtask.completed ? \"text-muted-foreground line-through\" : \"\"}`}\u003e\n                  {subtask.title}\n                \u003c/span\u003e\n              \u003c/div\u003e\n            ))}\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/CardContent\u003e\n      \u003cCardFooter className=\"flex justify-between\"\u003e\n        \u003cButton variant=\"outline\"\u003eBack to Tasks\u003c/Button\u003e\n        \u003cButton\u003eUpdate Status\u003c/Button\u003e\n      \u003c/CardFooter\u003e\n    \u003c/Card\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/tasks/task-comments.tsx\"\n\"use client\"\n\nimport { useState } from \"react\"\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { formatDistanceToNow } from \"date-fns\"\n\n// Mock comments data\nconst initialComments = [\n  {\n    id: 1,\n    user: {\n      name: \"Emma Wilson\",\n      avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    },\n    content: \"I've started working on the design mockups. Will share them by tomorrow.\",\n    timestamp: new Date(Date.now() - 1000 * 60 * 60 * 3), // 3 hours ago\n  },\n  {\n    id: 2,\n    user: {\n      name: \"Liam Johnson\",\n      avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    },\n    content: \"Looks good! Make sure to follow the brand guidelines for colors and typography.\",\n    timestamp: new Date(Date.now() - 1000 * 60 * 60 * 2), // 2 hours ago\n  },\n  {\n    id: 3,\n    user: {\n      name: \"Sophia Chen\",\n      avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    },\n    content: \"I can help with the JavaScript interactions once the HTML/CSS is ready.\",\n    timestamp: new Date(Date.now() - 1000 * 60 * 30), // 30 minutes ago\n  },\n]\n\nexport function TaskComments({ id }: { id: string }) {\n  const [comments, setComments] = useState(initialComments)\n  const [newComment, setNewComment] = useState(\"\")\n  const [isSubmitting, setIsSubmitting] = useState(false)\n\n  const handleSubmitComment = () =\u003e {\n    if (!newComment.trim()) return\n\n    setIsSubmitting(true)\n\n    // Simulate API call\n    setTimeout(() =\u003e {\n      const comment = {\n        id: comments.length + 1,\n        user: {\n          name: \"Current User\", // In a real app, this would be the logged-in user\n          avatar: \"/placeholder.svg?height=40\u0026width=40\",\n        },\n        content: newComment,\n        timestamp: new Date(),\n      }\n\n      setComments([...comments, comment])\n      setNewComment(\"\")\n      setIsSubmitting(false)\n    }, 500)\n  }\n\n  return (\n    \u003cCard\u003e\n      \u003cCardHeader\u003e\n        \u003cCardTitle className=\"text-lg\"\u003eComments\u003c/CardTitle\u003e\n      \u003c/CardHeader\u003e\n      \u003cCardContent className=\"space-y-4\"\u003e\n        {comments.length === 0 ? (\n          \u003cp className=\"text-center text-sm text-muted-foreground\"\u003eNo comments yet. Be the first to comment!\u003c/p\u003e\n        ) : (\n          \u003cdiv className=\"space-y-4\"\u003e\n            {comments.map((comment) =\u003e (\n              \u003cdiv key={comment.id} className=\"flex gap-3\"\u003e\n                \u003cAvatar className=\"h-8 w-8\"\u003e\n                  \u003cAvatarImage src={comment.user.avatar} alt={comment.user.name} /\u003e\n                  \u003cAvatarFallback\u003e\n                    {comment.user.name\n                      .split(\" \")\n                      .map((n) =\u003e n[0])\n                      .join(\"\")}\n                  \u003c/AvatarFallback\u003e\n                \u003c/Avatar\u003e\n                \u003cdiv className=\"flex-1 space-y-1\"\u003e\n                  \u003cdiv className=\"flex items-center justify-between\"\u003e\n                    \u003cp className=\"text-sm font-medium\"\u003e{comment.user.name}\u003c/p\u003e\n                    \u003cp className=\"text-xs text-muted-foreground\"\u003e\n                      {formatDistanceToNow(comment.timestamp, { addSuffix: true })}\n                    \u003c/p\u003e\n                  \u003c/div\u003e\n                  \u003cp className=\"text-sm\"\u003e{comment.content}\u003c/p\u003e\n                \u003c/div\u003e\n              \u003c/div\u003e\n            ))}\n          \u003c/div\u003e\n        )}\n      \u003c/CardContent\u003e\n      \u003cCardFooter\u003e\n        \u003cdiv className=\"flex w-full flex-col space-y-2\"\u003e\n          \u003cTextarea\n            placeholder=\"Add a comment...\"\n            value={newComment}\n            onChange={(e) =\u003e setNewComment(e.target.value)}\n            className=\"min-h-[80px] resize-none\"\n          /\u003e\n          \u003cdiv className=\"flex justify-end\"\u003e\n            \u003cButton onClick={handleSubmitComment} disabled={!newComment.trim() || isSubmitting}\u003e\n              {isSubmitting ? \"Posting...\" : \"Post Comment\"}\n            \u003c/Button\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/CardFooter\u003e\n    \u003c/Card\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/tasks/task-attachments.tsx\"\n\"use client\"\n\nimport { useState } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { formatBytes } from \"@/lib/utils\"\nimport { FileIcon, ImageIcon, PaperclipIcon, TrashIcon, UploadIcon } from \"lucide-react\"\n\n// Mock attachments data\nconst initialAttachments = [\n  {\n    id: 1,\n    name: \"landing-page-mockup.png\",\n    type: \"image/png\",\n    size: 1200000, // 1.2 MB\n    url: \"/placeholder.svg?height=100\u0026width=100\",\n    uploadedAt: new Date(Date.now() - 1000 * 60 * 60 * 24), // 1 day ago\n  },\n  {\n    id: 2,\n    name: \"requirements.pdf\",\n    type: \"application/pdf\",\n    size: 500000, // 500 KB\n    url: \"#\",\n    uploadedAt: new Date(Date.now() - 1000 * 60 * 60 * 48), // 2 days ago\n  },\n  {\n    id: 3,\n    name: \"brand-guidelines.docx\",\n    type: \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n    size: 350000, // 350 KB\n    url: \"#\",\n    uploadedAt: new Date(Date.now() - 1000 * 60 * 60 * 72), // 3 days ago\n  },\n]\n\nexport function TaskAttachments({ id }: { id: string }) {\n  const [attachments, setAttachments] = useState(initialAttachments)\n  const [isUploading, setIsUploading] = useState(false)\n\n  const handleFileUpload = (event) =\u003e {\n    const files = event.target.files\n    if (!files || files.length === 0) return\n\n    setIsUploading(true)\n\n    // Simulate API call for file upload\n    setTimeout(() =\u003e {\n      const newAttachments = Array.from(files).map((file, index) =\u003e ({\n        id: attachments.length + index + 1,\n        name: file.name,\n        type: file.type,\n        size: file.size,\n        url: file.type.startsWith(\"image/\") ? URL.createObjectURL(file) : \"#\",\n        uploadedAt: new Date(),\n      }))\n\n      setAttachments([...attachments, ...newAttachments])\n      setIsUploading(false)\n    }, 1000)\n  }\n\n  const handleDeleteAttachment = (id) =\u003e {\n    setAttachments(attachments.filter((attachment) =\u003e attachment.id !== id))\n  }\n\n  const getFileIcon = (type) =\u003e {\n    if (type.startsWith(\"image/\")) {\n      return \u003cImageIcon className=\"h-6 w-6 text-blue-500\" /\u003e\n    } else if (type === \"application/pdf\" || type.includes(\"document\") || type.includes(\"text\")) {\n      return \u003cFileIcon className=\"h-6 w-6 text-red-500\" /\u003e\n    } else {\n      return \u003cPaperclipIcon className=\"h-6 w-6 text-gray-500\" /\u003e\n    }\n  }\n\n  return (\n    \u003cCard\u003e\n      \u003cCardHeader\u003e\n        \u003cCardTitle className=\"text-lg\"\u003eAttachments\u003c/CardTitle\u003e\n      \u003c/CardHeader\u003e\n      \u003cCardContent className=\"space-y-4\"\u003e\n        {attachments.length === 0 ? (\n          \u003cp className=\"text-center text-sm text-muted-foreground\"\u003e\n            No attachments yet. Upload files to share with the team.\n          \u003c/p\u003e\n        ) : (\n          \u003cdiv className=\"space-y-2\"\u003e\n            {attachments.map((attachment) =\u003e (\n              \u003cdiv key={attachment.id} className=\"flex items-center justify-between rounded-md border p-2\"\u003e\n                \u003cdiv className=\"flex items-center gap-2\"\u003e\n                  {getFileIcon(attachment.type)}\n                  \u003cdiv\u003e\n                    \u003cp className=\"text-sm font-medium\"\u003e{attachment.name}\u003c/p\u003e\n                    \u003cp className=\"text-xs text-muted-foreground\"\u003e\n                      {formatBytes(attachment.size)} · {attachment.uploadedAt.toLocaleDateString()}\n                    \u003c/p\u003e\n                  \u003c/div\u003e\n                \u003c/div\u003e\n                \u003cdiv className=\"flex items-center gap-2\"\u003e\n                  \u003cButton variant=\"ghost\" size=\"sm\" asChild\u003e\n                    \u003ca href={attachment.url} target=\"_blank\" rel=\"noopener noreferrer\"\u003e\n                      View\n                    \u003c/a\u003e\n                  \u003c/Button\u003e\n                  \u003cButton variant=\"ghost\" size=\"sm\" onClick={() =\u003e handleDeleteAttachment(attachment.id)}\u003e\n                    \u003cTrashIcon className=\"h-4 w-4 text-red-500\" /\u003e\n                  \u003c/Button\u003e\n                \u003c/div\u003e\n              \u003c/div\u003e\n            ))}\n          \u003c/div\u003e\n        )}\n      \u003c/CardContent\u003e\n      \u003cCardFooter\u003e\n        \u003cdiv className=\"w-full\"\u003e\n          \u003clabel htmlFor=\"file-upload\"\u003e\n            \u003cdiv className=\"flex cursor-pointer items-center justify-center gap-2 rounded-md border border-dashed p-4 hover:bg-muted\"\u003e\n              \u003cUploadIcon className=\"h-5 w-5\" /\u003e\n              \u003cspan className=\"text-sm font-medium\"\u003e{isUploading ? \"Uploading...\" : \"Upload Files\"}\u003c/span\u003e\n              \u003cinput\n                id=\"file-upload\"\n                type=\"file\"\n                multiple\n                className=\"hidden\"\n                onChange={handleFileUpload}\n                disabled={isUploading}\n              /\u003e\n            \u003c/div\u003e\n          \u003c/label\u003e\n        \u003c/div\u003e\n      \u003c/CardFooter\u003e\n    \u003c/Card\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/reports/task-completion-chart.tsx\"\n\"use client\"\n\nimport { Bar, BarChart, CartesianGrid, Legend, ResponsiveContainer, Tooltip, XAxis, YAxis } from \"@/components/ui/chart\"\n\n// Mock data for task completion\nconst data = [\n  {\n    name: \"Week 1\",\n    completed: 12,\n    overdue: 2,\n  },\n  {\n    name: \"Week 2\",\n    completed: 18,\n    overdue: 1,\n  },\n  {\n    name: \"Week 3\",\n    completed: 15,\n    overdue: 3,\n  },\n  {\n    name: \"Week 4\",\n    completed: 20,\n    overdue: 0,\n  },\n  {\n    name: \"Week 5\",\n    completed: 16,\n    overdue: 2,\n  },\n  {\n    name: \"Week 6\",\n    completed: 22,\n    overdue: 1,\n  },\n]\n\nexport function TaskCompletionChart() {\n  return (\n    \u003cResponsiveContainer width=\"100%\" height=\"100%\"\u003e\n      \u003cBarChart\n        data={data}\n        margin={{\n          top: 20,\n          right: 30,\n          left: 20,\n          bottom: 5,\n        }}\n      \u003e\n        \u003cCartesianGrid strokeDasharray=\"3 3\" /\u003e\n        \u003cXAxis dataKey=\"name\" /\u003e\n        \u003cYAxis /\u003e\n        \u003cTooltip /\u003e\n        \u003cLegend /\u003e\n        \u003cBar dataKey=\"completed\" fill=\"#4ade80\" name=\"Completed Tasks\" /\u003e\n        \u003cBar dataKey=\"overdue\" fill=\"#f87171\" name=\"Overdue Tasks\" /\u003e\n      \u003c/BarChart\u003e\n    \u003c/ResponsiveContainer\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/reports/team-performance-chart.tsx\"\n\"use client\"\n\nimport { Bar, BarChart, CartesianGrid, Legend, ResponsiveContainer, Tooltip, XAxis, YAxis } from \"@/components/ui/chart\"\n\n// Mock data for team performance\nconst data = [\n  {\n    name: \"Emma\",\n    completed: 15,\n    inProgress: 3,\n  },\n  {\n    name: \"Jackson\",\n    completed: 20,\n    inProgress: 5,\n  },\n  {\n    name: \"Sophia\",\n    completed: 18,\n    inProgress: 2,\n  },\n  {\n    name: \"Liam\",\n    completed: 12,\n    inProgress: 4,\n  },\n  {\n    name: \"Olivia\",\n    completed: 16,\n    inProgress: 3,\n  },\n]\n\nexport function TeamPerformanceChart() {\n  return (\n    \u003cResponsiveContainer width=\"100%\" height=\"100%\"\u003e\n      \u003cBarChart\n        data={data}\n        layout=\"vertical\"\n        margin={{\n          top: 20,\n          right: 30,\n          left: 60,\n          bottom: 5,\n        }}\n      \u003e\n        \u003cCartesianGrid strokeDasharray=\"3 3\" /\u003e\n        \u003cXAxis type=\"number\" /\u003e\n        \u003cYAxis dataKey=\"name\" type=\"category\" /\u003e\n        \u003cTooltip /\u003e\n        \u003cLegend /\u003e\n        \u003cBar dataKey=\"completed\" stackId=\"a\" fill=\"#8884d8\" name=\"Completed\" /\u003e\n        \u003cBar dataKey=\"inProgress\" stackId=\"a\" fill=\"#82ca9d\" name=\"In Progress\" /\u003e\n      \u003c/BarChart\u003e\n    \u003c/ResponsiveContainer\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/reports/priority-distribution-chart.tsx\"\n\"use client\"\n\nimport { Cell, Legend, Pie, PieChart, ResponsiveContainer, Tooltip } from \"@/components/ui/chart\"\n\n// Mock data for priority distribution\nconst data = [\n  { name: \"High\", value: 12, color: \"#ef4444\" },\n  { name: \"Medium\", value: 24, color: \"#f59e0b\" },\n  { name: \"Low\", value: 18, color: \"#10b981\" },\n]\n\nexport function PriorityDistributionChart() {\n  return (\n    \u003cResponsiveContainer width=\"100%\" height=\"100%\"\u003e\n      \u003cPieChart\u003e\n        \u003cPie\n          data={data}\n          cx=\"50%\"\n          cy=\"50%\"\n          labelLine={false}\n          outerRadius={80}\n          fill=\"#8884d8\"\n          dataKey=\"value\"\n          label={({ name, percent }) =\u003e `${name} ${(percent * 100).toFixed(0)}%`}\n        \u003e\n          {data.map((entry, index) =\u003e (\n            \u003cCell key={`cell-${index}`} fill={entry.color} /\u003e\n          ))}\n        \u003c/Pie\u003e\n        \u003cTooltip /\u003e\n        \u003cLegend /\u003e\n      \u003c/PieChart\u003e\n    \u003c/ResponsiveContainer\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/settings/profile-settings.tsx\"\n\"use client\"\n\nimport { useState } from \"react\"\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Form, FormControl, FormDescription, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\"\nimport { Input } from \"@/components/ui/input\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { useForm } from \"react-hook-form\"\n\nexport function ProfileSettings({ user }) {\n  const [isLoading, setIsLoading] = useState(false)\n\n  const form = useForm({\n    defaultValues: {\n      name: user.name || \"\",\n      email: user.email || \"\",\n      bio: user.bio || \"\",\n      jobTitle: user.jobTitle || \"\",\n      company: user.company || \"\",\n    },\n  })\n\n  async function onSubmit(data) {\n    setIsLoading(true)\n\n    try {\n      // Here you would normally send the data to your API\n      console.log(\"Profile updated:\", data)\n\n      // Simulate API call\n      await new Promise((resolve) =\u003e setTimeout(resolve, 1000))\n    } catch (error) {\n      console.error(\"Error updating profile:\", error)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    \u003cCard\u003e\n      \u003cCardHeader\u003e\n        \u003cCardTitle\u003eProfile Information\u003c/CardTitle\u003e\n        \u003cCardDescription\u003eUpdate your profile information and how others see you on the platform\u003c/CardDescription\u003e\n      \u003c/CardHeader\u003e\n      \u003cForm {...form}\u003e\n        \u003cform onSubmit={form.handleSubmit(onSubmit)}\u003e\n          \u003cCardContent className=\"space-y-6\"\u003e\n            \u003cdiv className=\"flex items-center gap-4\"\u003e\n              \u003cAvatar className=\"h-16 w-16\"\u003e\n                \u003cAvatarImage src={user.avatar || \"/placeholder.svg?height=64\u0026width=64\"} alt={user.name} /\u003e\n                \u003cAvatarFallback\u003e\n                  {user.name\n                    ? user.name\n                        .split(\" \")\n                        .map((n) =\u003e n[0])\n                        .join(\"\")\n                    : \"U\"}\n                \u003c/AvatarFallback\u003e\n              \u003c/Avatar\u003e\n              \u003cdiv\u003e\n                \u003cButton variant=\"outline\" size=\"sm\"\u003e\n                  Change Avatar\n                \u003c/Button\u003e\n                \u003cp className=\"mt-1 text-xs text-muted-foreground\"\u003eJPG, GIF or PNG. Max size of 2MB.\u003c/p\u003e\n              \u003c/div\u003e\n            \u003c/div\u003e\n\n            \u003cdiv className=\"grid gap-4 md:grid-cols-2\"\u003e\n              \u003cFormField\n                control={form.control}\n                name=\"name\"\n                render={({ field }) =\u003e (\n                  \u003cFormItem\u003e\n                    \u003cFormLabel\u003eFull Name\u003c/FormLabel\u003e\n                    \u003cFormControl\u003e\n                      \u003cInput placeholder=\"Your name\" {...field} /\u003e\n                    \u003c/FormControl\u003e\n                    \u003cFormMessage /\u003e\n                  \u003c/FormItem\u003e\n                )}\n              /\u003e\n              \u003cFormField\n                control={form.control}\n                name=\"email\"\n                render={({ field }) =\u003e (\n                  \u003cFormItem\u003e\n                    \u003cFormLabel\u003eEmail\u003c/FormLabel\u003e\n                    \u003cFormControl\u003e\n                      \u003cInput placeholder=\"Your email\" type=\"email\" {...field} /\u003e\n                    \u003c/FormControl\u003e\n                    \u003cFormMessage /\u003e\n                  \u003c/FormItem\u003e\n                )}\n              /\u003e\n            \u003c/div\u003e\n\n            \u003cFormField\n              control={form.control}\n              name=\"bio\"\n              render={({ field }) =\u003e (\n                \u003cFormItem\u003e\n                  \u003cFormLabel\u003eBio\u003c/FormLabel\u003e\n                  \u003cFormControl\u003e\n                    \u003cTextarea placeholder=\"Tell us a little about yourself\" className=\"min-h-[100px]\" {...field} /\u003e\n                  \u003c/FormControl\u003e\n                  \u003cFormDescription\u003eBrief description for your profile. URLs are hyperlinked.\u003c/FormDescription\u003e\n                  \u003cFormMessage /\u003e\n                \u003c/FormItem\u003e\n              )}\n            /\u003e\n\n            \u003cdiv className=\"grid gap-4 md:grid-cols-2\"\u003e\n              \u003cFormField\n                control={form.control}\n                name=\"jobTitle\"\n                render={({ field }) =\u003e (\n                  \u003cFormItem\u003e\n                    \u003cFormLabel\u003eJob Title\u003c/FormLabel\u003e\n                    \u003cFormControl\u003e\n                      \u003cInput placeholder=\"Your job title\" {...field} /\u003e\n                    \u003c/FormControl\u003e\n                    \u003cFormMessage /\u003e\n                  \u003c/FormItem\u003e\n                )}\n              /\u003e\n              \u003cFormField\n                control={form.control}\n                name=\"company\"\n                render={({ field }) =\u003e (\n                  \u003cFormItem\u003e\n                    \u003cFormLabel\u003eCompany\u003c/FormLabel\u003e\n                    \u003cFormControl\u003e\n                      \u003cInput placeholder=\"Your company\" {...field} /\u003e\n                    \u003c/FormControl\u003e\n                    \u003cFormMessage /\u003e\n                  \u003c/FormItem\u003e\n                )}\n              /\u003e\n            \u003c/div\u003e\n          \u003c/CardContent\u003e\n          \u003cCardFooter\u003e\n            \u003cButton type=\"submit\" disabled={isLoading}\u003e\n              {isLoading ? \"Saving...\" : \"Save Changes\"}\n            \u003c/Button\u003e\n          \u003c/CardFooter\u003e\n        \u003c/form\u003e\n      \u003c/Form\u003e\n    \u003c/Card\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/settings/notification-settings.tsx\"\n\"use client\"\n\nimport { useState } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Label } from \"@/components/ui/label\"\nimport { Switch } from \"@/components/ui/switch\"\n\nexport function NotificationSettings({ user }) {\n  const [isLoading, setIsLoading] = useState(false)\n  const [settings, setSettings] = useState({\n    emailNotifications: true,\n    pushNotifications: true,\n    taskAssigned: true,\n    taskUpdated: true,\n    taskCompleted: true,\n    commentAdded: true,\n    deadlineReminder: true,\n    weeklyDigest: false,\n  })\n\n  const handleToggle = (key) =\u003e {\n    setSettings({\n      ...settings,\n      [key]: !settings[key],\n    })\n  }\n\n  const handleSave = async () =\u003e {\n    setIsLoading(true)\n\n    try {\n      // Here you would normally send the data to your API\n      console.log(\"Notification settings updated:\", settings)\n\n      // Simulate API call\n      await new Promise((resolve) =\u003e setTimeout(resolve, 1000))\n    } catch (error) {\n      console.error(\"Error updating notification settings:\", error)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    \u003cCard\u003e\n      \u003cCardHeader\u003e\n        \u003cCardTitle\u003eNotification Preferences\u003c/CardTitle\u003e\n        \u003cCardDescription\u003eChoose how and when you want to be notified\u003c/CardDescription\u003e\n      \u003c/CardHeader\u003e\n      \u003cCardContent className=\"space-y-6\"\u003e\n        \u003cdiv className=\"space-y-4\"\u003e\n          \u003ch3 className=\"text-sm font-medium\"\u003eNotification Channels\u003c/h3\u003e\n          \u003cdiv className=\"flex items-center justify-between\"\u003e\n            \u003cdiv className=\"space-y-0.5\"\u003e\n              \u003cLabel htmlFor=\"emailNotifications\"\u003eEmail Notifications\u003c/Label\u003e\n              \u003cp className=\"text-xs text-muted-foreground\"\u003eReceive notifications via email\u003c/p\u003e\n            \u003c/div\u003e\n            \u003cSwitch\n              id=\"emailNotifications\"\n              checked={settings.emailNotifications}\n              onCheckedChange={() =\u003e handleToggle(\"emailNotifications\")}\n            /\u003e\n          \u003c/div\u003e\n          \u003cdiv className=\"flex items-center justify-between\"\u003e\n            \u003cdiv className=\"space-y-0.5\"\u003e\n              \u003cLabel htmlFor=\"pushNotifications\"\u003ePush Notifications\u003c/Label\u003e\n              \u003cp className=\"text-xs text-muted-foreground\"\u003eReceive notifications in your browser\u003c/p\u003e\n            \u003c/div\u003e\n            \u003cSwitch\n              id=\"pushNotifications\"\n              checked={settings.pushNotifications}\n              onCheckedChange={() =\u003e handleToggle(\"pushNotifications\")}\n            /\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n\n        \u003cdiv className=\"space-y-4\"\u003e\n          \u003ch3 className=\"text-sm font-medium\"\u003eTask Notifications\u003c/h3\u003e\n          \u003cdiv className=\"flex items-center justify-between\"\u003e\n            \u003cdiv className=\"space-y-0.5\"\u003e\n              \u003cLabel htmlFor=\"taskAssigned\"\u003eTask Assigned\u003c/Label\u003e\n              \u003cp className=\"text-xs text-muted-foreground\"\u003eWhen a task is assigned to you\u003c/p\u003e\n            \u003c/div\u003e\n            \u003cSwitch\n              id=\"taskAssigned\"\n              checked={settings.taskAssigned}\n              onCheckedChange={() =\u003e handleToggle(\"taskAssigned\")}\n            /\u003e\n          \u003c/div\u003e\n          \u003cdiv className=\"flex items-center justify-between\"\u003e\n            \u003cdiv className=\"space-y-0.5\"\u003e\n              \u003cLabel htmlFor=\"taskUpdated\"\u003eTask Updated\u003c/Label\u003e\n              \u003cp className=\"text-xs text-muted-foreground\"\u003eWhen a task you're assigned to is updated\u003c/p\u003e\n            \u003c/div\u003e\n            \u003cSwitch\n              id=\"taskUpdated\"\n              checked={settings.taskUpdated}\n              onCheckedChange={() =\u003e handleToggle(\"taskUpdated\")}\n            /\u003e\n          \u003c/div\u003e\n          \u003cdiv className=\"flex items-center justify-between\"\u003e\n            \u003cdiv className=\"space-y-0.5\"\u003e\n              \u003cLabel htmlFor=\"taskCompleted\"\u003eTask Completed\u003c/Label\u003e\n              \u003cp className=\"text-xs text-muted-foreground\"\u003eWhen a task you're assigned to is marked as completed\u003c/p\u003e\n            \u003c/div\u003e\n            \u003cSwitch\n              id=\"taskCompleted\"\n              checked={settings.taskCompleted}\n              onCheckedChange={() =\u003e handleToggle(\"taskCompleted\")}\n            /\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n\n        \u003cdiv className=\"space-y-4\"\u003e\n          \u003ch3 className=\"text-sm font-medium\"\u003eOther Notifications\u003c/h3\u003e\n          \u003cdiv className=\"flex items-center justify-between\"\u003e\n            \u003cdiv className=\"space-y-0.5\"\u003e\n              \u003cLabel htmlFor=\"commentAdded\"\u003eComment Added\u003c/Label\u003e\n              \u003cp className=\"text-xs text-muted-foreground\"\u003eWhen someone comments on a task you're involved with\u003c/p\u003e\n            \u003c/div\u003e\n            \u003cSwitch\n              id=\"commentAdded\"\n              checked={settings.commentAdded}\n              onCheckedChange={() =\u003e handleToggle(\"commentAdded\")}\n            /\u003e\n          \u003c/div\u003e\n          \u003cdiv className=\"flex items-center justify-between\"\u003e\n            \u003cdiv className=\"space-y-0.5\"\u003e\n              \u003cLabel htmlFor=\"deadlineReminder\"\u003eDeadline Reminders\u003c/Label\u003e\n              \u003cp className=\"text-xs text-muted-foreground\"\u003eReceive reminders before task deadlines\u003c/p\u003e\n            \u003c/div\u003e\n            \u003cSwitch\n              id=\"deadlineReminder\"\n              checked={settings.deadlineReminder}\n              onCheckedChange={() =\u003e handleToggle(\"deadlineReminder\")}\n            /\u003e\n          \u003c/div\u003e\n          \u003cdiv className=\"flex items-center justify-between\"\u003e\n            \u003cdiv className=\"space-y-0.5\"\u003e\n              \u003cLabel htmlFor=\"weeklyDigest\"\u003eWeekly Digest\u003c/Label\u003e\n              \u003cp className=\"text-xs text-muted-foreground\"\u003eReceive a weekly summary of your tasks and progress\u003c/p\u003e\n            \u003c/div\u003e\n            \u003cSwitch\n              id=\"weeklyDigest\"\n              checked={settings.weeklyDigest}\n              onCheckedChange={() =\u003e handleToggle(\"weeklyDigest\")}\n            /\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/CardContent\u003e\n      \u003cCardFooter\u003e\n        \u003cButton onClick={handleSave} disabled={isLoading}\u003e\n          {isLoading ? \"Saving...\" : \"Save Preferences\"}\n        \u003c/Button\u003e\n      \u003c/CardFooter\u003e\n    \u003c/Card\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/settings/security-settings.tsx\"\n\"use client\"\n\nimport { useState } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Form, FormControl, FormDescription, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { Switch } from \"@/components/ui/switch\"\nimport { useForm } from \"react-hook-form\"\n\nexport function SecuritySettings({ user }) {\n  const [isLoading, setIsLoading] = useState(false)\n  const [twoFactorEnabled, setTwoFactorEnabled] = useState(false)\n\n  const form = useForm({\n    defaultValues: {\n      currentPassword: \"\",\n      newPassword: \"\",\n      confirmPassword: \"\",\n    },\n  })\n\n  async function onSubmit(data) {\n    setIsLoading(true)\n\n    try {\n      // Here you would normally send the data to your API\n      console.log(\"Password updated:\", data)\n\n      // Simulate API call\n      await new Promise((resolve) =\u003e setTimeout(resolve, 1000))\n\n      // Reset form\n      form.reset()\n    } catch (error) {\n      console.error(\"Error updating password:\", error)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const handleToggleTwoFactor = async () =\u003e {\n    setIsLoading(true)\n\n    try {\n      // Here you would normally send the data to your API\n      console.log(\"Two-factor authentication toggled:\", !twoFactorEnabled)\n\n      // Simulate API call\n      await new Promise((resolve) =\u003e setTimeout(resolve, 1000))\n\n      setTwoFactorEnabled(!twoFactorEnabled)\n    } catch (error) {\n      console.error(\"Error toggling two-factor authentication:\", error)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    \u003cCard\u003e\n      \u003cCardHeader\u003e\n        \u003cCardTitle\u003eSecurity Settings\u003c/CardTitle\u003e\n        \u003cCardDescription\u003eManage your password and account security\u003c/CardDescription\u003e\n      \u003c/CardHeader\u003e\n      \u003cCardContent className=\"space-y-6\"\u003e\n        \u003cForm {...form}\u003e\n          \u003cform onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\"\u003e\n            \u003cFormField\n              control={form.control}\n              name=\"currentPassword\"\n              render={({ field }) =\u003e (\n                \u003cFormItem\u003e\n                  \u003cFormLabel\u003eCurrent Password\u003c/FormLabel\u003e\n                  \u003cFormControl\u003e\n                    \u003cInput type=\"password\" {...field} /\u003e\n                  \u003c/FormControl\u003e\n                  \u003cFormMessage /\u003e\n                \u003c/FormItem\u003e\n              )}\n            /\u003e\n            \u003cFormField\n              control={form.control}\n              name=\"newPassword\"\n              render={({ field }) =\u003e (\n                \u003cFormItem\u003e\n                  \u003cFormLabel\u003eNew Password\u003c/FormLabel\u003e\n                  \u003cFormControl\u003e\n                    \u003cInput type=\"password\" {...field} /\u003e\n                  \u003c/FormControl\u003e\n                  \u003cFormDescription\u003e\n                    Password must be at least 8 characters long and include a mix of letters, numbers, and symbols.\n                  \u003c/FormDescription\u003e\n                  \u003cFormMessage /\u003e\n                \u003c/FormItem\u003e\n              )}\n            /\u003e\n            \u003cFormField\n              control={form.control}\n              name=\"confirmPassword\"\n              render={({ field }) =\u003e (\n                \u003cFormItem\u003e\n                  \u003cFormLabel\u003eConfirm New Password\u003c/FormLabel\u003e\n                  \u003cFormControl\u003e\n                    \u003cInput type=\"password\" {...field} /\u003e\n                  \u003c/FormControl\u003e\n                  \u003cFormMessage /\u003e\n                \u003c/FormItem\u003e\n              )}\n            /\u003e\n            \u003cButton type=\"submit\" disabled={isLoading}\u003e\n              {isLoading ? \"Updating...\" : \"Update Password\"}\n            \u003c/Button\u003e\n          \u003c/form\u003e\n        \u003c/Form\u003e\n\n        \u003cdiv className=\"space-y-4\"\u003e\n          \u003ch3 className=\"text-sm font-medium\"\u003eTwo-Factor Authentication\u003c/h3\u003e\n          \u003cdiv className=\"flex items-center justify-between\"\u003e\n            \u003cdiv className=\"space-y-0.5\"\u003e\n              \u003cLabel htmlFor=\"twoFactorAuth\"\u003eEnable Two-Factor Authentication\u003c/Label\u003e\n              \u003cp className=\"text-xs text-muted-foreground\"\u003eAdd an extra layer of security to your account\u003c/p\u003e\n            \u003c/div\u003e\n            \u003cSwitch\n              id=\"twoFactorAuth\"\n              checked={twoFactorEnabled}\n              onCheckedChange={handleToggleTwoFactor}\n              disabled={isLoading}\n            /\u003e\n          \u003c/div\u003e\n          {twoFactorEnabled \u0026\u0026 (\n            \u003cdiv className=\"rounded-md bg-muted p-4\"\u003e\n              \u003cp className=\"text-sm\"\u003e\n                Two-factor authentication is enabled. You will receive a verification code via email when signing in.\n              \u003c/p\u003e\n            \u003c/div\u003e\n          )}\n        \u003c/div\u003e\n\n        \u003cdiv className=\"space-y-4\"\u003e\n          \u003ch3 className=\"text-sm font-medium\"\u003eSession Management\u003c/h3\u003e\n          \u003cdiv className=\"rounded-md border p-4\"\u003e\n            \u003cdiv className=\"flex items-center justify-between\"\u003e\n              \u003cdiv\u003e\n                \u003cp className=\"text-sm font-medium\"\u003eActive Sessions\u003c/p\u003e\n                \u003cp className=\"text-xs text-muted-foreground\"\u003eYou are currently logged in on 2 devices\u003c/p\u003e\n              \u003c/div\u003e\n              \u003cButton variant=\"outline\" size=\"sm\"\u003e\n                Manage Sessions\n              \u003c/Button\u003e\n            \u003c/div\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/CardContent\u003e\n      \u003cCardFooter className=\"flex justify-between\"\u003e\n        \u003cButton variant=\"outline\" className=\"text-red-500\"\u003e\n          Delete Account\n        \u003c/Button\u003e\n        \u003cButton variant=\"outline\"\u003eDownload Personal Data\u003c/Button\u003e\n      \u003c/CardFooter\u003e\n    \u003c/Card\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/users/user-management.tsx\"\n\"use client\"\n\nimport { useState } from \"react\"\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\"\nimport { Input } from \"@/components/ui/input\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\"\nimport { MoreHorizontalIcon, SearchIcon } from \"lucide-react\"\n\n// Mock users data\nconst initialUsers = [\n  {\n    id: 1,\n    name: \"Emma Wilson\",\n    email: \"emma@example.com\",\n    role: \"admin\",\n    status: \"active\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    lastActive: \"2023-11-28T10:30:00Z\",\n  },\n  {\n    id: 2,\n    name: \"Jackson Lee\",\n    email: \"jackson@example.com\",\n    role: \"editor\",\n    status: \"active\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    lastActive: \"2023-11-27T14:45:00Z\",\n  },\n  {\n    id: 3,\n    name: \"Sophia Chen\",\n    email: \"sophia@example.com\",\n    role: \"editor\",\n    status: \"active\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    lastActive: \"2023-11-28T09:15:00Z\",\n  },\n  {\n    id: 4,\n    name: \"Liam Johnson\",\n    email: \"liam@example.com\",\n    role: \"viewer\",\n    status: \"active\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    lastActive: \"2023-11-26T11:20:00Z\",\n  },\n  {\n    id: 5,\n    name: \"Olivia Martinez\",\n    email: \"olivia@example.com\",\n    role: \"editor\",\n    status: \"inactive\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    lastActive: \"2023-11-20T16:30:00Z\",\n  },\n  {\n    id: 6,\n    name: \"Noah Williams\",\n    email: \"noah@example.com\",\n    role: \"viewer\",\n    status: \"pending\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    lastActive: null,\n  },\n]\n\nexport function UserManagement() {\n  const [users, setUsers] = useState(initialUsers)\n  const [searchQuery, setSearchQuery] = useState(\"\")\n  const [roleFilter, setRoleFilter] = useState(\"all\")\n  const [statusFilter, setStatusFilter] = useState(\"all\")\n\n  const filteredUsers = users.filter((user) =\u003e {\n    const matchesSearch =\n      user.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n      user.email.toLowerCase().includes(searchQuery.toLowerCase())\n\n    const matchesRole = roleFilter === \"all\" || user.role === roleFilter\n    const matchesStatus = statusFilter === \"all\" || user.status === statusFilter\n\n    return matchesSearch \u0026\u0026 matchesRole \u0026\u0026 matchesStatus\n  })\n\n  const handleRoleChange = (userId, newRole) =\u003e {\n    setUsers(users.map((user) =\u003e (user.id === userId ? { ...user, role: newRole } : user)))\n  }\n\n  const handleStatusChange = (userId, newStatus) =\u003e {\n    setUsers(users.map((user) =\u003e (user.id === userId ? { ...user, status: newStatus } : user)))\n  }\n\n  const getRoleBadgeVariant = (role) =\u003e {\n    switch (role) {\n      case \"admin\":\n        return \"default\"\n      case \"editor\":\n        return \"secondary\"\n      case \"viewer\":\n        return \"outline\"\n      default:\n        return \"outline\"\n    }\n  }\n\n  const getStatusBadgeVariant = (status) =\u003e {\n    switch (status) {\n      case \"active\":\n        return \"success\"\n      case \"inactive\":\n        return \"secondary\"\n      case \"pending\":\n        return \"warning\"\n      default:\n        return \"outline\"\n    }\n  }\n\n  const formatLastActive = (lastActive) =\u003e {\n    if (!lastActive) return \"Never\"\n\n    const date = new Date(lastActive)\n    return date.toLocaleDateString() + \" \" + date.toLocaleTimeString()\n  }\n\n  return (\n    \u003cCard\u003e\n      \u003cCardHeader\u003e\n        \u003cCardTitle\u003eUser Management\u003c/CardTitle\u003e\n        \u003cCardDescription\u003eManage users and their permissions in your organization\u003c/CardDescription\u003e\n      \u003c/CardHeader\u003e\n      \u003cCardContent\u003e\n        \u003cdiv className=\"mb-4 flex flex-col gap-4 sm:flex-row sm:items-center sm:justify-between\"\u003e\n          \u003cdiv className=\"flex items-center gap-2\"\u003e\n            \u003cdiv className=\"relative\"\u003e\n              \u003cSearchIcon className=\"absolute left-2.5 top-2.5 h-4 w-4 text-muted-foreground\" /\u003e\n              \u003cInput\n                type=\"search\"\n                placeholder=\"Search users...\"\n                className=\"pl-8\"\n                value={searchQuery}\n                onChange={(e) =\u003e setSearchQuery(e.target.value)}\n              /\u003e\n            \u003c/div\u003e\n          \u003c/div\u003e\n          \u003cdiv className=\"flex flex-col gap-2 sm:flex-row\"\u003e\n            \u003cSelect value={roleFilter} onValueChange={setRoleFilter}\u003e\n              \u003cSelectTrigger className=\"w-[180px]\"\u003e\n                \u003cSelectValue placeholder=\"Filter by role\" /\u003e\n              \u003c/SelectTrigger\u003e\n              \u003cSelectContent\u003e\n                \u003cSelectItem value=\"all\"\u003eAll Roles\u003c/SelectItem\u003e\n                \u003cSelectItem value=\"admin\"\u003eAdmin\u003c/SelectItem\u003e\n                \u003cSelectItem value=\"editor\"\u003eEditor\u003c/SelectItem\u003e\n                \u003cSelectItem value=\"viewer\"\u003eViewer\u003c/SelectItem\u003e\n              \u003c/SelectContent\u003e\n            \u003c/Select\u003e\n            \u003cSelect value={statusFilter} onValueChange={setStatusFilter}\u003e\n              \u003cSelectTrigger className=\"w-[180px]\"\u003e\n                \u003cSelectValue placeholder=\"Filter by status\" /\u003e\n              \u003c/SelectTrigger\u003e\n              \u003cSelectContent\u003e\n                \u003cSelectItem value=\"all\"\u003eAll Statuses\u003c/SelectItem\u003e\n                \u003cSelectItem value=\"active\"\u003eActive\u003c/SelectItem\u003e\n                \u003cSelectItem value=\"inactive\"\u003eInactive\u003c/SelectItem\u003e\n                \u003cSelectItem value=\"pending\"\u003ePending\u003c/SelectItem\u003e\n              \u003c/SelectContent\u003e\n            \u003c/Select\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n        \u003cdiv className=\"rounded-md border\"\u003e\n          \u003cTable\u003e\n            \u003cTableHeader\u003e\n              \u003cTableRow\u003e\n                \u003cTableHead\u003eUser\u003c/TableHead\u003e\n                \u003cTableHead\u003eRole\u003c/TableHead\u003e\n                \u003cTableHead\u003eStatus\u003c/TableHead\u003e\n                \u003cTableHead\u003eLast Active\u003c/TableHead\u003e\n                \u003cTableHead className=\"text-right\"\u003eActions\u003c/TableHead\u003e\n              \u003c/TableRow\u003e\n            \u003c/TableHeader\u003e\n            \u003cTableBody\u003e\n              {filteredUsers.length === 0 ? (\n                \u003cTableRow\u003e\n                  \u003cTableCell colSpan={5} className=\"text-center\"\u003e\n                    No users found\n                  \u003c/TableCell\u003e\n                \u003c/TableRow\u003e\n              ) : (\n                filteredUsers.map((user) =\u003e (\n                  \u003cTableRow key={user.id}\u003e\n                    \u003cTableCell\u003e\n                      \u003cdiv className=\"flex items-center gap-3\"\u003e\n                        \u003cAvatar\u003e\n                          \u003cAvatarImage src={user.avatar} alt={user.name} /\u003e\n                          \u003cAvatarFallback\u003e\n                            {user.name\n                              .split(\" \")\n                              .map((n) =\u003e n[0])\n                              .join(\"\")}\n                          \u003c/AvatarFallback\u003e\n                        \u003c/Avatar\u003e\n                        \u003cdiv\u003e\n                          \u003cp className=\"font-medium\"\u003e{user.name}\u003c/p\u003e\n                          \u003cp className=\"text-sm text-muted-foreground\"\u003e{user.email}\u003c/p\u003e\n                        \u003c/div\u003e\n                      \u003c/div\u003e\n                    \u003c/TableCell\u003e\n                    \u003cTableCell\u003e\n                      \u003cBadge variant={getRoleBadgeVariant(user.role)}\u003e\n                        {user.role.charAt(0).toUpperCase() + user.role.slice(1)}\n                      \u003c/Badge\u003e\n                    \u003c/TableCell\u003e\n                    \u003cTableCell\u003e\n                      \u003cBadge variant={getStatusBadgeVariant(user.status)}\u003e\n                        {user.status.charAt(0).toUpperCase() + user.status.slice(1)}\n                      \u003c/Badge\u003e\n                    \u003c/TableCell\u003e\n                    \u003cTableCell\u003e{formatLastActive(user.lastActive)}\u003c/TableCell\u003e\n                    \u003cTableCell className=\"text-right\"\u003e\n                      \u003cDropdownMenu\u003e\n                        \u003cDropdownMenuTrigger asChild\u003e\n                          \u003cButton variant=\"ghost\" size=\"sm\"\u003e\n                            \u003cMoreHorizontalIcon className=\"h-4 w-4\" /\u003e\n                            \u003cspan className=\"sr-only\"\u003eOpen menu\u003c/span\u003e\n                          \u003c/Button\u003e\n                        \u003c/DropdownMenuTrigger\u003e\n                        \u003cDropdownMenuContent align=\"end\"\u003e\n                          \u003cDropdownMenuLabel\u003eActions\u003c/DropdownMenuLabel\u003e\n                          \u003cDropdownMenuItem\u003eView Profile\u003c/DropdownMenuItem\u003e\n                          \u003cDropdownMenuSeparator /\u003e\n                          \u003cDropdownMenuLabel\u003eChange Role\u003c/DropdownMenuLabel\u003e\n                          \u003cDropdownMenuItem onClick={() =\u003e handleRoleChange(user.id, \"admin\")}\u003e\n                            Make Admin\n                          \u003c/DropdownMenuItem\u003e\n                          \u003cDropdownMenuItem onClick={() =\u003e handleRoleChange(user.id, \"editor\")}\u003e\n                            Make Editor\n                          \u003c/DropdownMenuItem\u003e\n                          \u003cDropdownMenuItem onClick={() =\u003e handleRoleChange(user.id, \"viewer\")}\u003e\n                            Make Viewer\n                          \u003c/DropdownMenuItem\u003e\n                          \u003cDropdownMenuSeparator /\u003e\n                          \u003cDropdownMenuLabel\u003eChange Status\u003c/DropdownMenuLabel\u003e\n                          \u003cDropdownMenuItem onClick={() =\u003e handleStatusChange(user.id, \"active\")}\u003e\n                            Set Active\n                          \u003c/DropdownMenuItem\u003e\n                          \u003cDropdownMenuItem onClick={() =\u003e handleStatusChange(user.id, \"inactive\")}\u003e\n                            Set Inactive\n                          \u003c/DropdownMenuItem\u003e\n                          \u003cDropdownMenuSeparator /\u003e\n                          \u003cDropdownMenuItem className=\"text-red-600\"\u003eDelete User\u003c/DropdownMenuItem\u003e\n                        \u003c/DropdownMenuContent\u003e\n                      \u003c/DropdownMenu\u003e\n                    \u003c/TableCell\u003e\n                  \u003c/TableRow\u003e\n                ))\n              )}\n            \u003c/TableBody\u003e\n          \u003c/Table\u003e\n        \u003c/div\u003e\n      \u003c/CardContent\u003e\n    \u003c/Card\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"lib/auth.ts\"\n// This is a mock implementation for demonstration purposes\n// In a real application, you would use a proper authentication library like NextAuth.js\n\nimport { jwtVerify, SignJWT } from \"jose\"\n\n// Mock user data\nconst users = [\n  {\n    id: 1,\n    name: \"Admin User\",\n    email: \"admin@example.com\",\n    password: \"admin123\", // In a real app, this would be hashed\n    role: \"admin\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    bio: \"Task management system administrator\",\n    jobTitle: \"Project Manager\",\n    company: \"Acme Inc.\",\n  },\n  {\n    id: 2,\n    name: \"Editor User\",\n    email: \"editor@example.com\",\n    password: \"editor123\", // In a real app, this would be hashed\n    role: \"editor\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    bio: \"Frontend developer working on the task management system\",\n    jobTitle: \"Senior Developer\",\n    company: \"Acme Inc.\",\n  },\n  {\n    id: 3,\n    name: \"Viewer User\",\n    email: \"viewer@example.com\",\n    password: \"viewer123\", // In a real app, this would be hashed\n    role: \"viewer\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    bio: \"Team member using the task management system\",\n    jobTitle: \"Content Writer\",\n    company: \"Acme Inc.\",\n  },\n]\n\n// Secret key for JWT\nconst JWT_SECRET = new TextEncoder().encode(process.env.JWT_SECRET || \"your-secret-key\")\n\n// Login user\nexport async function loginUser(email: string, password: string) {\n  // Find user by email\n  const user = users.find((u) =\u003e u.email === email)\n\n  // Check if user exists and password matches\n  if (!user || user.password !== password) {\n    throw new Error(\"Invalid credentials\")\n  }\n\n  // Create JWT token\n  const token = await new SignJWT({ userId: user.id, role: user.role })\n    .setProtectedHeader({ alg: \"HS256\" })\n    .setIssuedAt()\n    .setExpirationTime(\"24h\")\n    .sign(JWT_SECRET)\n\n  // Store token in localStorage (in a real app, use cookies for better security)\n  if (typeof window !== \"undefined\") {\n    localStorage.setItem(\"auth-token\", token)\n  }\n\n  return { user: { id: user.id, name: user.name, email: user.email, role: user.role } }\n}\n\n// Register user\nexport async function registerUser(name: string, email: string, password: string) {\n  // Check if user already exists\n  if (users.find((u) =\u003e u.email === email)) {\n    throw new Error(\"User already exists\")\n  }\n\n  // Create new user\n  const newUser = {\n    id: users.length + 1,\n    name,\n    email,\n    password, // In a real app, this would be hashed\n    role: \"viewer\", // Default role for new users\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    bio: \"\",\n    jobTitle: \"\",\n    company: \"\",\n  }\n\n  // Add user to the mock database\n  users.push(newUser)\n\n  // Create JWT token\n  const token = await new SignJWT({ userId: newUser.id, role: newUser.role })\n    .setProtectedHeader({ alg: \"HS256\" })\n    .setIssuedAt()\n    .setExpirationTime(\"24h\")\n    .sign(JWT_SECRET)\n\n  // Store token in localStorage (in a real app, use cookies for better security)\n  if (typeof window !== \"undefined\") {\n    localStorage.setItem(\"auth-token\", token)\n  }\n\n  return { user: { id: newUser.id, name: newUser.name, email: newUser.email, role: newUser.role } }\n}\n\n// Get user session\nexport async function getUserSession() {\n  // In a server component, we would verify the session cookie\n  // For this demo, we'll simulate a logged-in user\n\n  // In a client component, we would get the token from localStorage\n  let token\n  if (typeof window !== \"undefined\") {\n    token = localStorage.getItem(\"auth-token\")\n  }\n\n  if (!token) {\n    // For demo purposes, return a mock user\n    return users[0]\n  }\n\n  try {\n    // Verify token\n    const { payload } = await jwtVerify(token, JWT_SECRET)\n    const userId = payload.userId as number\n\n    // Find user\n    const user = users.find((u) =\u003e u.id === userId)\n    if (!user) {\n      return null\n    }\n\n    return user\n  } catch (error) {\n    console.error(\"Error verifying token:\", error)\n    return null\n  }\n}\n\n// Logout user\nexport function logoutUser() {\n  if (typeof window !== \"undefined\") {\n    localStorage.removeItem(\"auth-token\")\n  }\n}\n\n[V0_FILE]typescriptreact:file=\"lib/utils.ts\"\nimport { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n\n// Format bytes to human-readable format\nexport function formatBytes(bytes: number, decimals = 2) {\n  if (bytes === 0) return \"0 Bytes\"\n\n  const k = 1024\n  const dm = decimals \u003c 0 ? 0 : decimals\n  const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"]\n\n  const i = Math.floor(Math.log(bytes) / Math.log(k))\n\n  return Number.parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + \" \" + sizes[i]\n}\n\n[V0_FILE]typescriptreact:file=\"tailwind.config.js\"\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  darkMode: [\"class\"],\n  content: [\n    \"./pages/**/*.{ts,tsx}\",\n    \"./components/**/*.{ts,tsx}\",\n    \"./app/**/*.{ts,tsx}\",\n    \"./src/**/*.{ts,tsx}\",\n    \"*.{js,ts,jsx,tsx,mdx}\",\n  ],\n  theme: {\n    container: {\n      center: true,\n      padding: \"2rem\",\n      screens: {\n        \"2xl\": \"1400px\",\n      },\n    },\n    extend: {\n      colors: {\n        border: \"hsl(var(--border))\",\n        input: \"hsl(var(--input))\",\n        ring: \"hsl(var(--ring))\",\n        background: \"hsl(var(--background))\",\n        foreground: \"hsl(var(--foreground))\",\n        primary: {\n          DEFAULT: \"hsl(var(--primary))\",\n          foreground: \"hsl(var(--primary-foreground))\",\n        },\n        secondary: {\n          DEFAULT: \"hsl(var(--secondary))\",\n          foreground: \"hsl(var(--secondary-foreground))\",\n        },\n        destructive: {\n          DEFAULT: \"hsl(var(--destructive))\",\n          foreground: \"hsl(var(--destructive-foreground))\",\n        },\n        muted: {\n          DEFAULT: \"hsl(var(--muted))\",\n          foreground: \"hsl(var(--muted-foreground))\",\n        },\n        accent: {\n          DEFAULT: \"hsl(var(--accent))\",\n          foreground: \"hsl(var(--accent-foreground))\",\n        },\n        popover: {\n          DEFAULT: \"hsl(var(--popover))\",\n          foreground: \"hsl(var(--popover-foreground))\",\n        },\n        card: {\n          DEFAULT: \"hsl(var(--card))\",\n          foreground: \"hsl(var(--card-foreground))\",\n        },\n        success: {\n          DEFAULT: \"#10b981\",\n          foreground: \"#ffffff\",\n        },\n        warning: {\n          DEFAULT: \"#f59e0b\",\n          foreground: \"#ffffff\",\n        },\n      },\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: { height: 0 },\n          to: { height: \"var(--radix-accordion-content-height)\" },\n        },\n        \"accordion-up\": {\n          from: { height: \"var(--radix-accordion-content-height)\" },\n          to: { height: 0 },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\")],\n}\n\n[V0_FILE]typescriptreact:file=\"components/ui/chart.tsx\" isQuickEdit=\"true\"\nexport {\n  Area,\n  AreaChart,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n  Bar,\n  BarChart,\n  CartesianGrid,\n  Legend,\n  Cell,\n  Pie,\n  PieChart,\n} from \"recharts\"\n"])</script><script>self.__next_f.push([1,"5b:T19de4,"])</script><script>self.__next_f.push([1,"[V0_FILE]tsx:file=\"app/page.tsx\"\nimport { redirect } from \"next/navigation\";\nimport { DashboardHeader } from \"@/components/dashboard/dashboard-header\";\nimport { DashboardShell } from \"@/components/dashboard/dashboard-shell\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Overview } from \"@/components/dashboard/overview\";\nimport { RecentTasks } from \"@/components/dashboard/recent-tasks\";\nimport { TeamMembers } from \"@/components/dashboard/team-members\";\nimport { getUserSession } from \"@/lib/auth\";\n\nexport default async function DashboardPage() {\n  const user = await getUserSession();\n  \n  if (!user) {\n    redirect(\"/login\");\n  }\n  \n  return (\n    \u003cDashboardShell\u003e\n      \u003cDashboardHeader\n        heading=\"Dashboard\"\n        text=\"Welcome back! Here's an overview of your team's tasks.\"\n      \u003e\n        \u003cButton\u003e\n          \u003ca href=\"/tasks/new\"\u003eCreate Task\u003c/a\u003e\n        \u003c/Button\u003e\n      \u003c/DashboardHeader\u003e\n      \u003cdiv className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\"\u003e\n        \u003cCard\u003e\n          \u003cCardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\"\u003e\n            \u003cCardTitle className=\"text-sm font-medium\"\u003eTotal Tasks\u003c/CardTitle\u003e\n            \u003csvg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2\"\n              className=\"h-4 w-4 text-muted-foreground\"\n            \u003e\n              \u003cpath d=\"M12 2v20M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6\" /\u003e\n            \u003c/svg\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent\u003e\n            \u003cdiv className=\"text-2xl font-bold\"\u003e24\u003c/div\u003e\n            \u003cp className=\"text-xs text-muted-foreground\"\u003e\n              +10% from last month\n            \u003c/p\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n        \u003cCard\u003e\n          \u003cCardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\"\u003e\n            \u003cCardTitle className=\"text-sm font-medium\"\u003eCompleted\u003c/CardTitle\u003e\n            \u003csvg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2\"\n              className=\"h-4 w-4 text-muted-foreground\"\n            \u003e\n              \u003cpath d=\"M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2\" /\u003e\n              \u003ccircle cx=\"9\" cy=\"7\" r=\"4\" /\u003e\n              \u003cpath d=\"M22 21v-2a4 4 0 0 0-3-3.87M16 3.13a4 4 0 0 1 0 7.75\" /\u003e\n            \u003c/svg\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent\u003e\n            \u003cdiv className=\"text-2xl font-bold\"\u003e16\u003c/div\u003e\n            \u003cp className=\"text-xs text-muted-foreground\"\u003e\n              +12% from last month\n            \u003c/p\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n        \u003cCard\u003e\n          \u003cCardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\"\u003e\n            \u003cCardTitle className=\"text-sm font-medium\"\u003eIn Progress\u003c/CardTitle\u003e\n            \u003csvg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2\"\n              className=\"h-4 w-4 text-muted-foreground\"\n            \u003e\n              \u003crect width=\"20\" height=\"14\" x=\"2\" y=\"5\" rx=\"2\" /\u003e\n              \u003cpath d=\"M2 10h20\" /\u003e\n            \u003c/svg\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent\u003e\n            \u003cdiv className=\"text-2xl font-bold\"\u003e6\u003c/div\u003e\n            \u003cp className=\"text-xs text-muted-foreground\"\u003e\n              -2% from last month\n            \u003c/p\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n        \u003cCard\u003e\n          \u003cCardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\"\u003e\n            \u003cCardTitle className=\"text-sm font-medium\"\u003eOverdue\u003c/CardTitle\u003e\n            \u003csvg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2\"\n              className=\"h-4 w-4 text-muted-foreground\"\n            \u003e\n              \u003cpath d=\"M22 12h-4l-3 9L9 3l-3 9H2\" /\u003e\n            \u003c/svg\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent\u003e\n            \u003cdiv className=\"text-2xl font-bold\"\u003e2\u003c/div\u003e\n            \u003cp className=\"text-xs text-muted-foreground\"\u003e\n              -4% from last month\n            \u003c/p\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n      \u003c/div\u003e\n      \u003cdiv className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-7\"\u003e\n        \u003cCard className=\"col-span-4\"\u003e\n          \u003cCardHeader\u003e\n            \u003cCardTitle\u003eTask Completion Overview\u003c/CardTitle\u003e\n            \u003cCardDescription\u003e\n              Task completion rate over the last 30 days\n            \u003c/CardDescription\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent className=\"pl-2\"\u003e\n            \u003cOverview /\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n        \u003cCard className=\"col-span-3\"\u003e\n          \u003cCardHeader\u003e\n            \u003cCardTitle\u003eRecent Tasks\u003c/CardTitle\u003e\n            \u003cCardDescription\u003e\n              Recently created or updated tasks\n            \u003c/CardDescription\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent\u003e\n            \u003cRecentTasks /\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n      \u003c/div\u003e\n      \u003cdiv className=\"grid gap-4 md:grid-cols-1\"\u003e\n        \u003cCard\u003e\n          \u003cCardHeader\u003e\n            \u003cCardTitle\u003eTeam Members\u003c/CardTitle\u003e\n            \u003cCardDescription\u003e\n              Manage your team and their task assignments\n            \u003c/CardDescription\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent\u003e\n            \u003cTeamMembers /\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n      \u003c/div\u003e\n    \u003c/DashboardShell\u003e\n  );\n}\n[V0_FILE]tsx:file=\"app/tasks/page.tsx\"\nimport { redirect } from \"next/navigation\";\nimport { DashboardHeader } from \"@/components/dashboard/dashboard-header\";\nimport { DashboardShell } from \"@/components/dashboard/dashboard-shell\";\nimport { Button } from \"@/components/ui/button\";\nimport { KanbanBoard } from \"@/components/tasks/kanban-board\";\nimport { TaskFilters } from \"@/components/tasks/task-filters\";\nimport { getUserSession } from \"@/lib/auth\";\n\nexport default async function TasksPage() {\n  const user = await getUserSession();\n  \n  if (!user) {\n    redirect(\"/login\");\n  }\n  \n  return (\n    \u003cDashboardShell\u003e\n      \u003cDashboardHeader\n        heading=\"Tasks\"\n        text=\"Manage and organize your team's tasks\"\n      \u003e\n        \u003cButton\u003e\n          \u003ca href=\"/tasks/new\"\u003eCreate Task\u003c/a\u003e\n        \u003c/Button\u003e\n      \u003c/DashboardHeader\u003e\n      \u003cdiv className=\"space-y-4\"\u003e\n        \u003cTaskFilters /\u003e\n        \u003cKanbanBoard /\u003e\n      \u003c/div\u003e\n    \u003c/DashboardShell\u003e\n  );\n}\n[V0_FILE]tsx:file=\"app/tasks/new/page.tsx\"\nimport { redirect } from \"next/navigation\";\nimport { DashboardHeader } from \"@/components/dashboard/dashboard-header\";\nimport { DashboardShell } from \"@/components/dashboard/dashboard-shell\";\nimport { TaskForm } from \"@/components/tasks/task-form\";\nimport { getUserSession } from \"@/lib/auth\";\n\nexport default async function NewTaskPage() {\n  const user = await getUserSession();\n  \n  if (!user) {\n    redirect(\"/login\");\n  }\n  \n  // Check if user has permission to create tasks\n  if (user.role === \"viewer\") {\n    redirect(\"/dashboard\");\n  }\n  \n  return (\n    \u003cDashboardShell\u003e\n      \u003cDashboardHeader\n        heading=\"Create New Task\"\n        text=\"Add a new task and assign it to team members\"\n      /\u003e\n      \u003cdiv className=\"grid gap-4\"\u003e\n        \u003cTaskForm /\u003e\n      \u003c/div\u003e\n    \u003c/DashboardShell\u003e\n  );\n}\n[V0_FILE]tsx:file=\"app/tasks/[id]/page.tsx\"\nimport { redirect } from \"next/navigation\";\nimport { DashboardHeader } from \"@/components/dashboard/dashboard-header\";\nimport { DashboardShell } from \"@/components/dashboard/dashboard-shell\";\nimport { TaskDetails } from \"@/components/tasks/task-details\";\nimport { TaskComments } from \"@/components/tasks/task-comments\";\nimport { TaskAttachments } from \"@/components/tasks/task-attachments\";\nimport { getUserSession } from \"@/lib/auth\";\n\nexport default async function TaskDetailsPage({ params }: { params: { id: string } }) {\n  const user = await getUserSession();\n  \n  if (!user) {\n    redirect(\"/login\");\n  }\n  \n  return (\n    \u003cDashboardShell\u003e\n      \u003cDashboardHeader\n        heading=\"Task Details\"\n        text=\"View and manage task details\"\n      /\u003e\n      \u003cdiv className=\"grid gap-6\"\u003e\n        \u003cTaskDetails id={params.id} /\u003e\n        \u003cdiv className=\"grid gap-4 md:grid-cols-2\"\u003e\n          \u003cTaskComments id={params.id} /\u003e\n          \u003cTaskAttachments id={params.id} /\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n    \u003c/DashboardShell\u003e\n  );\n}\n[V0_FILE]tsx:file=\"app/reports/page.tsx\"\nimport { redirect } from \"next/navigation\";\nimport { DashboardHeader } from \"@/components/dashboard/dashboard-header\";\nimport { DashboardShell } from \"@/components/dashboard/dashboard-shell\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { TaskCompletionChart } from \"@/components/reports/task-completion-chart\";\nimport { TeamPerformanceChart } from \"@/components/reports/team-performance-chart\";\nimport { PriorityDistributionChart } from \"@/components/reports/priority-distribution-chart\";\nimport { getUserSession } from \"@/lib/auth\";\n\nexport default async function ReportsPage() {\n  const user = await getUserSession();\n  \n  if (!user) {\n    redirect(\"/login\");\n  }\n  \n  return (\n    \u003cDashboardShell\u003e\n      \u003cDashboardHeader\n        heading=\"Reports\"\n        text=\"Analyze task performance and team productivity\"\n      \u003e\n        \u003cdiv className=\"flex space-x-2\"\u003e\n          \u003cButton variant=\"outline\"\u003e\n            Export CSV\n          \u003c/Button\u003e\n          \u003cButton variant=\"outline\"\u003e\n            Export PDF\n          \u003c/Button\u003e\n        \u003c/div\u003e\n      \u003c/DashboardHeader\u003e\n      \u003cdiv className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-2\"\u003e\n        \u003cCard className=\"col-span-1\"\u003e\n          \u003cCardHeader\u003e\n            \u003cCardTitle\u003eTask Completion Rate\u003c/CardTitle\u003e\n            \u003cCardDescription\u003e\n              Percentage of tasks completed on time\n            \u003c/CardDescription\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent className=\"h-80\"\u003e\n            \u003cTaskCompletionChart /\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n        \u003cCard className=\"col-span-1\"\u003e\n          \u003cCardHeader\u003e\n            \u003cCardTitle\u003eTeam Performance\u003c/CardTitle\u003e\n            \u003cCardDescription\u003e\n              Tasks completed by team members\n            \u003c/CardDescription\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent className=\"h-80\"\u003e\n            \u003cTeamPerformanceChart /\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n        \u003cCard className=\"col-span-2\"\u003e\n          \u003cCardHeader\u003e\n            \u003cCardTitle\u003eTask Priority Distribution\u003c/CardTitle\u003e\n            \u003cCardDescription\u003e\n              Distribution of tasks by priority level\n            \u003c/CardDescription\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent className=\"h-80\"\u003e\n            \u003cPriorityDistributionChart /\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n      \u003c/div\u003e\n    \u003c/DashboardShell\u003e\n  );\n}\n[V0_FILE]tsx:file=\"app/settings/page.tsx\"\nimport { redirect } from \"next/navigation\";\nimport { DashboardHeader } from \"@/components/dashboard/dashboard-header\";\nimport { DashboardShell } from \"@/components/dashboard/dashboard-shell\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { ProfileSettings } from \"@/components/settings/profile-settings\";\nimport { NotificationSettings } from \"@/components/settings/notification-settings\";\nimport { SecuritySettings } from \"@/components/settings/security-settings\";\nimport { getUserSession } from \"@/lib/auth\";\n\nexport default async function SettingsPage() {\n  const user = await getUserSession();\n  \n  if (!user) {\n    redirect(\"/login\");\n  }\n  \n  return (\n    \u003cDashboardShell\u003e\n      \u003cDashboardHeader\n        heading=\"Settings\"\n        text=\"Manage your account settings and preferences\"\n      /\u003e\n      \u003cTabs defaultValue=\"profile\" className=\"space-y-4\"\u003e\n        \u003cTabsList\u003e\n          \u003cTabsTrigger value=\"profile\"\u003eProfile\u003c/TabsTrigger\u003e\n          \u003cTabsTrigger value=\"notifications\"\u003eNotifications\u003c/TabsTrigger\u003e\n          \u003cTabsTrigger value=\"security\"\u003eSecurity\u003c/TabsTrigger\u003e\n        \u003c/TabsList\u003e\n        \u003cTabsContent value=\"profile\" className=\"space-y-4\"\u003e\n          \u003cProfileSettings user={user} /\u003e\n        \u003c/TabsContent\u003e\n        \u003cTabsContent value=\"notifications\" className=\"space-y-4\"\u003e\n          \u003cNotificationSettings user={user} /\u003e\n        \u003c/TabsContent\u003e\n        \u003cTabsContent value=\"security\" className=\"space-y-4\"\u003e\n          \u003cSecuritySettings user={user} /\u003e\n        \u003c/TabsContent\u003e\n      \u003c/Tabs\u003e\n    \u003c/DashboardShell\u003e\n  );\n}\n[V0_FILE]tsx:file=\"app/users/page.tsx\"\nimport { redirect } from \"next/navigation\";\nimport { DashboardHeader } from \"@/components/dashboard/dashboard-header\";\nimport { DashboardShell } from \"@/components/dashboard/dashboard-shell\";\nimport { Button } from \"@/components/ui/button\";\nimport { UserManagement } from \"@/components/users/user-management\";\nimport { getUserSession } from \"@/lib/auth\";\n\nexport default async function UsersPage() {\n  const user = await getUserSession();\n  \n  if (!user) {\n    redirect(\"/login\");\n  }\n  \n  // Only admins can access user management\n  if (user.role !== \"admin\") {\n    redirect(\"/dashboard\");\n  }\n  \n  return (\n    \u003cDashboardShell\u003e\n      \u003cDashboardHeader\n        heading=\"User Management\"\n        text=\"Manage users and their permissions\"\n      \u003e\n        \u003cButton\u003e\n          \u003ca href=\"/users/new\"\u003eAdd User\u003c/a\u003e\n        \u003c/Button\u003e\n      \u003c/DashboardHeader\u003e\n      \u003cdiv className=\"grid gap-4\"\u003e\n        \u003cUserManagement /\u003e\n      \u003c/div\u003e\n    \u003c/DashboardShell\u003e\n  );\n}\n[V0_FILE]tsx:file=\"app/login/page.tsx\"\n\"use client\";\n\nimport { useState } from \"react\";\nimport Link from \"next/link\";\nimport { useRouter } from \"next/navigation\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { loginUser } from \"@/lib/auth\";\n\nexport default function LoginPage() {\n  const router = useRouter();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  \n  async function handleSubmit(event: React.FormEvent\u003cHTMLFormElement\u003e) {\n    event.preventDefault();\n    setIsLoading(true);\n    setError(\"\");\n    \n    const formData = new FormData(event.currentTarget);\n    const email = formData.get(\"email\") as string;\n    const password = formData.get(\"password\") as string;\n    \n    try {\n      await loginUser(email, password);\n      router.push(\"/dashboard\");\n    } catch (err) {\n      setError(\"Invalid email or password\");\n      setIsLoading(false);\n    }\n  }\n  \n  return (\n    \u003cdiv className=\"flex min-h-screen items-center justify-center bg-gray-50 px-4 py-12 sm:px-6 lg:px-8\"\u003e\n      \u003cCard className=\"w-full max-w-md\"\u003e\n        \u003cCardHeader className=\"space-y-1\"\u003e\n          \u003cCardTitle className=\"text-2xl font-bold\"\u003eLogin\u003c/CardTitle\u003e\n          \u003cCardDescription\u003e\n            Enter your credentials to access your account\n          \u003c/CardDescription\u003e\n        \u003c/CardHeader\u003e\n        \u003cform onSubmit={handleSubmit}\u003e\n          \u003cCardContent className=\"space-y-4\"\u003e\n            {error \u0026\u0026 (\n              \u003cdiv className=\"rounded-md bg-red-50 p-2 text-sm text-red-500\"\u003e\n                {error}\n              \u003c/div\u003e\n            )}\n            \u003cdiv className=\"space-y-2\"\u003e\n              \u003cLabel htmlFor=\"email\"\u003eEmail\u003c/Label\u003e\n              \u003cInput id=\"email\" name=\"email\" type=\"email\" required /\u003e\n            \u003c/div\u003e\n            \u003cdiv className=\"space-y-2\"\u003e\n              \u003cdiv className=\"flex items-center justify-between\"\u003e\n                \u003cLabel htmlFor=\"password\"\u003ePassword\u003c/Label\u003e\n                \u003cLink href=\"/forgot-password\" className=\"text-sm text-primary\"\u003e\n                  Forgot password?\n                \u003c/Link\u003e\n              \u003c/div\u003e\n              \u003cInput id=\"password\" name=\"password\" type=\"password\" required /\u003e\n            \u003c/div\u003e\n            \u003cdiv className=\"flex items-center space-x-2\"\u003e\n              \u003chr className=\"flex-1\" /\u003e\n              \u003cspan className=\"text-sm text-muted-foreground\"\u003eOR\u003c/span\u003e\n              \u003chr className=\"flex-1\" /\u003e\n            \u003c/div\u003e\n            \u003cdiv className=\"grid grid-cols-2 gap-4\"\u003e\n              \u003cButton variant=\"outline\" type=\"button\" className=\"w-full\"\u003e\n                \u003csvg className=\"mr-2 h-4 w-4\" viewBox=\"0 0 24 24\"\u003e\n                  \u003cpath\n                    d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\"\n                    fill=\"#4285F4\"\n                  /\u003e\n                  \u003cpath\n                    d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\"\n                    fill=\"#34A853\"\n                  /\u003e\n                  \u003cpath\n                    d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\"\n                    fill=\"#FBBC05\"\n                  /\u003e\n                  \u003cpath\n                    d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\"\n                    fill=\"#EA4335\"\n                  /\u003e\n                \u003c/svg\u003e\n                Google\n              \u003c/Button\u003e\n              \u003cButton variant=\"outline\" type=\"button\" className=\"w-full\"\u003e\n                \u003csvg className=\"mr-2 h-4 w-4\" viewBox=\"0 0 24 24\"\u003e\n                  \u003cpath\n                    d=\"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12\"\n                    fill=\"currentColor\"\n                  /\u003e\n                \u003c/svg\u003e\n                GitHub\n              \u003c/Button\u003e\n            \u003c/div\u003e\n          \u003c/CardContent\u003e\n          \u003cCardFooter className=\"flex flex-col space-y-4\"\u003e\n            \u003cButton type=\"submit\" className=\"w-full\" disabled={isLoading}\u003e\n              {isLoading ? \"Logging in...\" : \"Login\"}\n            \u003c/Button\u003e\n            \u003cdiv className=\"text-center text-sm\"\u003e\n              Don\u0026apos;t have an account?{\" \"}\n              \u003cLink href=\"/register\" className=\"text-primary\"\u003e\n                Sign up\n              \u003c/Link\u003e\n            \u003c/div\u003e\n          \u003c/CardFooter\u003e\n        \u003c/form\u003e\n      \u003c/Card\u003e\n    \u003c/div\u003e\n  );\n}\n[V0_FILE]tsx:file=\"app/register/page.tsx\"\n\"use client\";\n\nimport { useState } from \"react\";\nimport Link from \"next/link\";\nimport { useRouter } from \"next/navigation\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { registerUser } from \"@/lib/auth\";\n\nexport default function RegisterPage() {\n  const router = useRouter();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  \n  async function handleSubmit(event: React.FormEvent\u003cHTMLFormElement\u003e) {\n    event.preventDefault();\n    setIsLoading(true);\n    setError(\"\");\n    \n    const formData = new FormData(event.currentTarget);\n    const name = formData.get(\"name\") as string;\n    const email = formData.get(\"email\") as string;\n    const password = formData.get(\"password\") as string;\n    const confirmPassword = formData.get(\"confirmPassword\") as string;\n    \n    if (password !== confirmPassword) {\n      setError(\"Passwords do not match\");\n      setIsLoading(false);\n      return;\n    }\n    \n    try {\n      await registerUser(name, email, password);\n      router.push(\"/dashboard\");\n    } catch (err) {\n      setError(\"Failed to create account\");\n      setIsLoading(false);\n    }\n  }\n  \n  return (\n    \u003cdiv className=\"flex min-h-screen items-center justify-center bg-gray-50 px-4 py-12 sm:px-6 lg:px-8\"\u003e\n      \u003cCard className=\"w-full max-w-md\"\u003e\n        \u003cCardHeader className=\"space-y-1\"\u003e\n          \u003cCardTitle className=\"text-2xl font-bold\"\u003eCreate an account\u003c/CardTitle\u003e\n          \u003cCardDescription\u003e\n            Enter your information to create an account\n          \u003c/CardDescription\u003e\n        \u003c/CardHeader\u003e\n        \u003cform onSubmit={handleSubmit}\u003e\n          \u003cCardContent className=\"space-y-4\"\u003e\n            {error \u0026\u0026 (\n              \u003cdiv className=\"rounded-md bg-red-50 p-2 text-sm text-red-500\"\u003e\n                {error}\n              \u003c/div\u003e\n            )}\n            \u003cdiv className=\"space-y-2\"\u003e\n              \u003cLabel htmlFor=\"name\"\u003eFull Name\u003c/Label\u003e\n              \u003cInput id=\"name\" name=\"name\" required /\u003e\n            \u003c/div\u003e\n            \u003cdiv className=\"space-y-2\"\u003e\n              \u003cLabel htmlFor=\"email\"\u003eEmail\u003c/Label\u003e\n              \u003cInput id=\"email\" name=\"email\" type=\"email\" required /\u003e\n            \u003c/div\u003e\n            \u003cdiv className=\"space-y-2\"\u003e\n              \u003cLabel htmlFor=\"password\"\u003ePassword\u003c/Label\u003e\n              \u003cInput id=\"password\" name=\"password\" type=\"password\" required /\u003e\n            \u003c/div\u003e\n            \u003cdiv className=\"space-y-2\"\u003e\n              \u003cLabel htmlFor=\"confirmPassword\"\u003eConfirm Password\u003c/Label\u003e\n              \u003cInput\n                id=\"confirmPassword\"\n                name=\"confirmPassword\"\n                type=\"password\"\n                required\n              /\u003e\n            \u003c/div\u003e\n          \u003c/CardContent\u003e\n          \u003cCardFooter className=\"flex flex-col space-y-4\"\u003e\n            \u003cButton type=\"submit\" className=\"w-full\" disabled={isLoading}\u003e\n              {isLoading ? \"Creating account...\" : \"Create account\"}\n            \u003c/Button\u003e\n            \u003cdiv className=\"text-center text-sm\"\u003e\n              Already have an account?{\" \"}\n              \u003cLink href=\"/login\" className=\"text-primary\"\u003e\n                Login\n              \u003c/Link\u003e\n            \u003c/div\u003e\n          \u003c/CardFooter\u003e\n        \u003c/form\u003e\n      \u003c/Card\u003e\n    \u003c/div\u003e\n  );\n}\n[V0_FILE]tsx:file=\"components/dashboard/dashboard-header.tsx\"\ninterface DashboardHeaderProps {\n  heading: string;\n  text?: string;\n  children?: React.ReactNode;\n}\n\nexport function DashboardHeader({\n  heading,\n  text,\n  children,\n}: DashboardHeaderProps) {\n  return (\n    \u003cdiv className=\"flex items-center justify-between px-2\"\u003e\n      \u003cdiv className=\"grid gap-1\"\u003e\n        \u003ch1 className=\"font-heading text-3xl md:text-4xl\"\u003e{heading}\u003c/h1\u003e\n        {text \u0026\u0026 \u003cp className=\"text-lg text-muted-foreground\"\u003e{text}\u003c/p\u003e}\n      \u003c/div\u003e\n      {children}\n    \u003c/div\u003e\n  );\n}\n[V0_FILE]tsx:file=\"components/dashboard/dashboard-shell.tsx\"\ninterface DashboardShellProps {\n  children: React.ReactNode;\n}\n\nexport function DashboardShell({ children }: DashboardShellProps) {\n  return (\n    \u003cdiv className=\"flex min-h-screen flex-col\"\u003e\n      \u003cmain className=\"flex flex-1 flex-col gap-4 p-4 md:gap-8 md:p-8\"\u003e\n        \u003cdiv className=\"mx-auto grid w-full max-w-7xl gap-4 md:gap-8\"\u003e\n          {children}\n        \u003c/div\u003e\n      \u003c/main\u003e\n    \u003c/div\u003e\n  );\n}\n[V0_FILE]tsx:file=\"components/dashboard/overview.tsx\"\n\"use client\";\n\nimport { Card } from \"@/components/ui/card\";\nimport { \n  Area, \n  AreaChart, \n  ResponsiveContainer, \n  Tooltip, \n  XAxis, \n  YAxis \n} from \"@/components/ui/chart\";\n\nconst data = [\n  {\n    name: \"Jan\",\n    total: 12,\n  },\n  {\n    name: \"Feb\",\n    total: 18,\n  },\n  {\n    name: \"Mar\",\n    total: 24,\n  },\n  {\n    name: \"Apr\",\n    total: 30,\n  },\n  {\n    name: \"May\",\n    total: 22,\n  },\n  {\n    name: \"Jun\",\n    total: 28,\n  },\n  {\n    name: \"Jul\",\n    total: 32,\n  },\n  {\n    name: \"Aug\",\n    total: 36,\n  },\n  {\n    name: \"Sep\",\n    total: 30,\n  },\n  {\n    name: \"Oct\",\n    total: 28,\n  },\n  {\n    name: \"Nov\",\n    total: 34,\n  },\n  {\n    name: \"Dec\",\n    total: 40,\n  },\n];\n\nexport function Overview() {\n  return (\n    \u003cResponsiveContainer width=\"100%\" height={350}\u003e\n      \u003cAreaChart\n        data={data}\n        margin={{\n          top: 10,\n          right: 30,\n          left: 0,\n          bottom: 0,\n        }}\n      \u003e\n        \u003cdefs\u003e\n          \u003clinearGradient id=\"colorTotal\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\"\u003e\n            \u003cstop offset=\"5%\" stopColor=\"#8884d8\" stopOpacity={0.8} /\u003e\n            \u003cstop offset=\"95%\" stopColor=\"#8884d8\" stopOpacity={0} /\u003e\n          \u003c/linearGradient\u003e\n        \u003c/defs\u003e\n        \u003cXAxis\n          dataKey=\"name\"\n          stroke=\"#888888\"\n          fontSize={12}\n          tickLine={false}\n          axisLine={false}\n        /\u003e\n        \u003cYAxis\n          stroke=\"#888888\"\n          fontSize={12}\n          tickLine={false}\n          axisLine={false}\n          tickFormatter={(value) =\u003e `${value}`}\n        /\u003e\n        \u003cTooltip /\u003e\n        \u003cArea\n          type=\"monotone\"\n          dataKey=\"total\"\n          stroke=\"#8884d8\"\n          fillOpacity={1}\n          fill=\"url(#colorTotal)\"\n        /\u003e\n      \u003c/AreaChart\u003e\n    \u003c/ResponsiveContainer\u003e\n  );\n}\n[V0_FILE]tsx:file=\"components/dashboard/recent-tasks.tsx\"\n\"use client\";\n\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { Badge } from \"@/components/ui/badge\";\n\nconst tasks = [\n  {\n    id: \"TASK-8782\",\n    title: \"Create new landing page\",\n    status: \"In Progress\",\n    priority: \"High\",\n    assignee: {\n      name: \"Emma Wilson\",\n      email: \"emma@example.com\",\n      avatar: \"/placeholder.svg?height=32\u0026width=32\",\n    },\n  },\n  {\n    id: \"TASK-7878\",\n    title: \"Update user authentication flow\",\n    status: \"In Review\",\n    priority: \"Medium\",\n    assignee: {\n      name: \"Jackson Lee\",\n      email: \"jackson@example.com\",\n      avatar: \"/placeholder.svg?height=32\u0026width=32\",\n    },\n  },\n  {\n    id: \"TASK-7839\",\n    title: \"Implement notification system\",\n    status: \"Completed\",\n    priority: \"Medium\",\n    assignee: {\n      name: \"Sophia Chen\",\n      email: \"sophia@example.com\",\n      avatar: \"/placeholder.svg?height=32\u0026width=32\",\n    },\n  },\n  {\n    id: \"TASK-7349\",\n    title: \"Fix mobile responsiveness issues\",\n    status: \"In Progress\",\n    priority: \"High\",\n    assignee: {\n      name: \"Liam Johnson\",\n      email: \"liam@example.com\",\n      avatar: \"/placeholder.svg?height=32\u0026width=32\",\n    },\n  },\n  {\n    id: \"TASK-8572\",\n    title: \"Create API documentation\",\n    status: \"Not Started\",\n    priority: \"Low\",\n    assignee: {\n      name: \"Olivia Martinez\",\n      email: \"olivia@example.com\",\n      avatar: \"/placeholder.svg?height=32\u0026width=32\",\n    },\n  },\n];\n\nexport function RecentTasks() {\n  return (\n    \u003cdiv className=\"space-y-8\"\u003e\n      {tasks.map((task) =\u003e (\n        \u003cdiv key={task.id} className=\"flex items-center\"\u003e\n          \u003cAvatar className=\"h-9 w-9\"\u003e\n            \u003cAvatarImage src={task.assignee.avatar} alt={task.assignee.name} /\u003e\n            \u003cAvatarFallback\u003e\n              {task.assignee.name\n                .split(\" \")\n                .map((n) =\u003e n[0])\n                .join(\"\")}\n            \u003c/AvatarFallback\u003e\n          \u003c/Avatar\u003e\n          \u003cdiv className=\"ml-4 space-y-1\"\u003e\n            \u003cp className=\"text-sm font-medium leading-none\"\u003e{task.title}\u003c/p\u003e\n            \u003cp className=\"text-sm text-muted-foreground\"\u003e\n              {task.id} · Assigned to {task.assignee.name}\n            \u003c/p\u003e\n          \u003c/div\u003e\n          \u003cdiv className=\"ml-auto flex items-center gap-2\"\u003e\n            \u003cBadge\n              variant={\n                task.status === \"Completed\"\n                  ? \"success\"\n                  : task.status === \"In Progress\"\n                  ? \"default\"\n                  : task.status === \"In Review\"\n                  ? \"warning\"\n                  : \"secondary\"\n              }\n            \u003e\n              {task.status}\n            \u003c/Badge\u003e\n            \u003cBadge\n              variant={\n                task.priority === \"High\"\n                  ? \"destructive\"\n                  : task.priority === \"Medium\"\n                  ? \"default\"\n                  : \"outline\"\n              }\n            \u003e\n              {task.priority}\n            \u003c/Badge\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n      ))}\n    \u003c/div\u003e\n  );\n}\n[V0_FILE]tsx:file=\"components/dashboard/team-members.tsx\"\n\"use client\";\n\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\n\nconst teamMembers = [\n  {\n    id: 1,\n    name: \"Emma Wilson\",\n    email: \"emma@example.com\",\n    role: \"Product Manager\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    tasksAssigned: 8,\n    tasksCompleted: 5,\n  },\n  {\n    id: 2,\n    name: \"Jackson Lee\",\n    email: \"jackson@example.com\",\n    role: \"Frontend Developer\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    tasksAssigned: 12,\n    tasksCompleted: 10,\n  },\n  {\n    id: 3,\n    name: \"Sophia Chen\",\n    email: \"sophia@example.com\",\n    role: \"Backend Developer\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    tasksAssigned: 10,\n    tasksCompleted: 7,\n  },\n  {\n    id: 4,\n    name: \"Liam Johnson\",\n    email: \"liam@example.com\",\n    role: \"UI/UX Designer\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    tasksAssigned: 6,\n    tasksCompleted: 4,\n  },\n  {\n    id: 5,\n    name: \"Olivia Martinez\",\n    email: \"olivia@example.com\",\n    role: \"QA Engineer\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    tasksAssigned: 9,\n    tasksCompleted: 8,\n  },\n];\n\nexport function TeamMembers() {\n  return (\n    \u003cdiv className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\"\u003e\n      {teamMembers.map((member) =\u003e (\n        \u003cCard key={member.id}\u003e\n          \u003cCardHeader className=\"flex flex-row items-center gap-4 pb-2\"\u003e\n            \u003cAvatar className=\"h-10 w-10\"\u003e\n              \u003cAvatarImage src={member.avatar} alt={member.name} /\u003e\n              \u003cAvatarFallback\u003e\n                {member.name\n                  .split(\" \")\n                  .map((n) =\u003e n[0])\n                  .join(\"\")}\n              \u003c/AvatarFallback\u003e\n            \u003c/Avatar\u003e\n            \u003cdiv className=\"grid gap-1\"\u003e\n              \u003cCardTitle className=\"text-base\"\u003e{member.name}\u003c/CardTitle\u003e\n              \u003cCardDescription className=\"text-xs\"\u003e\n                {member.role}\n              \u003c/CardDescription\u003e\n            \u003c/div\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent\u003e\n            \u003cdiv className=\"grid gap-2\"\u003e\n              \u003cdiv className=\"grid grid-cols-2 gap-2 text-sm\"\u003e\n                \u003cdiv className=\"flex flex-col\"\u003e\n                  \u003cspan className=\"text-muted-foreground\"\u003eAssigned\u003c/span\u003e\n                  \u003cspan className=\"font-medium\"\u003e{member.tasksAssigned}\u003c/span\u003e\n                \u003c/div\u003e\n                \u003cdiv className=\"flex flex-col\"\u003e\n                  \u003cspan className=\"text-muted-foreground\"\u003eCompleted\u003c/span\u003e\n                  \u003cspan className=\"font-medium\"\u003e{member.tasksCompleted}\u003c/span\u003e\n                \u003c/div\u003e\n              \u003c/div\u003e\n              \u003cdiv className=\"mt-2 flex justify-between\"\u003e\n                \u003cButton size=\"sm\" variant=\"outline\"\u003e\n                  View Profile\n                \u003c/Button\u003e\n                \u003cButton size=\"sm\"\u003eAssign Task\u003c/Button\u003e\n              \u003c/div\u003e\n            \u003c/div\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n      ))}\n    \u003c/div\u003e\n  );\n}\n[V0_FILE]tsx:file=\"components/tasks/kanban-board.tsx\"\n\"use client\";\n\nimport { useState } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\n\n// Initial task data\nconst initialTasks = {\n  \"to-do\": [\n    {\n      id: \"task-1\",\n      title: \"Create new landing page\",\n      description: \"Design and implement a new landing page for the product\",\n      priority: \"High\",\n      assignee: {\n        name: \"Emma Wilson\",\n        avatar: \"/placeholder.svg?height=32\u0026width=32\",\n      },\n      dueDate: \"2023-12-15\",\n    },\n    {\n      id: \"task-2\",\n      title: \"Update user authentication flow\",\n      description: \"Improve the user authentication experience\",\n      priority: \"Medium\",\n      assignee: {\n        name: \"Jackson Lee\",\n        avatar: \"/placeholder.svg?height=32\u0026width=32\",\n      },\n      dueDate: \"2023-12-20\",\n    },\n    {\n      id: \"task-3\",\n      title: \"Create API documentation\",\n      description: \"Document all API endpoints for developers\",\n      priority: \"Low\",\n      assignee: {\n        name: \"Olivia Martinez\",\n        avatar: \"/placeholder.svg?height=32\u0026width=32\",\n      },\n      dueDate: \"2023-12-30\",\n    },\n  ],\n  \"in-progress\": [\n    {\n      id: \"task-4\",\n      title: \"Implement notification system\",\n      description: \"Create a real-time notification system for users\",\n      priority: \"Medium\",\n      assignee: {\n        name: \"Sophia Chen\",\n        avatar: \"/placeholder.svg?height=32\u0026width=32\",\n      },\n      dueDate: \"2023-12-10\",\n    },\n    {\n      id: \"task-5\",\n      title: \"Fix mobile responsiveness issues\",\n      description: \"Address UI issues on mobile devices\",\n      priority: \"High\",\n      assignee: {\n        name: \"Liam Johnson\",\n        avatar: \"/placeholder.svg?height=32\u0026width=32\",\n      },\n      dueDate: \"2023-12-05\",\n    },\n  ],\n  \"in-review\": [\n    {\n      id: \"task-6\",\n      title: \"Optimize database queries\",\n      description: \"Improve performance of slow database queries\",\n      priority: \"High\",\n      assignee: {\n        name: \"Jackson Lee\",\n        avatar: \"/placeholder.svg?height=32\u0026width=32\",\n      },\n      dueDate: \"2023-12-08\",\n    },\n  ],\n  \"completed\": [\n    {\n      id: \"task-7\",\n      title: \"Set up CI/CD pipeline\",\n      description: \"Implement continuous integration and deployment\",\n      priority: \"Medium\",\n      assignee: {\n        name: \"Sophia Chen\",\n        avatar: \"/placeholder.svg?height=32\u0026width=32\",\n      },\n      dueDate: \"2023-12-01\",\n    },\n    {\n      id: \"task-8\",\n      title: \"Create user onboarding flow\",\n      description: \"Design and implement user onboarding experience\",\n      priority: \"Medium\",\n      assignee: {\n        name: \"Emma Wilson\",\n        avatar: \"/placeholder.svg?height=32\u0026width=32\",\n      },\n      dueDate: \"2023-11-25\",\n    },\n  ],\n};\n\n// Column definitions\nconst columns = [\n  {\n    id: \"to-do\",\n    title: \"To Do\",\n    color: \"bg-gray-100\",\n  },\n  {\n    id: \"in-progress\",\n    title: \"In Progress\",\n    color: \"bg-blue-50\",\n  },\n  {\n    id: \"in-review\",\n    title: \"In Review\",\n    color: \"bg-yellow-50\",\n  },\n  {\n    id: \"completed\",\n    title: \"Completed\",\n    color: \"bg-green-50\",\n  },\n];\n\nexport function KanbanBoard() {\n  const [tasks, setTasks] = useState(initialTasks);\n\n  const handleDragEnd = (result) =\u003e {\n    const { destination, source, draggableId } = result;\n\n    // If there's no destination or the item is dropped in the same place\n    if (!destination || \n        (destination.droppableId === source.droppableId \u0026\u0026 \n         destination.index === source.index)) {\n      return;\n    }\n\n    // Find the task that was dragged\n    const sourceColumn = tasks[source.droppableId];\n    const taskToMove = sourceColumn.find(task =\u003e task.id === draggableId);\n\n    // Create new state\n    const newTasks = { ...tasks };\n    \n    // Remove from source column\n    newTasks[source.droppableId] = sourceColumn.filter(\n      task =\u003e task.id !== draggableId\n    );\n    \n    // Add to destination column\n    newTasks[destination.droppableId] = [\n      ...newTasks[destination.droppableId].slice(0, destination.index),\n      taskToMove,\n      ...newTasks[destination.droppableId].slice(destination.index)\n    ];\n    \n    setTasks(newTasks);\n  };\n\n  return (\n    \u003cDragDropContext onDragEnd={handleDragEnd}\u003e\n      \u003cdiv className=\"grid grid-cols-1 gap-4 md:grid-cols-2 lg:grid-cols-4\"\u003e\n        {columns.map((column) =\u003e (\n          \u003cdiv key={column.id} className=\"flex flex-col\"\u003e\n            \u003cdiv className={`rounded-t-md p-3 ${column.color}`}\u003e\n              \u003ch3 className=\"font-medium\"\u003e{column.title}\u003c/h3\u003e\n              \u003cdiv className=\"text-sm text-muted-foreground\"\u003e\n                {tasks[column.id].length} tasks\n              \u003c/div\u003e\n            \u003c/div\u003e\n            \u003cDroppable droppableId={column.id}\u003e\n              {(provided) =\u003e (\n                \u003cdiv\n                  {...provided.droppableProps}\n                  ref={provided.innerRef}\n                  className=\"flex flex-1 flex-col gap-2 rounded-b-md border border-t-0 bg-background p-2\"\n                \u003e\n                  {tasks[column.id].map((task, index) =\u003e (\n                    \u003cDraggable\n                      key={task.id}\n                      draggableId={task.id}\n                      index={index}\n                    \u003e\n                      {(provided) =\u003e (\n                        \u003cCard\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                          className=\"cursor-grab\"\n                        \u003e\n                          \u003cCardHeader className=\"p-3 pb-0\"\u003e\n                            \u003cCardTitle className=\"text-sm font-medium\"\u003e\n                              {task.title}\n                            \u003c/CardTitle\u003e\n                          \u003c/CardHeader\u003e\n                          \u003cCardContent className=\"p-3\"\u003e\n                            \u003cp className=\"text-xs text-muted-foreground\"\u003e\n                              {task.description}\n                            \u003c/p\u003e\n                            \u003cdiv className=\"mt-2 flex items-center justify-between\"\u003e\n                              \u003cBadge\n                                variant={\n                                  task.priority === \"High\"\n                                    ? \"destructive\"\n                                    : task.priority === \"Medium\"\n                                    ? \"default\"\n                                    : \"outline\"\n                                }\n                                className=\"text-xs\"\n                              \u003e\n                                {task.priority}\n                              \u003c/Badge\u003e\n                              \u003cdiv className=\"flex items-center gap-1\"\u003e\n                                \u003cspan className=\"text-xs text-muted-foreground\"\u003e\n                                  {new Date(task.dueDate).toLocaleDateString()}\n                                \u003c/span\u003e\n                                \u003cAvatar className=\"h-6 w-6\"\u003e\n                                  \u003cAvatarImage\n                                    src={task.assignee.avatar}\n                                    alt={task.assignee.name}\n                                  /\u003e\n                                  \u003cAvatarFallback className=\"text-xs\"\u003e\n                                    {task.assignee.name\n                                      .split(\" \")\n                                      .map((n) =\u003e n[0])\n                                      .join(\"\")}\n                                  \u003c/AvatarFallback\u003e\n                                \u003c/Avatar\u003e\n                              \u003c/div\u003e\n                            \u003c/div\u003e\n                          \u003c/CardContent\u003e\n                        \u003c/Card\u003e\n                      )}\n                    \u003c/Draggable\u003e\n                  ))}\n                  {provided.placeholder}\n                \u003c/div\u003e\n              )}\n            \u003c/Droppable\u003e\n          \u003c/div\u003e\n        ))}\n      \u003c/div\u003e\n    \u003c/DragDropContext\u003e\n  );\n}\n[V0_FILE]tsx:file=\"components/tasks/task-filters.tsx\"\n\"use client\";\n\nimport { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { Tabs, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\n\nexport function TaskFilters() {\n  const [view, setView] = useState(\"kanban\");\n\n  return (\n    \u003cdiv className=\"flex flex-col gap-4 sm:flex-row sm:items-center sm:justify-between\"\u003e\n      \u003cdiv className=\"flex items-center gap-2\"\u003e\n        \u003cTabs defaultValue=\"kanban\" className=\"w-[400px]\" onValueChange={setView}\u003e\n          \u003cTabsList\u003e\n            \u003cTabsTrigger value=\"kanban\"\u003eKanban\u003c/TabsTrigger\u003e\n            \u003cTabsTrigger value=\"list\"\u003eList\u003c/TabsTrigger\u003e\n            \u003cTabsTrigger value=\"calendar\"\u003eCalendar\u003c/TabsTrigger\u003e\n          \u003c/TabsList\u003e\n        \u003c/Tabs\u003e\n      \u003c/div\u003e\n      \u003cdiv className=\"flex flex-col gap-2 sm:flex-row sm:items-center\"\u003e\n        \u003cdiv className=\"flex items-center gap-2\"\u003e\n          \u003cInput\n            placeholder=\"Search tasks...\"\n            className=\"h-9 w-[150px] sm:w-[180px] lg:w-[250px]\"\n          /\u003e\n          \u003cSelect defaultValue=\"all\"\u003e\n            \u003cSelectTrigger className=\"h-9 w-[130px]\"\u003e\n              \u003cSelectValue placeholder=\"Priority\" /\u003e\n            \u003c/SelectTrigger\u003e\n            \u003cSelectContent\u003e\n              \u003cSelectItem value=\"all\"\u003eAll Priorities\u003c/SelectItem\u003e\n              \u003cSelectItem value=\"high\"\u003eHigh\u003c/SelectItem\u003e\n              \u003cSelectItem value=\"medium\"\u003eMedium\u003c/SelectItem\u003e\n              \u003cSelectItem value=\"low\"\u003eLow\u003c/SelectItem\u003e\n            \u003c/SelectContent\u003e\n          \u003c/Select\u003e\n          \u003cSelect defaultValue=\"all\"\u003e\n            \u003cSelectTrigger className=\"h-9 w-[130px]\"\u003e\n              \u003cSelectValue placeholder=\"Assignee\" /\u003e\n            \u003c/SelectTrigger\u003e\n            \u003cSelectContent\u003e\n              \u003cSelectItem value=\"all\"\u003eAll Assignees\u003c/SelectItem\u003e\n              \u003cSelectItem value=\"emma\"\u003eEmma Wilson\u003c/SelectItem\u003e\n              \u003cSelectItem value=\"jackson\"\u003eJackson Lee\u003c/SelectItem\u003e\n              \u003cSelectItem value=\"sophia\"\u003eSophia Chen\u003c/SelectItem\u003e\n              \u003cSelectItem value=\"liam\"\u003eLiam Johnson\u003c/SelectItem\u003e\n              \u003cSelectItem value=\"olivia\"\u003eOlivia Martinez\u003c/SelectItem\u003e\n            \u003c/SelectContent\u003e\n          \u003c/Select\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n  );\n}\n[V0_FILE]tsx:file=\"components/tasks/task-form.tsx\"\n\"use client\";\n\nimport { useState } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport { Button } from \"@/components/ui/button\";\nimport { Calendar } from \"@/components/ui/calendar\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { format } from \"date-fns\";\nimport { CalendarIcon } from 'lucide-react';\nimport { useForm } from \"react-hook-form\";\n\nexport function TaskForm() {\n  const router = useRouter();\n  const [isLoading, setIsLoading] = useState(false);\n  \n  const form = useForm({\n    defaultValues: {\n      title: \"\",\n      description: \"\",\n      priority: \"medium\",\n      assignee: \"\",\n      dueDate: new Date(),\n      tags: \"\",\n    },\n  });\n\n  async function onSubmit(data) {\n    setIsLoading(true);\n    \n    try {\n      // Here you would normally send the data to your API\n      console.log(\"Form submitted:\", data);\n      \n      // Simulate API call\n      await new Promise((resolve) =\u003e setTimeout(resolve, 1000));\n      \n      // Redirect to tasks page\n      router.push(\"/tasks\");\n    } catch (error) {\n      console.error(\"Error creating task:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  return (\n    \u003cCard\u003e\n      \u003cCardHeader\u003e\n        \u003cCardTitle\u003eCreate New Task\u003c/CardTitle\u003e\n        \u003cCardDescription\u003e\n          Add a new task and assign it to team members\n        \u003c/CardDescription\u003e\n      \u003c/CardHeader\u003e\n      \u003cForm {...form}\u003e\n        \u003cform onSubmit={form.handleSubmit(onSubmit)}\u003e\n          \u003cCardContent className=\"space-y-4\"\u003e\n            \u003cFormField\n              control={form.control}\n              name=\"title\"\n              render={({ field }) =\u003e (\n                \u003cFormItem\u003e\n                  \u003cFormLabel\u003eTask Title\u003c/FormLabel\u003e\n                  \u003cFormControl\u003e\n                    \u003cInput placeholder=\"Enter task title\" {...field} /\u003e\n                  \u003c/FormControl\u003e\n                  \u003cFormMessage /\u003e\n                \u003c/FormItem\u003e\n              )}\n            /\u003e\n            \u003cFormField\n              control={form.control}\n              name=\"description\"\n              render={({ field }) =\u003e (\n                \u003cFormItem\u003e\n                  \u003cFormLabel\u003eDescription\u003c/FormLabel\u003e\n                  \u003cFormControl\u003e\n                    \u003cTextarea\n                      placeholder=\"Enter task description\"\n                      className=\"min-h-[100px]\"\n                      {...field}\n                    /\u003e\n                  \u003c/FormControl\u003e\n                  \u003cFormMessage /\u003e\n                \u003c/FormItem\u003e\n              )}\n            /\u003e\n            \u003cdiv className=\"grid grid-cols-1 gap-4 md:grid-cols-2\"\u003e\n              \u003cFormField\n                control={form.control}\n                name=\"priority\"\n                render={({ field }) =\u003e (\n                  \u003cFormItem\u003e\n                    \u003cFormLabel\u003ePriority\u003c/FormLabel\u003e\n                    \u003cSelect\n                      onValueChange={field.onChange}\n                      defaultValue={field.value}\n                    \u003e\n                      \u003cFormControl\u003e\n                        \u003cSelectTrigger\u003e\n                          \u003cSelectValue placeholder=\"Select priority\" /\u003e\n                        \u003c/SelectTrigger\u003e\n                      \u003c/FormControl\u003e\n                      \u003cSelectContent\u003e\n                        \u003cSelectItem value=\"high\"\u003eHigh\u003c/SelectItem\u003e\n                        \u003cSelectItem value=\"medium\"\u003eMedium\u003c/SelectItem\u003e\n                        \u003cSelectItem value=\"low\"\u003eLow\u003c/SelectItem\u003e\n                      \u003c/SelectContent\u003e\n                    \u003c/Select\u003e\n                    \u003cFormMessage /\u003e\n                  \u003c/FormItem\u003e\n                )}\n              /\u003e\n              \u003cFormField\n                control={form.control}\n                name=\"assignee\"\n                render={({ field }) =\u003e (\n                  \u003cFormItem\u003e\n                    \u003cFormLabel\u003eAssignee\u003c/FormLabel\u003e\n                    \u003cSelect\n                      onValueChange={field.onChange}\n                      defaultValue={field.value}\n                    \u003e\n                      \u003cFormControl\u003e\n                        \u003cSelectTrigger\u003e\n                          \u003cSelectValue placeholder=\"Select team member\" /\u003e\n                        \u003c/SelectTrigger\u003e\n                      \u003c/FormControl\u003e\n                      \u003cSelectContent\u003e\n                        \u003cSelectItem value=\"emma\"\u003eEmma Wilson\u003c/SelectItem\u003e\n                        \u003cSelectItem value=\"jackson\"\u003eJackson Lee\u003c/SelectItem\u003e\n                        \u003cSelectItem value=\"sophia\"\u003eSophia Chen\u003c/SelectItem\u003e\n                        \u003cSelectItem value=\"liam\"\u003eLiam Johnson\u003c/SelectItem\u003e\n                        \u003cSelectItem value=\"olivia\"\u003eOlivia Martinez\u003c/SelectItem\u003e\n                      \u003c/SelectContent\u003e\n                    \u003c/Select\u003e\n                    \u003cFormMessage /\u003e\n                  \u003c/FormItem\u003e\n                )}\n              /\u003e\n            \u003c/div\u003e\n            \u003cdiv className=\"grid grid-cols-1 gap-4 md:grid-cols-2\"\u003e\n              \u003cFormField\n                control={form.control}\n                name=\"dueDate\"\n                render={({ field }) =\u003e (\n                  \u003cFormItem className=\"flex flex-col\"\u003e\n                    \u003cFormLabel\u003eDue Date\u003c/FormLabel\u003e\n                    \u003cPopover\u003e\n                      \u003cPopoverTrigger asChild\u003e\n                        \u003cFormControl\u003e\n                          \u003cButton\n                            variant={\"outline\"}\n                            className={\n                              \"w-full pl-3 text-left font-normal\"\n                            }\n                          \u003e\n                            {field.value ? (\n                              format(field.value, \"PPP\")\n                            ) : (\n                              \u003cspan\u003ePick a date\u003c/span\u003e\n                            )}\n                            \u003cCalendarIcon className=\"ml-auto h-4 w-4 opacity-50\" /\u003e\n                          \u003c/Button\u003e\n                        \u003c/FormControl\u003e\n                      \u003c/PopoverTrigger\u003e\n                      \u003cPopoverContent className=\"w-auto p-0\" align=\"start\"\u003e\n                        \u003cCalendar\n                          mode=\"single\"\n                          selected={field.value}\n                          onSelect={field.onChange}\n                          initialFocus\n                        /\u003e\n                      \u003c/PopoverContent\u003e\n                    \u003c/Popover\u003e\n                    \u003cFormMessage /\u003e\n                  \u003c/FormItem\u003e\n                )}\n              /\u003e\n              \u003cFormField\n                control={form.control}\n                name=\"tags\"\n                render={({ field }) =\u003e (\n                  \u003cFormItem\u003e\n                    \u003cFormLabel\u003eTags\u003c/FormLabel\u003e\n                    \u003cFormControl\u003e\n                      \u003cInput\n                        placeholder=\"Enter tags separated by commas\"\n                        {...field}\n                      /\u003e\n                    \u003c/FormControl\u003e\n                    \u003cFormDescription\u003e\n                      E.g. frontend, bug, feature\n                    \u003c/FormDescription\u003e\n                    \u003cFormMessage /\u003e\n                  \u003c/FormItem\u003e\n                )}\n              /\u003e\n            \u003c/div\u003e\n          \u003c/CardContent\u003e\n          \u003cCardFooter className=\"flex justify-between\"\u003e\n            \u003cButton variant=\"outline\" type=\"button\" onClick={() =\u003e router.back()}\u003e\n              Cancel\n            \u003c/Button\u003e\n            \u003cButton type=\"submit\" disabled={isLoading}\u003e\n              {isLoading ? \"Creating...\" : \"Create Task\"}\n            \u003c/Button\u003e\n          \u003c/CardFooter\u003e\n        \u003c/form\u003e\n      \u003c/Form\u003e\n    \u003c/Card\u003e\n  );\n}\n[V0_FILE]tsx:file=\"components/tasks/task-details.tsx\"\n\"use client\";\n\nimport { useState } from \"react\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { format } from \"date-fns\";\n\n// Mock task data - in a real app, this would come from an API\nconst taskData = {\n  id: \"TASK-8782\",\n  title: \"Create new landing page\",\n  description:\n    \"Design and implement a new landing page for the product. The page should highlight key features and include a sign-up form for new users. Make sure it's responsive and works well on mobile devices.\",\n  status: \"In Progress\",\n  priority: \"High\",\n  createdAt: \"2023-11-15T10:30:00Z\",\n  dueDate: \"2023-12-15T23:59:59Z\",\n  progress: 65,\n  assignee: {\n    name: \"Emma Wilson\",\n    email: \"emma@example.com\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n  },\n  creator: {\n    name: \"Liam Johnson\",\n    email: \"liam@example.com\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n  },\n  tags: [\"frontend\", \"design\", \"marketing\"],\n  subtasks: [\n    { id: 1, title: \"Design mockups\", completed: true },\n    { id: 2, title: \"Implement HTML/CSS\", completed: true },\n    { id: 3, title: \"Add JavaScript interactions\", completed: false },\n    { id: 4, title: \"Optimize for mobile\", completed: false },\n    { id: 5, title: \"Test across browsers\", completed: false },\n  ],\n};\n\nexport function TaskDetails({ id }: { id: string }) {\n  const [task, setTask] = useState(taskData);\n  const [isEditing, setIsEditing] = useState(false);\n\n  const toggleSubtask = (subtaskId: number) =\u003e {\n    setTask((prevTask) =\u003e ({\n      ...prevTask,\n      subtasks: prevTask.subtasks.map((subtask) =\u003e\n        subtask.id === subtaskId\n          ? { ...subtask, completed: !subtask.completed }\n          : subtask\n      ),\n      progress: calculateProgress(\n        prevTask.subtasks.map((subtask) =\u003e\n          subtask.id === subtaskId\n            ? { ...subtask, completed: !subtask.completed }\n            : subtask\n        )\n      ),\n    }));\n  };\n\n  const calculateProgress = (subtasks) =\u003e {\n    if (subtasks.length === 0) return 0;\n    const completedCount = subtasks.filter((subtask) =\u003e subtask.completed).length;\n    return Math.round((completedCount / subtasks.length) * 100);\n  };\n\n  return (\n    \u003cCard\u003e\n      \u003cCardHeader\u003e\n        \u003cdiv className=\"flex items-start justify-between\"\u003e\n          \u003cdiv\u003e\n            \u003cCardTitle className=\"text-xl\"\u003e{task.title}\u003c/CardTitle\u003e\n            \u003cCardDescription\u003e\n              {task.id} · Created on{\" \"}\n              {format(new Date(task.createdAt), \"MMM d, yyyy\")}\n            \u003c/CardDescription\u003e\n          \u003c/div\u003e\n          \u003cdiv className=\"flex items-center gap-2\"\u003e\n            \u003cButton variant=\"outline\" size=\"sm\" onClick={() =\u003e setIsEditing(true)}\u003e\n              Edit\n            \u003c/Button\u003e\n            \u003cButton variant=\"outline\" size=\"sm\"\u003e\n              Delete\n            \u003c/Button\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n        \u003cdiv className=\"mt-2 flex flex-wrap gap-2\"\u003e\n          \u003cBadge\n            variant={\n              task.status === \"Completed\"\n                ? \"success\"\n                : task.status === \"In Progress\"\n                ? \"default\"\n                : task.status === \"In Review\"\n                ? \"warning\"\n                : \"secondary\"\n            }\n          \u003e\n            {task.status}\n          \u003c/Badge\u003e\n          \u003cBadge\n            variant={\n              task.priority === \"High\"\n                ? \"destructive\"\n                : task.priority === \"Medium\"\n                ? \"default\"\n                : \"outline\"\n            }\n          \u003e\n            {task.priority}\n          \u003c/Badge\u003e\n          {task.tags.map((tag) =\u003e (\n            \u003cBadge key={tag} variant=\"outline\"\u003e\n              {tag}\n            \u003c/Badge\u003e\n          ))}\n        \u003c/div\u003e\n      \u003c/CardHeader\u003e\n      \u003cCardContent className=\"space-y-4\"\u003e\n        \u003cdiv\u003e\n          \u003ch3 className=\"mb-2 font-medium\"\u003eDescription\u003c/h3\u003e\n          \u003cp className=\"text-sm text-muted-foreground\"\u003e{task.description}\u003c/p\u003e\n        \u003c/div\u003e\n        \n        \u003cdiv\u003e\n          \u003cdiv className=\"mb-2 flex items-center justify-between\"\u003e\n            \u003ch3 className=\"font-medium\"\u003eProgress\u003c/h3\u003e\n            \u003cspan className=\"text-sm font-medium\"\u003e{task.progress}%\u003c/span\u003e\n          \u003c/div\u003e\n          \u003cProgress value={task.progress} className=\"h-2\" /\u003e\n        \u003c/div\u003e\n        \n        \u003cdiv className=\"grid gap-4 md:grid-cols-2\"\u003e\n          \u003cdiv\u003e\n            \u003ch3 className=\"mb-2 font-medium\"\u003eAssignee\u003c/h3\u003e\n            \u003cdiv className=\"flex items-center gap-2\"\u003e\n              \u003cAvatar\u003e\n                \u003cAvatarImage src={task.assignee.avatar} alt={task.assignee.name} /\u003e\n                \u003cAvatarFallback\u003e\n                  {task.assignee.name\n                    .split(\" \")\n                    .map((n) =\u003e n[0])\n                    .join(\"\")}\n                \u003c/AvatarFallback\u003e\n              \u003c/Avatar\u003e\n              \u003cdiv\u003e\n                \u003cp className=\"text-sm font-medium\"\u003e{task.assignee.name}\u003c/p\u003e\n                \u003cp className=\"text-xs text-muted-foreground\"\u003e{task.assignee.email}\u003c/p\u003e\n              \u003c/div\u003e\n            \u003c/div\u003e\n          \u003c/div\u003e\n          \n          \u003cdiv\u003e\n            \u003ch3 className=\"mb-2 font-medium\"\u003eDue Date\u003c/h3\u003e\n            \u003cp className=\"text-sm\"\u003e\n              {format(new Date(task.dueDate), \"MMMM d, yyyy\")}\n            \u003c/p\u003e\n            \u003cp className=\"text-xs text-muted-foreground\"\u003e\n              {new Date(task.dueDate) \u003c new Date()\n                ? \"Overdue\"\n                : `${Math.ceil(\n                    (new Date(task.dueDate).getTime() - new Date().getTime()) /\n                      (1000 * 60 * 60 * 24)\n                  )} days remaining`}\n            \u003c/p\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n        \n        \u003cSeparator /\u003e\n        \n        \u003cdiv\u003e\n          \u003ch3 className=\"mb-2 font-medium\"\u003eSubtasks\u003c/h3\u003e\n          \u003cdiv className=\"space-y-2\"\u003e\n            {task.subtasks.map((subtask) =\u003e (\n              \u003cdiv\n                key={subtask.id}\n                className=\"flex items-center gap-2 rounded-md border p-2\"\n              \u003e\n                \u003cinput\n                  type=\"checkbox\"\n                  checked={subtask.completed}\n                  onChange={() =\u003e toggleSubtask(subtask.id)}\n                  className=\"h-4 w-4 rounded border-gray-300\"\n                /\u003e\n                \u003cspan\n                  className={`text-sm ${\n                    subtask.completed ? \"text-muted-foreground line-through\" : \"\"\n                  }`}\n                \u003e\n                  {subtask.title}\n                \u003c/span\u003e\n              \u003c/div\u003e\n            ))}\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/CardContent\u003e\n      \u003cCardFooter className=\"flex justify-between\"\u003e\n        \u003cButton variant=\"outline\"\u003eBack to Tasks\u003c/Button\u003e\n        \u003cButton\u003eUpdate Status\u003c/Button\u003e\n      \u003c/CardFooter\u003e\n    \u003c/Card\u003e\n  );\n}\n[V0_FILE]tsx:file=\"components/tasks/task-comments.tsx\"\n\"use client\";\n\nimport { useState } from \"react\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Card,\n  CardContent,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { formatDistanceToNow } from \"date-fns\";\n\n// Mock comments data\nconst initialComments = [\n  {\n    id: 1,\n    user: {\n      name: \"Emma Wilson\",\n      avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    },\n    content: \"I've started working on the design mockups. Will share them by tomorrow.\",\n    timestamp: new Date(Date.now() - 1000 * 60 * 60 * 3), // 3 hours ago\n  },\n  {\n    id: 2,\n    user: {\n      name: \"Liam Johnson\",\n      avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    },\n    content: \"Looks good! Make sure to follow the brand guidelines for colors and typography.\",\n    timestamp: new Date(Date.now() - 1000 * 60 * 60 * 2), // 2 hours ago\n  },\n  {\n    id: 3,\n    user: {\n      name: \"Sophia Chen\",\n      avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    },\n    content: \"I can help with the JavaScript interactions once the HTML/CSS is ready.\",\n    timestamp: new Date(Date.now() - 1000 * 60 * 30), // 30 minutes ago\n  },\n];\n\nexport function TaskComments({ id }: { id: string }) {\n  const [comments, setComments] = useState(initialComments);\n  const [newComment, setNewComment] = useState(\"\");\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleSubmitComment = () =\u003e {\n    if (!newComment.trim()) return;\n    \n    setIsSubmitting(true);\n    \n    // Simulate API call\n    setTimeout(() =\u003e {\n      const comment = {\n        id: comments.length + 1,\n        user: {\n          name: \"Current User\", // In a real app, this would be the logged-in user\n          avatar: \"/placeholder.svg?height=40\u0026width=40\",\n        },\n        content: newComment,\n        timestamp: new Date(),\n      };\n      \n      setComments([...comments, comment]);\n      setNewComment(\"\");\n      setIsSubmitting(false);\n    }, 500);\n  };\n\n  return (\n    \u003cCard\u003e\n      \u003cCardHeader\u003e\n        \u003cCardTitle className=\"text-lg\"\u003eComments\u003c/CardTitle\u003e\n      \u003c/CardHeader\u003e\n      \u003cCardContent className=\"space-y-4\"\u003e\n        {comments.length === 0 ? (\n          \u003cp className=\"text-center text-sm text-muted-foreground\"\u003e\n            No comments yet. Be the first to comment!\n          \u003c/p\u003e\n        ) : (\n          \u003cdiv className=\"space-y-4\"\u003e\n            {comments.map((comment) =\u003e (\n              \u003cdiv key={comment.id} className=\"flex gap-3\"\u003e\n                \u003cAvatar className=\"h-8 w-8\"\u003e\n                  \u003cAvatarImage src={comment.user.avatar} alt={comment.user.name} /\u003e\n                  \u003cAvatarFallback\u003e\n                    {comment.user.name\n                      .split(\" \")\n                      .map((n) =\u003e n[0])\n                      .join(\"\")}\n                  \u003c/AvatarFallback\u003e\n                \u003c/Avatar\u003e\n                \u003cdiv className=\"flex-1 space-y-1\"\u003e\n                  \u003cdiv className=\"flex items-center justify-between\"\u003e\n                    \u003cp className=\"text-sm font-medium\"\u003e{comment.user.name}\u003c/p\u003e\n                    \u003cp className=\"text-xs text-muted-foreground\"\u003e\n                      {formatDistanceToNow(comment.timestamp, { addSuffix: true })}\n                    \u003c/p\u003e\n                  \u003c/div\u003e\n                  \u003cp className=\"text-sm\"\u003e{comment.content}\u003c/p\u003e\n                \u003c/div\u003e\n              \u003c/div\u003e\n            ))}\n          \u003c/div\u003e\n        )}\n      \u003c/CardContent\u003e\n      \u003cCardFooter\u003e\n        \u003cdiv className=\"flex w-full flex-col space-y-2\"\u003e\n          \u003cTextarea\n            placeholder=\"Add a comment...\"\n            value={newComment}\n            onChange={(e) =\u003e setNewComment(e.target.value)}\n            className=\"min-h-[80px] resize-none\"\n          /\u003e\n          \u003cdiv className=\"flex justify-end\"\u003e\n            \u003cButton \n              onClick={handleSubmitComment} \n              disabled={!newComment.trim() || isSubmitting}\n            \u003e\n              {isSubmitting ? \"Posting...\" : \"Post Comment\"}\n            \u003c/Button\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/CardFooter\u003e\n    \u003c/Card\u003e\n  );\n}\n[V0_FILE]tsx:file=\"components/tasks/task-attachments.tsx\"\n\"use client\";\n\nimport { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Card,\n  CardContent,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { formatBytes } from \"@/lib/utils\";\nimport { FileIcon, ImageIcon, PaperclipIcon, TrashIcon, UploadIcon } from 'lucide-react';\n\n// Mock attachments data\nconst initialAttachments = [\n  {\n    id: 1,\n    name: \"landing-page-mockup.png\",\n    type: \"image/png\",\n    size: 1200000, // 1.2 MB\n    url: \"/placeholder.svg?height=100\u0026width=100\",\n    uploadedAt: new Date(Date.now() - 1000 * 60 * 60 * 24), // 1 day ago\n  },\n  {\n    id: 2,\n    name: \"requirements.pdf\",\n    type: \"application/pdf\",\n    size: 500000, // 500 KB\n    url: \"#\",\n    uploadedAt: new Date(Date.now() - 1000 * 60 * 60 * 48), // 2 days ago\n  },\n  {\n    id: 3,\n    name: \"brand-guidelines.docx\",\n    type: \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n    size: 350000, // 350 KB\n    url: \"#\",\n    uploadedAt: new Date(Date.now() - 1000 * 60 * 60 * 72), // 3 days ago\n  },\n];\n\nexport function TaskAttachments({ id }: { id: string }) {\n  const [attachments, setAttachments] = useState(initialAttachments);\n  const [isUploading, setIsUploading] = useState(false);\n\n  const handleFileUpload = (event) =\u003e {\n    const files = event.target.files;\n    if (!files || files.length === 0) return;\n    \n    setIsUploading(true);\n    \n    // Simulate API call for file upload\n    setTimeout(() =\u003e {\n      const newAttachments = Array.from(files).map((file, index) =\u003e ({\n        id: attachments.length + index + 1,\n        name: file.name,\n        type: file.type,\n        size: file.size,\n        url: file.type.startsWith(\"image/\") \n          ? URL.createObjectURL(file) \n          : \"#\",\n        uploadedAt: new Date(),\n      }));\n      \n      setAttachments([...attachments, ...newAttachments]);\n      setIsUploading(false);\n    }, 1000);\n  };\n\n  const handleDeleteAttachment = (id) =\u003e {\n    setAttachments(attachments.filter((attachment) =\u003e attachment.id !== id));\n  };\n\n  const getFileIcon = (type) =\u003e {\n    if (type.startsWith(\"image/\")) {\n      return \u003cImageIcon className=\"h-6 w-6 text-blue-500\" /\u003e;\n    } else if (\n      type === \"application/pdf\" ||\n      type.includes(\"document\") ||\n      type.includes(\"text\")\n    ) {\n      return \u003cFileIcon className=\"h-6 w-6 text-red-500\" /\u003e;\n    } else {\n      return \u003cPaperclipIcon className=\"h-6 w-6 text-gray-500\" /\u003e;\n    }\n  };\n\n  return (\n    \u003cCard\u003e\n      \u003cCardHeader\u003e\n        \u003cCardTitle className=\"text-lg\"\u003eAttachments\u003c/CardTitle\u003e\n      \u003c/CardHeader\u003e\n      \u003cCardContent className=\"space-y-4\"\u003e\n        {attachments.length === 0 ? (\n          \u003cp className=\"text-center text-sm text-muted-foreground\"\u003e\n            No attachments yet. Upload files to share with the team.\n          \u003c/p\u003e\n        ) : (\n          \u003cdiv className=\"space-y-2\"\u003e\n            {attachments.map((attachment) =\u003e (\n              \u003cdiv\n                key={attachment.id}\n                className=\"flex items-center justify-between rounded-md border p-2\"\n              \u003e\n                \u003cdiv className=\"flex items-center gap-2\"\u003e\n                  {getFileIcon(attachment.type)}\n                  \u003cdiv\u003e\n                    \u003cp className=\"text-sm font-medium\"\u003e{attachment.name}\u003c/p\u003e\n                    \u003cp className=\"text-xs text-muted-foreground\"\u003e\n                      {formatBytes(attachment.size)} · {attachment.uploadedAt.toLocaleDateString()}\n                    \u003c/p\u003e\n                  \u003c/div\u003e\n                \u003c/div\u003e\n                \u003cdiv className=\"flex items-center gap-2\"\u003e\n                  \u003cButton variant=\"ghost\" size=\"sm\" asChild\u003e\n                    \u003ca href={attachment.url} target=\"_blank\" rel=\"noopener noreferrer\"\u003e\n                      View\n                    \u003c/a\u003e\n                  \u003c/Button\u003e\n                  \u003cButton\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    onClick={() =\u003e handleDeleteAttachment(attachment.id)}\n                  \u003e\n                    \u003cTrashIcon className=\"h-4 w-4 text-red-500\" /\u003e\n                  \u003c/Button\u003e\n                \u003c/div\u003e\n              \u003c/div\u003e\n            ))}\n          \u003c/div\u003e\n        )}\n      \u003c/CardContent\u003e\n      \u003cCardFooter\u003e\n        \u003cdiv className=\"w-full\"\u003e\n          \u003clabel htmlFor=\"file-upload\"\u003e\n            \u003cdiv className=\"flex cursor-pointer items-center justify-center gap-2 rounded-md border border-dashed p-4 hover:bg-muted\"\u003e\n              \u003cUploadIcon className=\"h-5 w-5\" /\u003e\n              \u003cspan className=\"text-sm font-medium\"\u003e\n                {isUploading ? \"Uploading...\" : \"Upload Files\"}\n              \u003c/span\u003e\n              \u003cinput\n                id=\"file-upload\"\n                type=\"file\"\n                multiple\n                className=\"hidden\"\n                onChange={handleFileUpload}\n                disabled={isUploading}\n              /\u003e\n            \u003c/div\u003e\n          \u003c/label\u003e\n        \u003c/div\u003e\n      \u003c/CardFooter\u003e\n    \u003c/Card\u003e\n  );\n}\n[V0_FILE]tsx:file=\"components/reports/task-completion-chart.tsx\"\n\"use client\";\n\nimport {\n  Bar,\n  BarChart,\n  CartesianGrid,\n  Legend,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from \"@/components/ui/chart\";\n\n// Mock data for task completion\nconst data = [\n  {\n    name: \"Week 1\",\n    completed: 12,\n    overdue: 2,\n  },\n  {\n    name: \"Week 2\",\n    completed: 18,\n    overdue: 1,\n  },\n  {\n    name: \"Week 3\",\n    completed: 15,\n    overdue: 3,\n  },\n  {\n    name: \"Week 4\",\n    completed: 20,\n    overdue: 0,\n  },\n  {\n    name: \"Week 5\",\n    completed: 16,\n    overdue: 2,\n  },\n  {\n    name: \"Week 6\",\n    completed: 22,\n    overdue: 1,\n  },\n];\n\nexport function TaskCompletionChart() {\n  return (\n    \u003cResponsiveContainer width=\"100%\" height=\"100%\"\u003e\n      \u003cBarChart\n        data={data}\n        margin={{\n          top: 20,\n          right: 30,\n          left: 20,\n          bottom: 5,\n        }}\n      \u003e\n        \u003cCartesianGrid strokeDasharray=\"3 3\" /\u003e\n        \u003cXAxis dataKey=\"name\" /\u003e\n        \u003cYAxis /\u003e\n        \u003cTooltip /\u003e\n        \u003cLegend /\u003e\n        \u003cBar dataKey=\"completed\" fill=\"#4ade80\" name=\"Completed Tasks\" /\u003e\n        \u003cBar dataKey=\"overdue\" fill=\"#f87171\" name=\"Overdue Tasks\" /\u003e\n      \u003c/BarChart\u003e\n    \u003c/ResponsiveContainer\u003e\n  );\n}\n[V0_FILE]tsx:file=\"components/reports/team-performance-chart.tsx\"\n\"use client\";\n\nimport {\n  Bar,\n  BarChart,\n  CartesianGrid,\n  Legend,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from \"@/components/ui/chart\";\n\n// Mock data for team performance\nconst data = [\n  {\n    name: \"Emma\",\n    completed: 15,\n    inProgress: 3,\n  },\n  {\n    name: \"Jackson\",\n    completed: 20,\n    inProgress: 5,\n  },\n  {\n    name: \"Sophia\",\n    completed: 18,\n    inProgress: 2,\n  },\n  {\n    name: \"Liam\",\n    completed: 12,\n    inProgress: 4,\n  },\n  {\n    name: \"Olivia\",\n    completed: 16,\n    inProgress: 3,\n  },\n];\n\nexport function TeamPerformanceChart() {\n  return (\n    \u003cResponsiveContainer width=\"100%\" height=\"100%\"\u003e\n      \u003cBarChart\n        data={data}\n        layout=\"vertical\"\n        margin={{\n          top: 20,\n          right: 30,\n          left: 60,\n          bottom: 5,\n        }}\n      \u003e\n        \u003cCartesianGrid strokeDasharray=\"3 3\" /\u003e\n        \u003cXAxis type=\"number\" /\u003e\n        \u003cYAxis dataKey=\"name\" type=\"category\" /\u003e\n        \u003cTooltip /\u003e\n        \u003cLegend /\u003e\n        \u003cBar dataKey=\"completed\" stackId=\"a\" fill=\"#8884d8\" name=\"Completed\" /\u003e\n        \u003cBar dataKey=\"inProgress\" stackId=\"a\" fill=\"#82ca9d\" name=\"In Progress\" /\u003e\n      \u003c/BarChart\u003e\n    \u003c/ResponsiveContainer\u003e\n  );\n}\n[V0_FILE]tsx:file=\"components/reports/priority-distribution-chart.tsx\"\n\"use client\";\n\nimport {\n  Cell,\n  Legend,\n  Pie,\n  PieChart,\n  ResponsiveContainer,\n  Tooltip,\n} from \"@/components/ui/chart\";\n\n// Mock data for priority distribution\nconst data = [\n  { name: \"High\", value: 12, color: \"#ef4444\" },\n  { name: \"Medium\", value: 24, color: \"#f59e0b\" },\n  { name: \"Low\", value: 18, color: \"#10b981\" },\n];\n\nexport function PriorityDistributionChart() {\n  return (\n    \u003cResponsiveContainer width=\"100%\" height=\"100%\"\u003e\n      \u003cPieChart\u003e\n        \u003cPie\n          data={data}\n          cx=\"50%\"\n          cy=\"50%\"\n          labelLine={false}\n          outerRadius={80}\n          fill=\"#8884d8\"\n          dataKey=\"value\"\n          label={({ name, percent }) =\u003e `${name} ${(percent * 100).toFixed(0)}%`}\n        \u003e\n          {data.map((entry, index) =\u003e (\n            \u003cCell key={`cell-${index}`} fill={entry.color} /\u003e\n          ))}\n        \u003c/Pie\u003e\n        \u003cTooltip /\u003e\n        \u003cLegend /\u003e\n      \u003c/PieChart\u003e\n    \u003c/ResponsiveContainer\u003e\n  );\n}\n[V0_FILE]tsx:file=\"components/settings/profile-settings.tsx\"\n\"use client\";\n\nimport { useState } from \"react\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { useForm } from \"react-hook-form\";\n\nexport function ProfileSettings({ user }) {\n  const [isLoading, setIsLoading] = useState(false);\n  \n  const form = useForm({\n    defaultValues: {\n      name: user.name || \"\",\n      email: user.email || \"\",\n      bio: user.bio || \"\",\n      jobTitle: user.jobTitle || \"\",\n      company: user.company || \"\",\n    },\n  });\n\n  async function onSubmit(data) {\n    setIsLoading(true);\n    \n    try {\n      // Here you would normally send the data to your API\n      console.log(\"Profile updated:\", data);\n      \n      // Simulate API call\n      await new Promise((resolve) =\u003e setTimeout(resolve, 1000));\n    } catch (error) {\n      console.error(\"Error updating profile:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  return (\n    \u003cCard\u003e\n      \u003cCardHeader\u003e\n        \u003cCardTitle\u003eProfile Information\u003c/CardTitle\u003e\n        \u003cCardDescription\u003e\n          Update your profile information and how others see you on the platform\n        \u003c/CardDescription\u003e\n      \u003c/CardHeader\u003e\n      \u003cForm {...form}\u003e\n        \u003cform onSubmit={form.handleSubmit(onSubmit)}\u003e\n          \u003cCardContent className=\"space-y-6\"\u003e\n            \u003cdiv className=\"flex items-center gap-4\"\u003e\n              \u003cAvatar className=\"h-16 w-16\"\u003e\n                \u003cAvatarImage src={user.avatar || \"/placeholder.svg?height=64\u0026width=64\"} alt={user.name} /\u003e\n                \u003cAvatarFallback\u003e\n                  {user.name\n                    ? user.name\n                        .split(\" \")\n                        .map((n) =\u003e n[0])\n                        .join(\"\")\n                    : \"U\"}\n                \u003c/AvatarFallback\u003e\n              \u003c/Avatar\u003e\n              \u003cdiv\u003e\n                \u003cButton variant=\"outline\" size=\"sm\"\u003e\n                  Change Avatar\n                \u003c/Button\u003e\n                \u003cp className=\"mt-1 text-xs text-muted-foreground\"\u003e\n                  JPG, GIF or PNG. Max size of 2MB.\n                \u003c/p\u003e\n              \u003c/div\u003e\n            \u003c/div\u003e\n            \n            \u003cdiv className=\"grid gap-4 md:grid-cols-2\"\u003e\n              \u003cFormField\n                control={form.control}\n                name=\"name\"\n                render={({ field }) =\u003e (\n                  \u003cFormItem\u003e\n                    \u003cFormLabel\u003eFull Name\u003c/FormLabel\u003e\n                    \u003cFormControl\u003e\n                      \u003cInput placeholder=\"Your name\" {...field} /\u003e\n                    \u003c/FormControl\u003e\n                    \u003cFormMessage /\u003e\n                  \u003c/FormItem\u003e\n                )}\n              /\u003e\n              \u003cFormField\n                control={form.control}\n                name=\"email\"\n                render={({ field }) =\u003e (\n                  \u003cFormItem\u003e\n                    \u003cFormLabel\u003eEmail\u003c/FormLabel\u003e\n                    \u003cFormControl\u003e\n                      \u003cInput placeholder=\"Your email\" type=\"email\" {...field} /\u003e\n                    \u003c/FormControl\u003e\n                    \u003cFormMessage /\u003e\n                  \u003c/FormItem\u003e\n                )}\n              /\u003e\n            \u003c/div\u003e\n            \n            \u003cFormField\n              control={form.control}\n              name=\"bio\"\n              render={({ field }) =\u003e (\n                \u003cFormItem\u003e\n                  \u003cFormLabel\u003eBio\u003c/FormLabel\u003e\n                  \u003cFormControl\u003e\n                    \u003cTextarea\n                      placeholder=\"Tell us a little about yourself\"\n                      className=\"min-h-[100px]\"\n                      {...field}\n                    /\u003e\n                  \u003c/FormControl\u003e\n                  \u003cFormDescription\u003e\n                    Brief description for your profile. URLs are hyperlinked.\n                  \u003c/FormDescription\u003e\n                  \u003cFormMessage /\u003e\n                \u003c/FormItem\u003e\n              )}\n            /\u003e\n            \n            \u003cdiv className=\"grid gap-4 md:grid-cols-2\"\u003e\n              \u003cFormField\n                control={form.control}\n                name=\"jobTitle\"\n                render={({ field }) =\u003e (\n                  \u003cFormItem\u003e\n                    \u003cFormLabel\u003eJob Title\u003c/FormLabel\u003e\n                    \u003cFormControl\u003e\n                      \u003cInput placeholder=\"Your job title\" {...field} /\u003e\n                    \u003c/FormControl\u003e\n                    \u003cFormMessage /\u003e\n                  \u003c/FormItem\u003e\n                )}\n              /\u003e\n              \u003cFormField\n                control={form.control}\n                name=\"company\"\n                render={({ field }) =\u003e (\n                  \u003cFormItem\u003e\n                    \u003cFormLabel\u003eCompany\u003c/FormLabel\u003e\n                    \u003cFormControl\u003e\n                      \u003cInput placeholder=\"Your company\" {...field} /\u003e\n                    \u003c/FormControl\u003e\n                    \u003cFormMessage /\u003e\n                  \u003c/FormItem\u003e\n                )}\n              /\u003e\n            \u003c/div\u003e\n          \u003c/CardContent\u003e\n          \u003cCardFooter\u003e\n            \u003cButton type=\"submit\" disabled={isLoading}\u003e\n              {isLoading ? \"Saving...\" : \"Save Changes\"}\n            \u003c/Button\u003e\n          \u003c/CardFooter\u003e\n        \u003c/form\u003e\n      \u003c/Form\u003e\n    \u003c/Card\u003e\n  );\n}\n[V0_FILE]tsx:file=\"components/settings/notification-settings.tsx\"\n\"use client\";\n\nimport { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { Label } from \"@/components/ui/label\";\nimport { Switch } from \"@/components/ui/switch\";\n\nexport function NotificationSettings({ user }) {\n  const [isLoading, setIsLoading] = useState(false);\n  const [settings, setSettings] = useState({\n    emailNotifications: true,\n    pushNotifications: true,\n    taskAssigned: true,\n    taskUpdated: true,\n    taskCompleted: true,\n    commentAdded: true,\n    deadlineReminder: true,\n    weeklyDigest: false,\n  });\n\n  const handleToggle = (key) =\u003e {\n    setSettings({\n      ...settings,\n      [key]: !settings[key],\n    });\n  };\n\n  const handleSave = async () =\u003e {\n    setIsLoading(true);\n    \n    try {\n      // Here you would normally send the data to your API\n      console.log(\"Notification settings updated:\", settings);\n      \n      // Simulate API call\n      await new Promise((resolve) =\u003e setTimeout(resolve, 1000));\n    } catch (error) {\n      console.error(\"Error updating notification settings:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    \u003cCard\u003e\n      \u003cCardHeader\u003e\n        \u003cCardTitle\u003eNotification Preferences\u003c/CardTitle\u003e\n        \u003cCardDescription\u003e\n          Choose how and when you want to be notified\n        \u003c/CardDescription\u003e\n      \u003c/CardHeader\u003e\n      \u003cCardContent className=\"space-y-6\"\u003e\n        \u003cdiv className=\"space-y-4\"\u003e\n          \u003ch3 className=\"text-sm font-medium\"\u003eNotification Channels\u003c/h3\u003e\n          \u003cdiv className=\"flex items-center justify-between\"\u003e\n            \u003cdiv className=\"space-y-0.5\"\u003e\n              \u003cLabel htmlFor=\"emailNotifications\"\u003eEmail Notifications\u003c/Label\u003e\n              \u003cp className=\"text-xs text-muted-foreground\"\u003e\n                Receive notifications via email\n              \u003c/p\u003e\n            \u003c/div\u003e\n            \u003cSwitch\n              id=\"emailNotifications\"\n              checked={settings.emailNotifications}\n              onCheckedChange={() =\u003e handleToggle(\"emailNotifications\")}\n            /\u003e\n          \u003c/div\u003e\n          \u003cdiv className=\"flex items-center justify-between\"\u003e\n            \u003cdiv className=\"space-y-0.5\"\u003e\n              \u003cLabel htmlFor=\"pushNotifications\"\u003ePush Notifications\u003c/Label\u003e\n              \u003cp className=\"text-xs text-muted-foreground\"\u003e\n                Receive notifications in your browser\n              \u003c/p\u003e\n            \u003c/div\u003e\n            \u003cSwitch\n              id=\"pushNotifications\"\n              checked={settings.pushNotifications}\n              onCheckedChange={() =\u003e handleToggle(\"pushNotifications\")}\n            /\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n        \n        \u003cdiv className=\"space-y-4\"\u003e\n          \u003ch3 className=\"text-sm font-medium\"\u003eTask Notifications\u003c/h3\u003e\n          \u003cdiv className=\"flex items-center justify-between\"\u003e\n            \u003cdiv className=\"space-y-0.5\"\u003e\n              \u003cLabel htmlFor=\"taskAssigned\"\u003eTask Assigned\u003c/Label\u003e\n              \u003cp className=\"text-xs text-muted-foreground\"\u003e\n                When a task is assigned to you\n              \u003c/p\u003e\n            \u003c/div\u003e\n            \u003cSwitch\n              id=\"taskAssigned\"\n              checked={settings.taskAssigned}\n              onCheckedChange={() =\u003e handleToggle(\"taskAssigned\")}\n            /\u003e\n          \u003c/div\u003e\n          \u003cdiv className=\"flex items-center justify-between\"\u003e\n            \u003cdiv className=\"space-y-0.5\"\u003e\n              \u003cLabel htmlFor=\"taskUpdated\"\u003eTask Updated\u003c/Label\u003e\n              \u003cp className=\"text-xs text-muted-foreground\"\u003e\n                When a task you're assigned to is updated\n              \u003c/p\u003e\n            \u003c/div\u003e\n            \u003cSwitch\n              id=\"taskUpdated\"\n              checked={settings.taskUpdated}\n              onCheckedChange={() =\u003e handleToggle(\"taskUpdated\")}\n            /\u003e\n          \u003c/div\u003e\n          \u003cdiv className=\"flex items-center justify-between\"\u003e\n            \u003cdiv className=\"space-y-0.5\"\u003e\n              \u003cLabel htmlFor=\"taskCompleted\"\u003eTask Completed\u003c/Label\u003e\n              \u003cp className=\"text-xs text-muted-foreground\"\u003e\n                When a task you're assigned to is marked as completed\n              \u003c/p\u003e\n            \u003c/div\u003e\n            \u003cSwitch\n              id=\"taskCompleted\"\n              checked={settings.taskCompleted}\n              onCheckedChange={() =\u003e handleToggle(\"taskCompleted\")}\n            /\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n        \n        \u003cdiv className=\"space-y-4\"\u003e\n          \u003ch3 className=\"text-sm font-medium\"\u003eOther Notifications\u003c/h3\u003e\n          \u003cdiv className=\"flex items-center justify-between\"\u003e\n            \u003cdiv className=\"space-y-0.5\"\u003e\n              \u003cLabel htmlFor=\"commentAdded\"\u003eComment Added\u003c/Label\u003e\n              \u003cp className=\"text-xs text-muted-foreground\"\u003e\n                When someone comments on a task you're involved with\n              \u003c/p\u003e\n            \u003c/div\u003e\n            \u003cSwitch\n              id=\"commentAdded\"\n              checked={settings.commentAdded}\n              onCheckedChange={() =\u003e handleToggle(\"commentAdded\")}\n            /\u003e\n          \u003c/div\u003e\n          \u003cdiv className=\"flex items-center justify-between\"\u003e\n            \u003cdiv className=\"space-y-0.5\"\u003e\n              \u003cLabel htmlFor=\"deadlineReminder\"\u003eDeadline Reminders\u003c/Label\u003e\n              \u003cp className=\"text-xs text-muted-foreground\"\u003e\n                Receive reminders before task deadlines\n              \u003c/p\u003e\n            \u003c/div\u003e\n            \u003cSwitch\n              id=\"deadlineReminder\"\n              checked={settings.deadlineReminder}\n              onCheckedChange={() =\u003e handleToggle(\"deadlineReminder\")}\n            /\u003e\n          \u003c/div\u003e\n          \u003cdiv className=\"flex items-center justify-between\"\u003e\n            \u003cdiv className=\"space-y-0.5\"\u003e\n              \u003cLabel htmlFor=\"weeklyDigest\"\u003eWeekly Digest\u003c/Label\u003e\n              \u003cp className=\"text-xs text-muted-foreground\"\u003e\n                Receive a weekly summary of your tasks and progress\n              \u003c/p\u003e\n            \u003c/div\u003e\n            \u003cSwitch\n              id=\"weeklyDigest\"\n              checked={settings.weeklyDigest}\n              onCheckedChange={() =\u003e handleToggle(\"weeklyDigest\")}\n            /\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/CardContent\u003e\n      \u003cCardFooter\u003e\n        \u003cButton onClick={handleSave} disabled={isLoading}\u003e\n          {isLoading ? \"Saving...\" : \"Save Preferences\"}\n        \u003c/Button\u003e\n      \u003c/CardFooter\u003e\n    \u003c/Card\u003e\n  );\n}\n[V0_FILE]tsx:file=\"components/settings/security-settings.tsx\"\n\"use client\";\n\nimport { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Switch } from \"@/components/ui/switch\";\nimport { useForm } from \"react-hook-form\";\n\nexport function SecuritySettings({ user }) {\n  const [isLoading, setIsLoading] = useState(false);\n  const [twoFactorEnabled, setTwoFactorEnabled] = useState(false);\n  \n  const form = useForm({\n    defaultValues: {\n      currentPassword: \"\",\n      newPassword: \"\",\n      confirmPassword: \"\",\n    },\n  });\n\n  async function onSubmit(data) {\n    setIsLoading(true);\n    \n    try {\n      // Here you would normally send the data to your API\n      console.log(\"Password updated:\", data);\n      \n      // Simulate API call\n      await new Promise((resolve) =\u003e setTimeout(resolve, 1000));\n      \n      // Reset form\n      form.reset();\n    } catch (error) {\n      console.error(\"Error updating password:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  const handleToggleTwoFactor = async () =\u003e {\n    setIsLoading(true);\n    \n    try {\n      // Here you would normally send the data to your API\n      console.log(\"Two-factor authentication toggled:\", !twoFactorEnabled);\n      \n      // Simulate API call\n      await new Promise((resolve) =\u003e setTimeout(resolve, 1000));\n      \n      setTwoFactorEnabled(!twoFactorEnabled);\n    } catch (error) {\n      console.error(\"Error toggling two-factor authentication:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    \u003cCard\u003e\n      \u003cCardHeader\u003e\n        \u003cCardTitle\u003eSecurity Settings\u003c/CardTitle\u003e\n        \u003cCardDescription\u003e\n          Manage your password and account security\n        \u003c/CardDescription\u003e\n      \u003c/CardHeader\u003e\n      \u003cCardContent className=\"space-y-6\"\u003e\n        \u003cForm {...form}\u003e\n          \u003cform onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\"\u003e\n            \u003cFormField\n              control={form.control}\n              name=\"currentPassword\"\n              render={({ field }) =\u003e (\n                \u003cFormItem\u003e\n                  \u003cFormLabel\u003eCurrent Password\u003c/FormLabel\u003e\n                  \u003cFormControl\u003e\n                    \u003cInput type=\"password\" {...field} /\u003e\n                  \u003c/FormControl\u003e\n                  \u003cFormMessage /\u003e\n                \u003c/FormItem\u003e\n              )}\n            /\u003e\n            \u003cFormField\n              control={form.control}\n              name=\"newPassword\"\n              render={({ field }) =\u003e (\n                \u003cFormItem\u003e\n                  \u003cFormLabel\u003eNew Password\u003c/FormLabel\u003e\n                  \u003cFormControl\u003e\n                    \u003cInput type=\"password\" {...field} /\u003e\n                  \u003c/FormControl\u003e\n                  \u003cFormDescription\u003e\n                    Password must be at least 8 characters long and include a mix of letters, numbers, and symbols.\n                  \u003c/FormDescription\u003e\n                  \u003cFormMessage /\u003e\n                \u003c/FormItem\u003e\n              )}\n            /\u003e\n            \u003cFormField\n              control={form.control}\n              name=\"confirmPassword\"\n              render={({ field }) =\u003e (\n                \u003cFormItem\u003e\n                  \u003cFormLabel\u003eConfirm New Password\u003c/FormLabel\u003e\n                  \u003cFormControl\u003e\n                    \u003cInput type=\"password\" {...field} /\u003e\n                  \u003c/FormControl\u003e\n                  \u003cFormMessage /\u003e\n                \u003c/FormItem\u003e\n              )}\n            /\u003e\n            \u003cButton type=\"submit\" disabled={isLoading}\u003e\n              {isLoading ? \"Updating...\" : \"Update Password\"}\n            \u003c/Button\u003e\n          \u003c/form\u003e\n        \u003c/Form\u003e\n        \n        \u003cdiv className=\"space-y-4\"\u003e\n          \u003ch3 className=\"text-sm font-medium\"\u003eTwo-Factor Authentication\u003c/h3\u003e\n          \u003cdiv className=\"flex items-center justify-between\"\u003e\n            \u003cdiv className=\"space-y-0.5\"\u003e\n              \u003cLabel htmlFor=\"twoFactorAuth\"\u003eEnable Two-Factor Authentication\u003c/Label\u003e\n              \u003cp className=\"text-xs text-muted-foreground\"\u003e\n                Add an extra layer of security to your account\n              \u003c/p\u003e\n            \u003c/div\u003e\n            \u003cSwitch\n              id=\"twoFactorAuth\"\n              checked={twoFactorEnabled}\n              onCheckedChange={handleToggleTwoFactor}\n              disabled={isLoading}\n            /\u003e\n          \u003c/div\u003e\n          {twoFactorEnabled \u0026\u0026 (\n            \u003cdiv className=\"rounded-md bg-muted p-4\"\u003e\n              \u003cp className=\"text-sm\"\u003e\n                Two-factor authentication is enabled. You will receive a verification code via email when signing in.\n              \u003c/p\u003e\n            \u003c/div\u003e\n          )}\n        \u003c/div\u003e\n        \n        \u003cdiv className=\"space-y-4\"\u003e\n          \u003ch3 className=\"text-sm font-medium\"\u003eSession Management\u003c/h3\u003e\n          \u003cdiv className=\"rounded-md border p-4\"\u003e\n            \u003cdiv className=\"flex items-center justify-between\"\u003e\n              \u003cdiv\u003e\n                \u003cp className=\"text-sm font-medium\"\u003eActive Sessions\u003c/p\u003e\n                \u003cp className=\"text-xs text-muted-foreground\"\u003e\n                  You are currently logged in on 2 devices\n                \u003c/p\u003e\n              \u003c/div\u003e\n              \u003cButton variant=\"outline\" size=\"sm\"\u003e\n                Manage Sessions\n              \u003c/Button\u003e\n            \u003c/div\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/CardContent\u003e\n      \u003cCardFooter className=\"flex justify-between\"\u003e\n        \u003cButton variant=\"outline\" className=\"text-red-500\"\u003e\n          Delete Account\n        \u003c/Button\u003e\n        \u003cButton variant=\"outline\"\u003e\n          Download Personal Data\n        \u003c/Button\u003e\n      \u003c/CardFooter\u003e\n    \u003c/Card\u003e\n  );\n}\n[V0_FILE]tsx:file=\"components/users/user-management.tsx\"\n\"use client\";\n\nimport { useState } from \"react\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport { Input } from \"@/components/ui/input\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\nimport { MoreHorizontalIcon, SearchIcon } from 'lucide-react';\n\n// Mock users data\nconst initialUsers = [\n  {\n    id: 1,\n    name: \"Emma Wilson\",\n    email: \"emma@example.com\",\n    role: \"admin\",\n    status: \"active\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    lastActive: \"2023-11-28T10:30:00Z\",\n  },\n  {\n    id: 2,\n    name: \"Jackson Lee\",\n    email: \"jackson@example.com\",\n    role: \"editor\",\n    status: \"active\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    lastActive: \"2023-11-27T14:45:00Z\",\n  },\n  {\n    id: 3,\n    name: \"Sophia Chen\",\n    email: \"sophia@example.com\",\n    role: \"editor\",\n    status: \"active\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    lastActive: \"2023-11-28T09:15:00Z\",\n  },\n  {\n    id: 4,\n    name: \"Liam Johnson\",\n    email: \"liam@example.com\",\n    role: \"viewer\",\n    status: \"active\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    lastActive: \"2023-11-26T11:20:00Z\",\n  },\n  {\n    id: 5,\n    name: \"Olivia Martinez\",\n    email: \"olivia@example.com\",\n    role: \"editor\",\n    status: \"inactive\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    lastActive: \"2023-11-20T16:30:00Z\",\n  },\n  {\n    id: 6,\n    name: \"Noah Williams\",\n    email: \"noah@example.com\",\n    role: \"viewer\",\n    status: \"pending\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    lastActive: null,\n  },\n];\n\nexport function UserManagement() {\n  const [users, setUsers] = useState(initialUsers);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [roleFilter, setRoleFilter] = useState(\"all\");\n  const [statusFilter, setStatusFilter] = useState(\"all\");\n\n  const filteredUsers = users.filter((user) =\u003e {\n    const matchesSearch =\n      user.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n      user.email.toLowerCase().includes(searchQuery.toLowerCase());\n    \n    const matchesRole = roleFilter === \"all\" || user.role === roleFilter;\n    const matchesStatus = statusFilter === \"all\" || user.status === statusFilter;\n    \n    return matchesSearch \u0026\u0026 matchesRole \u0026\u0026 matchesStatus;\n  });\n\n  const handleRoleChange = (userId, newRole) =\u003e {\n    setUsers(\n      users.map((user) =\u003e\n        user.id === userId ? { ...user, role: newRole } : user\n      )\n    );\n  };\n\n  const handleStatusChange = (userId, newStatus) =\u003e {\n    setUsers(\n      users.map((user) =\u003e\n        user.id === userId ? { ...user, status: newStatus } : user\n      )\n    );\n  };\n\n  const getRoleBadgeVariant = (role) =\u003e {\n    switch (role) {\n      case \"admin\":\n        return \"default\";\n      case \"editor\":\n        return \"secondary\";\n      case \"viewer\":\n        return \"outline\";\n      default:\n        return \"outline\";\n    }\n  };\n\n  const getStatusBadgeVariant = (status) =\u003e {\n    switch (status) {\n      case \"active\":\n        return \"success\";\n      case \"inactive\":\n        return \"secondary\";\n      case \"pending\":\n        return \"warning\";\n      default:\n        return \"outline\";\n    }\n  };\n\n  const formatLastActive = (lastActive) =\u003e {\n    if (!lastActive) return \"Never\";\n    \n    const date = new Date(lastActive);\n    return date.toLocaleDateString() + \" \" + date.toLocaleTimeString();\n  };\n\n  return (\n    \u003cCard\u003e\n      \u003cCardHeader\u003e\n        \u003cCardTitle\u003eUser Management\u003c/CardTitle\u003e\n        \u003cCardDescription\u003e\n          Manage users and their permissions in your organization\n        \u003c/CardDescription\u003e\n      \u003c/CardHeader\u003e\n      \u003cCardContent\u003e\n        \u003cdiv className=\"mb-4 flex flex-col gap-4 sm:flex-row sm:items-center sm:justify-between\"\u003e\n          \u003cdiv className=\"flex items-center gap-2\"\u003e\n            \u003cdiv className=\"relative\"\u003e\n              \u003cSearchIcon className=\"absolute left-2.5 top-2.5 h-4 w-4 text-muted-foreground\" /\u003e\n              \u003cInput\n                type=\"search\"\n                placeholder=\"Search users...\"\n                className=\"pl-8\"\n                value={searchQuery}\n                onChange={(e) =\u003e setSearchQuery(e.target.value)}\n              /\u003e\n            \u003c/div\u003e\n          \u003c/div\u003e\n          \u003cdiv className=\"flex flex-col gap-2 sm:flex-row\"\u003e\n            \u003cSelect value={roleFilter} onValueChange={setRoleFilter}\u003e\n              \u003cSelectTrigger className=\"w-[180px]\"\u003e\n                \u003cSelectValue placeholder=\"Filter by role\" /\u003e\n              \u003c/SelectTrigger\u003e\n              \u003cSelectContent\u003e\n                \u003cSelectItem value=\"all\"\u003eAll Roles\u003c/SelectItem\u003e\n                \u003cSelectItem value=\"admin\"\u003eAdmin\u003c/SelectItem\u003e\n                \u003cSelectItem value=\"editor\"\u003eEditor\u003c/SelectItem\u003e\n                \u003cSelectItem value=\"viewer\"\u003eViewer\u003c/SelectItem\u003e\n              \u003c/SelectContent\u003e\n            \u003c/Select\u003e\n            \u003cSelect value={statusFilter} onValueChange={setStatusFilter}\u003e\n              \u003cSelectTrigger className=\"w-[180px]\"\u003e\n                \u003cSelectValue placeholder=\"Filter by status\" /\u003e\n              \u003c/SelectTrigger\u003e\n              \u003cSelectContent\u003e\n                \u003cSelectItem value=\"all\"\u003eAll Statuses\u003c/SelectItem\u003e\n                \u003cSelectItem value=\"active\"\u003eActive\u003c/SelectItem\u003e\n                \u003cSelectItem value=\"inactive\"\u003eInactive\u003c/SelectItem\u003e\n                \u003cSelectItem value=\"pending\"\u003ePending\u003c/SelectItem\u003e\n              \u003c/SelectContent\u003e\n            \u003c/Select\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n        \u003cdiv className=\"rounded-md border\"\u003e\n          \u003cTable\u003e\n            \u003cTableHeader\u003e\n              \u003cTableRow\u003e\n                \u003cTableHead\u003eUser\u003c/TableHead\u003e\n                \u003cTableHead\u003eRole\u003c/TableHead\u003e\n                \u003cTableHead\u003eStatus\u003c/TableHead\u003e\n                \u003cTableHead\u003eLast Active\u003c/TableHead\u003e\n                \u003cTableHead className=\"text-right\"\u003eActions\u003c/TableHead\u003e\n              \u003c/TableRow\u003e\n            \u003c/TableHeader\u003e\n            \u003cTableBody\u003e\n              {filteredUsers.length === 0 ? (\n                \u003cTableRow\u003e\n                  \u003cTableCell colSpan={5} className=\"text-center\"\u003e\n                    No users found\n                  \u003c/TableCell\u003e\n                \u003c/TableRow\u003e\n              ) : (\n                filteredUsers.map((user) =\u003e (\n                  \u003cTableRow key={user.id}\u003e\n                    \u003cTableCell\u003e\n                      \u003cdiv className=\"flex items-center gap-3\"\u003e\n                        \u003cAvatar\u003e\n                          \u003cAvatarImage src={user.avatar} alt={user.name} /\u003e\n                          \u003cAvatarFallback\u003e\n                            {user.name\n                              .split(\" \")\n                              .map((n) =\u003e n[0])\n                              .join(\"\")}\n                          \u003c/AvatarFallback\u003e\n                        \u003c/Avatar\u003e\n                        \u003cdiv\u003e\n                          \u003cp className=\"font-medium\"\u003e{user.name}\u003c/p\u003e\n                          \u003cp className=\"text-sm text-muted-foreground\"\u003e\n                            {user.email}\n                          \u003c/p\u003e\n                        \u003c/div\u003e\n                      \u003c/div\u003e\n                    \u003c/TableCell\u003e\n                    \u003cTableCell\u003e\n                      \u003cBadge variant={getRoleBadgeVariant(user.role)}\u003e\n                        {user.role.charAt(0).toUpperCase() + user.role.slice(1)}\n                      \u003c/Badge\u003e\n                    \u003c/TableCell\u003e\n                    \u003cTableCell\u003e\n                      \u003cBadge variant={getStatusBadgeVariant(user.status)}\u003e\n                        {user.status.charAt(0).toUpperCase() + user.status.slice(1)}\n                      \u003c/Badge\u003e\n                    \u003c/TableCell\u003e\n                    \u003cTableCell\u003e{formatLastActive(user.lastActive)}\u003c/TableCell\u003e\n                    \u003cTableCell className=\"text-right\"\u003e\n                      \u003cDropdownMenu\u003e\n                        \u003cDropdownMenuTrigger asChild\u003e\n                          \u003cButton variant=\"ghost\" size=\"sm\"\u003e\n                            \u003cMoreHorizontalIcon className=\"h-4 w-4\" /\u003e\n                            \u003cspan className=\"sr-only\"\u003eOpen menu\u003c/span\u003e\n                          \u003c/Button\u003e\n                        \u003c/DropdownMenuTrigger\u003e\n                        \u003cDropdownMenuContent align=\"end\"\u003e\n                          \u003cDropdownMenuLabel\u003eActions\u003c/DropdownMenuLabel\u003e\n                          \u003cDropdownMenuItem\u003eView Profile\u003c/DropdownMenuItem\u003e\n                          \u003cDropdownMenuSeparator /\u003e\n                          \u003cDropdownMenuLabel\u003eChange Role\u003c/DropdownMenuLabel\u003e\n                          \u003cDropdownMenuItem onClick={() =\u003e handleRoleChange(user.id, \"admin\")}\u003e\n                            Make Admin\n                          \u003c/DropdownMenuItem\u003e\n                          \u003cDropdownMenuItem onClick={() =\u003e handleRoleChange(user.id, \"editor\")}\u003e\n                            Make Editor\n                          \u003c/DropdownMenuItem\u003e\n                          \u003cDropdownMenuItem onClick={() =\u003e handleRoleChange(user.id, \"viewer\")}\u003e\n                            Make Viewer\n                          \u003c/DropdownMenuItem\u003e\n                          \u003cDropdownMenuSeparator /\u003e\n                          \u003cDropdownMenuLabel\u003eChange Status\u003c/DropdownMenuLabel\u003e\n                          \u003cDropdownMenuItem onClick={() =\u003e handleStatusChange(user.id, \"active\")}\u003e\n                            Set Active\n                          \u003c/DropdownMenuItem\u003e\n                          \u003cDropdownMenuItem onClick={() =\u003e handleStatusChange(user.id, \"inactive\")}\u003e\n                            Set Inactive\n                          \u003c/DropdownMenuItem\u003e\n                          \u003cDropdownMenuSeparator /\u003e\n                          \u003cDropdownMenuItem className=\"text-red-600\"\u003e\n                            Delete User\n                          \u003c/DropdownMenuItem\u003e\n                        \u003c/DropdownMenuContent\u003e\n                      \u003c/DropdownMenu\u003e\n                    \u003c/TableCell\u003e\n                  \u003c/TableRow\u003e\n                ))\n              )}\n            \u003c/TableBody\u003e\n          \u003c/Table\u003e\n        \u003c/div\u003e\n      \u003c/CardContent\u003e\n    \u003c/Card\u003e\n  );\n}\n[V0_FILE]tsx:file=\"lib/auth.ts\"\n// This is a mock implementation for demonstration purposes\n// In a real application, you would use a proper authentication library like NextAuth.js\n\nimport { jwtVerify, SignJWT } from \"jose\";\n\n// Mock user data\nconst users = [\n  {\n    id: 1,\n    name: \"Admin User\",\n    email: \"admin@example.com\",\n    password: \"admin123\", // In a real app, this would be hashed\n    role: \"admin\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    bio: \"Task management system administrator\",\n    jobTitle: \"Project Manager\",\n    company: \"Acme Inc.\",\n  },\n  {\n    id: 2,\n    name: \"Editor User\",\n    email: \"editor@example.com\",\n    password: \"editor123\", // In a real app, this would be hashed\n    role: \"editor\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    bio: \"Frontend developer working on the task management system\",\n    jobTitle: \"Senior Developer\",\n    company: \"Acme Inc.\",\n  },\n  {\n    id: 3,\n    name: \"Viewer User\",\n    email: \"viewer@example.com\",\n    password: \"viewer123\", // In a real app, this would be hashed\n    role: \"viewer\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    bio: \"Team member using the task management system\",\n    jobTitle: \"Content Writer\",\n    company: \"Acme Inc.\",\n  },\n];\n\n// Secret key for JWT\nconst JWT_SECRET = new TextEncoder().encode(\n  process.env.JWT_SECRET || \"your-secret-key\"\n);\n\n// Login user\nexport async function loginUser(email: string, password: string) {\n  // Find user by email\n  const user = users.find((u) =\u003e u.email === email);\n  \n  // Check if user exists and password matches\n  if (!user || user.password !== password) {\n    throw new Error(\"Invalid credentials\");\n  }\n  \n  // Create JWT token\n  const token = await new SignJWT({ userId: user.id, role: user.role })\n    .setProtectedHeader({ alg: \"HS256\" })\n    .setIssuedAt()\n    .setExpirationTime(\"24h\")\n    .sign(JWT_SECRET);\n  \n  // Store token in localStorage (in a real app, use cookies for better security)\n  if (typeof window !== \"undefined\") {\n    localStorage.setItem(\"auth-token\", token);\n  }\n  \n  return { user: { id: user.id, name: user.name, email: user.email, role: user.role } };\n}\n\n// Register user\nexport async function registerUser(name: string, email: string, password: string) {\n  // Check if user already exists\n  if (users.find((u) =\u003e u.email === email)) {\n    throw new Error(\"User already exists\");\n  }\n  \n  // Create new user\n  const newUser = {\n    id: users.length + 1,\n    name,\n    email,\n    password, // In a real app, this would be hashed\n    role: \"viewer\", // Default role for new users\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    bio: \"\",\n    jobTitle: \"\",\n    company: \"\",\n  };\n  \n  // Add user to the mock database\n  users.push(newUser);\n  \n  // Create JWT token\n  const token = await new SignJWT({ userId: newUser.id, role: newUser.role })\n    .setProtectedHeader({ alg: \"HS256\" })\n    .setIssuedAt()\n    .setExpirationTime(\"24h\")\n    .sign(JWT_SECRET);\n  \n  // Store token in localStorage (in a real app, use cookies for better security)\n  if (typeof window !== \"undefined\") {\n    localStorage.setItem(\"auth-token\", token);\n  }\n  \n  return { user: { id: newUser.id, name: newUser.name, email: newUser.email, role: newUser.role } };\n}\n\n// Get user session\nexport async function getUserSession() {\n  // In a server component, we would verify the session cookie\n  // For this demo, we'll simulate a logged-in user\n  \n  // In a client component, we would get the token from localStorage\n  let token;\n  if (typeof window !== \"undefined\") {\n    token = localStorage.getItem(\"auth-token\");\n  }\n  \n  if (!token) {\n    // For demo purposes, return a mock user\n    return users[0];\n  }\n  \n  try {\n    // Verify token\n    const { payload } = await jwtVerify(token, JWT_SECRET);\n    const userId = payload.userId as number;\n    \n    // Find user\n    const user = users.find((u) =\u003e u.id === userId);\n    if (!user) {\n      return null;\n    }\n    \n    return user;\n  } catch (error) {\n    console.error(\"Error verifying token:\", error);\n    return null;\n  }\n}\n\n// Logout user\nexport function logoutUser() {\n  if (typeof window !== \"undefined\") {\n    localStorage.removeItem(\"auth-token\");\n  }\n}\n[V0_FILE]tsx:file=\"lib/utils.ts\"\nimport { type ClassValue, clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\n// Format bytes to human-readable format\nexport function formatBytes(bytes: number, decimals = 2) {\n  if (bytes === 0) return \"0 Bytes\";\n\n  const k = 1024;\n  const dm = decimals \u003c 0 ? 0 : decimals;\n  const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + \" \" + sizes[i];\n}\n[V0_FILE]tsx:file=\"tailwind.config.js\"\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  darkMode: [\"class\"],\n  content: [\"./pages/**/*.{ts,tsx}\", \"./components/**/*.{ts,tsx}\", \"./app/**/*.{ts,tsx}\", \"./src/**/*.{ts,tsx}\", \"*.{js,ts,jsx,tsx,mdx}\"],\n  theme: {\n    container: {\n      center: true,\n      padding: \"2rem\",\n      screens: {\n        \"2xl\": \"1400px\",\n      },\n    },\n    extend: {\n      colors: {\n        border: \"hsl(var(--border))\",\n        input: \"hsl(var(--input))\",\n        ring: \"hsl(var(--ring))\",\n        background: \"hsl(var(--background))\",\n        foreground: \"hsl(var(--foreground))\",\n        primary: {\n          DEFAULT: \"hsl(var(--primary))\",\n          foreground: \"hsl(var(--primary-foreground))\",\n        },\n        secondary: {\n          DEFAULT: \"hsl(var(--secondary))\",\n          foreground: \"hsl(var(--secondary-foreground))\",\n        },\n        destructive: {\n          DEFAULT: \"hsl(var(--destructive))\",\n          foreground: \"hsl(var(--destructive-foreground))\",\n        },\n        muted: {\n          DEFAULT: \"hsl(var(--muted))\",\n          foreground: \"hsl(var(--muted-foreground))\",\n        },\n        accent: {\n          DEFAULT: \"hsl(var(--accent))\",\n          foreground: \"hsl(var(--accent-foreground))\",\n        },\n        popover: {\n          DEFAULT: \"hsl(var(--popover))\",\n          foreground: \"hsl(var(--popover-foreground))\",\n        },\n        card: {\n          DEFAULT: \"hsl(var(--card))\",\n          foreground: \"hsl(var(--card-foreground))\",\n        },\n        success: {\n          DEFAULT: \"#10b981\",\n          foreground: \"#ffffff\",\n        },\n        warning: {\n          DEFAULT: \"#f59e0b\",\n          foreground: \"#ffffff\",\n        },\n      },\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: { height: 0 },\n          to: { height: \"var(--radix-accordion-content-height)\" },\n        },\n        \"accordion-up\": {\n          from: { height: \"var(--radix-accordion-content-height)\" },\n          to: { height: 0 },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\")],\n}\n[V0_FILE]tsx:file=\"components/ui/chart.tsx\"\nexport {\n  Area,\n  AreaChart,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n  Bar,\n  BarChart,\n  CartesianGrid,\n  Legend,\n  Cell,\n  Pie,\n  PieChart,\n} from \"recharts\";"])</script><script>self.__next_f.push([1,"5c:T2c612,"])</script><script>self.__next_f.push([1,"[V0_FILE]typescriptreact:file=\"app/page.tsx\" isMerged=\"true\"\nimport { redirect } from \"next/navigation\"\nimport { DashboardHeader } from \"@/components/dashboard/dashboard-header\"\nimport { DashboardShell } from \"@/components/dashboard/dashboard-shell\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Overview } from \"@/components/dashboard/overview\"\nimport { RecentTasks } from \"@/components/dashboard/recent-tasks\"\nimport { TeamMembers } from \"@/components/dashboard/team-members\"\nimport { getUserSession } from \"@/lib/auth\"\n\nexport default async function DashboardPage() {\n  const user = await getUserSession()\n\n  if (!user) {\n    redirect(\"/login\")\n  }\n\n  return (\n    \u003cDashboardShell\u003e\n      \u003cDashboardHeader heading=\"Dashboard\" text=\"Welcome back! Here's an overview of your team's tasks.\"\u003e\n        \u003cButton\u003e\n          \u003ca href=\"/tasks/new\"\u003eCreate Task\u003c/a\u003e\n        \u003c/Button\u003e\n      \u003c/DashboardHeader\u003e\n      \u003cdiv className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\"\u003e\n        \u003cCard\u003e\n          \u003cCardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\"\u003e\n            \u003cCardTitle className=\"text-sm font-medium\"\u003eTotal Tasks\u003c/CardTitle\u003e\n            \u003csvg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2\"\n              className=\"h-4 w-4 text-muted-foreground\"\n            \u003e\n              \u003cpath d=\"M12 2v20M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6\" /\u003e\n            \u003c/svg\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent\u003e\n            \u003cdiv className=\"text-2xl font-bold\"\u003e24\u003c/div\u003e\n            \u003cp className=\"text-xs text-muted-foreground\"\u003e+10% from last month\u003c/p\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n        \u003cCard\u003e\n          \u003cCardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\"\u003e\n            \u003cCardTitle className=\"text-sm font-medium\"\u003eCompleted\u003c/CardTitle\u003e\n            \u003csvg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2\"\n              className=\"h-4 w-4 text-muted-foreground\"\n            \u003e\n              \u003cpath d=\"M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2\" /\u003e\n              \u003ccircle cx=\"9\" cy=\"7\" r=\"4\" /\u003e\n              \u003cpath d=\"M22 21v-2a4 4 0 0 0-3-3.87M16 3.13a4 4 0 0 1 0 7.75\" /\u003e\n            \u003c/svg\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent\u003e\n            \u003cdiv className=\"text-2xl font-bold\"\u003e16\u003c/div\u003e\n            \u003cp className=\"text-xs text-muted-foreground\"\u003e+12% from last month\u003c/p\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n        \u003cCard\u003e\n          \u003cCardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\"\u003e\n            \u003cCardTitle className=\"text-sm font-medium\"\u003eIn Progress\u003c/CardTitle\u003e\n            \u003csvg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2\"\n              className=\"h-4 w-4 text-muted-foreground\"\n            \u003e\n              \u003crect width=\"20\" height=\"14\" x=\"2\" y=\"5\" rx=\"2\" /\u003e\n              \u003cpath d=\"M2 10h20\" /\u003e\n            \u003c/svg\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent\u003e\n            \u003cdiv className=\"text-2xl font-bold\"\u003e6\u003c/div\u003e\n            \u003cp className=\"text-xs text-muted-foreground\"\u003e-2% from last month\u003c/p\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n        \u003cCard\u003e\n          \u003cCardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\"\u003e\n            \u003cCardTitle className=\"text-sm font-medium\"\u003eOverdue\u003c/CardTitle\u003e\n            \u003csvg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2\"\n              className=\"h-4 w-4 text-muted-foreground\"\n            \u003e\n              \u003cpath d=\"M22 12h-4l-3 9L9 3l-3 9H2\" /\u003e\n            \u003c/svg\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent\u003e\n            \u003cdiv className=\"text-2xl font-bold\"\u003e2\u003c/div\u003e\n            \u003cp className=\"text-xs text-muted-foreground\"\u003e-4% from last month\u003c/p\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n      \u003c/div\u003e\n      \u003cdiv className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-7\"\u003e\n        \u003cCard className=\"col-span-4\"\u003e\n          \u003cCardHeader\u003e\n            \u003cCardTitle\u003eTask Completion Overview\u003c/CardTitle\u003e\n            \u003cCardDescription\u003eTask completion rate over the last 30 days\u003c/CardDescription\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent className=\"pl-2\"\u003e\n            \u003cOverview /\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n        \u003cCard className=\"col-span-3\"\u003e\n          \u003cCardHeader\u003e\n            \u003cCardTitle\u003eRecent Tasks\u003c/CardTitle\u003e\n            \u003cCardDescription\u003eRecently created or updated tasks\u003c/CardDescription\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent\u003e\n            \u003cRecentTasks /\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n      \u003c/div\u003e\n      \u003cdiv className=\"grid gap-4 md:grid-cols-1\"\u003e\n        \u003cCard\u003e\n          \u003cCardHeader\u003e\n            \u003cCardTitle\u003eTeam Members\u003c/CardTitle\u003e\n            \u003cCardDescription\u003eManage your team and their task assignments\u003c/CardDescription\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent\u003e\n            \u003cTeamMembers /\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n      \u003c/div\u003e\n    \u003c/DashboardShell\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"app/tasks/page.tsx\" isMerged=\"true\"\nimport { redirect } from \"next/navigation\"\nimport { DashboardHeader } from \"@/components/dashboard/dashboard-header\"\nimport { DashboardShell } from \"@/components/dashboard/dashboard-shell\"\nimport { Button } from \"@/components/ui/button\"\nimport { KanbanBoard } from \"@/components/tasks/kanban-board\"\nimport { TaskFilters } from \"@/components/tasks/task-filters\"\nimport { getUserSession } from \"@/lib/auth\"\n\nexport default async function TasksPage() {\n  const user = await getUserSession()\n\n  if (!user) {\n    redirect(\"/login\")\n  }\n\n  return (\n    \u003cDashboardShell\u003e\n      \u003cDashboardHeader heading=\"Tasks\" text=\"Manage and organize your team's tasks\"\u003e\n        \u003cButton\u003e\n          \u003ca href=\"/tasks/new\"\u003eCreate Task\u003c/a\u003e\n        \u003c/Button\u003e\n      \u003c/DashboardHeader\u003e\n      \u003cdiv className=\"space-y-4\"\u003e\n        \u003cTaskFilters /\u003e\n        \u003cKanbanBoard /\u003e\n      \u003c/div\u003e\n    \u003c/DashboardShell\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"app/tasks/new/page.tsx\" isMerged=\"true\"\nimport { redirect } from \"next/navigation\"\nimport { DashboardHeader } from \"@/components/dashboard/dashboard-header\"\nimport { DashboardShell } from \"@/components/dashboard/dashboard-shell\"\nimport { TaskForm } from \"@/components/tasks/task-form\"\nimport { getUserSession } from \"@/lib/auth\"\n\nexport default async function NewTaskPage() {\n  const user = await getUserSession()\n\n  if (!user) {\n    redirect(\"/login\")\n  }\n\n  // Check if user has permission to create tasks\n  if (user.role === \"viewer\") {\n    redirect(\"/dashboard\")\n  }\n\n  return (\n    \u003cDashboardShell\u003e\n      \u003cDashboardHeader heading=\"Create New Task\" text=\"Add a new task and assign it to team members\" /\u003e\n      \u003cdiv className=\"grid gap-4\"\u003e\n        \u003cTaskForm /\u003e\n      \u003c/div\u003e\n    \u003c/DashboardShell\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"app/tasks/[id]/page.tsx\" isMerged=\"true\"\nimport { redirect } from \"next/navigation\"\nimport { DashboardHeader } from \"@/components/dashboard/dashboard-header\"\nimport { DashboardShell } from \"@/components/dashboard/dashboard-shell\"\nimport { TaskDetails } from \"@/components/tasks/task-details\"\nimport { TaskComments } from \"@/components/tasks/task-comments\"\nimport { TaskAttachments } from \"@/components/tasks/task-attachments\"\nimport { getUserSession } from \"@/lib/auth\"\n\nexport default async function TaskDetailsPage({ params }: { params: { id: string } }) {\n  const user = await getUserSession()\n\n  if (!user) {\n    redirect(\"/login\")\n  }\n\n  return (\n    \u003cDashboardShell\u003e\n      \u003cDashboardHeader heading=\"Task Details\" text=\"View and manage task details\" /\u003e\n      \u003cdiv className=\"grid gap-6\"\u003e\n        \u003cTaskDetails id={params.id} /\u003e\n        \u003cdiv className=\"grid gap-4 md:grid-cols-2\"\u003e\n          \u003cTaskComments id={params.id} /\u003e\n          \u003cTaskAttachments id={params.id} /\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n    \u003c/DashboardShell\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"app/reports/page.tsx\" isMerged=\"true\"\nimport { redirect } from \"next/navigation\"\nimport { DashboardHeader } from \"@/components/dashboard/dashboard-header\"\nimport { DashboardShell } from \"@/components/dashboard/dashboard-shell\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { TaskCompletionChart } from \"@/components/reports/task-completion-chart\"\nimport { TeamPerformanceChart } from \"@/components/reports/team-performance-chart\"\nimport { PriorityDistributionChart } from \"@/components/reports/priority-distribution-chart\"\nimport { getUserSession } from \"@/lib/auth\"\n\nexport default async function ReportsPage() {\n  const user = await getUserSession()\n\n  if (!user) {\n    redirect(\"/login\")\n  }\n\n  return (\n    \u003cDashboardShell\u003e\n      \u003cDashboardHeader heading=\"Reports\" text=\"Analyze task performance and team productivity\"\u003e\n        \u003cdiv className=\"flex space-x-2\"\u003e\n          \u003cButton variant=\"outline\"\u003eExport CSV\u003c/Button\u003e\n          \u003cButton variant=\"outline\"\u003eExport PDF\u003c/Button\u003e\n        \u003c/div\u003e\n      \u003c/DashboardHeader\u003e\n      \u003cdiv className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-2\"\u003e\n        \u003cCard className=\"col-span-1\"\u003e\n          \u003cCardHeader\u003e\n            \u003cCardTitle\u003eTask Completion Rate\u003c/CardTitle\u003e\n            \u003cCardDescription\u003ePercentage of tasks completed on time\u003c/CardDescription\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent className=\"h-80\"\u003e\n            \u003cTaskCompletionChart /\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n        \u003cCard className=\"col-span-1\"\u003e\n          \u003cCardHeader\u003e\n            \u003cCardTitle\u003eTeam Performance\u003c/CardTitle\u003e\n            \u003cCardDescription\u003eTasks completed by team members\u003c/CardDescription\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent className=\"h-80\"\u003e\n            \u003cTeamPerformanceChart /\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n        \u003cCard className=\"col-span-2\"\u003e\n          \u003cCardHeader\u003e\n            \u003cCardTitle\u003eTask Priority Distribution\u003c/CardTitle\u003e\n            \u003cCardDescription\u003eDistribution of tasks by priority level\u003c/CardDescription\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent className=\"h-80\"\u003e\n            \u003cPriorityDistributionChart /\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n      \u003c/div\u003e\n    \u003c/DashboardShell\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"app/settings/page.tsx\" isMerged=\"true\"\nimport { redirect } from \"next/navigation\"\nimport { DashboardHeader } from \"@/components/dashboard/dashboard-header\"\nimport { DashboardShell } from \"@/components/dashboard/dashboard-shell\"\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\nimport { ProfileSettings } from \"@/components/settings/profile-settings\"\nimport { NotificationSettings } from \"@/components/settings/notification-settings\"\nimport { SecuritySettings } from \"@/components/settings/security-settings\"\nimport { getUserSession } from \"@/lib/auth\"\n\nexport default async function SettingsPage() {\n  const user = await getUserSession()\n\n  if (!user) {\n    redirect(\"/login\")\n  }\n\n  return (\n    \u003cDashboardShell\u003e\n      \u003cDashboardHeader heading=\"Settings\" text=\"Manage your account settings and preferences\" /\u003e\n      \u003cTabs defaultValue=\"profile\" className=\"space-y-4\"\u003e\n        \u003cTabsList\u003e\n          \u003cTabsTrigger value=\"profile\"\u003eProfile\u003c/TabsTrigger\u003e\n          \u003cTabsTrigger value=\"notifications\"\u003eNotifications\u003c/TabsTrigger\u003e\n          \u003cTabsTrigger value=\"security\"\u003eSecurity\u003c/TabsTrigger\u003e\n        \u003c/TabsList\u003e\n        \u003cTabsContent value=\"profile\" className=\"space-y-4\"\u003e\n          \u003cProfileSettings user={user} /\u003e\n        \u003c/TabsContent\u003e\n        \u003cTabsContent value=\"notifications\" className=\"space-y-4\"\u003e\n          \u003cNotificationSettings user={user} /\u003e\n        \u003c/TabsContent\u003e\n        \u003cTabsContent value=\"security\" className=\"space-y-4\"\u003e\n          \u003cSecuritySettings user={user} /\u003e\n        \u003c/TabsContent\u003e\n      \u003c/Tabs\u003e\n    \u003c/DashboardShell\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"app/users/page.tsx\" isMerged=\"true\"\nimport { redirect } from \"next/navigation\"\nimport { DashboardHeader } from \"@/components/dashboard/dashboard-header\"\nimport { DashboardShell } from \"@/components/dashboard/dashboard-shell\"\nimport { Button } from \"@/components/ui/button\"\nimport { UserManagement } from \"@/components/users/user-management\"\nimport { getUserSession } from \"@/lib/auth\"\n\nexport default async function UsersPage() {\n  const user = await getUserSession()\n\n  if (!user) {\n    redirect(\"/login\")\n  }\n\n  // Only admins can access user management\n  if (user.role !== \"admin\") {\n    redirect(\"/dashboard\")\n  }\n\n  return (\n    \u003cDashboardShell\u003e\n      \u003cDashboardHeader heading=\"User Management\" text=\"Manage users and their permissions\"\u003e\n        \u003cButton\u003e\n          \u003ca href=\"/users/new\"\u003eAdd User\u003c/a\u003e\n        \u003c/Button\u003e\n      \u003c/DashboardHeader\u003e\n      \u003cdiv className=\"grid gap-4\"\u003e\n        \u003cUserManagement /\u003e\n      \u003c/div\u003e\n    \u003c/DashboardShell\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"app/login/page.tsx\" isMerged=\"true\"\n\"use client\"\n\nimport type React from \"react\"\n\nimport { useState } from \"react\"\nimport Link from \"next/link\"\nimport { useRouter } from \"next/navigation\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { loginUser } from \"@/lib/auth\"\n\nexport default function LoginPage() {\n  const router = useRouter()\n  const [isLoading, setIsLoading] = useState(false)\n  const [error, setError] = useState(\"\")\n\n  async function handleSubmit(event: React.FormEvent\u003cHTMLFormElement\u003e) {\n    event.preventDefault()\n    setIsLoading(true)\n    setError(\"\")\n\n    const formData = new FormData(event.currentTarget)\n    const email = formData.get(\"email\") as string\n    const password = formData.get(\"password\") as string\n\n    try {\n      await loginUser(email, password)\n      router.push(\"/dashboard\")\n    } catch (err) {\n      setError(\"Invalid email or password\")\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    \u003cdiv className=\"flex min-h-screen items-center justify-center bg-gray-50 px-4 py-12 sm:px-6 lg:px-8\"\u003e\n      \u003cCard className=\"w-full max-w-md\"\u003e\n        \u003cCardHeader className=\"space-y-1\"\u003e\n          \u003cCardTitle className=\"text-2xl font-bold\"\u003eLogin\u003c/CardTitle\u003e\n          \u003cCardDescription\u003eEnter your credentials to access your account\u003c/CardDescription\u003e\n        \u003c/CardHeader\u003e\n        \u003cform onSubmit={handleSubmit}\u003e\n          \u003cCardContent className=\"space-y-4\"\u003e\n            {error \u0026\u0026 \u003cdiv className=\"rounded-md bg-red-50 p-2 text-sm text-red-500\"\u003e{error}\u003c/div\u003e}\n            \u003cdiv className=\"space-y-2\"\u003e\n              \u003cLabel htmlFor=\"email\"\u003eEmail\u003c/Label\u003e\n              \u003cInput id=\"email\" name=\"email\" type=\"email\" required /\u003e\n            \u003c/div\u003e\n            \u003cdiv className=\"space-y-2\"\u003e\n              \u003cdiv className=\"flex items-center justify-between\"\u003e\n                \u003cLabel htmlFor=\"password\"\u003ePassword\u003c/Label\u003e\n                \u003cLink href=\"/forgot-password\" className=\"text-sm text-primary\"\u003e\n                  Forgot password?\n                \u003c/Link\u003e\n              \u003c/div\u003e\n              \u003cInput id=\"password\" name=\"password\" type=\"password\" required /\u003e\n            \u003c/div\u003e\n            \u003cdiv className=\"flex items-center space-x-2\"\u003e\n              \u003chr className=\"flex-1\" /\u003e\n              \u003cspan className=\"text-sm text-muted-foreground\"\u003eOR\u003c/span\u003e\n              \u003chr className=\"flex-1\" /\u003e\n            \u003c/div\u003e\n            \u003cdiv className=\"grid grid-cols-2 gap-4\"\u003e\n              \u003cButton variant=\"outline\" type=\"button\" className=\"w-full\"\u003e\n                \u003csvg className=\"mr-2 h-4 w-4\" viewBox=\"0 0 24 24\"\u003e\n                  \u003cpath\n                    d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\"\n                    fill=\"#4285F4\"\n                  /\u003e\n                  \u003cpath\n                    d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\"\n                    fill=\"#34A853\"\n                  /\u003e\n                  \u003cpath\n                    d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\"\n                    fill=\"#FBBC05\"\n                  /\u003e\n                  \u003cpath\n                    d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\"\n                    fill=\"#EA4335\"\n                  /\u003e\n                \u003c/svg\u003e\n                Google\n              \u003c/Button\u003e\n              \u003cButton variant=\"outline\" type=\"button\" className=\"w-full\"\u003e\n                \u003csvg className=\"mr-2 h-4 w-4\" viewBox=\"0 0 24 24\"\u003e\n                  \u003cpath\n                    d=\"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12\"\n                    fill=\"currentColor\"\n                  /\u003e\n                \u003c/svg\u003e\n                GitHub\n              \u003c/Button\u003e\n            \u003c/div\u003e\n          \u003c/CardContent\u003e\n          \u003cCardFooter className=\"flex flex-col space-y-4\"\u003e\n            \u003cButton type=\"submit\" className=\"w-full\" disabled={isLoading}\u003e\n              {isLoading ? \"Logging in...\" : \"Login\"}\n            \u003c/Button\u003e\n            \u003cdiv className=\"text-center text-sm\"\u003e\n              Don\u0026apos;t have an account?{\" \"}\n              \u003cLink href=\"/register\" className=\"text-primary\"\u003e\n                Sign up\n              \u003c/Link\u003e\n            \u003c/div\u003e\n          \u003c/CardFooter\u003e\n        \u003c/form\u003e\n      \u003c/Card\u003e\n    \u003c/div\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"app/register/page.tsx\" isMerged=\"true\"\n\"use client\"\n\nimport type React from \"react\"\n\nimport { useState } from \"react\"\nimport Link from \"next/link\"\nimport { useRouter } from \"next/navigation\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { registerUser } from \"@/lib/auth\"\n\nexport default function RegisterPage() {\n  const router = useRouter()\n  const [isLoading, setIsLoading] = useState(false)\n  const [error, setError] = useState(\"\")\n\n  async function handleSubmit(event: React.FormEvent\u003cHTMLFormElement\u003e) {\n    event.preventDefault()\n    setIsLoading(true)\n    setError(\"\")\n\n    const formData = new FormData(event.currentTarget)\n    const name = formData.get(\"name\") as string\n    const email = formData.get(\"email\") as string\n    const password = formData.get(\"password\") as string\n    const confirmPassword = formData.get(\"confirmPassword\") as string\n\n    if (password !== confirmPassword) {\n      setError(\"Passwords do not match\")\n      setIsLoading(false)\n      return\n    }\n\n    try {\n      await registerUser(name, email, password)\n      router.push(\"/dashboard\")\n    } catch (err) {\n      setError(\"Failed to create account\")\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    \u003cdiv className=\"flex min-h-screen items-center justify-center bg-gray-50 px-4 py-12 sm:px-6 lg:px-8\"\u003e\n      \u003cCard className=\"w-full max-w-md\"\u003e\n        \u003cCardHeader className=\"space-y-1\"\u003e\n          \u003cCardTitle className=\"text-2xl font-bold\"\u003eCreate an account\u003c/CardTitle\u003e\n          \u003cCardDescription\u003eEnter your information to create an account\u003c/CardDescription\u003e\n        \u003c/CardHeader\u003e\n        \u003cform onSubmit={handleSubmit}\u003e\n          \u003cCardContent className=\"space-y-4\"\u003e\n            {error \u0026\u0026 \u003cdiv className=\"rounded-md bg-red-50 p-2 text-sm text-red-500\"\u003e{error}\u003c/div\u003e}\n            \u003cdiv className=\"space-y-2\"\u003e\n              \u003cLabel htmlFor=\"name\"\u003eFull Name\u003c/Label\u003e\n              \u003cInput id=\"name\" name=\"name\" required /\u003e\n            \u003c/div\u003e\n            \u003cdiv className=\"space-y-2\"\u003e\n              \u003cLabel htmlFor=\"email\"\u003eEmail\u003c/Label\u003e\n              \u003cInput id=\"email\" name=\"email\" type=\"email\" required /\u003e\n            \u003c/div\u003e\n            \u003cdiv className=\"space-y-2\"\u003e\n              \u003cLabel htmlFor=\"password\"\u003ePassword\u003c/Label\u003e\n              \u003cInput id=\"password\" name=\"password\" type=\"password\" required /\u003e\n            \u003c/div\u003e\n            \u003cdiv className=\"space-y-2\"\u003e\n              \u003cLabel htmlFor=\"confirmPassword\"\u003eConfirm Password\u003c/Label\u003e\n              \u003cInput id=\"confirmPassword\" name=\"confirmPassword\" type=\"password\" required /\u003e\n            \u003c/div\u003e\n          \u003c/CardContent\u003e\n          \u003cCardFooter className=\"flex flex-col space-y-4\"\u003e\n            \u003cButton type=\"submit\" className=\"w-full\" disabled={isLoading}\u003e\n              {isLoading ? \"Creating account...\" : \"Create account\"}\n            \u003c/Button\u003e\n            \u003cdiv className=\"text-center text-sm\"\u003e\n              Already have an account?{\" \"}\n              \u003cLink href=\"/login\" className=\"text-primary\"\u003e\n                Login\n              \u003c/Link\u003e\n            \u003c/div\u003e\n          \u003c/CardFooter\u003e\n        \u003c/form\u003e\n      \u003c/Card\u003e\n    \u003c/div\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/dashboard/dashboard-header.tsx\" isMerged=\"true\"\nimport type React from \"react\"\ninterface DashboardHeaderProps {\n  heading: string\n  text?: string\n  children?: React.ReactNode\n}\n\nexport function DashboardHeader({ heading, text, children }: DashboardHeaderProps) {\n  return (\n    \u003cdiv className=\"flex items-center justify-between px-2\"\u003e\n      \u003cdiv className=\"grid gap-1\"\u003e\n        \u003ch1 className=\"font-heading text-3xl md:text-4xl\"\u003e{heading}\u003c/h1\u003e\n        {text \u0026\u0026 \u003cp className=\"text-lg text-muted-foreground\"\u003e{text}\u003c/p\u003e}\n      \u003c/div\u003e\n      {children}\n    \u003c/div\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/dashboard/dashboard-shell.tsx\" isMerged=\"true\"\nimport type React from \"react\"\ninterface DashboardShellProps {\n  children: React.ReactNode\n}\n\nexport function DashboardShell({ children }: DashboardShellProps) {\n  return (\n    \u003cdiv className=\"flex min-h-screen flex-col\"\u003e\n      \u003cmain className=\"flex flex-1 flex-col gap-4 p-4 md:gap-8 md:p-8\"\u003e\n        \u003cdiv className=\"mx-auto grid w-full max-w-7xl gap-4 md:gap-8\"\u003e{children}\u003c/div\u003e\n      \u003c/main\u003e\n    \u003c/div\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/dashboard/overview.tsx\" isMerged=\"true\"\n\"use client\"\nimport { Area, AreaChart, ResponsiveContainer, Tooltip, XAxis, YAxis } from \"@/components/ui/chart\"\n\nconst data = [\n  {\n    name: \"Jan\",\n    total: 12,\n  },\n  {\n    name: \"Feb\",\n    total: 18,\n  },\n  {\n    name: \"Mar\",\n    total: 24,\n  },\n  {\n    name: \"Apr\",\n    total: 30,\n  },\n  {\n    name: \"May\",\n    total: 22,\n  },\n  {\n    name: \"Jun\",\n    total: 28,\n  },\n  {\n    name: \"Jul\",\n    total: 32,\n  },\n  {\n    name: \"Aug\",\n    total: 36,\n  },\n  {\n    name: \"Sep\",\n    total: 30,\n  },\n  {\n    name: \"Oct\",\n    total: 28,\n  },\n  {\n    name: \"Nov\",\n    total: 34,\n  },\n  {\n    name: \"Dec\",\n    total: 40,\n  },\n]\n\nexport function Overview() {\n  return (\n    \u003cResponsiveContainer width=\"100%\" height={350}\u003e\n      \u003cAreaChart\n        data={data}\n        margin={{\n          top: 10,\n          right: 30,\n          left: 0,\n          bottom: 0,\n        }}\n      \u003e\n        \u003cdefs\u003e\n          \u003clinearGradient id=\"colorTotal\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\"\u003e\n            \u003cstop offset=\"5%\" stopColor=\"#8884d8\" stopOpacity={0.8} /\u003e\n            \u003cstop offset=\"95%\" stopColor=\"#8884d8\" stopOpacity={0} /\u003e\n          \u003c/linearGradient\u003e\n        \u003c/defs\u003e\n        \u003cXAxis dataKey=\"name\" stroke=\"#888888\" fontSize={12} tickLine={false} axisLine={false} /\u003e\n        \u003cYAxis stroke=\"#888888\" fontSize={12} tickLine={false} axisLine={false} tickFormatter={(value) =\u003e `${value}`} /\u003e\n        \u003cTooltip /\u003e\n        \u003cArea type=\"monotone\" dataKey=\"total\" stroke=\"#8884d8\" fillOpacity={1} fill=\"url(#colorTotal)\" /\u003e\n      \u003c/AreaChart\u003e\n    \u003c/ResponsiveContainer\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/dashboard/recent-tasks.tsx\" isMerged=\"true\"\n\"use client\"\n\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\nimport { Badge } from \"@/components/ui/badge\"\n\nconst tasks = [\n  {\n    id: \"TASK-8782\",\n    title: \"Create new landing page\",\n    status: \"In Progress\",\n    priority: \"High\",\n    assignee: {\n      name: \"Emma Wilson\",\n      email: \"emma@example.com\",\n      avatar: \"/placeholder.svg?height=32\u0026width=32\",\n    },\n  },\n  {\n    id: \"TASK-7878\",\n    title: \"Update user authentication flow\",\n    status: \"In Review\",\n    priority: \"Medium\",\n    assignee: {\n      name: \"Jackson Lee\",\n      email: \"jackson@example.com\",\n      avatar: \"/placeholder.svg?height=32\u0026width=32\",\n    },\n  },\n  {\n    id: \"TASK-7839\",\n    title: \"Implement notification system\",\n    status: \"Completed\",\n    priority: \"Medium\",\n    assignee: {\n      name: \"Sophia Chen\",\n      email: \"sophia@example.com\",\n      avatar: \"/placeholder.svg?height=32\u0026width=32\",\n    },\n  },\n  {\n    id: \"TASK-7349\",\n    title: \"Fix mobile responsiveness issues\",\n    status: \"In Progress\",\n    priority: \"High\",\n    assignee: {\n      name: \"Liam Johnson\",\n      email: \"liam@example.com\",\n      avatar: \"/placeholder.svg?height=32\u0026width=32\",\n    },\n  },\n  {\n    id: \"TASK-8572\",\n    title: \"Create API documentation\",\n    status: \"Not Started\",\n    priority: \"Low\",\n    assignee: {\n      name: \"Olivia Martinez\",\n      email: \"olivia@example.com\",\n      avatar: \"/placeholder.svg?height=32\u0026width=32\",\n    },\n  },\n]\n\nexport function RecentTasks() {\n  return (\n    \u003cdiv className=\"space-y-8\"\u003e\n      {tasks.map((task) =\u003e (\n        \u003cdiv key={task.id} className=\"flex items-center\"\u003e\n          \u003cAvatar className=\"h-9 w-9\"\u003e\n            \u003cAvatarImage src={task.assignee.avatar} alt={task.assignee.name} /\u003e\n            \u003cAvatarFallback\u003e\n              {task.assignee.name\n                .split(\" \")\n                .map((n) =\u003e n[0])\n                .join(\"\")}\n            \u003c/AvatarFallback\u003e\n          \u003c/Avatar\u003e\n          \u003cdiv className=\"ml-4 space-y-1\"\u003e\n            \u003cp className=\"text-sm font-medium leading-none\"\u003e{task.title}\u003c/p\u003e\n            \u003cp className=\"text-sm text-muted-foreground\"\u003e\n              {task.id} · Assigned to {task.assignee.name}\n            \u003c/p\u003e\n          \u003c/div\u003e\n          \u003cdiv className=\"ml-auto flex items-center gap-2\"\u003e\n            \u003cBadge\n              variant={\n                task.status === \"Completed\"\n                  ? \"success\"\n                  : task.status === \"In Progress\"\n                    ? \"default\"\n                    : task.status === \"In Review\"\n                      ? \"warning\"\n                      : \"secondary\"\n              }\n            \u003e\n              {task.status}\n            \u003c/Badge\u003e\n            \u003cBadge\n              variant={task.priority === \"High\" ? \"destructive\" : task.priority === \"Medium\" ? \"default\" : \"outline\"}\n            \u003e\n              {task.priority}\n            \u003c/Badge\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n      ))}\n    \u003c/div\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/dashboard/team-members.tsx\" isMerged=\"true\"\n\"use client\"\n\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\n\nconst teamMembers = [\n  {\n    id: 1,\n    name: \"Emma Wilson\",\n    email: \"emma@example.com\",\n    role: \"Product Manager\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    tasksAssigned: 8,\n    tasksCompleted: 5,\n  },\n  {\n    id: 2,\n    name: \"Jackson Lee\",\n    email: \"jackson@example.com\",\n    role: \"Frontend Developer\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    tasksAssigned: 12,\n    tasksCompleted: 10,\n  },\n  {\n    id: 3,\n    name: \"Sophia Chen\",\n    email: \"sophia@example.com\",\n    role: \"Backend Developer\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    tasksAssigned: 10,\n    tasksCompleted: 7,\n  },\n  {\n    id: 4,\n    name: \"Liam Johnson\",\n    email: \"liam@example.com\",\n    role: \"UI/UX Designer\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    tasksAssigned: 6,\n    tasksCompleted: 4,\n  },\n  {\n    id: 5,\n    name: \"Olivia Martinez\",\n    email: \"olivia@example.com\",\n    role: \"QA Engineer\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    tasksAssigned: 9,\n    tasksCompleted: 8,\n  },\n]\n\nexport function TeamMembers() {\n  return (\n    \u003cdiv className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\"\u003e\n      {teamMembers.map((member) =\u003e (\n        \u003cCard key={member.id}\u003e\n          \u003cCardHeader className=\"flex flex-row items-center gap-4 pb-2\"\u003e\n            \u003cAvatar className=\"h-10 w-10\"\u003e\n              \u003cAvatarImage src={member.avatar} alt={member.name} /\u003e\n              \u003cAvatarFallback\u003e\n                {member.name\n                  .split(\" \")\n                  .map((n) =\u003e n[0])\n                  .join(\"\")}\n              \u003c/AvatarFallback\u003e\n            \u003c/Avatar\u003e\n            \u003cdiv className=\"grid gap-1\"\u003e\n              \u003cCardTitle className=\"text-base\"\u003e{member.name}\u003c/CardTitle\u003e\n              \u003cCardDescription className=\"text-xs\"\u003e{member.role}\u003c/CardDescription\u003e\n            \u003c/div\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent\u003e\n            \u003cdiv className=\"grid gap-2\"\u003e\n              \u003cdiv className=\"grid grid-cols-2 gap-2 text-sm\"\u003e\n                \u003cdiv className=\"flex flex-col\"\u003e\n                  \u003cspan className=\"text-muted-foreground\"\u003eAssigned\u003c/span\u003e\n                  \u003cspan className=\"font-medium\"\u003e{member.tasksAssigned}\u003c/span\u003e\n                \u003c/div\u003e\n                \u003cdiv className=\"flex flex-col\"\u003e\n                  \u003cspan className=\"text-muted-foreground\"\u003eCompleted\u003c/span\u003e\n                  \u003cspan className=\"font-medium\"\u003e{member.tasksCompleted}\u003c/span\u003e\n                \u003c/div\u003e\n              \u003c/div\u003e\n              \u003cdiv className=\"mt-2 flex justify-between\"\u003e\n                \u003cButton size=\"sm\" variant=\"outline\"\u003e\n                  View Profile\n                \u003c/Button\u003e\n                \u003cButton size=\"sm\"\u003eAssign Task\u003c/Button\u003e\n              \u003c/div\u003e\n            \u003c/div\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n      ))}\n    \u003c/div\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/tasks/kanban-board.tsx\" isMerged=\"true\"\n\"use client\"\n\nimport { useState } from \"react\"\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\"\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\n\n// Initial task data\nconst initialTasks = {\n  \"to-do\": [\n    {\n      id: \"task-1\",\n      title: \"Create new landing page\",\n      description: \"Design and implement a new landing page for the product\",\n      priority: \"High\",\n      assignee: {\n        name: \"Emma Wilson\",\n        avatar: \"/placeholder.svg?height=32\u0026width=32\",\n      },\n      dueDate: \"2023-12-15\",\n    },\n    {\n      id: \"task-2\",\n      title: \"Update user authentication flow\",\n      description: \"Improve the user authentication experience\",\n      priority: \"Medium\",\n      assignee: {\n        name: \"Jackson Lee\",\n        avatar: \"/placeholder.svg?height=32\u0026width=32\",\n      },\n      dueDate: \"2023-12-20\",\n    },\n    {\n      id: \"task-3\",\n      title: \"Create API documentation\",\n      description: \"Document all API endpoints for developers\",\n      priority: \"Low\",\n      assignee: {\n        name: \"Olivia Martinez\",\n        avatar: \"/placeholder.svg?height=32\u0026width=32\",\n      },\n      dueDate: \"2023-12-30\",\n    },\n  ],\n  \"in-progress\": [\n    {\n      id: \"task-4\",\n      title: \"Implement notification system\",\n      description: \"Create a real-time notification system for users\",\n      priority: \"Medium\",\n      assignee: {\n        name: \"Sophia Chen\",\n        avatar: \"/placeholder.svg?height=32\u0026width=32\",\n      },\n      dueDate: \"2023-12-10\",\n    },\n    {\n      id: \"task-5\",\n      title: \"Fix mobile responsiveness issues\",\n      description: \"Address UI issues on mobile devices\",\n      priority: \"High\",\n      assignee: {\n        name: \"Liam Johnson\",\n        avatar: \"/placeholder.svg?height=32\u0026width=32\",\n      },\n      dueDate: \"2023-12-05\",\n    },\n  ],\n  \"in-review\": [\n    {\n      id: \"task-6\",\n      title: \"Optimize database queries\",\n      description: \"Improve performance of slow database queries\",\n      priority: \"High\",\n      assignee: {\n        name: \"Jackson Lee\",\n        avatar: \"/placeholder.svg?height=32\u0026width=32\",\n      },\n      dueDate: \"2023-12-08\",\n    },\n  ],\n  completed: [\n    {\n      id: \"task-7\",\n      title: \"Set up CI/CD pipeline\",\n      description: \"Implement continuous integration and deployment\",\n      priority: \"Medium\",\n      assignee: {\n        name: \"Sophia Chen\",\n        avatar: \"/placeholder.svg?height=32\u0026width=32\",\n      },\n      dueDate: \"2023-12-01\",\n    },\n    {\n      id: \"task-8\",\n      title: \"Create user onboarding flow\",\n      description: \"Design and implement user onboarding experience\",\n      priority: \"Medium\",\n      assignee: {\n        name: \"Emma Wilson\",\n        avatar: \"/placeholder.svg?height=32\u0026width=32\",\n      },\n      dueDate: \"2023-11-25\",\n    },\n  ],\n}\n\n// Column definitions\nconst columns = [\n  {\n    id: \"to-do\",\n    title: \"To Do\",\n    color: \"bg-gray-100\",\n  },\n  {\n    id: \"in-progress\",\n    title: \"In Progress\",\n    color: \"bg-blue-50\",\n  },\n  {\n    id: \"in-review\",\n    title: \"In Review\",\n    color: \"bg-yellow-50\",\n  },\n  {\n    id: \"completed\",\n    title: \"Completed\",\n    color: \"bg-green-50\",\n  },\n]\n\nexport function KanbanBoard() {\n  const [tasks, setTasks] = useState(initialTasks)\n\n  const handleDragEnd = (result) =\u003e {\n    const { destination, source, draggableId } = result\n\n    // If there's no destination or the item is dropped in the same place\n    if (!destination || (destination.droppableId === source.droppableId \u0026\u0026 destination.index === source.index)) {\n      return\n    }\n\n    // Find the task that was dragged\n    const sourceColumn = tasks[source.droppableId]\n    const taskToMove = sourceColumn.find((task) =\u003e task.id === draggableId)\n\n    // Create new state\n    const newTasks = { ...tasks }\n\n    // Remove from source column\n    newTasks[source.droppableId] = sourceColumn.filter((task) =\u003e task.id !== draggableId)\n\n    // Add to destination column\n    newTasks[destination.droppableId] = [\n      ...newTasks[destination.droppableId].slice(0, destination.index),\n      taskToMove,\n      ...newTasks[destination.droppableId].slice(destination.index),\n    ]\n\n    setTasks(newTasks)\n  }\n\n  return (\n    \u003cDragDropContext onDragEnd={handleDragEnd}\u003e\n      \u003cdiv className=\"grid grid-cols-1 gap-4 md:grid-cols-2 lg:grid-cols-4\"\u003e\n        {columns.map((column) =\u003e (\n          \u003cdiv key={column.id} className=\"flex flex-col\"\u003e\n            \u003cdiv className={`rounded-t-md p-3 ${column.color}`}\u003e\n              \u003ch3 className=\"font-medium\"\u003e{column.title}\u003c/h3\u003e\n              \u003cdiv className=\"text-sm text-muted-foreground\"\u003e{tasks[column.id].length} tasks\u003c/div\u003e\n            \u003c/div\u003e\n            \u003cDroppable droppableId={column.id}\u003e\n              {(provided) =\u003e (\n                \u003cdiv\n                  {...provided.droppableProps}\n                  ref={provided.innerRef}\n                  className=\"flex flex-1 flex-col gap-2 rounded-b-md border border-t-0 bg-background p-2\"\n                \u003e\n                  {tasks[column.id].map((task, index) =\u003e (\n                    \u003cDraggable key={task.id} draggableId={task.id} index={index}\u003e\n                      {(provided) =\u003e (\n                        \u003cCard\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                          className=\"cursor-grab\"\n                        \u003e\n                          \u003cCardHeader className=\"p-3 pb-0\"\u003e\n                            \u003cCardTitle className=\"text-sm font-medium\"\u003e{task.title}\u003c/CardTitle\u003e\n                          \u003c/CardHeader\u003e\n                          \u003cCardContent className=\"p-3\"\u003e\n                            \u003cp className=\"text-xs text-muted-foreground\"\u003e{task.description}\u003c/p\u003e\n                            \u003cdiv className=\"mt-2 flex items-center justify-between\"\u003e\n                              \u003cBadge\n                                variant={\n                                  task.priority === \"High\"\n                                    ? \"destructive\"\n                                    : task.priority === \"Medium\"\n                                      ? \"default\"\n                                      : \"outline\"\n                                }\n                                className=\"text-xs\"\n                              \u003e\n                                {task.priority}\n                              \u003c/Badge\u003e\n                              \u003cdiv className=\"flex items-center gap-1\"\u003e\n                                \u003cspan className=\"text-xs text-muted-foreground\"\u003e\n                                  {new Date(task.dueDate).toLocaleDateString()}\n                                \u003c/span\u003e\n                                \u003cAvatar className=\"h-6 w-6\"\u003e\n                                  \u003cAvatarImage src={task.assignee.avatar} alt={task.assignee.name} /\u003e\n                                  \u003cAvatarFallback className=\"text-xs\"\u003e\n                                    {task.assignee.name\n                                      .split(\" \")\n                                      .map((n) =\u003e n[0])\n                                      .join(\"\")}\n                                  \u003c/AvatarFallback\u003e\n                                \u003c/Avatar\u003e\n                              \u003c/div\u003e\n                            \u003c/div\u003e\n                          \u003c/CardContent\u003e\n                        \u003c/Card\u003e\n                      )}\n                    \u003c/Draggable\u003e\n                  ))}\n                  {provided.placeholder}\n                \u003c/div\u003e\n              )}\n            \u003c/Droppable\u003e\n          \u003c/div\u003e\n        ))}\n      \u003c/div\u003e\n    \u003c/DragDropContext\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/tasks/task-filters.tsx\" isMerged=\"true\"\n\"use client\"\n\nimport { useState } from \"react\"\nimport { Input } from \"@/components/ui/input\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { Tabs, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\n\nexport function TaskFilters() {\n  const [view, setView] = useState(\"kanban\")\n\n  return (\n    \u003cdiv className=\"flex flex-col gap-4 sm:flex-row sm:items-center sm:justify-between\"\u003e\n      \u003cdiv className=\"flex items-center gap-2\"\u003e\n        \u003cTabs defaultValue=\"kanban\" className=\"w-[400px]\" onValueChange={setView}\u003e\n          \u003cTabsList\u003e\n            \u003cTabsTrigger value=\"kanban\"\u003eKanban\u003c/TabsTrigger\u003e\n            \u003cTabsTrigger value=\"list\"\u003eList\u003c/TabsTrigger\u003e\n            \u003cTabsTrigger value=\"calendar\"\u003eCalendar\u003c/TabsTrigger\u003e\n          \u003c/TabsList\u003e\n        \u003c/Tabs\u003e\n      \u003c/div\u003e\n      \u003cdiv className=\"flex flex-col gap-2 sm:flex-row sm:items-center\"\u003e\n        \u003cdiv className=\"flex items-center gap-2\"\u003e\n          \u003cInput placeholder=\"Search tasks...\" className=\"h-9 w-[150px] sm:w-[180px] lg:w-[250px]\" /\u003e\n          \u003cSelect defaultValue=\"all\"\u003e\n            \u003cSelectTrigger className=\"h-9 w-[130px]\"\u003e\n              \u003cSelectValue placeholder=\"Priority\" /\u003e\n            \u003c/SelectTrigger\u003e\n            \u003cSelectContent\u003e\n              \u003cSelectItem value=\"all\"\u003eAll Priorities\u003c/SelectItem\u003e\n              \u003cSelectItem value=\"high\"\u003eHigh\u003c/SelectItem\u003e\n              \u003cSelectItem value=\"medium\"\u003eMedium\u003c/SelectItem\u003e\n              \u003cSelectItem value=\"low\"\u003eLow\u003c/SelectItem\u003e\n            \u003c/SelectContent\u003e\n          \u003c/Select\u003e\n          \u003cSelect defaultValue=\"all\"\u003e\n            \u003cSelectTrigger className=\"h-9 w-[130px]\"\u003e\n              \u003cSelectValue placeholder=\"Assignee\" /\u003e\n            \u003c/SelectTrigger\u003e\n            \u003cSelectContent\u003e\n              \u003cSelectItem value=\"all\"\u003eAll Assignees\u003c/SelectItem\u003e\n              \u003cSelectItem value=\"emma\"\u003eEmma Wilson\u003c/SelectItem\u003e\n              \u003cSelectItem value=\"jackson\"\u003eJackson Lee\u003c/SelectItem\u003e\n              \u003cSelectItem value=\"sophia\"\u003eSophia Chen\u003c/SelectItem\u003e\n              \u003cSelectItem value=\"liam\"\u003eLiam Johnson\u003c/SelectItem\u003e\n              \u003cSelectItem value=\"olivia\"\u003eOlivia Martinez\u003c/SelectItem\u003e\n            \u003c/SelectContent\u003e\n          \u003c/Select\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/tasks/task-form.tsx\" isMerged=\"true\"\n\"use client\"\n\nimport { useState } from \"react\"\nimport { useRouter } from \"next/navigation\"\nimport { Button } from \"@/components/ui/button\"\nimport { Calendar } from \"@/components/ui/calendar\"\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Form, FormControl, FormDescription, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\"\nimport { Input } from \"@/components/ui/input\"\nimport { Popover, PopoverContent, PopoverTrigger } from \"@/components/ui/popover\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { format } from \"date-fns\"\nimport { CalendarIcon } from \"lucide-react\"\nimport { useForm } from \"react-hook-form\"\n\nexport function TaskForm() {\n  const router = useRouter()\n  const [isLoading, setIsLoading] = useState(false)\n\n  const form = useForm({\n    defaultValues: {\n      title: \"\",\n      description: \"\",\n      priority: \"medium\",\n      assignee: \"\",\n      dueDate: new Date(),\n      tags: \"\",\n    },\n  })\n\n  async function onSubmit(data) {\n    setIsLoading(true)\n\n    try {\n      // Here you would normally send the data to your API\n      console.log(\"Form submitted:\", data)\n\n      // Simulate API call\n      await new Promise((resolve) =\u003e setTimeout(resolve, 1000))\n\n      // Redirect to tasks page\n      router.push(\"/tasks\")\n    } catch (error) {\n      console.error(\"Error creating task:\", error)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    \u003cCard\u003e\n      \u003cCardHeader\u003e\n        \u003cCardTitle\u003eCreate New Task\u003c/CardTitle\u003e\n        \u003cCardDescription\u003eAdd a new task and assign it to team members\u003c/CardDescription\u003e\n      \u003c/CardHeader\u003e\n      \u003cForm {...form}\u003e\n        \u003cform onSubmit={form.handleSubmit(onSubmit)}\u003e\n          \u003cCardContent className=\"space-y-4\"\u003e\n            \u003cFormField\n              control={form.control}\n              name=\"title\"\n              render={({ field }) =\u003e (\n                \u003cFormItem\u003e\n                  \u003cFormLabel\u003eTask Title\u003c/FormLabel\u003e\n                  \u003cFormControl\u003e\n                    \u003cInput placeholder=\"Enter task title\" {...field} /\u003e\n                  \u003c/FormControl\u003e\n                  \u003cFormMessage /\u003e\n                \u003c/FormItem\u003e\n              )}\n            /\u003e\n            \u003cFormField\n              control={form.control}\n              name=\"description\"\n              render={({ field }) =\u003e (\n                \u003cFormItem\u003e\n                  \u003cFormLabel\u003eDescription\u003c/FormLabel\u003e\n                  \u003cFormControl\u003e\n                    \u003cTextarea placeholder=\"Enter task description\" className=\"min-h-[100px]\" {...field} /\u003e\n                  \u003c/FormControl\u003e\n                  \u003cFormMessage /\u003e\n                \u003c/FormItem\u003e\n              )}\n            /\u003e\n            \u003cdiv className=\"grid grid-cols-1 gap-4 md:grid-cols-2\"\u003e\n              \u003cFormField\n                control={form.control}\n                name=\"priority\"\n                render={({ field }) =\u003e (\n                  \u003cFormItem\u003e\n                    \u003cFormLabel\u003ePriority\u003c/FormLabel\u003e\n                    \u003cSelect onValueChange={field.onChange} defaultValue={field.value}\u003e\n                      \u003cFormControl\u003e\n                        \u003cSelectTrigger\u003e\n                          \u003cSelectValue placeholder=\"Select priority\" /\u003e\n                        \u003c/SelectTrigger\u003e\n                      \u003c/FormControl\u003e\n                      \u003cSelectContent\u003e\n                        \u003cSelectItem value=\"high\"\u003eHigh\u003c/SelectItem\u003e\n                        \u003cSelectItem value=\"medium\"\u003eMedium\u003c/SelectItem\u003e\n                        \u003cSelectItem value=\"low\"\u003eLow\u003c/SelectItem\u003e\n                      \u003c/SelectContent\u003e\n                    \u003c/Select\u003e\n                    \u003cFormMessage /\u003e\n                  \u003c/FormItem\u003e\n                )}\n              /\u003e\n              \u003cFormField\n                control={form.control}\n                name=\"assignee\"\n                render={({ field }) =\u003e (\n                  \u003cFormItem\u003e\n                    \u003cFormLabel\u003eAssignee\u003c/FormLabel\u003e\n                    \u003cSelect onValueChange={field.onChange} defaultValue={field.value}\u003e\n                      \u003cFormControl\u003e\n                        \u003cSelectTrigger\u003e\n                          \u003cSelectValue placeholder=\"Select team member\" /\u003e\n                        \u003c/SelectTrigger\u003e\n                      \u003c/FormControl\u003e\n                      \u003cSelectContent\u003e\n                        \u003cSelectItem value=\"emma\"\u003eEmma Wilson\u003c/SelectItem\u003e\n                        \u003cSelectItem value=\"jackson\"\u003eJackson Lee\u003c/SelectItem\u003e\n                        \u003cSelectItem value=\"sophia\"\u003eSophia Chen\u003c/SelectItem\u003e\n                        \u003cSelectItem value=\"liam\"\u003eLiam Johnson\u003c/SelectItem\u003e\n                        \u003cSelectItem value=\"olivia\"\u003eOlivia Martinez\u003c/SelectItem\u003e\n                      \u003c/SelectContent\u003e\n                    \u003c/Select\u003e\n                    \u003cFormMessage /\u003e\n                  \u003c/FormItem\u003e\n                )}\n              /\u003e\n            \u003c/div\u003e\n            \u003cdiv className=\"grid grid-cols-1 gap-4 md:grid-cols-2\"\u003e\n              \u003cFormField\n                control={form.control}\n                name=\"dueDate\"\n                render={({ field }) =\u003e (\n                  \u003cFormItem className=\"flex flex-col\"\u003e\n                    \u003cFormLabel\u003eDue Date\u003c/FormLabel\u003e\n                    \u003cPopover\u003e\n                      \u003cPopoverTrigger asChild\u003e\n                        \u003cFormControl\u003e\n                          \u003cButton variant={\"outline\"} className={\"w-full pl-3 text-left font-normal\"}\u003e\n                            {field.value ? format(field.value, \"PPP\") : \u003cspan\u003ePick a date\u003c/span\u003e}\n                            \u003cCalendarIcon className=\"ml-auto h-4 w-4 opacity-50\" /\u003e\n                          \u003c/Button\u003e\n                        \u003c/FormControl\u003e\n                      \u003c/PopoverTrigger\u003e\n                      \u003cPopoverContent className=\"w-auto p-0\" align=\"start\"\u003e\n                        \u003cCalendar mode=\"single\" selected={field.value} onSelect={field.onChange} initialFocus /\u003e\n                      \u003c/PopoverContent\u003e\n                    \u003c/Popover\u003e\n                    \u003cFormMessage /\u003e\n                  \u003c/FormItem\u003e\n                )}\n              /\u003e\n              \u003cFormField\n                control={form.control}\n                name=\"tags\"\n                render={({ field }) =\u003e (\n                  \u003cFormItem\u003e\n                    \u003cFormLabel\u003eTags\u003c/FormLabel\u003e\n                    \u003cFormControl\u003e\n                      \u003cInput placeholder=\"Enter tags separated by commas\" {...field} /\u003e\n                    \u003c/FormControl\u003e\n                    \u003cFormDescription\u003eE.g. frontend, bug, feature\u003c/FormDescription\u003e\n                    \u003cFormMessage /\u003e\n                  \u003c/FormItem\u003e\n                )}\n              /\u003e\n            \u003c/div\u003e\n          \u003c/CardContent\u003e\n          \u003cCardFooter className=\"flex justify-between\"\u003e\n            \u003cButton variant=\"outline\" type=\"button\" onClick={() =\u003e router.back()}\u003e\n              Cancel\n            \u003c/Button\u003e\n            \u003cButton type=\"submit\" disabled={isLoading}\u003e\n              {isLoading ? \"Creating...\" : \"Create Task\"}\n            \u003c/Button\u003e\n          \u003c/CardFooter\u003e\n        \u003c/form\u003e\n      \u003c/Form\u003e\n    \u003c/Card\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/tasks/task-details.tsx\" isMerged=\"true\"\n\"use client\"\n\nimport { useState } from \"react\"\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Progress } from \"@/components/ui/progress\"\nimport { Separator } from \"@/components/ui/separator\"\nimport { format } from \"date-fns\"\n\n// Mock task data - in a real app, this would come from an API\nconst taskData = {\n  id: \"TASK-8782\",\n  title: \"Create new landing page\",\n  description:\n    \"Design and implement a new landing page for the product. The page should highlight key features and include a sign-up form for new users. Make sure it's responsive and works well on mobile devices.\",\n  status: \"In Progress\",\n  priority: \"High\",\n  createdAt: \"2023-11-15T10:30:00Z\",\n  dueDate: \"2023-12-15T23:59:59Z\",\n  progress: 65,\n  assignee: {\n    name: \"Emma Wilson\",\n    email: \"emma@example.com\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n  },\n  creator: {\n    name: \"Liam Johnson\",\n    email: \"liam@example.com\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n  },\n  tags: [\"frontend\", \"design\", \"marketing\"],\n  subtasks: [\n    { id: 1, title: \"Design mockups\", completed: true },\n    { id: 2, title: \"Implement HTML/CSS\", completed: true },\n    { id: 3, title: \"Add JavaScript interactions\", completed: false },\n    { id: 4, title: \"Optimize for mobile\", completed: false },\n    { id: 5, title: \"Test across browsers\", completed: false },\n  ],\n}\n\nexport function TaskDetails({ id }: { id: string }) {\n  const [task, setTask] = useState(taskData)\n  const [isEditing, setIsEditing] = useState(false)\n\n  const toggleSubtask = (subtaskId: number) =\u003e {\n    setTask((prevTask) =\u003e ({\n      ...prevTask,\n      subtasks: prevTask.subtasks.map((subtask) =\u003e\n        subtask.id === subtaskId ? { ...subtask, completed: !subtask.completed } : subtask,\n      ),\n      progress: calculateProgress(\n        prevTask.subtasks.map((subtask) =\u003e\n          subtask.id === subtaskId ? { ...subtask, completed: !subtask.completed } : subtask,\n        ),\n      ),\n    }))\n  }\n\n  const calculateProgress = (subtasks) =\u003e {\n    if (subtasks.length === 0) return 0\n    const completedCount = subtasks.filter((subtask) =\u003e subtask.completed).length\n    return Math.round((completedCount / subtasks.length) * 100)\n  }\n\n  return (\n    \u003cCard\u003e\n      \u003cCardHeader\u003e\n        \u003cdiv className=\"flex items-start justify-between\"\u003e\n          \u003cdiv\u003e\n            \u003cCardTitle className=\"text-xl\"\u003e{task.title}\u003c/CardTitle\u003e\n            \u003cCardDescription\u003e\n              {task.id} · Created on {format(new Date(task.createdAt), \"MMM d, yyyy\")}\n            \u003c/CardDescription\u003e\n          \u003c/div\u003e\n          \u003cdiv className=\"flex items-center gap-2\"\u003e\n            \u003cButton variant=\"outline\" size=\"sm\" onClick={() =\u003e setIsEditing(true)}\u003e\n              Edit\n            \u003c/Button\u003e\n            \u003cButton variant=\"outline\" size=\"sm\"\u003e\n              Delete\n            \u003c/Button\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n        \u003cdiv className=\"mt-2 flex flex-wrap gap-2\"\u003e\n          \u003cBadge\n            variant={\n              task.status === \"Completed\"\n                ? \"success\"\n                : task.status === \"In Progress\"\n                  ? \"default\"\n                  : task.status === \"In Review\"\n                    ? \"warning\"\n                    : \"secondary\"\n            }\n          \u003e\n            {task.status}\n          \u003c/Badge\u003e\n          \u003cBadge\n            variant={task.priority === \"High\" ? \"destructive\" : task.priority === \"Medium\" ? \"default\" : \"outline\"}\n          \u003e\n            {task.priority}\n          \u003c/Badge\u003e\n          {task.tags.map((tag) =\u003e (\n            \u003cBadge key={tag} variant=\"outline\"\u003e\n              {tag}\n            \u003c/Badge\u003e\n          ))}\n        \u003c/div\u003e\n      \u003c/CardHeader\u003e\n      \u003cCardContent className=\"space-y-4\"\u003e\n        \u003cdiv\u003e\n          \u003ch3 className=\"mb-2 font-medium\"\u003eDescription\u003c/h3\u003e\n          \u003cp className=\"text-sm text-muted-foreground\"\u003e{task.description}\u003c/p\u003e\n        \u003c/div\u003e\n\n        \u003cdiv\u003e\n          \u003cdiv className=\"mb-2 flex items-center justify-between\"\u003e\n            \u003ch3 className=\"font-medium\"\u003eProgress\u003c/h3\u003e\n            \u003cspan className=\"text-sm font-medium\"\u003e{task.progress}%\u003c/span\u003e\n          \u003c/div\u003e\n          \u003cProgress value={task.progress} className=\"h-2\" /\u003e\n        \u003c/div\u003e\n\n        \u003cdiv className=\"grid gap-4 md:grid-cols-2\"\u003e\n          \u003cdiv\u003e\n            \u003ch3 className=\"mb-2 font-medium\"\u003eAssignee\u003c/h3\u003e\n            \u003cdiv className=\"flex items-center gap-2\"\u003e\n              \u003cAvatar\u003e\n                \u003cAvatarImage src={task.assignee.avatar} alt={task.assignee.name} /\u003e\n                \u003cAvatarFallback\u003e\n                  {task.assignee.name\n                    .split(\" \")\n                    .map((n) =\u003e n[0])\n                    .join(\"\")}\n                \u003c/AvatarFallback\u003e\n              \u003c/Avatar\u003e\n              \u003cdiv\u003e\n                \u003cp className=\"text-sm font-medium\"\u003e{task.assignee.name}\u003c/p\u003e\n                \u003cp className=\"text-xs text-muted-foreground\"\u003e{task.assignee.email}\u003c/p\u003e\n              \u003c/div\u003e\n            \u003c/div\u003e\n          \u003c/div\u003e\n\n          \u003cdiv\u003e\n            \u003ch3 className=\"mb-2 font-medium\"\u003eDue Date\u003c/h3\u003e\n            \u003cp className=\"text-sm\"\u003e{format(new Date(task.dueDate), \"MMMM d, yyyy\")}\u003c/p\u003e\n            \u003cp className=\"text-xs text-muted-foreground\"\u003e\n              {new Date(task.dueDate) \u003c new Date()\n                ? \"Overdue\"\n                : `${Math.ceil(\n                    (new Date(task.dueDate).getTime() - new Date().getTime()) / (1000 * 60 * 60 * 24),\n                  )} days remaining`}\n            \u003c/p\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n\n        \u003cSeparator /\u003e\n\n        \u003cdiv\u003e\n          \u003ch3 className=\"mb-2 font-medium\"\u003eSubtasks\u003c/h3\u003e\n          \u003cdiv className=\"space-y-2\"\u003e\n            {task.subtasks.map((subtask) =\u003e (\n              \u003cdiv key={subtask.id} className=\"flex items-center gap-2 rounded-md border p-2\"\u003e\n                \u003cinput\n                  type=\"checkbox\"\n                  checked={subtask.completed}\n                  onChange={() =\u003e toggleSubtask(subtask.id)}\n                  className=\"h-4 w-4 rounded border-gray-300\"\n                /\u003e\n                \u003cspan className={`text-sm ${subtask.completed ? \"text-muted-foreground line-through\" : \"\"}`}\u003e\n                  {subtask.title}\n                \u003c/span\u003e\n              \u003c/div\u003e\n            ))}\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/CardContent\u003e\n      \u003cCardFooter className=\"flex justify-between\"\u003e\n        \u003cButton variant=\"outline\"\u003eBack to Tasks\u003c/Button\u003e\n        \u003cButton\u003eUpdate Status\u003c/Button\u003e\n      \u003c/CardFooter\u003e\n    \u003c/Card\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/tasks/task-comments.tsx\" isMerged=\"true\"\n\"use client\"\n\nimport { useState } from \"react\"\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { formatDistanceToNow } from \"date-fns\"\n\n// Mock comments data\nconst initialComments = [\n  {\n    id: 1,\n    user: {\n      name: \"Emma Wilson\",\n      avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    },\n    content: \"I've started working on the design mockups. Will share them by tomorrow.\",\n    timestamp: new Date(Date.now() - 1000 * 60 * 60 * 3), // 3 hours ago\n  },\n  {\n    id: 2,\n    user: {\n      name: \"Liam Johnson\",\n      avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    },\n    content: \"Looks good! Make sure to follow the brand guidelines for colors and typography.\",\n    timestamp: new Date(Date.now() - 1000 * 60 * 60 * 2), // 2 hours ago\n  },\n  {\n    id: 3,\n    user: {\n      name: \"Sophia Chen\",\n      avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    },\n    content: \"I can help with the JavaScript interactions once the HTML/CSS is ready.\",\n    timestamp: new Date(Date.now() - 1000 * 60 * 30), // 30 minutes ago\n  },\n]\n\nexport function TaskComments({ id }: { id: string }) {\n  const [comments, setComments] = useState(initialComments)\n  const [newComment, setNewComment] = useState(\"\")\n  const [isSubmitting, setIsSubmitting] = useState(false)\n\n  const handleSubmitComment = () =\u003e {\n    if (!newComment.trim()) return\n\n    setIsSubmitting(true)\n\n    // Simulate API call\n    setTimeout(() =\u003e {\n      const comment = {\n        id: comments.length + 1,\n        user: {\n          name: \"Current User\", // In a real app, this would be the logged-in user\n          avatar: \"/placeholder.svg?height=40\u0026width=40\",\n        },\n        content: newComment,\n        timestamp: new Date(),\n      }\n\n      setComments([...comments, comment])\n      setNewComment(\"\")\n      setIsSubmitting(false)\n    }, 500)\n  }\n\n  return (\n    \u003cCard\u003e\n      \u003cCardHeader\u003e\n        \u003cCardTitle className=\"text-lg\"\u003eComments\u003c/CardTitle\u003e\n      \u003c/CardHeader\u003e\n      \u003cCardContent className=\"space-y-4\"\u003e\n        {comments.length === 0 ? (\n          \u003cp className=\"text-center text-sm text-muted-foreground\"\u003eNo comments yet. Be the first to comment!\u003c/p\u003e\n        ) : (\n          \u003cdiv className=\"space-y-4\"\u003e\n            {comments.map((comment) =\u003e (\n              \u003cdiv key={comment.id} className=\"flex gap-3\"\u003e\n                \u003cAvatar className=\"h-8 w-8\"\u003e\n                  \u003cAvatarImage src={comment.user.avatar} alt={comment.user.name} /\u003e\n                  \u003cAvatarFallback\u003e\n                    {comment.user.name\n                      .split(\" \")\n                      .map((n) =\u003e n[0])\n                      .join(\"\")}\n                  \u003c/AvatarFallback\u003e\n                \u003c/Avatar\u003e\n                \u003cdiv className=\"flex-1 space-y-1\"\u003e\n                  \u003cdiv className=\"flex items-center justify-between\"\u003e\n                    \u003cp className=\"text-sm font-medium\"\u003e{comment.user.name}\u003c/p\u003e\n                    \u003cp className=\"text-xs text-muted-foreground\"\u003e\n                      {formatDistanceToNow(comment.timestamp, { addSuffix: true })}\n                    \u003c/p\u003e\n                  \u003c/div\u003e\n                  \u003cp className=\"text-sm\"\u003e{comment.content}\u003c/p\u003e\n                \u003c/div\u003e\n              \u003c/div\u003e\n            ))}\n          \u003c/div\u003e\n        )}\n      \u003c/CardContent\u003e\n      \u003cCardFooter\u003e\n        \u003cdiv className=\"flex w-full flex-col space-y-2\"\u003e\n          \u003cTextarea\n            placeholder=\"Add a comment...\"\n            value={newComment}\n            onChange={(e) =\u003e setNewComment(e.target.value)}\n            className=\"min-h-[80px] resize-none\"\n          /\u003e\n          \u003cdiv className=\"flex justify-end\"\u003e\n            \u003cButton onClick={handleSubmitComment} disabled={!newComment.trim() || isSubmitting}\u003e\n              {isSubmitting ? \"Posting...\" : \"Post Comment\"}\n            \u003c/Button\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/CardFooter\u003e\n    \u003c/Card\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/tasks/task-attachments.tsx\" isMerged=\"true\"\n\"use client\"\n\nimport { useState } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { formatBytes } from \"@/lib/utils\"\nimport { FileIcon, ImageIcon, PaperclipIcon, TrashIcon, UploadIcon } from \"lucide-react\"\n\n// Mock attachments data\nconst initialAttachments = [\n  {\n    id: 1,\n    name: \"landing-page-mockup.png\",\n    type: \"image/png\",\n    size: 1200000, // 1.2 MB\n    url: \"/placeholder.svg?height=100\u0026width=100\",\n    uploadedAt: new Date(Date.now() - 1000 * 60 * 60 * 24), // 1 day ago\n  },\n  {\n    id: 2,\n    name: \"requirements.pdf\",\n    type: \"application/pdf\",\n    size: 500000, // 500 KB\n    url: \"#\",\n    uploadedAt: new Date(Date.now() - 1000 * 60 * 60 * 48), // 2 days ago\n  },\n  {\n    id: 3,\n    name: \"brand-guidelines.docx\",\n    type: \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n    size: 350000, // 350 KB\n    url: \"#\",\n    uploadedAt: new Date(Date.now() - 1000 * 60 * 60 * 72), // 3 days ago\n  },\n]\n\nexport function TaskAttachments({ id }: { id: string }) {\n  const [attachments, setAttachments] = useState(initialAttachments)\n  const [isUploading, setIsUploading] = useState(false)\n\n  const handleFileUpload = (event) =\u003e {\n    const files = event.target.files\n    if (!files || files.length === 0) return\n\n    setIsUploading(true)\n\n    // Simulate API call for file upload\n    setTimeout(() =\u003e {\n      const newAttachments = Array.from(files).map((file, index) =\u003e ({\n        id: attachments.length + index + 1,\n        name: file.name,\n        type: file.type,\n        size: file.size,\n        url: file.type.startsWith(\"image/\") ? URL.createObjectURL(file) : \"#\",\n        uploadedAt: new Date(),\n      }))\n\n      setAttachments([...attachments, ...newAttachments])\n      setIsUploading(false)\n    }, 1000)\n  }\n\n  const handleDeleteAttachment = (id) =\u003e {\n    setAttachments(attachments.filter((attachment) =\u003e attachment.id !== id))\n  }\n\n  const getFileIcon = (type) =\u003e {\n    if (type.startsWith(\"image/\")) {\n      return \u003cImageIcon className=\"h-6 w-6 text-blue-500\" /\u003e\n    } else if (type === \"application/pdf\" || type.includes(\"document\") || type.includes(\"text\")) {\n      return \u003cFileIcon className=\"h-6 w-6 text-red-500\" /\u003e\n    } else {\n      return \u003cPaperclipIcon className=\"h-6 w-6 text-gray-500\" /\u003e\n    }\n  }\n\n  return (\n    \u003cCard\u003e\n      \u003cCardHeader\u003e\n        \u003cCardTitle className=\"text-lg\"\u003eAttachments\u003c/CardTitle\u003e\n      \u003c/CardHeader\u003e\n      \u003cCardContent className=\"space-y-4\"\u003e\n        {attachments.length === 0 ? (\n          \u003cp className=\"text-center text-sm text-muted-foreground\"\u003e\n            No attachments yet. Upload files to share with the team.\n          \u003c/p\u003e\n        ) : (\n          \u003cdiv className=\"space-y-2\"\u003e\n            {attachments.map((attachment) =\u003e (\n              \u003cdiv key={attachment.id} className=\"flex items-center justify-between rounded-md border p-2\"\u003e\n                \u003cdiv className=\"flex items-center gap-2\"\u003e\n                  {getFileIcon(attachment.type)}\n                  \u003cdiv\u003e\n                    \u003cp className=\"text-sm font-medium\"\u003e{attachment.name}\u003c/p\u003e\n                    \u003cp className=\"text-xs text-muted-foreground\"\u003e\n                      {formatBytes(attachment.size)} · {attachment.uploadedAt.toLocaleDateString()}\n                    \u003c/p\u003e\n                  \u003c/div\u003e\n                \u003c/div\u003e\n                \u003cdiv className=\"flex items-center gap-2\"\u003e\n                  \u003cButton variant=\"ghost\" size=\"sm\" asChild\u003e\n                    \u003ca href={attachment.url} target=\"_blank\" rel=\"noopener noreferrer\"\u003e\n                      View\n                    \u003c/a\u003e\n                  \u003c/Button\u003e\n                  \u003cButton variant=\"ghost\" size=\"sm\" onClick={() =\u003e handleDeleteAttachment(attachment.id)}\u003e\n                    \u003cTrashIcon className=\"h-4 w-4 text-red-500\" /\u003e\n                  \u003c/Button\u003e\n                \u003c/div\u003e\n              \u003c/div\u003e\n            ))}\n          \u003c/div\u003e\n        )}\n      \u003c/CardContent\u003e\n      \u003cCardFooter\u003e\n        \u003cdiv className=\"w-full\"\u003e\n          \u003clabel htmlFor=\"file-upload\"\u003e\n            \u003cdiv className=\"flex cursor-pointer items-center justify-center gap-2 rounded-md border border-dashed p-4 hover:bg-muted\"\u003e\n              \u003cUploadIcon className=\"h-5 w-5\" /\u003e\n              \u003cspan className=\"text-sm font-medium\"\u003e{isUploading ? \"Uploading...\" : \"Upload Files\"}\u003c/span\u003e\n              \u003cinput\n                id=\"file-upload\"\n                type=\"file\"\n                multiple\n                className=\"hidden\"\n                onChange={handleFileUpload}\n                disabled={isUploading}\n              /\u003e\n            \u003c/div\u003e\n          \u003c/label\u003e\n        \u003c/div\u003e\n      \u003c/CardFooter\u003e\n    \u003c/Card\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/reports/task-completion-chart.tsx\" isMerged=\"true\"\n\"use client\"\n\nimport { Bar, BarChart, CartesianGrid, Legend, ResponsiveContainer, Tooltip, XAxis, YAxis } from \"@/components/ui/chart\"\n\n// Mock data for task completion\nconst data = [\n  {\n    name: \"Week 1\",\n    completed: 12,\n    overdue: 2,\n  },\n  {\n    name: \"Week 2\",\n    completed: 18,\n    overdue: 1,\n  },\n  {\n    name: \"Week 3\",\n    completed: 15,\n    overdue: 3,\n  },\n  {\n    name: \"Week 4\",\n    completed: 20,\n    overdue: 0,\n  },\n  {\n    name: \"Week 5\",\n    completed: 16,\n    overdue: 2,\n  },\n  {\n    name: \"Week 6\",\n    completed: 22,\n    overdue: 1,\n  },\n]\n\nexport function TaskCompletionChart() {\n  return (\n    \u003cResponsiveContainer width=\"100%\" height=\"100%\"\u003e\n      \u003cBarChart\n        data={data}\n        margin={{\n          top: 20,\n          right: 30,\n          left: 20,\n          bottom: 5,\n        }}\n      \u003e\n        \u003cCartesianGrid strokeDasharray=\"3 3\" /\u003e\n        \u003cXAxis dataKey=\"name\" /\u003e\n        \u003cYAxis /\u003e\n        \u003cTooltip /\u003e\n        \u003cLegend /\u003e\n        \u003cBar dataKey=\"completed\" fill=\"#4ade80\" name=\"Completed Tasks\" /\u003e\n        \u003cBar dataKey=\"overdue\" fill=\"#f87171\" name=\"Overdue Tasks\" /\u003e\n      \u003c/BarChart\u003e\n    \u003c/ResponsiveContainer\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/reports/team-performance-chart.tsx\" isMerged=\"true\"\n\"use client\"\n\nimport { Bar, BarChart, CartesianGrid, Legend, ResponsiveContainer, Tooltip, XAxis, YAxis } from \"@/components/ui/chart\"\n\n// Mock data for team performance\nconst data = [\n  {\n    name: \"Emma\",\n    completed: 15,\n    inProgress: 3,\n  },\n  {\n    name: \"Jackson\",\n    completed: 20,\n    inProgress: 5,\n  },\n  {\n    name: \"Sophia\",\n    completed: 18,\n    inProgress: 2,\n  },\n  {\n    name: \"Liam\",\n    completed: 12,\n    inProgress: 4,\n  },\n  {\n    name: \"Olivia\",\n    completed: 16,\n    inProgress: 3,\n  },\n]\n\nexport function TeamPerformanceChart() {\n  return (\n    \u003cResponsiveContainer width=\"100%\" height=\"100%\"\u003e\n      \u003cBarChart\n        data={data}\n        layout=\"vertical\"\n        margin={{\n          top: 20,\n          right: 30,\n          left: 60,\n          bottom: 5,\n        }}\n      \u003e\n        \u003cCartesianGrid strokeDasharray=\"3 3\" /\u003e\n        \u003cXAxis type=\"number\" /\u003e\n        \u003cYAxis dataKey=\"name\" type=\"category\" /\u003e\n        \u003cTooltip /\u003e\n        \u003cLegend /\u003e\n        \u003cBar dataKey=\"completed\" stackId=\"a\" fill=\"#8884d8\" name=\"Completed\" /\u003e\n        \u003cBar dataKey=\"inProgress\" stackId=\"a\" fill=\"#82ca9d\" name=\"In Progress\" /\u003e\n      \u003c/BarChart\u003e\n    \u003c/ResponsiveContainer\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/reports/priority-distribution-chart.tsx\" isMerged=\"true\"\n\"use client\"\n\nimport { Cell, Legend, Pie, PieChart, ResponsiveContainer, Tooltip } from \"@/components/ui/chart\"\n\n// Mock data for priority distribution\nconst data = [\n  { name: \"High\", value: 12, color: \"#ef4444\" },\n  { name: \"Medium\", value: 24, color: \"#f59e0b\" },\n  { name: \"Low\", value: 18, color: \"#10b981\" },\n]\n\nexport function PriorityDistributionChart() {\n  return (\n    \u003cResponsiveContainer width=\"100%\" height=\"100%\"\u003e\n      \u003cPieChart\u003e\n        \u003cPie\n          data={data}\n          cx=\"50%\"\n          cy=\"50%\"\n          labelLine={false}\n          outerRadius={80}\n          fill=\"#8884d8\"\n          dataKey=\"value\"\n          label={({ name, percent }) =\u003e `${name} ${(percent * 100).toFixed(0)}%`}\n        \u003e\n          {data.map((entry, index) =\u003e (\n            \u003cCell key={`cell-${index}`} fill={entry.color} /\u003e\n          ))}\n        \u003c/Pie\u003e\n        \u003cTooltip /\u003e\n        \u003cLegend /\u003e\n      \u003c/PieChart\u003e\n    \u003c/ResponsiveContainer\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/settings/profile-settings.tsx\" isMerged=\"true\"\n\"use client\"\n\nimport { useState } from \"react\"\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Form, FormControl, FormDescription, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\"\nimport { Input } from \"@/components/ui/input\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { useForm } from \"react-hook-form\"\n\nexport function ProfileSettings({ user }) {\n  const [isLoading, setIsLoading] = useState(false)\n\n  const form = useForm({\n    defaultValues: {\n      name: user.name || \"\",\n      email: user.email || \"\",\n      bio: user.bio || \"\",\n      jobTitle: user.jobTitle || \"\",\n      company: user.company || \"\",\n    },\n  })\n\n  async function onSubmit(data) {\n    setIsLoading(true)\n\n    try {\n      // Here you would normally send the data to your API\n      console.log(\"Profile updated:\", data)\n\n      // Simulate API call\n      await new Promise((resolve) =\u003e setTimeout(resolve, 1000))\n    } catch (error) {\n      console.error(\"Error updating profile:\", error)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    \u003cCard\u003e\n      \u003cCardHeader\u003e\n        \u003cCardTitle\u003eProfile Information\u003c/CardTitle\u003e\n        \u003cCardDescription\u003eUpdate your profile information and how others see you on the platform\u003c/CardDescription\u003e\n      \u003c/CardHeader\u003e\n      \u003cForm {...form}\u003e\n        \u003cform onSubmit={form.handleSubmit(onSubmit)}\u003e\n          \u003cCardContent className=\"space-y-6\"\u003e\n            \u003cdiv className=\"flex items-center gap-4\"\u003e\n              \u003cAvatar className=\"h-16 w-16\"\u003e\n                \u003cAvatarImage src={user.avatar || \"/placeholder.svg?height=64\u0026width=64\"} alt={user.name} /\u003e\n                \u003cAvatarFallback\u003e\n                  {user.name\n                    ? user.name\n                        .split(\" \")\n                        .map((n) =\u003e n[0])\n                        .join(\"\")\n                    : \"U\"}\n                \u003c/AvatarFallback\u003e\n              \u003c/Avatar\u003e\n              \u003cdiv\u003e\n                \u003cButton variant=\"outline\" size=\"sm\"\u003e\n                  Change Avatar\n                \u003c/Button\u003e\n                \u003cp className=\"mt-1 text-xs text-muted-foreground\"\u003eJPG, GIF or PNG. Max size of 2MB.\u003c/p\u003e\n              \u003c/div\u003e\n            \u003c/div\u003e\n\n            \u003cdiv className=\"grid gap-4 md:grid-cols-2\"\u003e\n              \u003cFormField\n                control={form.control}\n                name=\"name\"\n                render={({ field }) =\u003e (\n                  \u003cFormItem\u003e\n                    \u003cFormLabel\u003eFull Name\u003c/FormLabel\u003e\n                    \u003cFormControl\u003e\n                      \u003cInput placeholder=\"Your name\" {...field} /\u003e\n                    \u003c/FormControl\u003e\n                    \u003cFormMessage /\u003e\n                  \u003c/FormItem\u003e\n                )}\n              /\u003e\n              \u003cFormField\n                control={form.control}\n                name=\"email\"\n                render={({ field }) =\u003e (\n                  \u003cFormItem\u003e\n                    \u003cFormLabel\u003eEmail\u003c/FormLabel\u003e\n                    \u003cFormControl\u003e\n                      \u003cInput placeholder=\"Your email\" type=\"email\" {...field} /\u003e\n                    \u003c/FormControl\u003e\n                    \u003cFormMessage /\u003e\n                  \u003c/FormItem\u003e\n                )}\n              /\u003e\n            \u003c/div\u003e\n\n            \u003cFormField\n              control={form.control}\n              name=\"bio\"\n              render={({ field }) =\u003e (\n                \u003cFormItem\u003e\n                  \u003cFormLabel\u003eBio\u003c/FormLabel\u003e\n                  \u003cFormControl\u003e\n                    \u003cTextarea placeholder=\"Tell us a little about yourself\" className=\"min-h-[100px]\" {...field} /\u003e\n                  \u003c/FormControl\u003e\n                  \u003cFormDescription\u003eBrief description for your profile. URLs are hyperlinked.\u003c/FormDescription\u003e\n                  \u003cFormMessage /\u003e\n                \u003c/FormItem\u003e\n              )}\n            /\u003e\n\n            \u003cdiv className=\"grid gap-4 md:grid-cols-2\"\u003e\n              \u003cFormField\n                control={form.control}\n                name=\"jobTitle\"\n                render={({ field }) =\u003e (\n                  \u003cFormItem\u003e\n                    \u003cFormLabel\u003eJob Title\u003c/FormLabel\u003e\n                    \u003cFormControl\u003e\n                      \u003cInput placeholder=\"Your job title\" {...field} /\u003e\n                    \u003c/FormControl\u003e\n                    \u003cFormMessage /\u003e\n                  \u003c/FormItem\u003e\n                )}\n              /\u003e\n              \u003cFormField\n                control={form.control}\n                name=\"company\"\n                render={({ field }) =\u003e (\n                  \u003cFormItem\u003e\n                    \u003cFormLabel\u003eCompany\u003c/FormLabel\u003e\n                    \u003cFormControl\u003e\n                      \u003cInput placeholder=\"Your company\" {...field} /\u003e\n                    \u003c/FormControl\u003e\n                    \u003cFormMessage /\u003e\n                  \u003c/FormItem\u003e\n                )}\n              /\u003e\n            \u003c/div\u003e\n          \u003c/CardContent\u003e\n          \u003cCardFooter\u003e\n            \u003cButton type=\"submit\" disabled={isLoading}\u003e\n              {isLoading ? \"Saving...\" : \"Save Changes\"}\n            \u003c/Button\u003e\n          \u003c/CardFooter\u003e\n        \u003c/form\u003e\n      \u003c/Form\u003e\n    \u003c/Card\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/settings/notification-settings.tsx\" isMerged=\"true\"\n\"use client\"\n\nimport { useState } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Label } from \"@/components/ui/label\"\nimport { Switch } from \"@/components/ui/switch\"\n\nexport function NotificationSettings({ user }) {\n  const [isLoading, setIsLoading] = useState(false)\n  const [settings, setSettings] = useState({\n    emailNotifications: true,\n    pushNotifications: true,\n    taskAssigned: true,\n    taskUpdated: true,\n    taskCompleted: true,\n    commentAdded: true,\n    deadlineReminder: true,\n    weeklyDigest: false,\n  })\n\n  const handleToggle = (key) =\u003e {\n    setSettings({\n      ...settings,\n      [key]: !settings[key],\n    })\n  }\n\n  const handleSave = async () =\u003e {\n    setIsLoading(true)\n\n    try {\n      // Here you would normally send the data to your API\n      console.log(\"Notification settings updated:\", settings)\n\n      // Simulate API call\n      await new Promise((resolve) =\u003e setTimeout(resolve, 1000))\n    } catch (error) {\n      console.error(\"Error updating notification settings:\", error)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    \u003cCard\u003e\n      \u003cCardHeader\u003e\n        \u003cCardTitle\u003eNotification Preferences\u003c/CardTitle\u003e\n        \u003cCardDescription\u003eChoose how and when you want to be notified\u003c/CardDescription\u003e\n      \u003c/CardHeader\u003e\n      \u003cCardContent className=\"space-y-6\"\u003e\n        \u003cdiv className=\"space-y-4\"\u003e\n          \u003ch3 className=\"text-sm font-medium\"\u003eNotification Channels\u003c/h3\u003e\n          \u003cdiv className=\"flex items-center justify-between\"\u003e\n            \u003cdiv className=\"space-y-0.5\"\u003e\n              \u003cLabel htmlFor=\"emailNotifications\"\u003eEmail Notifications\u003c/Label\u003e\n              \u003cp className=\"text-xs text-muted-foreground\"\u003eReceive notifications via email\u003c/p\u003e\n            \u003c/div\u003e\n            \u003cSwitch\n              id=\"emailNotifications\"\n              checked={settings.emailNotifications}\n              onCheckedChange={() =\u003e handleToggle(\"emailNotifications\")}\n            /\u003e\n          \u003c/div\u003e\n          \u003cdiv className=\"flex items-center justify-between\"\u003e\n            \u003cdiv className=\"space-y-0.5\"\u003e\n              \u003cLabel htmlFor=\"pushNotifications\"\u003ePush Notifications\u003c/Label\u003e\n              \u003cp className=\"text-xs text-muted-foreground\"\u003eReceive notifications in your browser\u003c/p\u003e\n            \u003c/div\u003e\n            \u003cSwitch\n              id=\"pushNotifications\"\n              checked={settings.pushNotifications}\n              onCheckedChange={() =\u003e handleToggle(\"pushNotifications\")}\n            /\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n\n        \u003cdiv className=\"space-y-4\"\u003e\n          \u003ch3 className=\"text-sm font-medium\"\u003eTask Notifications\u003c/h3\u003e\n          \u003cdiv className=\"flex items-center justify-between\"\u003e\n            \u003cdiv className=\"space-y-0.5\"\u003e\n              \u003cLabel htmlFor=\"taskAssigned\"\u003eTask Assigned\u003c/Label\u003e\n              \u003cp className=\"text-xs text-muted-foreground\"\u003eWhen a task is assigned to you\u003c/p\u003e\n            \u003c/div\u003e\n            \u003cSwitch\n              id=\"taskAssigned\"\n              checked={settings.taskAssigned}\n              onCheckedChange={() =\u003e handleToggle(\"taskAssigned\")}\n            /\u003e\n          \u003c/div\u003e\n          \u003cdiv className=\"flex items-center justify-between\"\u003e\n            \u003cdiv className=\"space-y-0.5\"\u003e\n              \u003cLabel htmlFor=\"taskUpdated\"\u003eTask Updated\u003c/Label\u003e\n              \u003cp className=\"text-xs text-muted-foreground\"\u003eWhen a task you're assigned to is updated\u003c/p\u003e\n            \u003c/div\u003e\n            \u003cSwitch\n              id=\"taskUpdated\"\n              checked={settings.taskUpdated}\n              onCheckedChange={() =\u003e handleToggle(\"taskUpdated\")}\n            /\u003e\n          \u003c/div\u003e\n          \u003cdiv className=\"flex items-center justify-between\"\u003e\n            \u003cdiv className=\"space-y-0.5\"\u003e\n              \u003cLabel htmlFor=\"taskCompleted\"\u003eTask Completed\u003c/Label\u003e\n              \u003cp className=\"text-xs text-muted-foreground\"\u003eWhen a task you're assigned to is marked as completed\u003c/p\u003e\n            \u003c/div\u003e\n            \u003cSwitch\n              id=\"taskCompleted\"\n              checked={settings.taskCompleted}\n              onCheckedChange={() =\u003e handleToggle(\"taskCompleted\")}\n            /\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n\n        \u003cdiv className=\"space-y-4\"\u003e\n          \u003ch3 className=\"text-sm font-medium\"\u003eOther Notifications\u003c/h3\u003e\n          \u003cdiv className=\"flex items-center justify-between\"\u003e\n            \u003cdiv className=\"space-y-0.5\"\u003e\n              \u003cLabel htmlFor=\"commentAdded\"\u003eComment Added\u003c/Label\u003e\n              \u003cp className=\"text-xs text-muted-foreground\"\u003eWhen someone comments on a task you're involved with\u003c/p\u003e\n            \u003c/div\u003e\n            \u003cSwitch\n              id=\"commentAdded\"\n              checked={settings.commentAdded}\n              onCheckedChange={() =\u003e handleToggle(\"commentAdded\")}\n            /\u003e\n          \u003c/div\u003e\n          \u003cdiv className=\"flex items-center justify-between\"\u003e\n            \u003cdiv className=\"space-y-0.5\"\u003e\n              \u003cLabel htmlFor=\"deadlineReminder\"\u003eDeadline Reminders\u003c/Label\u003e\n              \u003cp className=\"text-xs text-muted-foreground\"\u003eReceive reminders before task deadlines\u003c/p\u003e\n            \u003c/div\u003e\n            \u003cSwitch\n              id=\"deadlineReminder\"\n              checked={settings.deadlineReminder}\n              onCheckedChange={() =\u003e handleToggle(\"deadlineReminder\")}\n            /\u003e\n          \u003c/div\u003e\n          \u003cdiv className=\"flex items-center justify-between\"\u003e\n            \u003cdiv className=\"space-y-0.5\"\u003e\n              \u003cLabel htmlFor=\"weeklyDigest\"\u003eWeekly Digest\u003c/Label\u003e\n              \u003cp className=\"text-xs text-muted-foreground\"\u003eReceive a weekly summary of your tasks and progress\u003c/p\u003e\n            \u003c/div\u003e\n            \u003cSwitch\n              id=\"weeklyDigest\"\n              checked={settings.weeklyDigest}\n              onCheckedChange={() =\u003e handleToggle(\"weeklyDigest\")}\n            /\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/CardContent\u003e\n      \u003cCardFooter\u003e\n        \u003cButton onClick={handleSave} disabled={isLoading}\u003e\n          {isLoading ? \"Saving...\" : \"Save Preferences\"}\n        \u003c/Button\u003e\n      \u003c/CardFooter\u003e\n    \u003c/Card\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/settings/security-settings.tsx\" isMerged=\"true\"\n\"use client\"\n\nimport { useState } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Form, FormControl, FormDescription, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { Switch } from \"@/components/ui/switch\"\nimport { useForm } from \"react-hook-form\"\n\nexport function SecuritySettings({ user }) {\n  const [isLoading, setIsLoading] = useState(false)\n  const [twoFactorEnabled, setTwoFactorEnabled] = useState(false)\n\n  const form = useForm({\n    defaultValues: {\n      currentPassword: \"\",\n      newPassword: \"\",\n      confirmPassword: \"\",\n    },\n  })\n\n  async function onSubmit(data) {\n    setIsLoading(true)\n\n    try {\n      // Here you would normally send the data to your API\n      console.log(\"Password updated:\", data)\n\n      // Simulate API call\n      await new Promise((resolve) =\u003e setTimeout(resolve, 1000))\n\n      // Reset form\n      form.reset()\n    } catch (error) {\n      console.error(\"Error updating password:\", error)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const handleToggleTwoFactor = async () =\u003e {\n    setIsLoading(true)\n\n    try {\n      // Here you would normally send the data to your API\n      console.log(\"Two-factor authentication toggled:\", !twoFactorEnabled)\n\n      // Simulate API call\n      await new Promise((resolve) =\u003e setTimeout(resolve, 1000))\n\n      setTwoFactorEnabled(!twoFactorEnabled)\n    } catch (error) {\n      console.error(\"Error toggling two-factor authentication:\", error)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    \u003cCard\u003e\n      \u003cCardHeader\u003e\n        \u003cCardTitle\u003eSecurity Settings\u003c/CardTitle\u003e\n        \u003cCardDescription\u003eManage your password and account security\u003c/CardDescription\u003e\n      \u003c/CardHeader\u003e\n      \u003cCardContent className=\"space-y-6\"\u003e\n        \u003cForm {...form}\u003e\n          \u003cform onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\"\u003e\n            \u003cFormField\n              control={form.control}\n              name=\"currentPassword\"\n              render={({ field }) =\u003e (\n                \u003cFormItem\u003e\n                  \u003cFormLabel\u003eCurrent Password\u003c/FormLabel\u003e\n                  \u003cFormControl\u003e\n                    \u003cInput type=\"password\" {...field} /\u003e\n                  \u003c/FormControl\u003e\n                  \u003cFormMessage /\u003e\n                \u003c/FormItem\u003e\n              )}\n            /\u003e\n            \u003cFormField\n              control={form.control}\n              name=\"newPassword\"\n              render={({ field }) =\u003e (\n                \u003cFormItem\u003e\n                  \u003cFormLabel\u003eNew Password\u003c/FormLabel\u003e\n                  \u003cFormControl\u003e\n                    \u003cInput type=\"password\" {...field} /\u003e\n                  \u003c/FormControl\u003e\n                  \u003cFormDescription\u003e\n                    Password must be at least 8 characters long and include a mix of letters, numbers, and symbols.\n                  \u003c/FormDescription\u003e\n                  \u003cFormMessage /\u003e\n                \u003c/FormItem\u003e\n              )}\n            /\u003e\n            \u003cFormField\n              control={form.control}\n              name=\"confirmPassword\"\n              render={({ field }) =\u003e (\n                \u003cFormItem\u003e\n                  \u003cFormLabel\u003eConfirm New Password\u003c/FormLabel\u003e\n                  \u003cFormControl\u003e\n                    \u003cInput type=\"password\" {...field} /\u003e\n                  \u003c/FormControl\u003e\n                  \u003cFormMessage /\u003e\n                \u003c/FormItem\u003e\n              )}\n            /\u003e\n            \u003cButton type=\"submit\" disabled={isLoading}\u003e\n              {isLoading ? \"Updating...\" : \"Update Password\"}\n            \u003c/Button\u003e\n          \u003c/form\u003e\n        \u003c/Form\u003e\n\n        \u003cdiv className=\"space-y-4\"\u003e\n          \u003ch3 className=\"text-sm font-medium\"\u003eTwo-Factor Authentication\u003c/h3\u003e\n          \u003cdiv className=\"flex items-center justify-between\"\u003e\n            \u003cdiv className=\"space-y-0.5\"\u003e\n              \u003cLabel htmlFor=\"twoFactorAuth\"\u003eEnable Two-Factor Authentication\u003c/Label\u003e\n              \u003cp className=\"text-xs text-muted-foreground\"\u003eAdd an extra layer of security to your account\u003c/p\u003e\n            \u003c/div\u003e\n            \u003cSwitch\n              id=\"twoFactorAuth\"\n              checked={twoFactorEnabled}\n              onCheckedChange={handleToggleTwoFactor}\n              disabled={isLoading}\n            /\u003e\n          \u003c/div\u003e\n          {twoFactorEnabled \u0026\u0026 (\n            \u003cdiv className=\"rounded-md bg-muted p-4\"\u003e\n              \u003cp className=\"text-sm\"\u003e\n                Two-factor authentication is enabled. You will receive a verification code via email when signing in.\n              \u003c/p\u003e\n            \u003c/div\u003e\n          )}\n        \u003c/div\u003e\n\n        \u003cdiv className=\"space-y-4\"\u003e\n          \u003ch3 className=\"text-sm font-medium\"\u003eSession Management\u003c/h3\u003e\n          \u003cdiv className=\"rounded-md border p-4\"\u003e\n            \u003cdiv className=\"flex items-center justify-between\"\u003e\n              \u003cdiv\u003e\n                \u003cp className=\"text-sm font-medium\"\u003eActive Sessions\u003c/p\u003e\n                \u003cp className=\"text-xs text-muted-foreground\"\u003eYou are currently logged in on 2 devices\u003c/p\u003e\n              \u003c/div\u003e\n              \u003cButton variant=\"outline\" size=\"sm\"\u003e\n                Manage Sessions\n              \u003c/Button\u003e\n            \u003c/div\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/CardContent\u003e\n      \u003cCardFooter className=\"flex justify-between\"\u003e\n        \u003cButton variant=\"outline\" className=\"text-red-500\"\u003e\n          Delete Account\n        \u003c/Button\u003e\n        \u003cButton variant=\"outline\"\u003eDownload Personal Data\u003c/Button\u003e\n      \u003c/CardFooter\u003e\n    \u003c/Card\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/users/user-management.tsx\" isMerged=\"true\"\n\"use client\"\n\nimport { useState } from \"react\"\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\"\nimport { Input } from \"@/components/ui/input\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\"\nimport { MoreHorizontalIcon, SearchIcon } from \"lucide-react\"\n\n// Mock users data\nconst initialUsers = [\n  {\n    id: 1,\n    name: \"Emma Wilson\",\n    email: \"emma@example.com\",\n    role: \"admin\",\n    status: \"active\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    lastActive: \"2023-11-28T10:30:00Z\",\n  },\n  {\n    id: 2,\n    name: \"Jackson Lee\",\n    email: \"jackson@example.com\",\n    role: \"editor\",\n    status: \"active\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    lastActive: \"2023-11-27T14:45:00Z\",\n  },\n  {\n    id: 3,\n    name: \"Sophia Chen\",\n    email: \"sophia@example.com\",\n    role: \"editor\",\n    status: \"active\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    lastActive: \"2023-11-28T09:15:00Z\",\n  },\n  {\n    id: 4,\n    name: \"Liam Johnson\",\n    email: \"liam@example.com\",\n    role: \"viewer\",\n    status: \"active\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    lastActive: \"2023-11-26T11:20:00Z\",\n  },\n  {\n    id: 5,\n    name: \"Olivia Martinez\",\n    email: \"olivia@example.com\",\n    role: \"editor\",\n    status: \"inactive\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    lastActive: \"2023-11-20T16:30:00Z\",\n  },\n  {\n    id: 6,\n    name: \"Noah Williams\",\n    email: \"noah@example.com\",\n    role: \"viewer\",\n    status: \"pending\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    lastActive: null,\n  },\n]\n\nexport function UserManagement() {\n  const [users, setUsers] = useState(initialUsers)\n  const [searchQuery, setSearchQuery] = useState(\"\")\n  const [roleFilter, setRoleFilter] = useState(\"all\")\n  const [statusFilter, setStatusFilter] = useState(\"all\")\n\n  const filteredUsers = users.filter((user) =\u003e {\n    const matchesSearch =\n      user.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n      user.email.toLowerCase().includes(searchQuery.toLowerCase())\n\n    const matchesRole = roleFilter === \"all\" || user.role === roleFilter\n    const matchesStatus = statusFilter === \"all\" || user.status === statusFilter\n\n    return matchesSearch \u0026\u0026 matchesRole \u0026\u0026 matchesStatus\n  })\n\n  const handleRoleChange = (userId, newRole) =\u003e {\n    setUsers(users.map((user) =\u003e (user.id === userId ? { ...user, role: newRole } : user)))\n  }\n\n  const handleStatusChange = (userId, newStatus) =\u003e {\n    setUsers(users.map((user) =\u003e (user.id === userId ? { ...user, status: newStatus } : user)))\n  }\n\n  const getRoleBadgeVariant = (role) =\u003e {\n    switch (role) {\n      case \"admin\":\n        return \"default\"\n      case \"editor\":\n        return \"secondary\"\n      case \"viewer\":\n        return \"outline\"\n      default:\n        return \"outline\"\n    }\n  }\n\n  const getStatusBadgeVariant = (status) =\u003e {\n    switch (status) {\n      case \"active\":\n        return \"success\"\n      case \"inactive\":\n        return \"secondary\"\n      case \"pending\":\n        return \"warning\"\n      default:\n        return \"outline\"\n    }\n  }\n\n  const formatLastActive = (lastActive) =\u003e {\n    if (!lastActive) return \"Never\"\n\n    const date = new Date(lastActive)\n    return date.toLocaleDateString() + \" \" + date.toLocaleTimeString()\n  }\n\n  return (\n    \u003cCard\u003e\n      \u003cCardHeader\u003e\n        \u003cCardTitle\u003eUser Management\u003c/CardTitle\u003e\n        \u003cCardDescription\u003eManage users and their permissions in your organization\u003c/CardDescription\u003e\n      \u003c/CardHeader\u003e\n      \u003cCardContent\u003e\n        \u003cdiv className=\"mb-4 flex flex-col gap-4 sm:flex-row sm:items-center sm:justify-between\"\u003e\n          \u003cdiv className=\"flex items-center gap-2\"\u003e\n            \u003cdiv className=\"relative\"\u003e\n              \u003cSearchIcon className=\"absolute left-2.5 top-2.5 h-4 w-4 text-muted-foreground\" /\u003e\n              \u003cInput\n                type=\"search\"\n                placeholder=\"Search users...\"\n                className=\"pl-8\"\n                value={searchQuery}\n                onChange={(e) =\u003e setSearchQuery(e.target.value)}\n              /\u003e\n            \u003c/div\u003e\n          \u003c/div\u003e\n          \u003cdiv className=\"flex flex-col gap-2 sm:flex-row\"\u003e\n            \u003cSelect value={roleFilter} onValueChange={setRoleFilter}\u003e\n              \u003cSelectTrigger className=\"w-[180px]\"\u003e\n                \u003cSelectValue placeholder=\"Filter by role\" /\u003e\n              \u003c/SelectTrigger\u003e\n              \u003cSelectContent\u003e\n                \u003cSelectItem value=\"all\"\u003eAll Roles\u003c/SelectItem\u003e\n                \u003cSelectItem value=\"admin\"\u003eAdmin\u003c/SelectItem\u003e\n                \u003cSelectItem value=\"editor\"\u003eEditor\u003c/SelectItem\u003e\n                \u003cSelectItem value=\"viewer\"\u003eViewer\u003c/SelectItem\u003e\n              \u003c/SelectContent\u003e\n            \u003c/Select\u003e\n            \u003cSelect value={statusFilter} onValueChange={setStatusFilter}\u003e\n              \u003cSelectTrigger className=\"w-[180px]\"\u003e\n                \u003cSelectValue placeholder=\"Filter by status\" /\u003e\n              \u003c/SelectTrigger\u003e\n              \u003cSelectContent\u003e\n                \u003cSelectItem value=\"all\"\u003eAll Statuses\u003c/SelectItem\u003e\n                \u003cSelectItem value=\"active\"\u003eActive\u003c/SelectItem\u003e\n                \u003cSelectItem value=\"inactive\"\u003eInactive\u003c/SelectItem\u003e\n                \u003cSelectItem value=\"pending\"\u003ePending\u003c/SelectItem\u003e\n              \u003c/SelectContent\u003e\n            \u003c/Select\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n        \u003cdiv className=\"rounded-md border\"\u003e\n          \u003cTable\u003e\n            \u003cTableHeader\u003e\n              \u003cTableRow\u003e\n                \u003cTableHead\u003eUser\u003c/TableHead\u003e\n                \u003cTableHead\u003eRole\u003c/TableHead\u003e\n                \u003cTableHead\u003eStatus\u003c/TableHead\u003e\n                \u003cTableHead\u003eLast Active\u003c/TableHead\u003e\n                \u003cTableHead className=\"text-right\"\u003eActions\u003c/TableHead\u003e\n              \u003c/TableRow\u003e\n            \u003c/TableHeader\u003e\n            \u003cTableBody\u003e\n              {filteredUsers.length === 0 ? (\n                \u003cTableRow\u003e\n                  \u003cTableCell colSpan={5} className=\"text-center\"\u003e\n                    No users found\n                  \u003c/TableCell\u003e\n                \u003c/TableRow\u003e\n              ) : (\n                filteredUsers.map((user) =\u003e (\n                  \u003cTableRow key={user.id}\u003e\n                    \u003cTableCell\u003e\n                      \u003cdiv className=\"flex items-center gap-3\"\u003e\n                        \u003cAvatar\u003e\n                          \u003cAvatarImage src={user.avatar} alt={user.name} /\u003e\n                          \u003cAvatarFallback\u003e\n                            {user.name\n                              .split(\" \")\n                              .map((n) =\u003e n[0])\n                              .join(\"\")}\n                          \u003c/AvatarFallback\u003e\n                        \u003c/Avatar\u003e\n                        \u003cdiv\u003e\n                          \u003cp className=\"font-medium\"\u003e{user.name}\u003c/p\u003e\n                          \u003cp className=\"text-sm text-muted-foreground\"\u003e{user.email}\u003c/p\u003e\n                        \u003c/div\u003e\n                      \u003c/div\u003e\n                    \u003c/TableCell\u003e\n                    \u003cTableCell\u003e\n                      \u003cBadge variant={getRoleBadgeVariant(user.role)}\u003e\n                        {user.role.charAt(0).toUpperCase() + user.role.slice(1)}\n                      \u003c/Badge\u003e\n                    \u003c/TableCell\u003e\n                    \u003cTableCell\u003e\n                      \u003cBadge variant={getStatusBadgeVariant(user.status)}\u003e\n                        {user.status.charAt(0).toUpperCase() + user.status.slice(1)}\n                      \u003c/Badge\u003e\n                    \u003c/TableCell\u003e\n                    \u003cTableCell\u003e{formatLastActive(user.lastActive)}\u003c/TableCell\u003e\n                    \u003cTableCell className=\"text-right\"\u003e\n                      \u003cDropdownMenu\u003e\n                        \u003cDropdownMenuTrigger asChild\u003e\n                          \u003cButton variant=\"ghost\" size=\"sm\"\u003e\n                            \u003cMoreHorizontalIcon className=\"h-4 w-4\" /\u003e\n                            \u003cspan className=\"sr-only\"\u003eOpen menu\u003c/span\u003e\n                          \u003c/Button\u003e\n                        \u003c/DropdownMenuTrigger\u003e\n                        \u003cDropdownMenuContent align=\"end\"\u003e\n                          \u003cDropdownMenuLabel\u003eActions\u003c/DropdownMenuLabel\u003e\n                          \u003cDropdownMenuItem\u003eView Profile\u003c/DropdownMenuItem\u003e\n                          \u003cDropdownMenuSeparator /\u003e\n                          \u003cDropdownMenuLabel\u003eChange Role\u003c/DropdownMenuLabel\u003e\n                          \u003cDropdownMenuItem onClick={() =\u003e handleRoleChange(user.id, \"admin\")}\u003e\n                            Make Admin\n                          \u003c/DropdownMenuItem\u003e\n                          \u003cDropdownMenuItem onClick={() =\u003e handleRoleChange(user.id, \"editor\")}\u003e\n                            Make Editor\n                          \u003c/DropdownMenuItem\u003e\n                          \u003cDropdownMenuItem onClick={() =\u003e handleRoleChange(user.id, \"viewer\")}\u003e\n                            Make Viewer\n                          \u003c/DropdownMenuItem\u003e\n                          \u003cDropdownMenuSeparator /\u003e\n                          \u003cDropdownMenuLabel\u003eChange Status\u003c/DropdownMenuLabel\u003e\n                          \u003cDropdownMenuItem onClick={() =\u003e handleStatusChange(user.id, \"active\")}\u003e\n                            Set Active\n                          \u003c/DropdownMenuItem\u003e\n                          \u003cDropdownMenuItem onClick={() =\u003e handleStatusChange(user.id, \"inactive\")}\u003e\n                            Set Inactive\n                          \u003c/DropdownMenuItem\u003e\n                          \u003cDropdownMenuSeparator /\u003e\n                          \u003cDropdownMenuItem className=\"text-red-600\"\u003eDelete User\u003c/DropdownMenuItem\u003e\n                        \u003c/DropdownMenuContent\u003e\n                      \u003c/DropdownMenu\u003e\n                    \u003c/TableCell\u003e\n                  \u003c/TableRow\u003e\n                ))\n              )}\n            \u003c/TableBody\u003e\n          \u003c/Table\u003e\n        \u003c/div\u003e\n      \u003c/CardContent\u003e\n    \u003c/Card\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"lib/auth.ts\" isMerged=\"true\"\n// This is a mock implementation for demonstration purposes\n// In a real application, you would use a proper authentication library like NextAuth.js\n\nimport { jwtVerify, SignJWT } from \"jose\"\n\n// Mock user data\nconst users = [\n  {\n    id: 1,\n    name: \"Admin User\",\n    email: \"admin@example.com\",\n    password: \"admin123\", // In a real app, this would be hashed\n    role: \"admin\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    bio: \"Task management system administrator\",\n    jobTitle: \"Project Manager\",\n    company: \"Acme Inc.\",\n  },\n  {\n    id: 2,\n    name: \"Editor User\",\n    email: \"editor@example.com\",\n    password: \"editor123\", // In a real app, this would be hashed\n    role: \"editor\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    bio: \"Frontend developer working on the task management system\",\n    jobTitle: \"Senior Developer\",\n    company: \"Acme Inc.\",\n  },\n  {\n    id: 3,\n    name: \"Viewer User\",\n    email: \"viewer@example.com\",\n    password: \"viewer123\", // In a real app, this would be hashed\n    role: \"viewer\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    bio: \"Team member using the task management system\",\n    jobTitle: \"Content Writer\",\n    company: \"Acme Inc.\",\n  },\n]\n\n// Secret key for JWT\nconst JWT_SECRET = new TextEncoder().encode(process.env.JWT_SECRET || \"your-secret-key\")\n\n// Login user\nexport async function loginUser(email: string, password: string) {\n  // Find user by email\n  const user = users.find((u) =\u003e u.email === email)\n\n  // Check if user exists and password matches\n  if (!user || user.password !== password) {\n    throw new Error(\"Invalid credentials\")\n  }\n\n  // Create JWT token\n  const token = await new SignJWT({ userId: user.id, role: user.role })\n    .setProtectedHeader({ alg: \"HS256\" })\n    .setIssuedAt()\n    .setExpirationTime(\"24h\")\n    .sign(JWT_SECRET)\n\n  // Store token in localStorage (in a real app, use cookies for better security)\n  if (typeof window !== \"undefined\") {\n    localStorage.setItem(\"auth-token\", token)\n  }\n\n  return { user: { id: user.id, name: user.name, email: user.email, role: user.role } }\n}\n\n// Register user\nexport async function registerUser(name: string, email: string, password: string) {\n  // Check if user already exists\n  if (users.find((u) =\u003e u.email === email)) {\n    throw new Error(\"User already exists\")\n  }\n\n  // Create new user\n  const newUser = {\n    id: users.length + 1,\n    name,\n    email,\n    password, // In a real app, this would be hashed\n    role: \"viewer\", // Default role for new users\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    bio: \"\",\n    jobTitle: \"\",\n    company: \"\",\n  }\n\n  // Add user to the mock database\n  users.push(newUser)\n\n  // Create JWT token\n  const token = await new SignJWT({ userId: newUser.id, role: newUser.role })\n    .setProtectedHeader({ alg: \"HS256\" })\n    .setIssuedAt()\n    .setExpirationTime(\"24h\")\n    .sign(JWT_SECRET)\n\n  // Store token in localStorage (in a real app, use cookies for better security)\n  if (typeof window !== \"undefined\") {\n    localStorage.setItem(\"auth-token\", token)\n  }\n\n  return { user: { id: newUser.id, name: newUser.name, email: newUser.email, role: newUser.role } }\n}\n\n// Get user session\nexport async function getUserSession() {\n  // In a server component, we would verify the session cookie\n  // For this demo, we'll simulate a logged-in user\n\n  // In a client component, we would get the token from localStorage\n  let token\n  if (typeof window !== \"undefined\") {\n    token = localStorage.getItem(\"auth-token\")\n  }\n\n  if (!token) {\n    // For demo purposes, return a mock user\n    return users[0]\n  }\n\n  try {\n    // Verify token\n    const { payload } = await jwtVerify(token, JWT_SECRET)\n    const userId = payload.userId as number\n\n    // Find user\n    const user = users.find((u) =\u003e u.id === userId)\n    if (!user) {\n      return null\n    }\n\n    return user\n  } catch (error) {\n    console.error(\"Error verifying token:\", error)\n    return null\n  }\n}\n\n// Logout user\nexport function logoutUser() {\n  if (typeof window !== \"undefined\") {\n    localStorage.removeItem(\"auth-token\")\n  }\n}\n\n[V0_FILE]typescriptreact:file=\"lib/utils.ts\" isMerged=\"true\"\nimport { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n\n// Format bytes to human-readable format\nexport function formatBytes(bytes: number, decimals = 2) {\n  if (bytes === 0) return \"0 Bytes\"\n\n  const k = 1024\n  const dm = decimals \u003c 0 ? 0 : decimals\n  const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"]\n\n  const i = Math.floor(Math.log(bytes) / Math.log(k))\n\n  return Number.parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + \" \" + sizes[i]\n}\n\n[V0_FILE]typescriptreact:file=\"tailwind.config.js\" isMerged=\"true\"\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  darkMode: [\"class\"],\n  content: [\n    \"./pages/**/*.{ts,tsx}\",\n    \"./components/**/*.{ts,tsx}\",\n    \"./app/**/*.{ts,tsx}\",\n    \"./src/**/*.{ts,tsx}\",\n    \"*.{js,ts,jsx,tsx,mdx}\",\n  ],\n  theme: {\n    container: {\n      center: true,\n      padding: \"2rem\",\n      screens: {\n        \"2xl\": \"1400px\",\n      },\n    },\n    extend: {\n      colors: {\n        border: \"hsl(var(--border))\",\n        input: \"hsl(var(--input))\",\n        ring: \"hsl(var(--ring))\",\n        background: \"hsl(var(--background))\",\n        foreground: \"hsl(var(--foreground))\",\n        primary: {\n          DEFAULT: \"hsl(var(--primary))\",\n          foreground: \"hsl(var(--primary-foreground))\",\n        },\n        secondary: {\n          DEFAULT: \"hsl(var(--secondary))\",\n          foreground: \"hsl(var(--secondary-foreground))\",\n        },\n        destructive: {\n          DEFAULT: \"hsl(var(--destructive))\",\n          foreground: \"hsl(var(--destructive-foreground))\",\n        },\n        muted: {\n          DEFAULT: \"hsl(var(--muted))\",\n          foreground: \"hsl(var(--muted-foreground))\",\n        },\n        accent: {\n          DEFAULT: \"hsl(var(--accent))\",\n          foreground: \"hsl(var(--accent-foreground))\",\n        },\n        popover: {\n          DEFAULT: \"hsl(var(--popover))\",\n          foreground: \"hsl(var(--popover-foreground))\",\n        },\n        card: {\n          DEFAULT: \"hsl(var(--card))\",\n          foreground: \"hsl(var(--card-foreground))\",\n        },\n        success: {\n          DEFAULT: \"#10b981\",\n          foreground: \"#ffffff\",\n        },\n        warning: {\n          DEFAULT: \"#f59e0b\",\n          foreground: \"#ffffff\",\n        },\n      },\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: { height: 0 },\n          to: { height: \"var(--radix-accordion-content-height)\" },\n        },\n        \"accordion-up\": {\n          from: { height: \"var(--radix-accordion-content-height)\" },\n          to: { height: 0 },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\")],\n}\n\n[V0_FILE]typescriptreact:file=\"components/ui/chart.tsx\" isQuickEdit=\"true\" isMerged=\"true\"\nexport {\n  Area,\n  AreaChart,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n  Bar,\n  BarChart,\n  CartesianGrid,\n  Legend,\n  Cell,\n  Pie,\n  PieChart,\n} from \"recharts\"\n\n[V0_FILE]javascript:file=\"server.js\"\nimport express from \"express\"\nimport cors from \"cors\"\nimport dotenv from \"dotenv\"\nimport mongoose from \"mongoose\"\nimport { createServer } from \"http\"\nimport { Server } from \"socket.io\"\nimport cookieParser from \"cookie-parser\"\nimport path from \"path\"\nimport { fileURLToPath } from \"url\"\n\n// Import routes\nimport authRoutes from \"./routes/auth.js\"\nimport userRoutes from \"./routes/users.js\"\nimport taskRoutes from \"./routes/tasks.js\"\nimport commentRoutes from \"./routes/comments.js\"\nimport reportRoutes from \"./routes/reports.js\"\nimport notificationRoutes from \"./routes/notifications.js\"\n\n// Import socket handler\nimport setupSocketHandlers from \"./socket/socketHandlers.js\"\n\n// Import middleware\nimport { errorHandler } from \"./middleware/errorHandler.js\"\n\n// Configure environment variables\ndotenv.config()\n\n// Create Express app\nconst app = express()\nconst PORT = process.env.PORT || 5000\n\n// Create HTTP server\nconst httpServer = createServer(app)\n\n// Setup Socket.io\nconst io = new Server(httpServer, {\n  cors: {\n    origin: process.env.FRONTEND_URL || \"http://localhost:3000\",\n    methods: [\"GET\", \"POST\"],\n    credentials: true,\n  },\n})\n\n// Connect to MongoDB\nmongoose\n  .connect(process.env.MONGODB_URI)\n  .then(() =\u003e console.log(\"Connected to MongoDB\"))\n  .catch((err) =\u003e {\n    console.error(\"MongoDB connection error:\", err)\n    process.exit(1)\n  })\n\n// Middleware\napp.use(\n  cors({\n    origin: process.env.FRONTEND_URL || \"http://localhost:3000\",\n    credentials: true,\n  }),\n)\napp.use(express.json())\napp.use(express.urlencoded({ extended: true }))\napp.use(cookieParser())\n\n// Set up socket handlers\nsetupSocketHandlers(io)\n\n// Make io accessible to route handlers\napp.use((req, res, next) =\u003e {\n  req.io = io\n  next()\n})\n\n// API routes\napp.use(\"/api/auth\", authRoutes)\napp.use(\"/api/users\", userRoutes)\napp.use(\"/api/tasks\", taskRoutes)\napp.use(\"/api/comments\", commentRoutes)\napp.use(\"/api/reports\", reportRoutes)\napp.use(\"/api/notifications\", notificationRoutes)\n\n// Serve uploaded files\nconst __dirname = path.dirname(fileURLToPath(import.meta.url))\napp.use(\"/uploads\", express.static(path.join(__dirname, \"uploads\")))\n\n// Error handling middleware\napp.use(errorHandler)\n\n// Start server\nhttpServer.listen(PORT, () =\u003e {\n  console.log(`Server running on port ${PORT}`)\n})\n\nexport default app\n\n[V0_FILE]javascript:file=\"models/User.js\"\nimport mongoose from \"mongoose\"\nimport bcrypt from \"bcrypt\"\n\nconst userSchema = new mongoose.Schema(\n  {\n    name: {\n      type: String,\n      required: [true, \"Name is required\"],\n      trim: true,\n    },\n    email: {\n      type: String,\n      required: [true, \"Email is required\"],\n      unique: true,\n      lowercase: true,\n      trim: true,\n      match: [/^\\S+@\\S+\\.\\S+$/, \"Please use a valid email address\"],\n    },\n    password: {\n      type: String,\n      required: [true, \"Password is required\"],\n      minlength: [8, \"Password must be at least 8 characters long\"],\n    },\n    role: {\n      type: String,\n      enum: [\"admin\", \"editor\", \"viewer\"],\n      default: \"viewer\",\n    },\n    avatar: {\n      type: String,\n      default: \"\",\n    },\n    bio: {\n      type: String,\n      default: \"\",\n    },\n    jobTitle: {\n      type: String,\n      default: \"\",\n    },\n    company: {\n      type: String,\n      default: \"\",\n    },\n    status: {\n      type: String,\n      enum: [\"active\", \"inactive\", \"pending\"],\n      default: \"active\",\n    },\n    notificationPreferences: {\n      emailNotifications: {\n        type: Boolean,\n        default: true,\n      },\n      pushNotifications: {\n        type: Boolean,\n        default: true,\n      },\n      taskAssigned: {\n        type: Boolean,\n        default: true,\n      },\n      taskUpdated: {\n        type: Boolean,\n        default: true,\n      },\n      taskCompleted: {\n        type: Boolean,\n        default: true,\n      },\n      commentAdded: {\n        type: Boolean,\n        default: true,\n      },\n      deadlineReminder: {\n        type: Boolean,\n        default: true,\n      },\n      weeklyDigest: {\n        type: Boolean,\n        default: false,\n      },\n    },\n    twoFactorEnabled: {\n      type: Boolean,\n      default: false,\n    },\n    resetPasswordToken: String,\n    resetPasswordExpires: Date,\n    lastActive: {\n      type: Date,\n      default: Date.now,\n    },\n    createdAt: {\n      type: Date,\n      default: Date.now,\n    },\n    updatedAt: {\n      type: Date,\n      default: Date.now,\n    },\n  },\n  {\n    timestamps: true,\n  },\n)\n\n// Pre-save hook to hash password\nuserSchema.pre(\"save\", async function (next) {\n  // Only hash the password if it's modified or new\n  if (!this.isModified(\"password\")) return next()\n\n  try {\n    // Generate salt\n    const salt = await bcrypt.genSalt(10)\n    // Hash password\n    this.password = await bcrypt.hash(this.password, salt)\n    next()\n  } catch (error) {\n    next(error)\n  }\n})\n\n// Method to compare passwords\nuserSchema.methods.comparePassword = async function (candidatePassword) {\n  return await bcrypt.compare(candidatePassword, this.password)\n}\n\n// Method to return user data without sensitive information\nuserSchema.methods.toJSON = function () {\n  const user = this.toObject()\n  delete user.password\n  delete user.resetPasswordToken\n  delete user.resetPasswordExpires\n  return user\n}\n\nconst User = mongoose.model(\"User\", userSchema)\n\nexport default User\n\n[V0_FILE]javascript:file=\"models/Task.js\"\nimport mongoose from \"mongoose\"\n\nconst subtaskSchema = new mongoose.Schema(\n  {\n    title: {\n      type: String,\n      required: true,\n      trim: true,\n    },\n    completed: {\n      type: Boolean,\n      default: false,\n    },\n    createdAt: {\n      type: Date,\n      default: Date.now,\n    },\n    updatedAt: {\n      type: Date,\n      default: Date.now,\n    },\n  },\n  {\n    timestamps: true,\n  },\n)\n\nconst taskSchema = new mongoose.Schema(\n  {\n    title: {\n      type: String,\n      required: [true, \"Task title is required\"],\n      trim: true,\n    },\n    description: {\n      type: String,\n      trim: true,\n    },\n    status: {\n      type: String,\n      enum: [\"to-do\", \"in-progress\", \"in-review\", \"completed\"],\n      default: \"to-do\",\n    },\n    priority: {\n      type: String,\n      enum: [\"high\", \"medium\", \"low\"],\n      default: \"medium\",\n    },\n    dueDate: {\n      type: Date,\n    },\n    assignee: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"User\",\n    },\n    creator: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"User\",\n      required: true,\n    },\n    tags: [\n      {\n        type: String,\n        trim: true,\n      },\n    ],\n    subtasks: [subtaskSchema],\n    attachments: [\n      {\n        name: String,\n        path: String,\n        type: String,\n        size: Number,\n        uploadedAt: {\n          type: Date,\n          default: Date.now,\n        },\n      },\n    ],\n    progress: {\n      type: Number,\n      default: 0,\n      min: 0,\n      max: 100,\n    },\n    watchers: [\n      {\n        type: mongoose.Schema.Types.ObjectId,\n        ref: \"User\",\n      },\n    ],\n    createdAt: {\n      type: Date,\n      default: Date.now,\n    },\n    updatedAt: {\n      type: Date,\n      default: Date.now,\n    },\n  },\n  {\n    timestamps: true,\n  },\n)\n\n// Method to calculate progress based on subtasks\ntaskSchema.methods.calculateProgress = function () {\n  if (this.subtasks.length === 0) return 0\n\n  const completedCount = this.subtasks.filter((subtask) =\u003e subtask.completed).length\n  return Math.round((completedCount / this.subtasks.length) * 100)\n}\n\n// Pre-save hook to update progress\ntaskSchema.pre(\"save\", function (next) {\n  if (this.subtasks \u0026\u0026 this.subtasks.length \u003e 0) {\n    this.progress = this.calculateProgress()\n  }\n  next()\n})\n\n// Create indexes for better query performance\ntaskSchema.index({ status: 1 })\ntaskSchema.index({ priority: 1 })\ntaskSchema.index({ assignee: 1 })\ntaskSchema.index({ dueDate: 1 })\ntaskSchema.index({ creator: 1 })\ntaskSchema.index({ tags: 1 })\n\nconst Task = mongoose.model(\"Task\", taskSchema)\n\nexport default Task\n\n[V0_FILE]javascript:file=\"models/Comment.js\"\nimport mongoose from \"mongoose\"\n\nconst commentSchema = new mongoose.Schema(\n  {\n    task: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"Task\",\n      required: true,\n    },\n    user: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"User\",\n      required: true,\n    },\n    content: {\n      type: String,\n      required: [true, \"Comment content is required\"],\n      trim: true,\n    },\n    mentions: [\n      {\n        type: mongoose.Schema.Types.ObjectId,\n        ref: \"User\",\n      },\n    ],\n    attachments: [\n      {\n        name: String,\n        path: String,\n        type: String,\n        size: Number,\n        uploadedAt: {\n          type: Date,\n          default: Date.now,\n        },\n      },\n    ],\n    createdAt: {\n      type: Date,\n      default: Date.now,\n    },\n    updatedAt: {\n      type: Date,\n      default: Date.now,\n    },\n  },\n  {\n    timestamps: true,\n  },\n)\n\n// Create indexes for better query performance\ncommentSchema.index({ task: 1 })\ncommentSchema.index({ user: 1 })\ncommentSchema.index({ createdAt: -1 })\n\nconst Comment = mongoose.model(\"Comment\", commentSchema)\n\nexport default Comment\n\n[V0_FILE]javascript:file=\"models/Notification.js\"\nimport mongoose from \"mongoose\"\n\nconst notificationSchema = new mongoose.Schema(\n  {\n    recipient: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"User\",\n      required: true,\n    },\n    sender: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"User\",\n    },\n    type: {\n      type: String,\n      enum: [\n        \"task_assigned\",\n        \"task_updated\",\n        \"task_completed\",\n        \"comment_added\",\n        \"deadline_reminder\",\n        \"mention\",\n        \"system\",\n      ],\n      required: true,\n    },\n    title: {\n      type: String,\n      required: true,\n    },\n    message: {\n      type: String,\n      required: true,\n    },\n    read: {\n      type: Boolean,\n      default: false,\n    },\n    relatedTask: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"Task\",\n    },\n    relatedComment: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"Comment\",\n    },\n    createdAt: {\n      type: Date,\n      default: Date.now,\n    },\n  },\n  {\n    timestamps: true,\n  },\n)\n\n// Create indexes for better query performance\nnotificationSchema.index({ recipient: 1, read: 1 })\nnotificationSchema.index({ createdAt: -1 })\n\nconst Notification = mongoose.model(\"Notification\", notificationSchema)\n\nexport default Notification\n\n[V0_FILE]javascript:file=\"middleware/auth.js\"\nimport jwt from \"jsonwebtoken\"\nimport User from \"../models/User.js\"\nimport { createError } from \"../utils/error.js\"\n\n// Verify JWT token\nexport const verifyToken = async (req, res, next) =\u003e {\n  try {\n    // Get token from cookies or authorization header\n    const token =\n      req.cookies.token ||\n      (req.headers.authorization \u0026\u0026 req.headers.authorization.startsWith(\"Bearer\")\n        ? req.headers.authorization.split(\" \")[1]\n        : null)\n\n    if (!token) {\n      return next(createError(401, \"You are not authenticated\"))\n    }\n\n    // Verify token\n    const decoded = jwt.verify(token, process.env.JWT_SECRET)\n\n    // Find user\n    const user = await User.findById(decoded.id)\n    if (!user) {\n      return next(createError(404, \"User not found\"))\n    }\n\n    // Check if user is active\n    if (user.status !== \"active\") {\n      return next(createError(403, \"Your account is not active\"))\n    }\n\n    // Update last active timestamp\n    user.lastActive = new Date()\n    await user.save()\n\n    // Attach user to request\n    req.user = user\n    next()\n  } catch (err) {\n    if (err.name === \"JsonWebTokenError\") {\n      return next(createError(401, \"Invalid token\"))\n    }\n    if (err.name === \"TokenExpiredError\") {\n      return next(createError(401, \"Token expired\"))\n    }\n    next(err)\n  }\n}\n\n// Check if user is admin\nexport const verifyAdmin = (req, res, next) =\u003e {\n  if (req.user.role !== \"admin\") {\n    return next(createError(403, \"You are not authorized to perform this action\"))\n  }\n  next()\n}\n\n// Check if user is admin or editor\nexport const verifyAdminOrEditor = (req, res, next) =\u003e {\n  if (req.user.role !== \"admin\" \u0026\u0026 req.user.role !== \"editor\") {\n    return next(createError(403, \"You are not authorized to perform this action\"))\n  }\n  next()\n}\n\n// Check if user is the owner of the resource or an admin\nexport const verifyOwnerOrAdmin = (resourceModel) =\u003e {\n  return async (req, res, next) =\u003e {\n    try {\n      const resourceId = req.params.id\n      const resource = await resourceModel.findById(resourceId)\n\n      if (!resource) {\n        return next(createError(404, \"Resource not found\"))\n      }\n\n      // Check if user is admin or the owner\n      const isOwner = resource.creator \u0026\u0026 resource.creator.toString() === req.user._id.toString()\n      const isAssignee = resource.assignee \u0026\u0026 resource.assignee.toString() === req.user._id.toString()\n\n      if (req.user.role === \"admin\" || isOwner || isAssignee) {\n        req.resource = resource\n        return next()\n      }\n\n      return next(createError(403, \"You are not authorized to perform this action\"))\n    } catch (err) {\n      next(err)\n    }\n  }\n}\n\n[V0_FILE]javascript:file=\"middleware/errorHandler.js\"\n// Error handling middleware\nexport const errorHandler = (err, req, res, next) =\u003e {\n  const statusCode = err.statusCode || 500\n  const message = err.message || \"Internal Server Error\"\n\n  console.error(`[ERROR] ${statusCode} - ${message}`)\n  if (process.env.NODE_ENV === \"development\") {\n    console.error(err.stack)\n  }\n\n  res.status(statusCode).json({\n    success: false,\n    status: statusCode,\n    message,\n    stack: process.env.NODE_ENV === \"development\" ? err.stack : {},\n  })\n}\n\n[V0_FILE]javascript:file=\"middleware/upload.js\"\nimport multer from \"multer\"\nimport path from \"path\"\nimport fs from \"fs\"\nimport { fileURLToPath } from \"url\"\nimport { createError } from \"../utils/error.js\"\n\n// Get directory name\nconst __dirname = path.dirname(fileURLToPath(import.meta.url))\n\n// Create uploads directory if it doesn't exist\nconst uploadsDir = path.join(__dirname, \"../uploads\")\nif (!fs.existsSync(uploadsDir)) {\n  fs.mkdirSync(uploadsDir, { recursive: true })\n}\n\n// Configure storage\nconst storage = multer.diskStorage({\n  destination: (req, file, cb) =\u003e {\n    // Create subdirectory based on file type\n    let dir = \"general\"\n\n    if (file.mimetype.startsWith(\"image/\")) {\n      dir = \"images\"\n    } else if (file.mimetype.includes(\"pdf\") || file.mimetype.includes(\"document\")) {\n      dir = \"documents\"\n    }\n\n    const fullPath = path.join(uploadsDir, dir)\n\n    // Create directory if it doesn't exist\n    if (!fs.existsSync(fullPath)) {\n      fs.mkdirSync(fullPath, { recursive: true })\n    }\n\n    cb(null, path.join(\"uploads\", dir))\n  },\n  filename: (req, file, cb) =\u003e {\n    // Generate unique filename\n    const uniqueSuffix = Date.now() + \"-\" + Math.round(Math.random() * 1e9)\n    const ext = path.extname(file.originalname)\n    cb(null, file.fieldname + \"-\" + uniqueSuffix + ext)\n  },\n})\n\n// File filter\nconst fileFilter = (req, file, cb) =\u003e {\n  // Accept images, documents, and common file types\n  const allowedFileTypes = /jpeg|jpg|png|gif|pdf|doc|docx|xls|xlsx|ppt|pptx|txt|csv|zip|rar/\n  const extname = allowedFileTypes.test(path.extname(file.originalname).toLowerCase())\n  const mimetype = allowedFileTypes.test(file.mimetype)\n\n  if (extname \u0026\u0026 mimetype) {\n    return cb(null, true)\n  } else {\n    cb(createError(400, \"Only certain file types are allowed\"))\n  }\n}\n\n// Configure multer\nconst upload = multer({\n  storage,\n  fileFilter,\n  limits: {\n    fileSize: 10 * 1024 * 1024, // 10MB\n  },\n})\n\nexport default upload\n\n[V0_FILE]javascript:file=\"routes/auth.js\"\nimport express from \"express\"\nimport jwt from \"jsonwebtoken\"\nimport User from \"../models/User.js\"\nimport { verifyToken } from \"../middleware/auth.js\"\nimport { createError } from \"../utils/error.js\"\nimport { sendEmail } from \"../utils/email.js\"\nimport crypto from \"crypto\"\n\nconst router = express.Router()\n\n// Register a new user\nrouter.post(\"/register\", async (req, res, next) =\u003e {\n  try {\n    const { name, email, password } = req.body\n\n    // Check if user already exists\n    const existingUser = await User.findOne({ email })\n    if (existingUser) {\n      return next(createError(400, \"User with this email already exists\"))\n    }\n\n    // Create new user\n    const newUser = new User({\n      name,\n      email,\n      password,\n    })\n\n    // Save user to database\n    const savedUser = await newUser.save()\n\n    // Generate JWT token\n    const token = jwt.sign({ id: savedUser._id, role: savedUser.role }, process.env.JWT_SECRET, { expiresIn: \"7d\" })\n\n    // Set token as cookie\n    res.cookie(\"token\", token, {\n      httpOnly: true,\n      secure: process.env.NODE_ENV === \"production\",\n      maxAge: 7 * 24 * 60 * 60 * 1000, // 7 days\n    })\n\n    // Send welcome email\n    sendEmail({\n      to: savedUser.email,\n      subject: \"Welcome to Task Management App\",\n      text: `Hello ${savedUser.name},\\n\\nWelcome to our Task Management App! Your account has been created successfully.\\n\\nBest regards,\\nThe Task Management Team`,\n    })\n\n    res.status(201).json({\n      success: true,\n      message: \"User registered successfully\",\n      user: savedUser,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Login user\nrouter.post(\"/login\", async (req, res, next) =\u003e {\n  try {\n    const { email, password } = req.body\n\n    // Find user by email\n    const user = await User.findOne({ email })\n    if (!user) {\n      return next(createError(404, \"User not found\"))\n    }\n\n    // Check if user is active\n    if (user.status !== \"active\") {\n      return next(createError(403, \"Your account is not active\"))\n    }\n\n    // Check password\n    const isPasswordValid = await user.comparePassword(password)\n    if (!isPasswordValid) {\n      return next(createError(401, \"Invalid credentials\"))\n    }\n\n    // Generate JWT token\n    const token = jwt.sign({ id: user._id, role: user.role }, process.env.JWT_SECRET, { expiresIn: \"7d\" })\n\n    // Set token as cookie\n    res.cookie(\"token\", token, {\n      httpOnly: true,\n      secure: process.env.NODE_ENV === \"production\",\n      maxAge: 7 * 24 * 60 * 60 * 1000, // 7 days\n    })\n\n    // Update last active timestamp\n    user.lastActive = new Date()\n    await user.save()\n\n    res.status(200).json({\n      success: true,\n      message: \"Login successful\",\n      user,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Logout user\nrouter.post(\"/logout\", (req, res) =\u003e {\n  res.clearCookie(\"token\")\n  res.status(200).json({\n    success: true,\n    message: \"Logout successful\",\n  })\n})\n\n// Get current user\nrouter.get(\"/me\", verifyToken, (req, res) =\u003e {\n  res.status(200).json({\n    success: true,\n    user: req.user,\n  })\n})\n\n// Forgot password\nrouter.post(\"/forgot-password\", async (req, res, next) =\u003e {\n  try {\n    const { email } = req.body\n\n    // Find user by email\n    const user = await User.findOne({ email })\n    if (!user) {\n      return next(createError(404, \"User not found\"))\n    }\n\n    // Generate reset token\n    const resetToken = crypto.randomBytes(32).toString(\"hex\")\n\n    // Hash token and set to resetPasswordToken field\n    user.resetPasswordToken = crypto.createHash(\"sha256\").update(resetToken).digest(\"hex\")\n\n    // Set token expiry\n    user.resetPasswordExpires = Date.now() + 30 * 60 * 1000 // 30 minutes\n\n    // Save user\n    await user.save()\n\n    // Create reset URL\n    const resetUrl = `${process.env.FRONTEND_URL}/reset-password/${resetToken}`\n\n    // Send email\n    sendEmail({\n      to: user.email,\n      subject: \"Password Reset Request\",\n      text: `You are receiving this email because you (or someone else) has requested the reset of a password. Please click on the following link, or paste this into your browser to complete the process:\\n\\n${resetUrl}\\n\\nIf you did not request this, please ignore this email and your password will remain unchanged.\\n`,\n    })\n\n    res.status(200).json({\n      success: true,\n      message: \"Password reset email sent\",\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Reset password\nrouter.post(\"/reset-password/:token\", async (req, res, next) =\u003e {\n  try {\n    const { password } = req.body\n\n    // Get token from params\n    const resetToken = req.params.token\n\n    // Hash token\n    const hashedToken = crypto.createHash(\"sha256\").update(resetToken).digest(\"hex\")\n\n    // Find user by token and check if token is expired\n    const user = await User.findOne({\n      resetPasswordToken: hashedToken,\n      resetPasswordExpires: { $gt: Date.now() },\n    })\n\n    if (!user) {\n      return next(createError(400, \"Password reset token is invalid or has expired\"))\n    }\n\n    // Set new password\n    user.password = password\n    user.resetPasswordToken = undefined\n    user.resetPasswordExpires = undefined\n\n    // Save user\n    await user.save()\n\n    // Send confirmation email\n    sendEmail({\n      to: user.email,\n      subject: \"Password Reset Confirmation\",\n      text: `Hello ${user.name},\\n\\nThis is a confirmation that the password for your account ${user.email} has just been changed.\\n`,\n    })\n\n    res.status(200).json({\n      success: true,\n      message: \"Password reset successful\",\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// OAuth login with Google\nrouter.post(\"/google\", async (req, res, next) =\u003e {\n  try {\n    const { token, profile } = req.body\n\n    // Verify token with Google (in a real app)\n    // For demo purposes, we'll assume the token is valid\n\n    // Check if user exists\n    let user = await User.findOne({ email: profile.email })\n\n    if (!user) {\n      // Create new user\n      user = new User({\n        name: profile.name,\n        email: profile.email,\n        password: crypto.randomBytes(16).toString(\"hex\"), // Random password\n        avatar: profile.picture,\n      })\n\n      await user.save()\n    }\n\n    // Generate JWT token\n    const jwtToken = jwt.sign({ id: user._id, role: user.role }, process.env.JWT_SECRET, { expiresIn: \"7d\" })\n\n    // Set token as cookie\n    res.cookie(\"token\", jwtToken, {\n      httpOnly: true,\n      secure: process.env.NODE_ENV === \"production\",\n      maxAge: 7 * 24 * 60 * 60 * 1000, // 7 days\n    })\n\n    // Update last active timestamp\n    user.lastActive = new Date()\n    await user.save()\n\n    res.status(200).json({\n      success: true,\n      message: \"Login successful\",\n      user,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// OAuth login with GitHub\nrouter.post(\"/github\", async (req, res, next) =\u003e {\n  try {\n    const { token, profile } = req.body\n\n    // Verify token with GitHub (in a real app)\n    // For demo purposes, we'll assume the token is valid\n\n    // Check if user exists\n    let user = await User.findOne({ email: profile.email })\n\n    if (!user) {\n      // Create new user\n      user = new User({\n        name: profile.name,\n        email: profile.email,\n        password: crypto.randomBytes(16).toString(\"hex\"), // Random password\n        avatar: profile.avatar_url,\n      })\n\n      await user.save()\n    }\n\n    // Generate JWT token\n    const jwtToken = jwt.sign({ id: user._id, role: user.role }, process.env.JWT_SECRET, { expiresIn: \"7d\" })\n\n    // Set token as cookie\n    res.cookie(\"token\", jwtToken, {\n      httpOnly: true,\n      secure: process.env.NODE_ENV === \"production\",\n      maxAge: 7 * 24 * 60 * 60 * 1000, // 7 days\n    })\n\n    // Update last active timestamp\n    user.lastActive = new Date()\n    await user.save()\n\n    res.status(200).json({\n      success: true,\n      message: \"Login successful\",\n      user,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\nexport default router\n\n[V0_FILE]javascript:file=\"routes/users.js\"\nimport express from \"express\"\nimport User from \"../models/User.js\"\nimport Task from \"../models/Task.js\"\nimport { verifyToken, verifyAdmin } from \"../middleware/auth.js\"\nimport { createError } from \"../utils/error.js\"\nimport upload from \"../middleware/upload.js\"\n\nconst router = express.Router()\n\n// Get all users (admin only)\nrouter.get(\"/\", verifyToken, verifyAdmin, async (req, res, next) =\u003e {\n  try {\n    const { role, status, search, sort, page = 1, limit = 10 } = req.query\n\n    // Build query\n    const query = {}\n\n    // Filter by role\n    if (role \u0026\u0026 role !== \"all\") {\n      query.role = role\n    }\n\n    // Filter by status\n    if (status \u0026\u0026 status !== \"all\") {\n      query.status = status\n    }\n\n    // Search by name or email\n    if (search) {\n      query.$or = [{ name: { $regex: search, $options: \"i\" } }, { email: { $regex: search, $options: \"i\" } }]\n    }\n\n    // Count total documents\n    const total = await User.countDocuments(query)\n\n    // Build sort options\n    let sortOptions = { createdAt: -1 } // Default sort\n    if (sort) {\n      const [field, order] = sort.split(\":\")\n      sortOptions = { [field]: order === \"asc\" ? 1 : -1 }\n    }\n\n    // Fetch users with pagination\n    const users = await User.find(query)\n      .sort(sortOptions)\n      .skip((page - 1) * limit)\n      .limit(Number.parseInt(limit))\n\n    res.status(200).json({\n      success: true,\n      count: users.length,\n      total,\n      totalPages: Math.ceil(total / limit),\n      currentPage: Number.parseInt(page),\n      users,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Get user by ID\nrouter.get(\"/:id\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Check if user is admin or requesting their own profile\n    if (req.user.role !== \"admin\" \u0026\u0026 req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to access this resource\"))\n    }\n\n    const user = await User.findById(req.params.id)\n    if (!user) {\n      return next(createError(404, \"User not found\"))\n    }\n\n    res.status(200).json({\n      success: true,\n      user,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Update user\nrouter.put(\"/:id\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Check if user is admin or updating their own profile\n    if (req.user.role !== \"admin\" \u0026\u0026 req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to update this user\"))\n    }\n\n    const { name, email, bio, jobTitle, company, notificationPreferences } = req.body\n\n    // Find user\n    const user = await User.findById(req.params.id)\n    if (!user) {\n      return next(createError(404, \"User not found\"))\n    }\n\n    // Update fields\n    if (name) user.name = name\n    if (bio) user.bio = bio\n    if (jobTitle) user.jobTitle = jobTitle\n    if (company) user.company = company\n    if (notificationPreferences)\n      user.notificationPreferences = {\n        ...user.notificationPreferences,\n        ...notificationPreferences,\n      }\n\n    // Only admin can update email or role\n    if (req.user.role === \"admin\") {\n      if (email \u0026\u0026 email !== user.email) {\n        // Check if email is already in use\n        const existingUser = await User.findOne({ email })\n        if (existingUser) {\n          return next(createError(400, \"Email is already in use\"))\n        }\n        user.email = email\n      }\n\n      if (req.body.role) user.role = req.body.role\n      if (req.body.status) user.status = req.body.status\n    }\n\n    // Save user\n    const updatedUser = await user.save()\n\n    res.status(200).json({\n      success: true,\n      message: \"User updated successfully\",\n      user: updatedUser,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Update user avatar\nrouter.put(\"/:id/avatar\", verifyToken, upload.single(\"avatar\"), async (req, res, next) =\u003e {\n  try {\n    // Check if user is updating their own avatar\n    if (req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to update this user\"))\n    }\n\n    if (!req.file) {\n      return next(createError(400, \"No file uploaded\"))\n    }\n\n    // Find user\n    const user = await User.findById(req.params.id)\n    if (!user) {\n      return next(createError(404, \"User not found\"))\n    }\n\n    // Update avatar\n    user.avatar = `/${req.file.path}`\n\n    // Save user\n    const updatedUser = await user.save()\n\n    res.status(200).json({\n      success: true,\n      message: \"Avatar updated successfully\",\n      user: updatedUser,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Change password\nrouter.put(\"/:id/password\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Check if user is changing their own password\n    if (req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to change this user's password\"))\n    }\n\n    const { currentPassword, newPassword } = req.body\n\n    // Find user\n    const user = await User.findById(req.params.id)\n    if (!user) {\n      return next(createError(404, \"User not found\"))\n    }\n\n    // Check current password\n    const isPasswordValid = await user.comparePassword(currentPassword)\n    if (!isPasswordValid) {\n      return next(createError(401, \"Current password is incorrect\"))\n    }\n\n    // Update password\n    user.password = newPassword\n\n    // Save user\n    await user.save()\n\n    res.status(200).json({\n      success: true,\n      message: \"Password changed successfully\",\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Toggle two-factor authentication\nrouter.put(\"/:id/two-factor\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Check if user is updating their own settings\n    if (req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to update this user\"))\n    }\n\n    // Find user\n    const user = await User.findById(req.params.id)\n    if (!user) {\n      return next(createError(404, \"User not found\"))\n    }\n\n    // Toggle two-factor authentication\n    user.twoFactorEnabled = !user.twoFactorEnabled\n\n    // Save user\n    const updatedUser = await user.save()\n\n    res.status(200).json({\n      success: true,\n      message: `Two-factor authentication ${updatedUser.twoFactorEnabled ? \"enabled\" : \"disabled\"}`,\n      user: updatedUser,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Delete user (admin only)\nrouter.delete(\"/:id\", verifyToken, verifyAdmin, async (req, res, next) =\u003e {\n  try {\n    // Find user\n    const user = await User.findById(req.params.id)\n    if (!user) {\n      return next(createError(404, \"User not found\"))\n    }\n\n    // Check if user is trying to delete themselves\n    if (req.user._id.toString() === req.params.id) {\n      return next(createError(400, \"You cannot delete your own account\"))\n    }\n\n    // Delete user\n    await User.findByIdAndDelete(req.params.id)\n\n    // Update tasks assigned to this user\n    await Task.updateMany({ assignee: req.params.id }, { $unset: { assignee: 1 } })\n\n    res.status(200).json({\n      success: true,\n      message: \"User deleted successfully\",\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Get user tasks\nrouter.get(\"/:id/tasks\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Check if user is admin or requesting their own tasks\n    if (req.user.role !== \"admin\" \u0026\u0026 req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to access this resource\"))\n    }\n\n    const { status, priority, sort, page = 1, limit = 10 } = req.query\n\n    // Build query\n    const query = { assignee: req.params.id }\n\n    // Filter by status\n    if (status \u0026\u0026 status !== \"all\") {\n      query.status = status\n    }\n\n    // Filter by priority\n    if (priority \u0026\u0026 priority !== \"all\") {\n      query.priority = priority\n    }\n\n    // Count total documents\n    const total = await Task.countDocuments(query)\n\n    // Build sort options\n    let sortOptions = { createdAt: -1 } // Default sort\n    if (sort) {\n      const [field, order] = sort.split(\":\")\n      sortOptions = { [field]: order === \"asc\" ? 1 : -1 }\n    }\n\n    // Fetch tasks with pagination\n    const tasks = await Task.find(query)\n      .populate(\"assignee\", \"name email avatar\")\n      .populate(\"creator\", \"name email avatar\")\n      .sort(sortOptions)\n      .skip((page - 1) * limit)\n      .limit(Number.parseInt(limit))\n\n    res.status(200).json({\n      success: true,\n      count: tasks.length,\n      total,\n      totalPages: Math.ceil(total / limit),\n      currentPage: Number.parseInt(page),\n      tasks,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\nexport default router\n\n[V0_FILE]javascript:file=\"routes/tasks.js\"\nimport express from \"express\"\nimport Task from \"../models/Task.js\"\nimport User from \"../models/User.js\"\nimport Comment from \"../models/Comment.js\"\nimport Notification from \"../models/Notification.js\"\nimport { verifyToken, verifyAdminOrEditor, verifyOwnerOrAdmin } from \"../middleware/auth.js\"\nimport { createError } from \"../utils/error.js\"\nimport upload from \"../middleware/upload.js\"\nimport { sendEmail } from \"../utils/email.js\"\n\nconst router = express.Router()\n\n// Create a new task\nrouter.post(\"/\", verifyToken, verifyAdminOrEditor, async (req, res, next) =\u003e {\n  try {\n    const { title, description, status, priority, dueDate, assignee, tags, subtasks } = req.body\n\n    // Create new task\n    const newTask = new Task({\n      title,\n      description,\n      status: status || \"to-do\",\n      priority: priority || \"medium\",\n      dueDate,\n      assignee,\n      creator: req.user._id,\n      tags: tags || [],\n      subtasks: subtasks || [],\n    })\n\n    // Save task\n    const savedTask = await newTask.save()\n\n    // If task is assigned to someone, send notification\n    if (assignee) {\n      // Create notification\n      const notification = new Notification({\n        recipient: assignee,\n        sender: req.user._id,\n        type: \"task_assigned\",\n        title: \"New Task Assigned\",\n        message: `You have been assigned a new task: ${title}`,\n        relatedTask: savedTask._id,\n      })\n\n      await notification.save()\n\n      // Send real-time notification\n      if (req.io) {\n        req.io.to(assignee.toString()).emit(\"notification\", notification)\n      }\n\n      // Get assignee details\n      const assigneeUser = await User.findById(assignee)\n\n      // Send email notification if user has email notifications enabled\n      if (\n        assigneeUser \u0026\u0026\n        assigneeUser.notificationPreferences.emailNotifications \u0026\u0026\n        assigneeUser.notificationPreferences.taskAssigned\n      ) {\n        sendEmail({\n          to: assigneeUser.email,\n          subject: \"New Task Assigned\",\n          text: `Hello ${assigneeUser.name},\\n\\nYou have been assigned a new task: ${title}\\n\\nDue Date: ${dueDate ? new Date(dueDate).toLocaleDateString() : \"Not set\"}\\nPriority: ${priority || \"Medium\"}\\n\\nDescription:\\n${description || \"No description provided\"}\\n\\nBest regards,\\nThe Task Management Team`,\n        })\n      }\n    }\n\n    res.status(201).json({\n      success: true,\n      message: \"Task created successfully\",\n      task: savedTask,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Get all tasks\nrouter.get(\"/\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { status, priority, assignee, creator, search, tags, dueDate, sort, page = 1, limit = 10 } = req.query\n\n    // Build query\n    const query = {}\n\n    // Filter by status\n    if (status \u0026\u0026 status !== \"all\") {\n      query.status = status\n    }\n\n    // Filter by priority\n    if (priority \u0026\u0026 priority !== \"all\") {\n      query.priority = priority\n    }\n\n    // Filter by assignee\n    if (assignee) {\n      query.assignee = assignee\n    }\n\n    // Filter by creator\n    if (creator) {\n      query.creator = creator\n    }\n\n    // Filter by tags\n    if (tags) {\n      query.tags = { $in: tags.split(\",\") }\n    }\n\n    // Filter by due date\n    if (dueDate) {\n      const today = new Date()\n      today.setHours(0, 0, 0, 0)\n\n      if (dueDate === \"overdue\") {\n        query.dueDate = { $lt: today }\n        query.status = { $ne: \"completed\" }\n      } else if (dueDate === \"today\") {\n        const tomorrow = new Date(today)\n        tomorrow.setDate(tomorrow.getDate() + 1)\n        query.dueDate = { $gte: today, $lt: tomorrow }\n      } else if (dueDate === \"week\") {\n        const nextWeek = new Date(today)\n        nextWeek.setDate(nextWeek.getDate() + 7)\n        query.dueDate = { $gte: today, $lt: nextWeek }\n      }\n    }\n\n    // Search by title or description\n    if (search) {\n      query.$or = [{ title: { $regex: search, $options: \"i\" } }, { description: { $regex: search, $options: \"i\" } }]\n    }\n\n    // Viewers can only see tasks assigned to them or created by them\n    if (req.user.role === \"viewer\") {\n      query.$or = [{ assignee: req.user._id }, { creator: req.user._id }, { watchers: req.user._id }]\n    }\n\n    // Count total documents\n    const total = await Task.countDocuments(query)\n\n    // Build sort options\n    let sortOptions = { createdAt: -1 } // Default sort\n    if (sort) {\n      const [field, order] = sort.split(\":\")\n      sortOptions = { [field]: order === \"asc\" ? 1 : -1 }\n    }\n\n    // Fetch tasks with pagination\n    const tasks = await Task.find(query)\n      .populate(\"assignee\", \"name email avatar\")\n      .populate(\"creator\", \"name email avatar\")\n      .sort(sortOptions)\n      .skip((page - 1) * limit)\n      .limit(Number.parseInt(limit))\n\n    res.status(200).json({\n      success: true,\n      count: tasks.length,\n      total,\n      totalPages: Math.ceil(total / limit),\n      currentPage: Number.parseInt(page),\n      tasks,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Get task by ID\nrouter.get(\"/:id\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const task = await Task.findById(req.params.id)\n      .populate(\"assignee\", \"name email avatar\")\n      .populate(\"creator\", \"name email avatar\")\n      .populate(\"watchers\", \"name email avatar\")\n\n    if (!task) {\n      return next(createError(404, \"Task not found\"))\n    }\n\n    // Check if user has access to this task\n    if (\n      req.user.role === \"viewer\" \u0026\u0026\n      task.assignee?._id.toString() !== req.user._id.toString() \u0026\u0026\n      task.creator._id.toString() !== req.user._id.toString() \u0026\u0026\n      !task.watchers.some((watcher) =\u003e watcher._id.toString() === req.user._id.toString())\n    ) {\n      return next(createError(403, \"You are not authorized to access this task\"))\n    }\n\n    res.status(200).json({\n      success: true,\n      task,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Update task\nrouter.put(\"/:id\", verifyToken, verifyOwnerOrAdmin(Task), async (req, res, next) =\u003e {\n  try {\n    const { title, description, status, priority, dueDate, assignee, tags, subtasks, progress } = req.body\n\n    const task = req.resource // From verifyOwnerOrAdmin middleware\n\n    // Store old assignee for notification\n    const oldAssignee = task.assignee\n\n    // Update fields\n    if (title) task.title = title\n    if (description !== undefined) task.description = description\n    if (status) task.status = status\n    if (priority) task.priority = priority\n    if (dueDate !== undefined) task.dueDate = dueDate\n    if (assignee !== undefined) task.assignee = assignee\n    if (tags) task.tags = tags\n    if (subtasks) task.subtasks = subtasks\n    if (progress !== undefined) task.progress = progress\n\n    // Save task\n    const updatedTask = await task.save()\n\n    // If assignee has changed, send notification to new assignee\n    if (assignee \u0026\u0026 (!oldAssignee || oldAssignee.toString() !== assignee.toString())) {\n      // Create notification\n      const notification = new Notification({\n        recipient: assignee,\n        sender: req.user._id,\n        type: \"task_assigned\",\n        title: \"Task Assigned\",\n        message: `You have been assigned to the task: ${task.title}`,\n        relatedTask: task._id,\n      })\n\n      await notification.save()\n\n      // Send real-time notification\n      if (req.io) {\n        req.io.to(assignee.toString()).emit(\"notification\", notification)\n      }\n\n      // Get assignee details\n      const assigneeUser = await User.findById(assignee)\n\n      // Send email notification if user has email notifications enabled\n      if (\n        assigneeUser \u0026\u0026\n        assigneeUser.notificationPreferences.emailNotifications \u0026\u0026\n        assigneeUser.notificationPreferences.taskAssigned\n      ) {\n        sendEmail({\n          to: assigneeUser.email,\n          subject: \"Task Assigned\",\n          text: `Hello ${assigneeUser.name},\\n\\nYou have been assigned to the task: ${task.title}\\n\\nDue Date: ${task.dueDate ? new Date(task.dueDate).toLocaleDateString() : \"Not set\"}\\nPriority: ${task.priority}\\n\\nDescription:\\n${task.description || \"No description provided\"}\\n\\nBest regards,\\nThe Task Management Team`,\n        })\n      }\n    }\n\n    // If status has changed to completed, send notification to creator\n    if (status === \"completed\" \u0026\u0026 task.status !== \"completed\") {\n      // Create notification for creator\n      const notification = new Notification({\n        recipient: task.creator,\n        sender: req.user._id,\n        type: \"task_completed\",\n        title: \"Task Completed\",\n        message: `The task \"${task.title}\" has been marked as completed`,\n        relatedTask: task._id,\n      })\n\n      await notification.save()\n\n      // Send real-time notification\n      if (req.io) {\n        req.io.to(task.creator.toString()).emit(\"notification\", notification)\n      }\n\n      // Get creator details\n      const creatorUser = await User.findById(task.creator)\n\n      // Send email notification if user has email notifications enabled\n      if (\n        creatorUser \u0026\u0026\n        creatorUser.notificationPreferences.emailNotifications \u0026\u0026\n        creatorUser.notificationPreferences.taskCompleted\n      ) {\n        sendEmail({\n          to: creatorUser.email,\n          subject: \"Task Completed\",\n          text: `Hello ${creatorUser.name},\\n\\nThe task \"${task.title}\" has been marked as completed.\\n\\nBest regards,\\nThe Task Management Team`,\n        })\n      }\n    }\n\n    // If task has been updated, notify assignee\n    if (task.assignee \u0026\u0026 task.assignee.toString() !== req.user._id.toString()) {\n      // Create notification\n      const notification = new Notification({\n        recipient: task.assignee,\n        sender: req.user._id,\n        type: \"task_updated\",\n        title: \"Task Updated\",\n        message: `The task \"${task.title}\" has been updated`,\n        relatedTask: task._id,\n      })\n\n      await notification.save()\n\n      // Send real-time notification\n      if (req.io) {\n        req.io.to(task.assignee.toString()).emit(\"notification\", notification)\n      }\n\n      // Get assignee details\n      const assigneeUser = await User.findById(task.assignee)\n\n      // Send email notification if user has email notifications enabled\n      if (\n        assigneeUser \u0026\u0026\n        assigneeUser.notificationPreferences.emailNotifications \u0026\u0026\n        assigneeUser.notificationPreferences.taskUpdated\n      ) {\n        sendEmail({\n          to: assigneeUser.email,\n          subject: \"Task Updated\",\n          text: `Hello ${assigneeUser.name},\\n\\nThe task \"${task.title}\" has been updated.\\n\\nBest regards,\\nThe Task Management Team`,\n        })\n      }\n    }\n\n    res.status(200).json({\n      success: true,\n      message: \"Task updated successfully\",\n      task: updatedTask,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Delete task\nrouter.delete(\"/:id\", verifyToken, verifyOwnerOrAdmin(Task), async (req, res, next) =\u003e {\n  try {\n    const task = req.resource // From verifyOwnerOrAdmin middleware\n\n    // Delete task\n    await Task.findByIdAndDelete(req.params.id)\n\n    // Delete associated comments\n    await Comment.deleteMany({ task: req.params.id })\n\n    // Delete associated notifications\n    await Notification.deleteMany({ relatedTask: req.params.id })\n\n    res.status(200).json({\n      success: true,\n      message: \"Task deleted successfully\",\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Add attachment to task\nrouter.post(\n  \"/:id/attachments\",\n  verifyToken,\n  verifyOwnerOrAdmin(Task),\n  upload.single(\"file\"),\n  async (req, res, next) =\u003e {\n    try {\n      if (!req.file) {\n        return next(createError(400, \"No file uploaded\"))\n      }\n\n      const task = req.resource // From verifyOwnerOrAdmin middleware\n\n      // Add attachment\n      task.attachments.push({\n        name: req.file.originalname,\n        path: `/${req.file.path}`,\n        type: req.file.mimetype,\n        size: req.file.size,\n      })\n\n      // Save task\n      const updatedTask = await task.save()\n\n      res.status(200).json({\n        success: true,\n        message: \"Attachment added successfully\",\n        task: updatedTask,\n      })\n    } catch (err) {\n      next(err)\n    }\n  },\n)\n\n// Delete attachment from task\nrouter.delete(\"/:id/attachments/:attachmentId\", verifyToken, verifyOwnerOrAdmin(Task), async (req, res, next) =\u003e {\n  try {\n    const task = req.resource // From verifyOwnerOrAdmin middleware\n\n    // Remove attachment\n    task.attachments = task.attachments.filter((attachment) =\u003e attachment._id.toString() !== req.params.attachmentId)\n\n    // Save task\n    const updatedTask = await task.save()\n\n    res.status(200).json({\n      success: true,\n      message: \"Attachment deleted successfully\",\n      task: updatedTask,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Add watcher to task\nrouter.post(\"/:id/watchers\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const task = await Task.findById(req.params.id)\n    if (!task) {\n      return next(createError(404, \"Task not found\"))\n    }\n\n    // Add user to watchers if not already watching\n    if (!task.watchers.includes(req.user._id)) {\n      task.watchers.push(req.user._id)\n      await task.save()\n    }\n\n    res.status(200).json({\n      success: true,\n      message: \"You are now watching this task\",\n      task,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Remove watcher from task\nrouter.delete(\"/:id/watchers\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const task = await Task.findById(req.params.id)\n    if (!task) {\n      return next(createError(404, \"Task not found\"))\n    }\n\n    // Remove user from watchers\n    task.watchers = task.watchers.filter((watcher) =\u003e watcher.toString() !== req.user._id.toString())\n\n    await task.save()\n\n    res.status(200).json({\n      success: true,\n      message: \"You are no longer watching this task\",\n      task,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\nexport default router\n\n[V0_FILE]javascript:file=\"routes/comments.js\" isFixed=\"true\" isQuickEdit=\"true\"\nimport express from \"express\"\nimport Comment from \"../models/Comment.js\"\nimport Task from \"../models/Task.js\"\nimport User from \"../models/User.js\"\nimport Notification from \"../models/Notification.js\"\nimport { verifyToken } from \"../middleware/auth.js\"\nimport { createError } from \"../utils/error.js\"\nimport upload from \"../middleware/upload.js\"\nimport { sendEmail } from \"../utils/email.js\"\n\nconst router = express.Router()\n\n// Create a new comment\nrouter.post(\"/\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { taskId, content, mentions } = req.body\n\n    // Check if task exists\n    const task = await Task.findById(taskId)\n    if (!task) {\n      return next(createError(404, \"Task not found\"))\n    }\n\n    // Create new comment\n    const newComment = new Comment({\n      task: taskId,\n      user: req.user._id,\n      content,\n      mentions: mentions || [],\n    })\n\n    // Save comment\n    const savedComment = await newComment.save()\n\n    // Populate user data\n    await savedComment.populate(\"user\", \"name email avatar\")\n\n    // Notify task assignee and creator about the comment\n    const notifyUsers = new Set()\n\n    // Add task assignee if exists and is not the commenter\n    if (task.assignee \u0026\u0026 task.assignee.toString() !== req.user._id.toString()) {\n      notifyUsers.add(task.assignee.toString())\n    }\n\n    // Add task creator if not the commenter\n    if (task.creator.toString() !== req.user._id.toString()) {\n      notifyUsers.add(task.creator.toString())\n    }\n\n    // Add watchers if not the commenter\n    task.watchers.forEach((watcher) =\u003e {\n      if (watcher.toString() !== req.user._id.toString()) {\n        notifyUsers.add(watcher.toString())\n      }\n    })\n\n    // Add mentioned users\n    if (mentions \u0026\u0026 mentions.length \u003e 0) {\n      mentions.forEach((userId) =\u003e notifyUsers.add(userId))\n    }\n\n    // Send notifications\n    for (const userId of notifyUsers) {\n      // Create notification\n      const notification = new Notification({\n        recipient: userId,\n        sender: req.user._id,\n        type: \"comment_added\",\n        title: \"New Comment\",\n        message: `${req.user.name} commented on task: ${task.title}`,\n        relatedTask: taskId,\n        relatedComment: savedComment._id,\n      })\n\n      await notification.save()\n\n      // Send real-time notification\n      if (req.io) {\n        req.io.to(userId).emit(\"notification\", notification)\n      }\n\n      // Get user details\n      const user = await User.findById(userId)\n\n      // Send email notification if user has email notifications enabled\n      if (user \u0026\u0026 user.notificationPreferences.emailNotifications \u0026\u0026 user.notificationPreferences.commentAdded) {\n        sendEmail({\n          to: user.email,\n          subject: \"New Comment on Task\",\n          text: `Hello ${user.name},\\n\\n${req.user.name} commented on the task \"${task.title}\":\\n\\n\"${content}\"\\n\\nBest regards,\\nThe Task Management Team`,\n        })\n      }\n    }\n\n    res.status(201).json({\n      success: true,\n      message: \"Comment added successfully\",\n      comment: savedComment,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Get comments for a task\nrouter.get(\"/task/:taskId\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { page = 1, limit = 10 } = req.query\n\n    // Check if task exists\n    const task = await Task.findById(req.params.taskId)\n    if (!task) {\n      return next(createError(404, \"Task not found\"))\n    }\n\n    // Check if user has access to this task\n    if (\n      req.user.role === \"viewer\" \u0026\u0026\n      task.assignee?.toString() !== req.user._id.toString() \u0026\u0026\n      task.creator.toString() !== req.user._id.toString() \u0026\u0026\n      !task.watchers.some((watcher) =\u003e watcher.toString() === req.user._id.toString())\n    ) {\n      return next(createError(403, \"You are not authorized to access this task\"))\n    }\n\n    // Count total comments\n    const total = await Comment.countDocuments({ task: req.params.taskId })\n\n    // Fetch comments with pagination\n    const comments = await Comment.find({ task: req.params.taskId })\n      .populate(\"user\", \"name email avatar\")\n      .sort({ createdAt: -1 })\n      .skip((page - 1) * limit)\n      .limit(Number.parseInt(limit))\n\n    res.status(200).json({\n      success: true,\n      count: comments.length,\n      total,\n      totalPages: Math.ceil(total / limit),\n      currentPage: Number.parseInt(page),\n      comments,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Update comment\nrouter.put(\"/:id\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { content, mentions } = req.body\n\n    // Find comment\n    const comment = await Comment.findById(req.params.id)\n    if (!comment) {\n      return next(createError(404, \"Comment not found\"))\n    }\n\n    // Check if user is the comment author\n    if (comment.user.toString() !== req.user._id.toString() \u0026\u0026 req.user.role !== \"admin\") {\n      return next(createError(403, \"You are not authorized to update this comment\"))\n    }\n\n    // Update fields\n    if (content) comment.content = content\n    if (mentions) comment.mentions = mentions\n\n    // Save comment\n    const updatedComment = await comment.save()\n\n    // Populate user data\n    await updatedComment.populate(\"user\", \"name email avatar\")\n\n    res.status(200).json({\n      success: true,\n      message: \"Comment updated successfully\",\n      comment: updatedComment,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Delete comment\nrouter.delete(\"/:id\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Find comment\n    const comment = await Comment.findById(req.params.id)\n    if (!comment) {\n      return next(createError(404, \"Comment not found\"))\n    }\n\n    // Check if user is the comment author or admin\n    if (comment.user.toString() !== req.user._id.toString() \u0026\u0026 req.user.role !== \"admin\") {\n      return next(createError(403, \"You are not authorized to delete this comment\"))\n    }\n\n    // Delete comment\n    await Comment.findByIdAndDelete(req.params.id)\n\n    // Delete associated notifications\n    await Notification.deleteMany({ relatedComment: req.params.id })\n\n    res.status(200).json({\n      success: true,\n      message: \"Comment deleted successfully\",\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Add attachment to comment\nrouter.post(\"/:id/attachments\", verifyToken, upload.single(\"file\"), async (req, res, next) =\u003e {\n  try {\n    if (!req.file) {\n      return next(createError(400, \"No file uploaded\"))\n    }\n\n    // Find comment\n    const comment = await Comment.findById(req.params.id)\n    if (!comment) {\n      return next(createError(404, \"Comment not found\"))\n    }\n\n    // Check if user is the comment author\n    if (comment.user.toString() !== req.user._id.toString() \u0026\u0026 req.user.role !== \"admin\") {\n      return next(createError(403, \"You are not authorized to update this comment\"))\n    }\n\n    // Add attachment\n    comment.attachments.push({\n      name: req.file.originalname,\n      path: `/${req.file.path}`,\n      type: req.file.mimetype,\n      size: req.file.size,\n    })\n\n    // Save comment\n    const updatedComment = await comment.save()\n\n    res.status(200).json({\n      success: true,\n      message: \"Attachment added successfully\",\n      comment: updatedComment,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\nexport default router\n\n[V0_FILE]javascript:file=\"routes/reports.js\"\nimport express from \"express\"\nimport Task from \"../models/Task.js\"\nimport User from \"../models/User.js\"\nimport { verifyToken, verifyAdminOrEditor } from \"../middleware/auth.js\"\nimport { generatePDF, generateCSV } from \"../utils/export.js\"\n\nconst router = express.Router()\n\n// Get task completion report\nrouter.get(\"/task-completion\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { startDate, endDate, format } = req.query\n\n    // Parse dates\n    const start = startDate ? new Date(startDate) : new Date(Date.now() - 30 * 24 * 60 * 60 * 1000) // Default to last 30 days\n    const end = endDate ? new Date(endDate) : new Date()\n\n    // Set end date to end of day\n    end.setHours(23, 59, 59, 999)\n\n    // Aggregate tasks by status and date\n    const tasksByStatus = await Task.aggregate([\n      {\n        $match: {\n          updatedAt: { $gte: start, $lte: end },\n        },\n      },\n      {\n        $group: {\n          _id: {\n            status: \"$status\",\n            date: { $dateToString: { format: \"%Y-%m-%d\", date: \"$updatedAt\" } },\n          },\n          count: { $sum: 1 },\n        },\n      },\n      {\n        $sort: { \"_id.date\": 1 },\n      },\n    ])\n\n    // Transform data for chart\n    const dates = [...new Set(tasksByStatus.map((item) =\u003e item._id.date))].sort()\n\n    const chartData = dates.map((date) =\u003e {\n      const dataPoint = { date }\n      ;[\"to-do\", \"in-progress\", \"in-review\", \"completed\"].forEach((status) =\u003e {\n        const statusData = tasksByStatus.find((item) =\u003e item._id.date === date \u0026\u0026 item._id.status === status)\n        dataPoint[status] = statusData ? statusData.count : 0\n      })\n\n      return dataPoint\n    })\n\n    // If format is specified, export data\n    if (format === \"pdf\") {\n      const pdfBuffer = await generatePDF(\"Task Completion Report\", chartData)\n\n      res.setHeader(\"Content-Type\", \"application/pdf\")\n      res.setHeader(\"Content-Disposition\", \"attachment; filename=task-completion-report.pdf\")\n      return res.send(pdfBuffer)\n    }\n\n    if (format === \"csv\") {\n      const csvData = await generateCSV(chartData)\n\n      res.setHeader(\"Content-Type\", \"text/csv\")\n      res.setHeader(\"Content-Disposition\", \"attachment; filename=task-completion-report.csv\")\n      return res.send(csvData)\n    }\n\n    res.status(200).json({\n      success: true,\n      data: chartData,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Get team performance report\nrouter.get(\"/team-performance\", verifyToken, verifyAdminOrEditor, async (req, res, next) =\u003e {\n  try {\n    const { startDate, endDate, format } = req.query\n\n    // Parse dates\n    const start = startDate ? new Date(startDate) : new Date(Date.now() - 30 * 24 * 60 * 60 * 1000) // Default to last 30 days\n    const end = endDate ? new Date(endDate) : new Date()\n\n    // Set end date to end of day\n    end.setHours(23, 59, 59, 999)\n\n    // Aggregate tasks by assignee\n    const tasksByAssignee = await Task.aggregate([\n      {\n        $match: {\n          assignee: { $exists: true, $ne: null },\n          updatedAt: { $gte: start, $lte: end },\n        },\n      },\n      {\n        $group: {\n          _id: {\n            assignee: \"$assignee\",\n            status: \"$status\",\n          },\n          count: { $sum: 1 },\n        },\n      },\n    ])\n\n    // Get user details\n    const userIds = [...new Set(tasksByAssignee.map((item) =\u003e item._id.assignee))]\n    const users = await User.find({ _id: { $in: userIds } }, \"name email avatar\")\n\n    // Transform data for chart\n    const chartData = users.map((user) =\u003e {\n      const userData = {\n        name: user.name,\n        email: user.email,\n        avatar: user.avatar,\n      }\n      ;[\"to-do\", \"in-progress\", \"in-review\", \"completed\"].forEach((status) =\u003e {\n        const statusData = tasksByAssignee.find(\n          (item) =\u003e item._id.assignee.toString() === user._id.toString() \u0026\u0026 item._id.status === status,\n        )\n        userData[status] = statusData ? statusData.count : 0\n      })\n\n      // Calculate total tasks\n      userData.total = Object.values(userData)\n        .filter((value) =\u003e typeof value === \"number\")\n        .reduce((sum, value) =\u003e sum + value, 0)\n\n      // Calculate completion rate\n      userData.completionRate = userData.total \u003e 0 ? Math.round((userData.completed / userData.total) * 100) : 0\n\n      return userData\n    })\n\n    // Sort by completion rate\n    chartData.sort((a, b) =\u003e b.completionRate - a.completionRate)\n\n    // If format is specified, export data\n    if (format === \"pdf\") {\n      const pdfBuffer = await generatePDF(\"Team Performance Report\", chartData)\n\n      res.setHeader(\"Content-Type\", \"application/pdf\")\n      res.setHeader(\"Content-Disposition\", \"attachment; filename=team-performance-report.pdf\")\n      return res.send(pdfBuffer)\n    }\n\n    if (format === \"csv\") {\n      const csvData = await generateCSV(chartData)\n\n      res.setHeader(\"Content-Type\", \"text/csv\")\n      res.setHeader(\"Content-Disposition\", \"attachment; filename=team-performance-report.csv\")\n      return res.send(csvData)\n    }\n\n    res.status(200).json({\n      success: true,\n      data: chartData,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Get priority distribution report\nrouter.get(\"/priority-distribution\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { format } = req.query\n\n    // Aggregate tasks by priority\n    const tasksByPriority = await Task.aggregate([\n      {\n        $group: {\n          _id: \"$priority\",\n          count: { $sum: 1 },\n        },\n      },\n    ])\n\n    // Transform data for chart\n    const chartData = tasksByPriority.map((item) =\u003e ({\n      priority: item._id,\n      count: item.count,\n    }))\n\n    // If format is specified, export data\n    if (format === \"pdf\") {\n      const pdfBuffer = await generatePDF(\"Priority Distribution Report\", chartData)\n\n      res.setHeader(\"Content-Type\", \"application/pdf\")\n      res.setHeader(\"Content-Disposition\", \"attachment; filename=priority-distribution-report.pdf\")\n      return res.send(pdfBuffer)\n    }\n\n    if (format === \"csv\") {\n      const csvData = await generateCSV(chartData)\n\n      res.setHeader(\"Content-Type\", \"text/csv\")\n      res.setHeader(\"Content-Disposition\", \"attachment; filename=priority-distribution-report.csv\")\n      return res.send(csvData)\n    }\n\n    res.status(200).json({\n      success: true,\n      data: chartData,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Get overdue tasks report\nrouter.get(\"/overdue-tasks\", verifyToken, verifyAdminOrEditor, async (req, res, next) =\u003e {\n  try {\n    const { format } = req.query\n\n    // Get current date\n    const today = new Date()\n    today.setHours(0, 0, 0, 0)\n\n    // Find overdue tasks\n    const overdueTasks = await Task.find({\n      dueDate: { $lt: today },\n      status: { $ne: \"completed\" },\n    })\n      .populate(\"assignee\", \"name email avatar\")\n      .populate(\"creator\", \"name email avatar\")\n      .sort({ dueDate: 1 })\n\n    // Transform data for export\n    const reportData = overdueTasks.map((task) =\u003e ({\n      id: task._id,\n      title: task.title,\n      priority: task.priority,\n      status: task.status,\n      dueDate: task.dueDate ? task.dueDate.toLocaleDateString() : \"Not set\",\n      assignee: task.assignee ? task.assignee.name : \"Unassigned\",\n      creator: task.creator ? task.creator.name : \"Unknown\",\n      daysOverdue: Math.ceil((today - new Date(task.dueDate)) / (1000 * 60 * 60 * 24)),\n    }))\n\n    // If format is specified, export data\n    if (format === \"pdf\") {\n      const pdfBuffer = await generatePDF(\"Overdue Tasks Report\", reportData)\n\n      res.setHeader(\"Content-Type\", \"application/pdf\")\n      res.setHeader(\"Content-Disposition\", \"attachment; filename=overdue-tasks-report.pdf\")\n      return res.send(pdfBuffer)\n    }\n\n    if (format === \"csv\") {\n      const csvData = await generateCSV(reportData)\n\n      res.setHeader(\"Content-Type\", \"text/csv\")\n      res.setHeader(\"Content-Disposition\", \"attachment; filename=overdue-tasks-report.csv\")\n      return res.send(csvData)\n    }\n\n    res.status(200).json({\n      success: true,\n      count: reportData.length,\n      data: reportData,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\nexport default router\n\n[V0_FILE]javascript:file=\"routes/notifications.js\"\nimport express from \"express\"\nimport Notification from \"../models/Notification.js\"\nimport { verifyToken } from \"../middleware/auth.js\"\nimport { createError } from \"../utils/error.js\"\n\nconst router = express.Router()\n\n// Get user notifications\nrouter.get(\"/\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { read, page = 1, limit = 10 } = req.query\n\n    // Build query\n    const query = { recipient: req.user._id }\n\n    // Filter by read status\n    if (read === \"true\") {\n      query.read = true\n    } else if (read === \"false\") {\n      query.read = false\n    }\n\n    // Count total notifications\n    const total = await Notification.countDocuments(query)\n\n    // Fetch notifications with pagination\n    const notifications = await Notification.find(query)\n      .populate(\"sender\", \"name email avatar\")\n      .populate(\"relatedTask\", \"title\")\n      .sort({ createdAt: -1 })\n      .skip((page - 1) * limit)\n      .limit(Number.parseInt(limit))\n\n    res.status(200).json({\n      success: true,\n      count: notifications.length,\n      total,\n      totalPages: Math.ceil(total / limit),\n      currentPage: Number.parseInt(page),\n      unreadCount: await Notification.countDocuments({ recipient: req.user._id, read: false }),\n      notifications,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Mark notification as read\nrouter.put(\"/:id/read\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Find notification\n    const notification = await Notification.findById(req.params.id)\n    if (!notification) {\n      return next(createError(404, \"Notification not found\"))\n    }\n\n    // Check if user is the recipient\n    if (notification.recipient.toString() !== req.user._id.toString()) {\n      return next(createError(403, \"You are not authorized to update this notification\"))\n    }\n\n    // Mark as read\n    notification.read = true\n\n    // Save notification\n    await notification.save()\n\n    res.status(200).json({\n      success: true,\n      message: \"Notification marked as read\",\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Mark all notifications as read\nrouter.put(\"/read-all\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Update all unread notifications for the user\n    await Notification.updateMany({ recipient: req.user._id, read: false }, { $set: { read: true } })\n\n    res.status(200).json({\n      success: true,\n      message: \"All notifications marked as read\",\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Delete notification\nrouter.delete(\"/:id\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Find notification\n    const notification = await Notification.findById(req.params.id)\n    if (!notification) {\n      return next(createError(404, \"Notification not found\"))\n    }\n\n    // Check if user is the recipient\n    if (notification.recipient.toString() !== req.user._id.toString()) {\n      return next(createError(403, \"You are not authorized to delete this notification\"))\n    }\n\n    // Delete notification\n    await Notification.findByIdAndDelete(req.params.id)\n\n    res.status(200).json({\n      success: true,\n      message: \"Notification deleted successfully\",\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Delete all notifications\nrouter.delete(\"/\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Delete all notifications for the user\n    await Notification.deleteMany({ recipient: req.user._id })\n\n    res.status(200).json({\n      success: true,\n      message: \"All notifications deleted successfully\",\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\nexport default router\n\n[V0_FILE]javascript:file=\"socket/socketHandlers.js\"\nimport jwt from \"jsonwebtoken\"\nimport User from \"../models/User.js\"\n\nconst setupSocketHandlers = (io) =\u003e {\n  // Middleware for authentication\n  io.use(async (socket, next) =\u003e {\n    try {\n      const token =\n        socket.handshake.auth.token ||\n        (socket.handshake.headers.authorization \u0026\u0026 socket.handshake.headers.authorization.startsWith(\"Bearer\")\n          ? socket.handshake.headers.authorization.split(\" \")[1]\n          : null)\n\n      if (!token) {\n        return next(new Error(\"Authentication error\"))\n      }\n\n      // Verify token\n      const decoded = jwt.verify(token, process.env.JWT_SECRET)\n\n      // Find user\n      const user = await User.findById(decoded.id)\n      if (!user || user.status !== \"active\") {\n        return next(new Error(\"Authentication error\"))\n      }\n\n      // Attach user to socket\n      socket.user = user\n      next()\n    } catch (err) {\n      next(new Error(\"Authentication error\"))\n    }\n  })\n\n  io.on(\"connection\", (socket) =\u003e {\n    console.log(`User connected: ${socket.user._id}`)\n\n    // Join user's room for private notifications\n    socket.join(socket.user._id.toString())\n\n    // Handle task updates\n    socket.on(\"task:update\", (taskId) =\u003e {\n      // Broadcast to all clients except sender\n      socket.broadcast.emit(\"task:updated\", taskId)\n    })\n\n    // Handle new comments\n    socket.on(\"comment:new\", (taskId) =\u003e {\n      // Broadcast to all clients except sender\n      socket.broadcast.emit(\"comment:added\", taskId)\n    })\n\n    // Handle user typing in comments\n    socket.on(\"typing\", (data) =\u003e {\n      // Broadcast to all clients except sender\n      socket.broadcast.emit(\"user:typing\", {\n        taskId: data.taskId,\n        user: {\n          id: socket.user._id,\n          name: socket.user.name,\n        },\n      })\n    })\n\n    // Handle disconnection\n    socket.on(\"disconnect\", () =\u003e {\n      console.log(`User disconnected: ${socket.user._id}`)\n    })\n  })\n}\n\nexport default setupSocketHandlers\n\n[V0_FILE]javascript:file=\"utils/error.js\"\n// Create custom error with status code\nexport const createError = (statusCode, message) =\u003e {\n  const error = new Error(message)\n  error.statusCode = statusCode\n  return error\n}\n\n[V0_FILE]javascript:file=\"utils/email.js\"\nimport nodemailer from \"nodemailer\"\n\n// Configure email transporter\nconst transporter = nodemailer.createTransport({\n  host: process.env.EMAIL_HOST || \"smtp.example.com\",\n  port: process.env.EMAIL_PORT || 587,\n  secure: process.env.EMAIL_SECURE === \"true\",\n  auth: {\n    user: process.env.EMAIL_USER || \"user@example.com\",\n    pass: process.env.EMAIL_PASS || \"password\",\n  },\n})\n\n// Send email\nexport const sendEmail = async ({ to, subject, text, html }) =\u003e {\n  try {\n    // Skip sending emails in development mode if no email config\n    if (process.env.NODE_ENV === \"development\" \u0026\u0026 !process.env.EMAIL_HOST) {\n      console.log(\"Email sending skipped in development mode\")\n      console.log({ to, subject, text })\n      return\n    }\n\n    const mailOptions = {\n      from: process.env.EMAIL_FROM || \"Task Management \u003cnoreply@taskmanagement.com\u003e\",\n      to,\n      subject,\n      text,\n      html,\n    }\n\n    const info = await transporter.sendMail(mailOptions)\n    console.log(\"Email sent:\", info.messageId)\n    return info\n  } catch (error) {\n    console.error(\"Error sending email:\", error)\n    throw error\n  }\n}\n\n// Send deadline reminder emails\nexport const sendDeadlineReminders = async (tasks, users) =\u003e {\n  for (const task of tasks) {\n    // Get assignee\n    const assignee = users.find(\n      (user) =\u003e\n        user._id.toString() === task.assignee.toString() \u0026\u0026\n        user.notificationPreferences.emailNotifications \u0026\u0026\n        user.notificationPreferences.deadlineReminder,\n    )\n\n    if (assignee) {\n      await sendEmail({\n        to: assignee.email,\n        subject: \"Task Deadline Reminder\",\n        text: `Hello ${assignee.name},\\n\\nThis is a reminder that the task \"${task.title}\" is due soon (${new Date(task.dueDate).toLocaleDateString()}).\\n\\nBest regards,\\nThe Task Management Team`,\n      })\n    }\n  }\n}\n\n[V0_FILE]javascript:file=\"utils/export.js\"\nimport PDFDocument from \"pdfkit\"\nimport { Parser } from \"json2csv\"\n\n// Generate PDF report\nexport const generatePDF = (title, data) =\u003e {\n  return new Promise((resolve, reject) =\u003e {\n    try {\n      // Create PDF document\n      const doc = new PDFDocument()\n      const buffers = []\n\n      // Collect PDF data chunks\n      doc.on(\"data\", (buffer) =\u003e buffers.push(buffer))\n      doc.on(\"end\", () =\u003e resolve(Buffer.concat(buffers)))\n\n      // Add title\n      doc.fontSize(20).text(title, { align: \"center\" })\n      doc.moveDown()\n\n      // Add date\n      doc.fontSize(12).text(`Generated on: ${new Date().toLocaleDateString()}`, { align: \"center\" })\n      doc.moveDown(2)\n\n      // Add data table\n      if (data.length \u003e 0) {\n        // Get column headers\n        const headers = Object.keys(data[0])\n\n        // Calculate column widths\n        const columnWidth = 500 / headers.length\n\n        // Draw header row\n        doc.fontSize(10).font(\"Helvetica-Bold\")\n        headers.forEach((header, i) =\u003e {\n          const x = 50 + i * columnWidth\n          doc.text(header.charAt(0).toUpperCase() + header.slice(1).replace(/([A-Z])/g, \" $1\"), x, doc.y, {\n            width: columnWidth,\n            align: \"left\",\n          })\n        })\n\n        doc.moveDown()\n        doc.font(\"Helvetica\")\n\n        // Draw data rows\n        data.forEach((row) =\u003e {\n          const y = doc.y\n\n          headers.forEach((header, i) =\u003e {\n            const x = 50 + i * columnWidth\n            doc.text(row[header] !== undefined ? row[header].toString() : \"\", x, y, {\n              width: columnWidth,\n              align: \"left\",\n            })\n          })\n\n          doc.moveDown()\n        })\n      } else {\n        doc.text(\"No data available\", { align: \"center\" })\n      }\n\n      // Finalize PDF\n      doc.end()\n    } catch (err) {\n      reject(err)\n    }\n  })\n}\n\n// Generate CSV report\nexport const generateCSV = (data) =\u003e {\n  return new Promise((resolve, reject) =\u003e {\n    try {\n      if (data.length === 0) {\n        return resolve(\"No data available\")\n      }\n\n      // Configure CSV parser\n      const json2csvParser = new Parser()\n\n      // Convert JSON to CSV\n      const csv = json2csvParser.parse(data)\n\n      resolve(csv)\n    } catch (err) {\n      reject(err)\n    }\n  })\n}\n\n[V0_FILE]javascript:file=\"utils/scheduler.js\" isFixed=\"true\" isQuickEdit=\"true\"\nimport cron from \"node-cron\"\nimport Task from \"../models/Task.js\"\nimport User from \"../models/User.js\"\nimport Notification from \"../models/Notification.js\"\nimport { sendDeadlineReminders } from \"./email.js\"\nimport { sendEmail } from \"./email.js\" // Import sendEmail\n\n// Schedule deadline reminders\nexport const scheduleDeadlineReminders = () =\u003e {\n  // Run every day at 9:00 AM\n  cron.schedule(\"0 9 * * *\", async () =\u003e {\n    try {\n      console.log(\"Running deadline reminder scheduler...\")\n\n      // Get current date\n      const today = new Date()\n      today.setHours(0, 0, 0, 0)\n\n      // Get tomorrow's date\n      const tomorrow = new Date(today)\n      tomorrow.setDate(tomorrow.getDate() + 1)\n\n      // Get tasks due tomorrow\n      const tasks = await Task.find({\n        dueDate: {\n          $gte: tomorrow,\n          $lt: new Date(tomorrow.getTime() + 24 * 60 * 60 * 1000),\n        },\n        status: { $ne: \"completed\" },\n      }).populate(\"assignee\")\n\n      if (tasks.length === 0) {\n        console.log(\"No tasks due tomorrow\")\n        return\n      }\n\n      console.log(`Found ${tasks.length} tasks due tomorrow`)\n\n      // Get all users\n      const users = await User.find({\n        _id: { $in: tasks.map((task) =\u003e task.assignee) },\n      })\n\n      // Create notifications\n      const notifications = tasks.map((task) =\u003e ({\n        recipient: task.assignee,\n        type: \"deadline_reminder\",\n        title: \"Task Due Tomorrow\",\n        message: `The task \"${task.title}\" is due tomorrow`,\n        relatedTask: task._id,\n      }))\n\n      // Save notifications\n      await Notification.insertMany(notifications)\n\n      // Send email reminders\n      await sendDeadlineReminders(tasks, users)\n\n      console.log(\"Deadline reminders sent successfully\")\n    } catch (err) {\n      console.error(\"Error sending deadline reminders:\", err)\n    }\n  })\n}\n\n// Schedule weekly digest emails\nexport const scheduleWeeklyDigest = () =\u003e {\n  // Run every Monday at 8:00 AM\n  cron.schedule(\"0 8 * * 1\", async () =\u003e {\n    try {\n      console.log(\"Running weekly digest scheduler...\")\n\n      // Get users who have enabled weekly digest\n      const users = await User.find({\n        \"notificationPreferences.weeklyDigest\": true,\n        \"notificationPreferences.emailNotifications\": true,\n      })\n\n      if (users.length === 0) {\n        console.log(\"No users have enabled weekly digest\")\n        return\n      }\n\n      console.log(`Sending weekly digest to ${users.length} users`)\n\n      // Get date range for the past week\n      const endDate = new Date()\n      const startDate = new Date()\n      startDate.setDate(startDate.getDate() - 7)\n\n      // Process each user\n      for (const user of users) {\n        // Get tasks assigned to user\n        const assignedTasks = await Task.find({\n          assignee: user._id,\n          updatedAt: { $gte: startDate, $lte: endDate },\n        })\n\n        // Get tasks created by user\n        const createdTasks = await Task.find({\n          creator: user._id,\n          updatedAt: { $gte: startDate, $lte: endDate },\n        })\n\n        // Count tasks by status\n        const tasksByStatus = {\n          completed: assignedTasks.filter((task) =\u003e task.status === \"completed\").length,\n          inProgress: assignedTasks.filter((task) =\u003e task.status === \"in-progress\").length,\n          inReview: assignedTasks.filter((task) =\u003e task.status === \"in-review\").length,\n          toDo: assignedTasks.filter((task) =\u003e task.status === \"to-do\").length,\n        }\n\n        // Get overdue tasks\n        const today = new Date()\n        today.setHours(0, 0, 0, 0)\n\n        const overdueTasks = await Task.find({\n          assignee: user._id,\n          dueDate: { $lt: today },\n          status: { $ne: \"completed\" },\n        })\n\n        // Send digest email\n        await sendEmail({\n          to: user.email,\n          subject: \"Your Weekly Task Digest\",\n          text: `Hello ${user.name},\\n\\nHere's your weekly task summary:\\n\\nTasks Assigned to You: ${assignedTasks.length}\\n- Completed: ${tasksByStatus.completed}\\n- In Progress: ${tasksByStatus.inProgress}\\n- In Review: ${tasksByStatus.inReview}\\n- To Do: ${tasksByStatus.toDo}\\n\\nTasks Created by You: ${createdTasks.length}\\n\\nOverdue Tasks: ${overdueTasks.length}\\n\\nBest regards,\\nThe Task Management Team`,\n        })\n      }\n\n      console.log(\"Weekly digest emails sent successfully\")\n    } catch (err) {\n      console.error(\"Error sending weekly digest emails:\", err)\n    }\n  })\n}\n\n[V0_FILE]javascript:file=\"package.json\" isFixed=\"true\" isQuickEdit=\"true\"\n{\n  \"name\": \"task-management-backend\",\n  \"version\": \"1.0.0\",\n  \"description\": \"Backend for Task Management Application\",\n  \"main\": \"server.js\",\n  \"type\": \"module\",\n  \"private\": true,\n  \"scripts\": {\n    \"start\": \"node server.js\",\n    \"dev\": \"nodemon server.js\",\n    \"test\": \"jest\"\n  },\n  \"dependencies\": {\n    \"bcrypt\": \"^5.1.1\",\n    \"cookie-parser\": \"^1.4.6\",\n    \"cors\": \"^2.8.5\",\n    \"dotenv\": \"^16.3.1\",\n    \"express\": \"^4.18.2\",\n    \"jose\": \"^5.1.1\",\n    \"json2csv\": \"^6.0.0-alpha.2\",\n    \"jsonwebtoken\": \"^9.0.2\",\n    \"mongoose\": \"^8.0.1\",\n    \"multer\": \"^1.4.5-lts.1\",\n    \"node-cron\": \"^3.0.3\",\n    \"nodemailer\": \"^6.9.7\",\n    \"pdfkit\": \"^0.14.0\",\n    \"socket.io\": \"^4.7.2\",\n    \"@hookform/resolvers\": \"^3.9.1\",\n    \"@radix-ui/react-accordion\": \"^1.2.2\",\n    \"@radix-ui/react-alert-dialog\": \"^1.1.4\",\n    \"@radix-ui/react-aspect-ratio\": \"^1.1.1\",\n    \"@radix-ui/react-avatar\": \"^1.1.2\",\n    \"@radix-ui/react-checkbox\": \"^1.1.3\",\n    \"@radix-ui/react-collapsible\": \"^1.1.2\",\n    \"@radix-ui/react-context-menu\": \"^2.2.4\",\n    \"@radix-ui/react-dialog\": \"^1.1.4\",\n    \"@radix-ui/react-dropdown-menu\": \"^2.1.4\",\n    \"@radix-ui/react-hover-card\": \"^1.1.4\",\n    \"@radix-ui/react-label\": \"^2.1.1\",\n    \"@radix-ui/react-menubar\": \"^1.1.4\",\n    \"@radix-ui/react-navigation-menu\": \"^1.2.3\",\n    \"@radix-ui/react-popover\": \"^1.1.4\",\n    \"@radix-ui/react-progress\": \"^1.1.1\",\n    \"@radix-ui/react-radio-group\": \"^1.2.2\",\n    \"@radix-ui/react-scroll-area\": \"^1.2.2\",\n    \"@radix-ui/react-select\": \"^2.1.4\",\n    \"@radix-ui/react-separator\": \"^1.1.1\",\n    \"@radix-ui/react-slider\": \"^1.2.2\",\n    \"@radix-ui/react-slot\": \"^1.1.1\",\n    \"@radix-ui/react-switch\": \"^1.1.2\",\n    \"@radix-ui/react-tabs\": \"^1.1.2\",\n    \"@radix-ui/react-toast\": \"^1.2.4\",\n    \"@radix-ui/react-toggle\": \"^1.1.1\",\n    \"@radix-ui/react-toggle-group\": \"^1.1.1\",\n    \"@radix-ui/react-tooltip\": \"^1.1.6\",\n    \"autoprefixer\": \"^10.4.20\",\n    \"class-variance-authority\": \"^0.7.1\",\n    \"clsx\": \"^2.1.1\",\n    \"cmdk\": \"1.0.4\",\n    \"date-fns\": \"4.1.0\",\n    \"embla-carousel-react\": \"8.5.1\",\n    \"input-otp\": \"1.4.1\",\n    \"lucide-react\": \"^0.454.0\",\n    \"next\": \"14.2.16\",\n    \"next-themes\": \"^0.4.4\",\n    \"react\": \"^19\",\n    \"react-day-picker\": \"8.10.1\",\n    \"react-dom\": \"^19\",\n    \"react-hook-form\": \"^7.54.1\",\n    \"react-resizable-panels\": \"^2.1.7\",\n    \"recharts\": \"2.15.0\",\n    \"sonner\": \"^1.7.1\",\n    \"tailwind-merge\": \"^2.5.5\",\n    \"tailwindcss-animate\": \"^1.0.7\",\n    \"vaul\": \"^0.9.6\",\n    \"zod\": \"^3.24.1\"\n  },\n  \"devDependencies\": {\n    \"jest\": \"^29.7.0\",\n    \"nodemon\": \"^3.0.1\",\n    \"supertest\": \"^6.3.3\",\n    \"@types/node\": \"^22\",\n    \"@types/react\": \"^18\",\n    \"@types/react-dom\": \"^18\",\n    \"postcss\": \"^8\",\n    \"tailwindcss\": \"^3.4.17\",\n    \"typescript\": \"^5\"\n  },\n  \"engines\": {\n    \"node\": \"\u003e=18.0.0\"\n  }\n}\n\n[V0_FILE]javascript:file=\".env.example\"\n# Server Configuration\nPORT=5000\nNODE_ENV=development\nFRONTEND_URL=http://localhost:3000\n\n# MongoDB Configuration\nMONGODB_URI=mongodb://localhost:27017/task-management\n\n# JWT Configuration\nJWT_SECRET=your_jwt_secret_key\n\n# Email Configuration\nEMAIL_HOST=smtp.example.com\nEMAIL_PORT=587\nEMAIL_SECURE=false\nEMAIL_USER=user@example.com\nEMAIL_PASS=password\nEMAIL_FROM=Task Management \u003cnoreply@taskmanagement.com\u003e\n\n# File Upload Configuration\nUPLOAD_PATH=uploads\n"])</script><script>self.__next_f.push([1,"5d:T16dfe,"])</script><script>self.__next_f.push([1,"[V0_FILE]js:file=\"server.js\"\nimport express from 'express';\nimport cors from 'cors';\nimport dotenv from 'dotenv';\nimport mongoose from 'mongoose';\nimport { createServer } from 'http';\nimport { Server } from 'socket.io';\nimport cookieParser from 'cookie-parser';\nimport path from 'path';\nimport { fileURLToPath } from 'url';\n\n// Import routes\nimport authRoutes from './routes/auth.js';\nimport userRoutes from './routes/users.js';\nimport taskRoutes from './routes/tasks.js';\nimport commentRoutes from './routes/comments.js';\nimport reportRoutes from './routes/reports.js';\nimport notificationRoutes from './routes/notifications.js';\n\n// Import socket handler\nimport setupSocketHandlers from './socket/socketHandlers.js';\n\n// Import middleware\nimport { errorHandler } from './middleware/errorHandler.js';\n\n// Configure environment variables\ndotenv.config();\n\n// Create Express app\nconst app = express();\nconst PORT = process.env.PORT || 5000;\n\n// Create HTTP server\nconst httpServer = createServer(app);\n\n// Setup Socket.io\nconst io = new Server(httpServer, {\n  cors: {\n    origin: process.env.FRONTEND_URL || 'http://localhost:3000',\n    methods: ['GET', 'POST'],\n    credentials: true\n  }\n});\n\n// Connect to MongoDB\nmongoose.connect(process.env.MONGODB_URI)\n  .then(() =\u003e console.log('Connected to MongoDB'))\n  .catch(err =\u003e {\n    console.error('MongoDB connection error:', err);\n    process.exit(1);\n  });\n\n// Middleware\napp.use(cors({\n  origin: process.env.FRONTEND_URL || 'http://localhost:3000',\n  credentials: true\n}));\napp.use(express.json());\napp.use(express.urlencoded({ extended: true }));\napp.use(cookieParser());\n\n// Set up socket handlers\nsetupSocketHandlers(io);\n\n// Make io accessible to route handlers\napp.use((req, res, next) =\u003e {\n  req.io = io;\n  next();\n});\n\n// API routes\napp.use('/api/auth', authRoutes);\napp.use('/api/users', userRoutes);\napp.use('/api/tasks', taskRoutes);\napp.use('/api/comments', commentRoutes);\napp.use('/api/reports', reportRoutes);\napp.use('/api/notifications', notificationRoutes);\n\n// Serve uploaded files\nconst __dirname = path.dirname(fileURLToPath(import.meta.url));\napp.use('/uploads', express.static(path.join(__dirname, 'uploads')));\n\n// Error handling middleware\napp.use(errorHandler);\n\n// Start server\nhttpServer.listen(PORT, () =\u003e {\n  console.log(`Server running on port ${PORT}`);\n});\n\nexport default app;\n[V0_FILE]js:file=\"models/User.js\"\nimport mongoose from 'mongoose';\nimport bcrypt from 'bcrypt';\n\nconst userSchema = new mongoose.Schema({\n  name: {\n    type: String,\n    required: [true, 'Name is required'],\n    trim: true\n  },\n  email: {\n    type: String,\n    required: [true, 'Email is required'],\n    unique: true,\n    lowercase: true,\n    trim: true,\n    match: [/^\\S+@\\S+\\.\\S+$/, 'Please use a valid email address']\n  },\n  password: {\n    type: String,\n    required: [true, 'Password is required'],\n    minlength: [8, 'Password must be at least 8 characters long']\n  },\n  role: {\n    type: String,\n    enum: ['admin', 'editor', 'viewer'],\n    default: 'viewer'\n  },\n  avatar: {\n    type: String,\n    default: ''\n  },\n  bio: {\n    type: String,\n    default: ''\n  },\n  jobTitle: {\n    type: String,\n    default: ''\n  },\n  company: {\n    type: String,\n    default: ''\n  },\n  status: {\n    type: String,\n    enum: ['active', 'inactive', 'pending'],\n    default: 'active'\n  },\n  notificationPreferences: {\n    emailNotifications: {\n      type: Boolean,\n      default: true\n    },\n    pushNotifications: {\n      type: Boolean,\n      default: true\n    },\n    taskAssigned: {\n      type: Boolean,\n      default: true\n    },\n    taskUpdated: {\n      type: Boolean,\n      default: true\n    },\n    taskCompleted: {\n      type: Boolean,\n      default: true\n    },\n    commentAdded: {\n      type: Boolean,\n      default: true\n    },\n    deadlineReminder: {\n      type: Boolean,\n      default: true\n    },\n    weeklyDigest: {\n      type: Boolean,\n      default: false\n    }\n  },\n  twoFactorEnabled: {\n    type: Boolean,\n    default: false\n  },\n  resetPasswordToken: String,\n  resetPasswordExpires: Date,\n  lastActive: {\n    type: Date,\n    default: Date.now\n  },\n  createdAt: {\n    type: Date,\n    default: Date.now\n  },\n  updatedAt: {\n    type: Date,\n    default: Date.now\n  }\n}, {\n  timestamps: true\n});\n\n// Pre-save hook to hash password\nuserSchema.pre('save', async function(next) {\n  // Only hash the password if it's modified or new\n  if (!this.isModified('password')) return next();\n  \n  try {\n    // Generate salt\n    const salt = await bcrypt.genSalt(10);\n    // Hash password\n    this.password = await bcrypt.hash(this.password, salt);\n    next();\n  } catch (error) {\n    next(error);\n  }\n});\n\n// Method to compare passwords\nuserSchema.methods.comparePassword = async function(candidatePassword) {\n  return await bcrypt.compare(candidatePassword, this.password);\n};\n\n// Method to return user data without sensitive information\nuserSchema.methods.toJSON = function() {\n  const user = this.toObject();\n  delete user.password;\n  delete user.resetPasswordToken;\n  delete user.resetPasswordExpires;\n  return user;\n};\n\nconst User = mongoose.model('User', userSchema);\n\nexport default User;\n[V0_FILE]js:file=\"models/Task.js\"\nimport mongoose from 'mongoose';\n\nconst subtaskSchema = new mongoose.Schema({\n  title: {\n    type: String,\n    required: true,\n    trim: true\n  },\n  completed: {\n    type: Boolean,\n    default: false\n  },\n  createdAt: {\n    type: Date,\n    default: Date.now\n  },\n  updatedAt: {\n    type: Date,\n    default: Date.now\n  }\n}, {\n  timestamps: true\n});\n\nconst taskSchema = new mongoose.Schema({\n  title: {\n    type: String,\n    required: [true, 'Task title is required'],\n    trim: true\n  },\n  description: {\n    type: String,\n    trim: true\n  },\n  status: {\n    type: String,\n    enum: ['to-do', 'in-progress', 'in-review', 'completed'],\n    default: 'to-do'\n  },\n  priority: {\n    type: String,\n    enum: ['high', 'medium', 'low'],\n    default: 'medium'\n  },\n  dueDate: {\n    type: Date\n  },\n  assignee: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'User'\n  },\n  creator: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'User',\n    required: true\n  },\n  tags: [{\n    type: String,\n    trim: true\n  }],\n  subtasks: [subtaskSchema],\n  attachments: [{\n    name: String,\n    path: String,\n    type: String,\n    size: Number,\n    uploadedAt: {\n      type: Date,\n      default: Date.now\n    }\n  }],\n  progress: {\n    type: Number,\n    default: 0,\n    min: 0,\n    max: 100\n  },\n  watchers: [{\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'User'\n  }],\n  createdAt: {\n    type: Date,\n    default: Date.now\n  },\n  updatedAt: {\n    type: Date,\n    default: Date.now\n  }\n}, {\n  timestamps: true\n});\n\n// Method to calculate progress based on subtasks\ntaskSchema.methods.calculateProgress = function() {\n  if (this.subtasks.length === 0) return 0;\n  \n  const completedCount = this.subtasks.filter(subtask =\u003e subtask.completed).length;\n  return Math.round((completedCount / this.subtasks.length) * 100);\n};\n\n// Pre-save hook to update progress\ntaskSchema.pre('save', function(next) {\n  if (this.subtasks \u0026\u0026 this.subtasks.length \u003e 0) {\n    this.progress = this.calculateProgress();\n  }\n  next();\n});\n\n// Create indexes for better query performance\ntaskSchema.index({ status: 1 });\ntaskSchema.index({ priority: 1 });\ntaskSchema.index({ assignee: 1 });\ntaskSchema.index({ dueDate: 1 });\ntaskSchema.index({ creator: 1 });\ntaskSchema.index({ tags: 1 });\n\nconst Task = mongoose.model('Task', taskSchema);\n\nexport default Task;\n[V0_FILE]js:file=\"models/Comment.js\"\nimport mongoose from 'mongoose';\n\nconst commentSchema = new mongoose.Schema({\n  task: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'Task',\n    required: true\n  },\n  user: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'User',\n    required: true\n  },\n  content: {\n    type: String,\n    required: [true, 'Comment content is required'],\n    trim: true\n  },\n  mentions: [{\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'User'\n  }],\n  attachments: [{\n    name: String,\n    path: String,\n    type: String,\n    size: Number,\n    uploadedAt: {\n      type: Date,\n      default: Date.now\n    }\n  }],\n  createdAt: {\n    type: Date,\n    default: Date.now\n  },\n  updatedAt: {\n    type: Date,\n    default: Date.now\n  }\n}, {\n  timestamps: true\n});\n\n// Create indexes for better query performance\ncommentSchema.index({ task: 1 });\ncommentSchema.index({ user: 1 });\ncommentSchema.index({ createdAt: -1 });\n\nconst Comment = mongoose.model('Comment', commentSchema);\n\nexport default Comment;\n[V0_FILE]js:file=\"models/Notification.js\"\nimport mongoose from 'mongoose';\n\nconst notificationSchema = new mongoose.Schema({\n  recipient: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'User',\n    required: true\n  },\n  sender: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'User'\n  },\n  type: {\n    type: String,\n    enum: [\n      'task_assigned',\n      'task_updated',\n      'task_completed',\n      'comment_added',\n      'deadline_reminder',\n      'mention',\n      'system'\n    ],\n    required: true\n  },\n  title: {\n    type: String,\n    required: true\n  },\n  message: {\n    type: String,\n    required: true\n  },\n  read: {\n    type: Boolean,\n    default: false\n  },\n  relatedTask: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'Task'\n  },\n  relatedComment: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'Comment'\n  },\n  createdAt: {\n    type: Date,\n    default: Date.now\n  }\n}, {\n  timestamps: true\n});\n\n// Create indexes for better query performance\nnotificationSchema.index({ recipient: 1, read: 1 });\nnotificationSchema.index({ createdAt: -1 });\n\nconst Notification = mongoose.model('Notification', notificationSchema);\n\nexport default Notification;\n[V0_FILE]js:file=\"middleware/auth.js\"\nimport jwt from 'jsonwebtoken';\nimport User from '../models/User.js';\nimport { createError } from '../utils/error.js';\n\n// Verify JWT token\nexport const verifyToken = async (req, res, next) =\u003e {\n  try {\n    // Get token from cookies or authorization header\n    const token = req.cookies.token || \n                 (req.headers.authorization \u0026\u0026 req.headers.authorization.startsWith('Bearer') \n                  ? req.headers.authorization.split(' ')[1] : null);\n    \n    if (!token) {\n      return next(createError(401, 'You are not authenticated'));\n    }\n    \n    // Verify token\n    const decoded = jwt.verify(token, process.env.JWT_SECRET);\n    \n    // Find user\n    const user = await User.findById(decoded.id);\n    if (!user) {\n      return next(createError(404, 'User not found'));\n    }\n    \n    // Check if user is active\n    if (user.status !== 'active') {\n      return next(createError(403, 'Your account is not active'));\n    }\n    \n    // Update last active timestamp\n    user.lastActive = new Date();\n    await user.save();\n    \n    // Attach user to request\n    req.user = user;\n    next();\n  } catch (err) {\n    if (err.name === 'JsonWebTokenError') {\n      return next(createError(401, 'Invalid token'));\n    }\n    if (err.name === 'TokenExpiredError') {\n      return next(createError(401, 'Token expired'));\n    }\n    next(err);\n  }\n};\n\n// Check if user is admin\nexport const verifyAdmin = (req, res, next) =\u003e {\n  if (req.user.role !== 'admin') {\n    return next(createError(403, 'You are not authorized to perform this action'));\n  }\n  next();\n};\n\n// Check if user is admin or editor\nexport const verifyAdminOrEditor = (req, res, next) =\u003e {\n  if (req.user.role !== 'admin' \u0026\u0026 req.user.role !== 'editor') {\n    return next(createError(403, 'You are not authorized to perform this action'));\n  }\n  next();\n};\n\n// Check if user is the owner of the resource or an admin\nexport const verifyOwnerOrAdmin = (resourceModel) =\u003e {\n  return async (req, res, next) =\u003e {\n    try {\n      const resourceId = req.params.id;\n      const resource = await resourceModel.findById(resourceId);\n      \n      if (!resource) {\n        return next(createError(404, 'Resource not found'));\n      }\n      \n      // Check if user is admin or the owner\n      const isOwner = resource.creator \u0026\u0026 resource.creator.toString() === req.user._id.toString();\n      const isAssignee = resource.assignee \u0026\u0026 resource.assignee.toString() === req.user._id.toString();\n      \n      if (req.user.role === 'admin' || isOwner || isAssignee) {\n        req.resource = resource;\n        return next();\n      }\n      \n      return next(createError(403, 'You are not authorized to perform this action'));\n    } catch (err) {\n      next(err);\n    }\n  };\n};\n[V0_FILE]js:file=\"middleware/errorHandler.js\"\n// Error handling middleware\nexport const errorHandler = (err, req, res, next) =\u003e {\n  const statusCode = err.statusCode || 500;\n  const message = err.message || 'Internal Server Error';\n  \n  console.error(`[ERROR] ${statusCode} - ${message}`);\n  if (process.env.NODE_ENV === 'development') {\n    console.error(err.stack);\n  }\n  \n  res.status(statusCode).json({\n    success: false,\n    status: statusCode,\n    message,\n    stack: process.env.NODE_ENV === 'development' ? err.stack : {}\n  });\n};\n[V0_FILE]js:file=\"middleware/upload.js\"\nimport multer from 'multer';\nimport path from 'path';\nimport fs from 'fs';\nimport { fileURLToPath } from 'url';\nimport { createError } from '../utils/error.js';\n\n// Get directory name\nconst __dirname = path.dirname(fileURLToPath(import.meta.url));\n\n// Create uploads directory if it doesn't exist\nconst uploadsDir = path.join(__dirname, '../uploads');\nif (!fs.existsSync(uploadsDir)) {\n  fs.mkdirSync(uploadsDir, { recursive: true });\n}\n\n// Configure storage\nconst storage = multer.diskStorage({\n  destination: (req, file, cb) =\u003e {\n    // Create subdirectory based on file type\n    let dir = 'general';\n    \n    if (file.mimetype.startsWith('image/')) {\n      dir = 'images';\n    } else if (file.mimetype.includes('pdf') || file.mimetype.includes('document')) {\n      dir = 'documents';\n    }\n    \n    const fullPath = path.join(uploadsDir, dir);\n    \n    // Create directory if it doesn't exist\n    if (!fs.existsSync(fullPath)) {\n      fs.mkdirSync(fullPath, { recursive: true });\n    }\n    \n    cb(null, path.join('uploads', dir));\n  },\n  filename: (req, file, cb) =\u003e {\n    // Generate unique filename\n    const uniqueSuffix = Date.now() + '-' + Math.round(Math.random() * 1E9);\n    const ext = path.extname(file.originalname);\n    cb(null, file.fieldname + '-' + uniqueSuffix + ext);\n  }\n});\n\n// File filter\nconst fileFilter = (req, file, cb) =\u003e {\n  // Accept images, documents, and common file types\n  const allowedFileTypes = /jpeg|jpg|png|gif|pdf|doc|docx|xls|xlsx|ppt|pptx|txt|csv|zip|rar/;\n  const extname = allowedFileTypes.test(path.extname(file.originalname).toLowerCase());\n  const mimetype = allowedFileTypes.test(file.mimetype);\n  \n  if (extname \u0026\u0026 mimetype) {\n    return cb(null, true);\n  } else {\n    cb(createError(400, 'Only certain file types are allowed'));\n  }\n};\n\n// Configure multer\nconst upload = multer({\n  storage,\n  fileFilter,\n  limits: {\n    fileSize: 10 * 1024 * 1024 // 10MB\n  }\n});\n\nexport default upload;\n[V0_FILE]js:file=\"routes/auth.js\"\nimport express from 'express';\nimport jwt from 'jsonwebtoken';\nimport User from '../models/User.js';\nimport { verifyToken } from '../middleware/auth.js';\nimport { createError } from '../utils/error.js';\nimport { sendEmail } from '../utils/email.js';\nimport crypto from 'crypto';\n\nconst router = express.Router();\n\n// Register a new user\nrouter.post('/register', async (req, res, next) =\u003e {\n  try {\n    const { name, email, password } = req.body;\n    \n    // Check if user already exists\n    const existingUser = await User.findOne({ email });\n    if (existingUser) {\n      return next(createError(400, 'User with this email already exists'));\n    }\n    \n    // Create new user\n    const newUser = new User({\n      name,\n      email,\n      password\n    });\n    \n    // Save user to database\n    const savedUser = await newUser.save();\n    \n    // Generate JWT token\n    const token = jwt.sign(\n      { id: savedUser._id, role: savedUser.role },\n      process.env.JWT_SECRET,\n      { expiresIn: '7d' }\n    );\n    \n    // Set token as cookie\n    res.cookie('token', token, {\n      httpOnly: true,\n      secure: process.env.NODE_ENV === 'production',\n      maxAge: 7 * 24 * 60 * 60 * 1000 // 7 days\n    });\n    \n    // Send welcome email\n    sendEmail({\n      to: savedUser.email,\n      subject: 'Welcome to Task Management App',\n      text: `Hello ${savedUser.name},\\n\\nWelcome to our Task Management App! Your account has been created successfully.\\n\\nBest regards,\\nThe Task Management Team`\n    });\n    \n    res.status(201).json({\n      success: true,\n      message: 'User registered successfully',\n      user: savedUser\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Login user\nrouter.post('/login', async (req, res, next) =\u003e {\n  try {\n    const { email, password } = req.body;\n    \n    // Find user by email\n    const user = await User.findOne({ email });\n    if (!user) {\n      return next(createError(404, 'User not found'));\n    }\n    \n    // Check if user is active\n    if (user.status !== 'active') {\n      return next(createError(403, 'Your account is not active'));\n    }\n    \n    // Check password\n    const isPasswordValid = await user.comparePassword(password);\n    if (!isPasswordValid) {\n      return next(createError(401, 'Invalid credentials'));\n    }\n    \n    // Generate JWT token\n    const token = jwt.sign(\n      { id: user._id, role: user.role },\n      process.env.JWT_SECRET,\n      { expiresIn: '7d' }\n    );\n    \n    // Set token as cookie\n    res.cookie('token', token, {\n      httpOnly: true,\n      secure: process.env.NODE_ENV === 'production',\n      maxAge: 7 * 24 * 60 * 60 * 1000 // 7 days\n    });\n    \n    // Update last active timestamp\n    user.lastActive = new Date();\n    await user.save();\n    \n    res.status(200).json({\n      success: true,\n      message: 'Login successful',\n      user\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Logout user\nrouter.post('/logout', (req, res) =\u003e {\n  res.clearCookie('token');\n  res.status(200).json({\n    success: true,\n    message: 'Logout successful'\n  });\n});\n\n// Get current user\nrouter.get('/me', verifyToken, (req, res) =\u003e {\n  res.status(200).json({\n    success: true,\n    user: req.user\n  });\n});\n\n// Forgot password\nrouter.post('/forgot-password', async (req, res, next) =\u003e {\n  try {\n    const { email } = req.body;\n    \n    // Find user by email\n    const user = await User.findOne({ email });\n    if (!user) {\n      return next(createError(404, 'User not found'));\n    }\n    \n    // Generate reset token\n    const resetToken = crypto.randomBytes(32).toString('hex');\n    \n    // Hash token and set to resetPasswordToken field\n    user.resetPasswordToken = crypto\n      .createHash('sha256')\n      .update(resetToken)\n      .digest('hex');\n    \n    // Set token expiry\n    user.resetPasswordExpires = Date.now() + 30 * 60 * 1000; // 30 minutes\n    \n    // Save user\n    await user.save();\n    \n    // Create reset URL\n    const resetUrl = `${process.env.FRONTEND_URL}/reset-password/${resetToken}`;\n    \n    // Send email\n    sendEmail({\n      to: user.email,\n      subject: 'Password Reset Request',\n      text: `You are receiving this email because you (or someone else) has requested the reset of a password. Please click on the following link, or paste this into your browser to complete the process:\\n\\n${resetUrl}\\n\\nIf you did not request this, please ignore this email and your password will remain unchanged.\\n`\n    });\n    \n    res.status(200).json({\n      success: true,\n      message: 'Password reset email sent'\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Reset password\nrouter.post('/reset-password/:token', async (req, res, next) =\u003e {\n  try {\n    const { password } = req.body;\n    \n    // Get token from params\n    const resetToken = req.params.token;\n    \n    // Hash token\n    const hashedToken = crypto\n      .createHash('sha256')\n      .update(resetToken)\n      .digest('hex');\n    \n    // Find user by token and check if token is expired\n    const user = await User.findOne({\n      resetPasswordToken: hashedToken,\n      resetPasswordExpires: { $gt: Date.now() }\n    });\n    \n    if (!user) {\n      return next(createError(400, 'Password reset token is invalid or has expired'));\n    }\n    \n    // Set new password\n    user.password = password;\n    user.resetPasswordToken = undefined;\n    user.resetPasswordExpires = undefined;\n    \n    // Save user\n    await user.save();\n    \n    // Send confirmation email\n    sendEmail({\n      to: user.email,\n      subject: 'Password Reset Confirmation',\n      text: `Hello ${user.name},\\n\\nThis is a confirmation that the password for your account ${user.email} has just been changed.\\n`\n    });\n    \n    res.status(200).json({\n      success: true,\n      message: 'Password reset successful'\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// OAuth login with Google\nrouter.post('/google', async (req, res, next) =\u003e {\n  try {\n    const { token, profile } = req.body;\n    \n    // Verify token with Google (in a real app)\n    // For demo purposes, we'll assume the token is valid\n    \n    // Check if user exists\n    let user = await User.findOne({ email: profile.email });\n    \n    if (!user) {\n      // Create new user\n      user = new User({\n        name: profile.name,\n        email: profile.email,\n        password: crypto.randomBytes(16).toString('hex'), // Random password\n        avatar: profile.picture\n      });\n      \n      await user.save();\n    }\n    \n    // Generate JWT token\n    const jwtToken = jwt.sign(\n      { id: user._id, role: user.role },\n      process.env.JWT_SECRET,\n      { expiresIn: '7d' }\n    );\n    \n    // Set token as cookie\n    res.cookie('token', jwtToken, {\n      httpOnly: true,\n      secure: process.env.NODE_ENV === 'production',\n      maxAge: 7 * 24 * 60 * 60 * 1000 // 7 days\n    });\n    \n    // Update last active timestamp\n    user.lastActive = new Date();\n    await user.save();\n    \n    res.status(200).json({\n      success: true,\n      message: 'Login successful',\n      user\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// OAuth login with GitHub\nrouter.post('/github', async (req, res, next) =\u003e {\n  try {\n    const { token, profile } = req.body;\n    \n    // Verify token with GitHub (in a real app)\n    // For demo purposes, we'll assume the token is valid\n    \n    // Check if user exists\n    let user = await User.findOne({ email: profile.email });\n    \n    if (!user) {\n      // Create new user\n      user = new User({\n        name: profile.name,\n        email: profile.email,\n        password: crypto.randomBytes(16).toString('hex'), // Random password\n        avatar: profile.avatar_url\n      });\n      \n      await user.save();\n    }\n    \n    // Generate JWT token\n    const jwtToken = jwt.sign(\n      { id: user._id, role: user.role },\n      process.env.JWT_SECRET,\n      { expiresIn: '7d' }\n    );\n    \n    // Set token as cookie\n    res.cookie('token', jwtToken, {\n      httpOnly: true,\n      secure: process.env.NODE_ENV === 'production',\n      maxAge: 7 * 24 * 60 * 60 * 1000 // 7 days\n    });\n    \n    // Update last active timestamp\n    user.lastActive = new Date();\n    await user.save();\n    \n    res.status(200).json({\n      success: true,\n      message: 'Login successful',\n      user\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\nexport default router;\n[V0_FILE]js:file=\"routes/users.js\"\nimport express from 'express';\nimport User from '../models/User.js';\nimport Task from '../models/Task.js';\nimport { verifyToken, verifyAdmin } from '../middleware/auth.js';\nimport { createError } from '../utils/error.js';\nimport upload from '../middleware/upload.js';\n\nconst router = express.Router();\n\n// Get all users (admin only)\nrouter.get('/', verifyToken, verifyAdmin, async (req, res, next) =\u003e {\n  try {\n    const { role, status, search, sort, page = 1, limit = 10 } = req.query;\n    \n    // Build query\n    const query = {};\n    \n    // Filter by role\n    if (role \u0026\u0026 role !== 'all') {\n      query.role = role;\n    }\n    \n    // Filter by status\n    if (status \u0026\u0026 status !== 'all') {\n      query.status = status;\n    }\n    \n    // Search by name or email\n    if (search) {\n      query.$or = [\n        { name: { $regex: search, $options: 'i' } },\n        { email: { $regex: search, $options: 'i' } }\n      ];\n    }\n    \n    // Count total documents\n    const total = await User.countDocuments(query);\n    \n    // Build sort options\n    let sortOptions = { createdAt: -1 }; // Default sort\n    if (sort) {\n      const [field, order] = sort.split(':');\n      sortOptions = { [field]: order === 'asc' ? 1 : -1 };\n    }\n    \n    // Fetch users with pagination\n    const users = await User.find(query)\n      .sort(sortOptions)\n      .skip((page - 1) * limit)\n      .limit(parseInt(limit));\n    \n    res.status(200).json({\n      success: true,\n      count: users.length,\n      total,\n      totalPages: Math.ceil(total / limit),\n      currentPage: parseInt(page),\n      users\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Get user by ID\nrouter.get('/:id', verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Check if user is admin or requesting their own profile\n    if (req.user.role !== 'admin' \u0026\u0026 req.user._id.toString() !== req.params.id) {\n      return next(createError(403, 'You are not authorized to access this resource'));\n    }\n    \n    const user = await User.findById(req.params.id);\n    if (!user) {\n      return next(createError(404, 'User not found'));\n    }\n    \n    res.status(200).json({\n      success: true,\n      user\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Update user\nrouter.put('/:id', verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Check if user is admin or updating their own profile\n    if (req.user.role !== 'admin' \u0026\u0026 req.user._id.toString() !== req.params.id) {\n      return next(createError(403, 'You are not authorized to update this user'));\n    }\n    \n    const { name, email, bio, jobTitle, company, notificationPreferences } = req.body;\n    \n    // Find user\n    const user = await User.findById(req.params.id);\n    if (!user) {\n      return next(createError(404, 'User not found'));\n    }\n    \n    // Update fields\n    if (name) user.name = name;\n    if (bio) user.bio = bio;\n    if (jobTitle) user.jobTitle = jobTitle;\n    if (company) user.company = company;\n    if (notificationPreferences) user.notificationPreferences = {\n      ...user.notificationPreferences,\n      ...notificationPreferences\n    };\n    \n    // Only admin can update email or role\n    if (req.user.role === 'admin') {\n      if (email \u0026\u0026 email !== user.email) {\n        // Check if email is already in use\n        const existingUser = await User.findOne({ email });\n        if (existingUser) {\n          return next(createError(400, 'Email is already in use'));\n        }\n        user.email = email;\n      }\n      \n      if (req.body.role) user.role = req.body.role;\n      if (req.body.status) user.status = req.body.status;\n    }\n    \n    // Save user\n    const updatedUser = await user.save();\n    \n    res.status(200).json({\n      success: true,\n      message: 'User updated successfully',\n      user: updatedUser\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Update user avatar\nrouter.put('/:id/avatar', verifyToken, upload.single('avatar'), async (req, res, next) =\u003e {\n  try {\n    // Check if user is updating their own avatar\n    if (req.user._id.toString() !== req.params.id) {\n      return next(createError(403, 'You are not authorized to update this user'));\n    }\n    \n    if (!req.file) {\n      return next(createError(400, 'No file uploaded'));\n    }\n    \n    // Find user\n    const user = await User.findById(req.params.id);\n    if (!user) {\n      return next(createError(404, 'User not found'));\n    }\n    \n    // Update avatar\n    user.avatar = `/${req.file.path}`;\n    \n    // Save user\n    const updatedUser = await user.save();\n    \n    res.status(200).json({\n      success: true,\n      message: 'Avatar updated successfully',\n      user: updatedUser\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Change password\nrouter.put('/:id/password', verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Check if user is changing their own password\n    if (req.user._id.toString() !== req.params.id) {\n      return next(createError(403, 'You are not authorized to change this user\\'s password'));\n    }\n    \n    const { currentPassword, newPassword } = req.body;\n    \n    // Find user\n    const user = await User.findById(req.params.id);\n    if (!user) {\n      return next(createError(404, 'User not found'));\n    }\n    \n    // Check current password\n    const isPasswordValid = await user.comparePassword(currentPassword);\n    if (!isPasswordValid) {\n      return next(createError(401, 'Current password is incorrect'));\n    }\n    \n    // Update password\n    user.password = newPassword;\n    \n    // Save user\n    await user.save();\n    \n    res.status(200).json({\n      success: true,\n      message: 'Password changed successfully'\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Toggle two-factor authentication\nrouter.put('/:id/two-factor', verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Check if user is updating their own settings\n    if (req.user._id.toString() !== req.params.id) {\n      return next(createError(403, 'You are not authorized to update this user'));\n    }\n    \n    // Find user\n    const user = await User.findById(req.params.id);\n    if (!user) {\n      return next(createError(404, 'User not found'));\n    }\n    \n    // Toggle two-factor authentication\n    user.twoFactorEnabled = !user.twoFactorEnabled;\n    \n    // Save user\n    const updatedUser = await user.save();\n    \n    res.status(200).json({\n      success: true,\n      message: `Two-factor authentication ${updatedUser.twoFactorEnabled ? 'enabled' : 'disabled'}`,\n      user: updatedUser\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Delete user (admin only)\nrouter.delete('/:id', verifyToken, verifyAdmin, async (req, res, next) =\u003e {\n  try {\n    // Find user\n    const user = await User.findById(req.params.id);\n    if (!user) {\n      return next(createError(404, 'User not found'));\n    }\n    \n    // Check if user is trying to delete themselves\n    if (req.user._id.toString() === req.params.id) {\n      return next(createError(400, 'You cannot delete your own account'));\n    }\n    \n    // Delete user\n    await User.findByIdAndDelete(req.params.id);\n    \n    // Update tasks assigned to this user\n    await Task.updateMany(\n      { assignee: req.params.id },\n      { $unset: { assignee: 1 } }\n    );\n    \n    res.status(200).json({\n      success: true,\n      message: 'User deleted successfully'\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Get user tasks\nrouter.get('/:id/tasks', verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Check if user is admin or requesting their own tasks\n    if (req.user.role !== 'admin' \u0026\u0026 req.user._id.toString() !== req.params.id) {\n      return next(createError(403, 'You are not authorized to access this resource'));\n    }\n    \n    const { status, priority, sort, page = 1, limit = 10 } = req.query;\n    \n    // Build query\n    const query = { assignee: req.params.id };\n    \n    // Filter by status\n    if (status \u0026\u0026 status !== 'all') {\n      query.status = status;\n    }\n    \n    // Filter by priority\n    if (priority \u0026\u0026 priority !== 'all') {\n      query.priority = priority;\n    }\n    \n    // Count total documents\n    const total = await Task.countDocuments(query);\n    \n    // Build sort options\n    let sortOptions = { createdAt: -1 }; // Default sort\n    if (sort) {\n      const [field, order] = sort.split(':');\n      sortOptions = { [field]: order === 'asc' ? 1 : -1 };\n    }\n    \n    // Fetch tasks with pagination\n    const tasks = await Task.find(query)\n      .populate('assignee', 'name email avatar')\n      .populate('creator', 'name email avatar')\n      .sort(sortOptions)\n      .skip((page - 1) * limit)\n      .limit(parseInt(limit));\n    \n    res.status(200).json({\n      success: true,\n      count: tasks.length,\n      total,\n      totalPages: Math.ceil(total / limit),\n      currentPage: parseInt(page),\n      tasks\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\nexport default router;\n[V0_FILE]js:file=\"routes/tasks.js\"\nimport express from 'express';\nimport Task from '../models/Task.js';\nimport User from '../models/User.js';\nimport Comment from '../models/Comment.js';\nimport Notification from '../models/Notification.js';\nimport { verifyToken, verifyAdminOrEditor, verifyOwnerOrAdmin } from '../middleware/auth.js';\nimport { createError } from '../utils/error.js';\nimport upload from '../middleware/upload.js';\nimport { sendEmail } from '../utils/email.js';\n\nconst router = express.Router();\n\n// Create a new task\nrouter.post('/', verifyToken, verifyAdminOrEditor, async (req, res, next) =\u003e {\n  try {\n    const { title, description, status, priority, dueDate, assignee, tags, subtasks } = req.body;\n    \n    // Create new task\n    const newTask = new Task({\n      title,\n      description,\n      status: status || 'to-do',\n      priority: priority || 'medium',\n      dueDate,\n      assignee,\n      creator: req.user._id,\n      tags: tags || [],\n      subtasks: subtasks || []\n    });\n    \n    // Save task\n    const savedTask = await newTask.save();\n    \n    // If task is assigned to someone, send notification\n    if (assignee) {\n      // Create notification\n      const notification = new Notification({\n        recipient: assignee,\n        sender: req.user._id,\n        type: 'task_assigned',\n        title: 'New Task Assigned',\n        message: `You have been assigned a new task: ${title}`,\n        relatedTask: savedTask._id\n      });\n      \n      await notification.save();\n      \n      // Send real-time notification\n      if (req.io) {\n        req.io.to(assignee.toString()).emit('notification', notification);\n      }\n      \n      // Get assignee details\n      const assigneeUser = await User.findById(assignee);\n      \n      // Send email notification if user has email notifications enabled\n      if (assigneeUser \u0026\u0026 assigneeUser.notificationPreferences.emailNotifications \u0026\u0026 \n          assigneeUser.notificationPreferences.taskAssigned) {\n        sendEmail({\n          to: assigneeUser.email,\n          subject: 'New Task Assigned',\n          text: `Hello ${assigneeUser.name},\\n\\nYou have been assigned a new task: ${title}\\n\\nDue Date: ${dueDate ? new Date(dueDate).toLocaleDateString() : 'Not set'}\\nPriority: ${priority || 'Medium'}\\n\\nDescription:\\n${description || 'No description provided'}\\n\\nBest regards,\\nThe Task Management Team`\n        });\n      }\n    }\n    \n    res.status(201).json({\n      success: true,\n      message: 'Task created successfully',\n      task: savedTask\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Get all tasks\nrouter.get('/', verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { status, priority, assignee, creator, search, tags, dueDate, sort, page = 1, limit = 10 } = req.query;\n    \n    // Build query\n    const query = {};\n    \n    // Filter by status\n    if (status \u0026\u0026 status !== 'all') {\n      query.status = status;\n    }\n    \n    // Filter by priority\n    if (priority \u0026\u0026 priority !== 'all') {\n      query.priority = priority;\n    }\n    \n    // Filter by assignee\n    if (assignee) {\n      query.assignee = assignee;\n    }\n    \n    // Filter by creator\n    if (creator) {\n      query.creator = creator;\n    }\n    \n    // Filter by tags\n    if (tags) {\n      query.tags = { $in: tags.split(',') };\n    }\n    \n    // Filter by due date\n    if (dueDate) {\n      const today = new Date();\n      today.setHours(0, 0, 0, 0);\n      \n      if (dueDate === 'overdue') {\n        query.dueDate = { $lt: today };\n        query.status = { $ne: 'completed' };\n      } else if (dueDate === 'today') {\n        const tomorrow = new Date(today);\n        tomorrow.setDate(tomorrow.getDate() + 1);\n        query.dueDate = { $gte: today, $lt: tomorrow };\n      } else if (dueDate === 'week') {\n        const nextWeek = new Date(today);\n        nextWeek.setDate(nextWeek.getDate() + 7);\n        query.dueDate = { $gte: today, $lt: nextWeek };\n      }\n    }\n    \n    // Search by title or description\n    if (search) {\n      query.$or = [\n        { title: { $regex: search, $options: 'i' } },\n        { description: { $regex: search, $options: 'i' } }\n      ];\n    }\n    \n    // Viewers can only see tasks assigned to them or created by them\n    if (req.user.role === 'viewer') {\n      query.$or = [\n        { assignee: req.user._id },\n        { creator: req.user._id },\n        { watchers: req.user._id }\n      ];\n    }\n    \n    // Count total documents\n    const total = await Task.countDocuments(query);\n    \n    // Build sort options\n    let sortOptions = { createdAt: -1 }; // Default sort\n    if (sort) {\n      const [field, order] = sort.split(':');\n      sortOptions = { [field]: order === 'asc' ? 1 : -1 };\n    }\n    \n    // Fetch tasks with pagination\n    const tasks = await Task.find(query)\n      .populate('assignee', 'name email avatar')\n      .populate('creator', 'name email avatar')\n      .sort(sortOptions)\n      .skip((page - 1) * limit)\n      .limit(parseInt(limit));\n    \n    res.status(200).json({\n      success: true,\n      count: tasks.length,\n      total,\n      totalPages: Math.ceil(total / limit),\n      currentPage: parseInt(page),\n      tasks\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Get task by ID\nrouter.get('/:id', verifyToken, async (req, res, next) =\u003e {\n  try {\n    const task = await Task.findById(req.params.id)\n      .populate('assignee', 'name email avatar')\n      .populate('creator', 'name email avatar')\n      .populate('watchers', 'name email avatar');\n    \n    if (!task) {\n      return next(createError(404, 'Task not found'));\n    }\n    \n    // Check if user has access to this task\n    if (req.user.role === 'viewer' \u0026\u0026 \n        task.assignee?._id.toString() !== req.user._id.toString() \u0026\u0026 \n        task.creator._id.toString() !== req.user._id.toString() \u0026\u0026\n        !task.watchers.some(watcher =\u003e watcher._id.toString() === req.user._id.toString())) {\n      return next(createError(403, 'You are not authorized to access this task'));\n    }\n    \n    res.status(200).json({\n      success: true,\n      task\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Update task\nrouter.put('/:id', verifyToken, verifyOwnerOrAdmin(Task), async (req, res, next) =\u003e {\n  try {\n    const { title, description, status, priority, dueDate, assignee, tags, subtasks, progress } = req.body;\n    \n    const task = req.resource; // From verifyOwnerOrAdmin middleware\n    \n    // Store old assignee for notification\n    const oldAssignee = task.assignee;\n    \n    // Update fields\n    if (title) task.title = title;\n    if (description !== undefined) task.description = description;\n    if (status) task.status = status;\n    if (priority) task.priority = priority;\n    if (dueDate !== undefined) task.dueDate = dueDate;\n    if (assignee !== undefined) task.assignee = assignee;\n    if (tags) task.tags = tags;\n    if (subtasks) task.subtasks = subtasks;\n    if (progress !== undefined) task.progress = progress;\n    \n    // Save task\n    const updatedTask = await task.save();\n    \n    // If assignee has changed, send notification to new assignee\n    if (assignee \u0026\u0026 (!oldAssignee || oldAssignee.toString() !== assignee.toString())) {\n      // Create notification\n      const notification = new Notification({\n        recipient: assignee,\n        sender: req.user._id,\n        type: 'task_assigned',\n        title: 'Task Assigned',\n        message: `You have been assigned to the task: ${task.title}`,\n        relatedTask: task._id\n      });\n      \n      await notification.save();\n      \n      // Send real-time notification\n      if (req.io) {\n        req.io.to(assignee.toString()).emit('notification', notification);\n      }\n      \n      // Get assignee details\n      const assigneeUser = await User.findById(assignee);\n      \n      // Send email notification if user has email notifications enabled\n      if (assigneeUser \u0026\u0026 assigneeUser.notificationPreferences.emailNotifications \u0026\u0026 \n          assigneeUser.notificationPreferences.taskAssigned) {\n        sendEmail({\n          to: assigneeUser.email,\n          subject: 'Task Assigned',\n          text: `Hello ${assigneeUser.name},\\n\\nYou have been assigned to the task: ${task.title}\\n\\nDue Date: ${task.dueDate ? new Date(task.dueDate).toLocaleDateString() : 'Not set'}\\nPriority: ${task.priority}\\n\\nDescription:\\n${task.description || 'No description provided'}\\n\\nBest regards,\\nThe Task Management Team`\n        });\n      }\n    }\n    \n    // If status has changed to completed, send notification to creator\n    if (status === 'completed' \u0026\u0026 task.status !== 'completed') {\n      // Create notification for creator\n      const notification = new Notification({\n        recipient: task.creator,\n        sender: req.user._id,\n        type: 'task_completed',\n        title: 'Task Completed',\n        message: `The task \"${task.title}\" has been marked as completed`,\n        relatedTask: task._id\n      });\n      \n      await notification.save();\n      \n      // Send real-time notification\n      if (req.io) {\n        req.io.to(task.creator.toString()).emit('notification', notification);\n      }\n      \n      // Get creator details\n      const creatorUser = await User.findById(task.creator);\n      \n      // Send email notification if user has email notifications enabled\n      if (creatorUser \u0026\u0026 creatorUser.notificationPreferences.emailNotifications \u0026\u0026 \n          creatorUser.notificationPreferences.taskCompleted) {\n        sendEmail({\n          to: creatorUser.email,\n          subject: 'Task Completed',\n          text: `Hello ${creatorUser.name},\\n\\nThe task \"${task.title}\" has been marked as completed.\\n\\nBest regards,\\nThe Task Management Team`\n        });\n      }\n    }\n    \n    // If task has been updated, notify assignee\n    if (task.assignee \u0026\u0026 task.assignee.toString() !== req.user._id.toString()) {\n      // Create notification\n      const notification = new Notification({\n        recipient: task.assignee,\n        sender: req.user._id,\n        type: 'task_updated',\n        title: 'Task Updated',\n        message: `The task \"${task.title}\" has been updated`,\n        relatedTask: task._id\n      });\n      \n      await notification.save();\n      \n      // Send real-time notification\n      if (req.io) {\n        req.io.to(task.assignee.toString()).emit('notification', notification);\n      }\n      \n      // Get assignee details\n      const assigneeUser = await User.findById(task.assignee);\n      \n      // Send email notification if user has email notifications enabled\n      if (assigneeUser \u0026\u0026 assigneeUser.notificationPreferences.emailNotifications \u0026\u0026 \n          assigneeUser.notificationPreferences.taskUpdated) {\n        sendEmail({\n          to: assigneeUser.email,\n          subject: 'Task Updated',\n          text: `Hello ${assigneeUser.name},\\n\\nThe task \"${task.title}\" has been updated.\\n\\nBest regards,\\nThe Task Management Team`\n        });\n      }\n    }\n    \n    res.status(200).json({\n      success: true,\n      message: 'Task updated successfully',\n      task: updatedTask\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Delete task\nrouter.delete('/:id', verifyToken, verifyOwnerOrAdmin(Task), async (req, res, next) =\u003e {\n  try {\n    const task = req.resource; // From verifyOwnerOrAdmin middleware\n    \n    // Delete task\n    await Task.findByIdAndDelete(req.params.id);\n    \n    // Delete associated comments\n    await Comment.deleteMany({ task: req.params.id });\n    \n    // Delete associated notifications\n    await Notification.deleteMany({ relatedTask: req.params.id });\n    \n    res.status(200).json({\n      success: true,\n      message: 'Task deleted successfully'\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Add attachment to task\nrouter.post('/:id/attachments', verifyToken, verifyOwnerOrAdmin(Task), upload.single('file'), async (req, res, next) =\u003e {\n  try {\n    if (!req.file) {\n      return next(createError(400, 'No file uploaded'));\n    }\n    \n    const task = req.resource; // From verifyOwnerOrAdmin middleware\n    \n    // Add attachment\n    task.attachments.push({\n      name: req.file.originalname,\n      path: `/${req.file.path}`,\n      type: req.file.mimetype,\n      size: req.file.size\n    });\n    \n    // Save task\n    const updatedTask = await task.save();\n    \n    res.status(200).json({\n      success: true,\n      message: 'Attachment added successfully',\n      task: updatedTask\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Delete attachment from task\nrouter.delete('/:id/attachments/:attachmentId', verifyToken, verifyOwnerOrAdmin(Task), async (req, res, next) =\u003e {\n  try {\n    const task = req.resource; // From verifyOwnerOrAdmin middleware\n    \n    // Remove attachment\n    task.attachments = task.attachments.filter(\n      attachment =\u003e attachment._id.toString() !== req.params.attachmentId\n    );\n    \n    // Save task\n    const updatedTask = await task.save();\n    \n    res.status(200).json({\n      success: true,\n      message: 'Attachment deleted successfully',\n      task: updatedTask\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Add watcher to task\nrouter.post('/:id/watchers', verifyToken, async (req, res, next) =\u003e {\n  try {\n    const task = await Task.findById(req.params.id);\n    if (!task) {\n      return next(createError(404, 'Task not found'));\n    }\n    \n    // Add user to watchers if not already watching\n    if (!task.watchers.includes(req.user._id)) {\n      task.watchers.push(req.user._id);\n      await task.save();\n    }\n    \n    res.status(200).json({\n      success: true,\n      message: 'You are now watching this task',\n      task\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Remove watcher from task\nrouter.delete('/:id/watchers', verifyToken, async (req, res, next) =\u003e {\n  try {\n    const task = await Task.findById(req.params.id);\n    if (!task) {\n      return next(createError(404, 'Task not found'));\n    }\n    \n    // Remove user from watchers\n    task.watchers = task.watchers.filter(\n      watcher =\u003e watcher.toString() !== req.user._id.toString()\n    );\n    \n    await task.save();\n    \n    res.status(200).json({\n      success: true,\n      message: 'You are no longer watching this task',\n      task\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\nexport default router;\n[V0_FILE]js:file=\"routes/comments.js\"\nimport express from 'express';\nimport Comment from '../models/Comment.js';\nimport Task from '../models/Task.js';\nimport User from '../models/User.js';\nimport Notification from '../models/Notification.js';\nimport { verifyToken } from '../middleware/auth.js';\nimport { createError } from '../utils/error.js';\nimport upload from '../middleware/upload.js';\nimport { sendEmail } from '../utils/email.js';\n\nconst router = express.Router();\n\n// Create a new comment\nrouter.post('/', verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { taskId, content, mentions } = req.body;\n    \n    // Check if task exists\n    const task = await Task.findById(taskId);\n    if (!task) {\n      return next(createError(404, 'Task not found'));\n    }\n    \n    // Create new comment\n    const newComment = new Comment({\n      task: taskId,\n      user: req.user._id,\n      content,\n      mentions: mentions || []\n    });\n    \n    // Save comment\n    const savedComment = await newComment.save();\n    \n    // Populate user data\n    await savedComment.populate('user', 'name email avatar');\n    \n    // Notify task assignee and creator about the comment\n    const notifyUsers = new Set();\n    \n    // Add task assignee if exists and is not the commenter\n    if (task.assignee \u0026\u0026 task.assignee.toString() !== req.user._id.toString()) {\n      notifyUsers.add(task.assignee.toString());\n    }\n    \n    // Add task creator if not the commenter\n    if (task.creator.toString() !== req.user._id.toString()) {\n      notifyUsers.add(task.creator.toString());\n    }\n    \n    // Add watchers if not the commenter\n    task.watchers.forEach(watcher =\u003e {\n      if (watcher.toString() !== req.user._id.toString()) {\n        notifyUsers.add(watcher.toString());\n      }\n    });\n    \n    // Add mentioned users\n    if (mentions \u0026\u0026 mentions.length \u003e 0) {\n      mentions.forEach(userId =\u003e notifyUsers.add(userId));\n    }\n    \n    // Send notifications\n    for (const userId of notifyUsers) {\n      // Create notification\n      const notification = new Notification({\n        recipient: userId,\n        sender: req.user._id,\n        type: 'comment_added',\n        title: 'New Comment',\n        message: `${req.user.name} commented on task: ${task.title}`,\n        relatedTask: taskId,\n        relatedComment: savedComment._id\n      });\n      \n      await notification.save();\n      \n      // Send real-time notification\n      if (req.io) {\n        req.io.to(userId).emit('notification', notification);\n      }\n      \n      // Get user details\n      const user = await User.findById(userId);\n      \n      // Send email notification if user has email notifications enabled\n      if (user \u0026\u0026 user.notificationPreferences.emailNotifications \u0026\u0026 \n          user.notificationPreferences.commentAdded) {\n        sendEmail({\n          to: user.email,\n          subject: 'New Comment on Task',\n          text: `Hello ${user.name},\\n\\n${req.user.name} commented on the task \"${task.title}\":\\n\\n\"${content}\"\\n\\nBest regards,\\nThe Task Management Team`\n        });\n      }\n    }\n    \n    res.status(201).json({\n      success: true,\n      message: 'Comment added successfully',\n      comment: savedComment\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Get comments for a task\nrouter.get('/task/:taskId', verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { page = 1, limit = 10 } = req.query;\n    \n    // Check if task exists\n    const task = await Task.findById(req.params.taskId);\n    if (!task) {\n      return next(createError(404, 'Task not found'));\n    }\n    \n    // Check if user has access to this task\n    if (req.user.role === 'viewer' \u0026\u0026 \n        task.assignee?.toString() !== req.user._id.toString() \u0026\u0026 \n        task.creator.toString() !== req.user._id.toString() \u0026\u0026\n        !task.watchers.some(watcher =\u003e watcher.toString() === req.user._id.toString())) {\n      return next(createError(403, 'You are not authorized to access this task'));\n    }\n    \n    // Count total comments\n    const total = await Comment.countDocuments({ task: req.params.taskId });\n    \n    // Fetch comments with pagination\n    const comments = await Comment.find({ task: req.params.taskId })\n      .populate('user', 'name email avatar')\n      .sort({ createdAt: -1 })\n      .skip((page - 1) * limit)\n      .limit(parseInt(limit));\n    \n    res.status(200).json({\n      success: true,\n      count: comments.length,\n      total,\n      totalPages: Math.ceil(total / limit),\n      currentPage: parseInt(page),\n      comments\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Update comment\nrouter.put('/:id', verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { content, mentions } = req.body;\n    \n    // Find comment\n    const comment = await Comment.findById(req.params.id);\n    if (!comment) {\n      return next(createError(404, 'Comment not found'));\n    }\n    \n    // Check if user is the comment author\n    if (comment.user.toString() !== req.user._id.toString() \u0026\u0026 req.user.role !== 'admin') {\n      return next(createError(403, 'You are not authorized to update this comment'));\n    }\n    \n    // Update fields\n    if (content) comment.content = content;\n    if (mentions) comment.mentions = mentions;\n    \n    // Save comment\n    const updatedComment = await comment.save();\n    \n    // Populate user data\n    await updatedComment.populate('user', 'name email avatar');\n    \n    res.status(200).json({\n      success: true,\n      message: 'Comment updated successfully',\n      comment: updatedComment\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Delete comment\nrouter.delete('/:id', verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Find comment\n    const comment = await Comment.findById(req.params.id);\n    if (!comment) {\n      return next(createError(404, 'Comment not found'));\n    }\n    \n    // Check if user is the  {\n      return next(createError(404, 'Comment not found'));\n    }\n    \n    // Check if user is the comment author or admin\n    if (comment.user.toString() !== req.user._id.toString() \u0026\u0026 req.user.role !== 'admin') {\n      return next(createError(403, 'You are not authorized to delete this comment'));\n    }\n    \n    // Delete comment\n    await Comment.findByIdAndDelete(req.params.id);\n    \n    // Delete associated notifications\n    await Notification.deleteMany({ relatedComment: req.params.id });\n    \n    res.status(200).json({\n      success: true,\n      message: 'Comment deleted successfully'\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Add attachment to comment\nrouter.post('/:id/attachments', verifyToken, upload.single('file'), async (req, res, next) =\u003e {\n  try {\n    if (!req.file) {\n      return next(createError(400, 'No file uploaded'));\n    }\n    \n    // Find comment\n    const comment = await Comment.findById(req.params.id);\n    if (!comment) {\n      return next(createError(404, 'Comment not found'));\n    }\n    \n    // Check if user is the comment author\n    if (comment.user.toString() !== req.user._id.toString() \u0026\u0026 req.user.role !== 'admin') {\n      return next(createError(403, 'You are not authorized to update this comment'));\n    }\n    \n    // Add attachment\n    comment.attachments.push({\n      name: req.file.originalname,\n      path: `/${req.file.path}`,\n      type: req.file.mimetype,\n      size: req.file.size\n    });\n    \n    // Save comment\n    const updatedComment = await comment.save();\n    \n    res.status(200).json({\n      success: true,\n      message: 'Attachment added successfully',\n      comment: updatedComment\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\nexport default router;\n[V0_FILE]js:file=\"routes/comments.js\" isFixed\nimport express from 'express';\nimport Comment from '../models/Comment.js';\nimport Task from '../models/Task.js';\nimport User from '../models/User.js';\nimport Notification from '../models/Notification.js';\nimport { verifyToken } from '../middleware/auth.js';\nimport { createError } from '../utils/error.js';\nimport upload from '../middleware/upload.js';\nimport { sendEmail } from '../utils/email.js';\n\nconst router = express.Router();\n\n// Create a new comment\nrouter.post('/', verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { taskId, content, mentions } = req.body;\n    \n    // Check if task exists\n    const task = await Task.findById(taskId);\n    if (!task) {\n      return next(createError(404, 'Task not found'));\n    }\n    \n    // Create new comment\n    const newComment = new Comment({\n      task: taskId,\n      user: req.user._id,\n      content,\n      mentions: mentions || []\n    });\n    \n    // Save comment\n    const savedComment = await newComment.save();\n    \n    // Populate user data\n    await savedComment.populate('user', 'name email avatar');\n    \n    // Notify task assignee and creator about the comment\n    const notifyUsers = new Set();\n    \n    // Add task assignee if exists and is not the commenter\n    if (task.assignee \u0026\u0026 task.assignee.toString() !== req.user._id.toString()) {\n      notifyUsers.add(task.assignee.toString());\n    }\n    \n    // Add task creator if not the commenter\n    if (task.creator.toString() !== req.user._id.toString()) {\n      notifyUsers.add(task.creator.toString());\n    }\n    \n    // Add watchers if not the commenter\n    task.watchers.forEach(watcher =\u003e {\n      if (watcher.toString() !== req.user._id.toString()) {\n        notifyUsers.add(watcher.toString());\n      }\n    });\n    \n    // Add mentioned users\n    if (mentions \u0026\u0026 mentions.length \u003e 0) {\n      mentions.forEach(userId =\u003e notifyUsers.add(userId));\n    }\n    \n    // Send notifications\n    for (const userId of notifyUsers) {\n      // Create notification\n      const notification = new Notification({\n        recipient: userId,\n        sender: req.user._id,\n        type: 'comment_added',\n        title: 'New Comment',\n        message: `${req.user.name} commented on task: ${task.title}`,\n        relatedTask: taskId,\n        relatedComment: savedComment._id\n      });\n      \n      await notification.save();\n      \n      // Send real-time notification\n      if (req.io) {\n        req.io.to(userId).emit('notification', notification);\n      }\n      \n      // Get user details\n      const user = await User.findById(userId);\n      \n      // Send email notification if user has email notifications enabled\n      if (user \u0026\u0026 user.notificationPreferences.emailNotifications \u0026\u0026 \n          user.notificationPreferences.commentAdded) {\n        sendEmail({\n          to: user.email,\n          subject: 'New Comment on Task',\n          text: `Hello ${user.name},\\n\\n${req.user.name} commented on the task \"${task.title}\":\\n\\n\"${content}\"\\n\\nBest regards,\\nThe Task Management Team`\n        });\n      }\n    }\n    \n    res.status(201).json({\n      success: true,\n      message: 'Comment added successfully',\n      comment: savedComment\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Get comments for a task\nrouter.get('/task/:taskId', verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { page = 1, limit = 10 } = req.query;\n    \n    // Check if task exists\n    const task = await Task.findById(req.params.taskId);\n    if (!task) {\n      return next(createError(404, 'Task not found'));\n    }\n    \n    // Check if user has access to this task\n    if (req.user.role === 'viewer' \u0026\u0026 \n        task.assignee?.toString() !== req.user._id.toString() \u0026\u0026 \n        task.creator.toString() !== req.user._id.toString() \u0026\u0026\n        !task.watchers.some(watcher =\u003e watcher.toString() === req.user._id.toString())) {\n      return next(createError(403, 'You are not authorized to access this task'));\n    }\n    \n    // Count total comments\n    const total = await Comment.countDocuments({ task: req.params.taskId });\n    \n    // Fetch comments with pagination\n    const comments = await Comment.find({ task: req.params.taskId })\n      .populate('user', 'name email avatar')\n      .sort({ createdAt: -1 })\n      .skip((page - 1) * limit)\n      .limit(parseInt(limit));\n    \n    res.status(200).json({\n      success: true,\n      count: comments.length,\n      total,\n      totalPages: Math.ceil(total / limit),\n      currentPage: parseInt(page),\n      comments\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Update comment\nrouter.put('/:id', verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { content, mentions } = req.body;\n    \n    // Find comment\n    const comment = await Comment.findById(req.params.id);\n    if (!comment) {\n      return next(createError(404, 'Comment not found'));\n    }\n    \n    // Check if user is the comment author\n    if (comment.user.toString() !== req.user._id.toString() \u0026\u0026 req.user.role !== 'admin') {\n      return next(createError(403, 'You are not authorized to update this comment'));\n    }\n    \n    // Update fields\n    if (content) comment.content = content;\n    if (mentions) comment.mentions = mentions;\n    \n    // Save comment\n    const updatedComment = await comment.save();\n    \n    // Populate user data\n    await updatedComment.populate('user', 'name email avatar');\n    \n    res.status(200).json({\n      success: true,\n      message: 'Comment updated successfully',\n      comment: updatedComment\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Delete comment\nrouter.delete('/:id', verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Find comment\n    let comment = await Comment.findById(req.params.id);\n    if (!comment) {\n      return next(createError(404, 'Comment not found'));\n    }\n    \n    // Check if user is the comment author or admin\n    if (comment.user.toString() !== req.user._id.toString() \u0026\u0026 req.user.role !== 'admin') {\n      return next(createError(403, 'You are not authorized to delete this comment'));\n    }\n    \n    // Delete comment\n    await Comment.findByIdAndDelete(req.params.id);\n    \n    // Delete associated notifications\n    await Notification.deleteMany({ relatedComment: req.params.id });\n    \n    res.status(200).json({\n      success: true,\n      message: 'Comment deleted successfully'\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Add attachment to comment\nrouter.post('/:id/attachments', verifyToken, upload.single('file'), async (req, res, next) =\u003e {\n  try {\n    if (!req.file) {\n      return next(createError(400, 'No file uploaded'));\n    }\n    \n    // Find comment\n    const comment = await Comment.findById(req.params.id);\n    if (!comment) {\n      return next(createError(404, 'Comment not found'));\n    }\n    \n    // Check if user is the comment author\n    if (comment.user.toString() !== req.user._id.toString() \u0026\u0026 req.user.role !== 'admin') {\n      return next(createError(403, 'You are not authorized to update this comment'));\n    }\n    \n    // Add attachment\n    comment.attachments.push({\n      name: req.file.originalname,\n      path: `/${req.file.path}`,\n      type: req.file.mimetype,\n      size: req.file.size\n    });\n    \n    // Save comment\n    const updatedComment = await comment.save();\n    \n    res.status(200).json({\n      success: true,\n      message: 'Attachment added successfully',\n      comment: updatedComment\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\nexport default router;\n[V0_FILE]js:file=\"routes/reports.js\"\nimport express from 'express';\nimport Task from '../models/Task.js';\nimport User from '../models/User.js';\nimport { verifyToken, verifyAdminOrEditor } from '../middleware/auth.js';\nimport { createError } from '../utils/error.js';\nimport { generatePDF, generateCSV } from '../utils/export.js';\n\nconst router = express.Router();\n\n// Get task completion report\nrouter.get('/task-completion', verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { startDate, endDate, format } = req.query;\n    \n    // Parse dates\n    const start = startDate ? new Date(startDate) : new Date(Date.now() - 30 * 24 * 60 * 60 * 1000); // Default to last 30 days\n    const end = endDate ? new Date(endDate) : new Date();\n    \n    // Set end date to end of day\n    end.setHours(23, 59, 59, 999);\n    \n    // Aggregate tasks by status and date\n    const tasksByStatus = await Task.aggregate([\n      {\n        $match: {\n          updatedAt: { $gte: start, $lte: end }\n        }\n      },\n      {\n        $group: {\n          _id: {\n            status: '$status',\n            date: { $dateToString: { format: '%Y-%m-%d', date: '$updatedAt' } }\n          },\n          count: { $sum: 1 }\n        }\n      },\n      {\n        $sort: { '_id.date': 1 }\n      }\n    ]);\n    \n    // Transform data for chart\n    const dates = [...new Set(tasksByStatus.map(item =\u003e item._id.date))].sort();\n    \n    const chartData = dates.map(date =\u003e {\n      const dataPoint = { date };\n      \n      ['to-do', 'in-progress', 'in-review', 'completed'].forEach(status =\u003e {\n        const statusData = tasksByStatus.find(item =\u003e \n          item._id.date === date \u0026\u0026 item._id.status === status\n        );\n        dataPoint[status] = statusData ? statusData.count : 0;\n      });\n      \n      return dataPoint;\n    });\n    \n    // If format is specified, export data\n    if (format === 'pdf') {\n      const pdfBuffer = await generatePDF('Task Completion Report', chartData);\n      \n      res.setHeader('Content-Type', 'application/pdf');\n      res.setHeader('Content-Disposition', 'attachment; filename=task-completion-report.pdf');\n      return res.send(pdfBuffer);\n    }\n    \n    if (format === 'csv') {\n      const csvData = await generateCSV(chartData);\n      \n      res.setHeader('Content-Type', 'text/csv');\n      res.setHeader('Content-Disposition', 'attachment; filename=task-completion-report.csv');\n      return res.send(csvData);\n    }\n    \n    res.status(200).json({\n      success: true,\n      data: chartData\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Get team performance report\nrouter.get('/team-performance', verifyToken, verifyAdminOrEditor, async (req, res, next) =\u003e {\n  try {\n    const { startDate, endDate, format } = req.query;\n    \n    // Parse dates\n    const start = startDate ? new Date(startDate) : new Date(Date.now() - 30 * 24 * 60 * 60 * 1000); // Default to last 30 days\n    const end = endDate ? new Date(endDate) : new Date();\n    \n    // Set end date to end of day\n    end.setHours(23, 59, 59, 999);\n    \n    // Aggregate tasks by assignee\n    const tasksByAssignee = await Task.aggregate([\n      {\n        $match: {\n          assignee: { $exists: true, $ne: null },\n          updatedAt: { $gte: start, $lte: end }\n        }\n      },\n      {\n        $group: {\n          _id: {\n            assignee: '$assignee',\n            status: '$status'\n          },\n          count: { $sum: 1 }\n        }\n      }\n    ]);\n    \n    // Get user details\n    const userIds = [...new Set(tasksByAssignee.map(item =\u003e item._id.assignee))];\n    const users = await User.find({ _id: { $in: userIds } }, 'name email avatar');\n    \n    // Transform data for chart\n    const chartData = users.map(user =\u003e {\n      const userData = {\n        name: user.name,\n        email: user.email,\n        avatar: user.avatar\n      };\n      \n      ['to-do', 'in-progress', 'in-review', 'completed'].forEach(status =\u003e {\n        const statusData = tasksByAssignee.find(item =\u003e \n          item._id.assignee.toString() === user._id.toString() \u0026\u0026 \n          item._id.status === status\n        );\n        userData[status] = statusData ? statusData.count : 0;\n      });\n      \n      // Calculate total tasks\n      userData.total = Object.values(userData)\n        .filter(value =\u003e typeof value === 'number')\n        .reduce((sum, value) =\u003e sum + value, 0);\n      \n      // Calculate completion rate\n      userData.completionRate = userData.total \u003e 0 \n        ? Math.round((userData.completed / userData.total) * 100) \n        : 0;\n      \n      return userData;\n    });\n    \n    // Sort by completion rate\n    chartData.sort((a, b) =\u003e b.completionRate - a.completionRate);\n    \n    // If format is specified, export data\n    if (format === 'pdf') {\n      const pdfBuffer = await generatePDF('Team Performance Report', chartData);\n      \n      res.setHeader('Content-Type', 'application/pdf');\n      res.setHeader('Content-Disposition', 'attachment; filename=team-performance-report.pdf');\n      return res.send(pdfBuffer);\n    }\n    \n    if (format === 'csv') {\n      const csvData = await generateCSV(chartData);\n      \n      res.setHeader('Content-Type', 'text/csv');\n      res.setHeader('Content-Disposition', 'attachment; filename=team-performance-report.csv');\n      return res.send(csvData);\n    }\n    \n    res.status(200).json({\n      success: true,\n      data: chartData\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Get priority distribution report\nrouter.get('/priority-distribution', verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { format } = req.query;\n    \n    // Aggregate tasks by priority\n    const tasksByPriority = await Task.aggregate([\n      {\n        $group: {\n          _id: '$priority',\n          count: { $sum: 1 }\n        }\n      }\n    ]);\n    \n    // Transform data for chart\n    const chartData = tasksByPriority.map(item =\u003e ({\n      priority: item._id,\n      count: item.count\n    }));\n    \n    // If format is specified, export data\n    if (format === 'pdf') {\n      const pdfBuffer = await generatePDF('Priority Distribution Report', chartData);\n      \n      res.setHeader('Content-Type', 'application/pdf');\n      res.setHeader('Content-Disposition', 'attachment; filename=priority-distribution-report.pdf');\n      return res.send(pdfBuffer);\n    }\n    \n    if (format === 'csv') {\n      const csvData = await generateCSV(chartData);\n      \n      res.setHeader('Content-Type', 'text/csv');\n      res.setHeader('Content-Disposition', 'attachment; filename=priority-distribution-report.csv');\n      return res.send(csvData);\n    }\n    \n    res.status(200).json({\n      success: true,\n      data: chartData\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Get overdue tasks report\nrouter.get('/overdue-tasks', verifyToken, verifyAdminOrEditor, async (req, res, next) =\u003e {\n  try {\n    const { format } = req.query;\n    \n    // Get current date\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    \n    // Find overdue tasks\n    const overdueTasks = await Task.find({\n      dueDate: { $lt: today },\n      status: { $ne: 'completed' }\n    })\n    .populate('assignee', 'name email avatar')\n    .populate('creator', 'name email avatar')\n    .sort({ dueDate: 1 });\n    \n    // Transform data for export\n    const reportData = overdueTasks.map(task =\u003e ({\n      id: task._id,\n      title: task.title,\n      priority: task.priority,\n      status: task.status,\n      dueDate: task.dueDate ? task.dueDate.toLocaleDateString() : 'Not set',\n      assignee: task.assignee ? task.assignee.name : 'Unassigned',\n      creator: task.creator ? task.creator.name : 'Unknown',\n      daysOverdue: Math.ceil((today - new Date(task.dueDate)) / (1000 * 60 * 60 * 24))\n    }));\n    \n    // If format is specified, export data\n    if (format === 'pdf') {\n      const pdfBuffer = await generatePDF('Overdue Tasks Report', reportData);\n      \n      res.setHeader('Content-Type', 'application/pdf');\n      res.setHeader('Content-Disposition', 'attachment; filename=overdue-tasks-report.pdf');\n      return res.send(pdfBuffer);\n    }\n    \n    if (format === 'csv') {\n      const csvData = await generateCSV(reportData);\n      \n      res.setHeader('Content-Type', 'text/csv');\n      res.setHeader('Content-Disposition', 'attachment; filename=overdue-tasks-report.csv');\n      return res.send(csvData);\n    }\n    \n    res.status(200).json({\n      success: true,\n      count: reportData.length,\n      data: reportData\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\nexport default router;\n[V0_FILE]js:file=\"routes/notifications.js\"\nimport express from 'express';\nimport Notification from '../models/Notification.js';\nimport { verifyToken } from '../middleware/auth.js';\nimport { createError } from '../utils/error.js';\n\nconst router = express.Router();\n\n// Get user notifications\nrouter.get('/', verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { read, page = 1, limit = 10 } = req.query;\n    \n    // Build query\n    const query = { recipient: req.user._id };\n    \n    // Filter by read status\n    if (read === 'true') {\n      query.read = true;\n    } else if (read === 'false') {\n      query.read = false;\n    }\n    \n    // Count total notifications\n    const total = await Notification.countDocuments(query);\n    \n    // Fetch notifications with pagination\n    const notifications = await Notification.find(query)\n      .populate('sender', 'name email avatar')\n      .populate('relatedTask', 'title')\n      .sort({ createdAt: -1 })\n      .skip((page - 1) * limit)\n      .limit(parseInt(limit));\n    \n    res.status(200).json({\n      success: true,\n      count: notifications.length,\n      total,\n      totalPages: Math.ceil(total / limit),\n      currentPage: parseInt(page),\n      unreadCount: await Notification.countDocuments({ recipient: req.user._id, read: false }),\n      notifications\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Mark notification as read\nrouter.put('/:id/read', verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Find notification\n    const notification = await Notification.findById(req.params.id);\n    if (!notification) {\n      return next(createError(404, 'Notification not found'));\n    }\n    \n    // Check if user is the recipient\n    if (notification.recipient.toString() !== req.user._id.toString()) {\n      return next(createError(403, 'You are not authorized to update this notification'));\n    }\n    \n    // Mark as read\n    notification.read = true;\n    \n    // Save notification\n    await notification.save();\n    \n    res.status(200).json({\n      success: true,\n      message: 'Notification marked as read'\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Mark all notifications as read\nrouter.put('/read-all', verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Update all unread notifications for the user\n    await Notification.updateMany(\n      { recipient: req.user._id, read: false },\n      { $set: { read: true } }\n    );\n    \n    res.status(200).json({\n      success: true,\n      message: 'All notifications marked as read'\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Delete notification\nrouter.delete('/:id', verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Find notification\n    const notification = await Notification.findById(req.params.id);\n    if (!notification) {\n      return next(createError(404, 'Notification not found'));\n    }\n    \n    // Check if user is the recipient\n    if (notification.recipient.toString() !== req.user._id.toString()) {\n      return next(createError(403, 'You are not authorized to delete this notification'));\n    }\n    \n    // Delete notification\n    await Notification.findByIdAndDelete(req.params.id);\n    \n    res.status(200).json({\n      success: true,\n      message: 'Notification deleted successfully'\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Delete all notifications\nrouter.delete('/', verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Delete all notifications for the user\n    await Notification.deleteMany({ recipient: req.user._id });\n    \n    res.status(200).json({\n      success: true,\n      message: 'All notifications deleted successfully'\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\nexport default router;\n[V0_FILE]js:file=\"socket/socketHandlers.js\"\nimport jwt from 'jsonwebtoken';\nimport User from '../models/User.js';\n\nconst setupSocketHandlers = (io) =\u003e {\n  // Middleware for authentication\n  io.use(async (socket, next) =\u003e {\n    try {\n      const token = socket.handshake.auth.token || \n                   (socket.handshake.headers.authorization \u0026\u0026 \n                    socket.handshake.headers.authorization.startsWith('Bearer') \n                    ? socket.handshake.headers.authorization.split(' ')[1] : null);\n      \n      if (!token) {\n        return next(new Error('Authentication error'));\n      }\n      \n      // Verify token\n      const decoded = jwt.verify(token, process.env.JWT_SECRET);\n      \n      // Find user\n      const user = await User.findById(decoded.id);\n      if (!user || user.status !== 'active') {\n        return next(new Error('Authentication error'));\n      }\n      \n      // Attach user to socket\n      socket.user = user;\n      next();\n    } catch (err) {\n      next(new Error('Authentication error'));\n    }\n  });\n  \n  io.on('connection', (socket) =\u003e {\n    console.log(`User connected: ${socket.user._id}`);\n    \n    // Join user's room for private notifications\n    socket.join(socket.user._id.toString());\n    \n    // Handle task updates\n    socket.on('task:update', (taskId) =\u003e {\n      // Broadcast to all clients except sender\n      socket.broadcast.emit('task:updated', taskId);\n    });\n    \n    // Handle new comments\n    socket.on('comment:new', (taskId) =\u003e {\n      // Broadcast to all clients except sender\n      socket.broadcast.emit('comment:added', taskId);\n    });\n    \n    // Handle user typing in comments\n    socket.on('typing', (data) =\u003e {\n      // Broadcast to all clients except sender\n      socket.broadcast.emit('user:typing', {\n        taskId: data.taskId,\n        user: {\n          id: socket.user._id,\n          name: socket.user.name\n        }\n      });\n    });\n    \n    // Handle disconnection\n    socket.on('disconnect', () =\u003e {\n      console.log(`User disconnected: ${socket.user._id}`);\n    });\n  });\n};\n\nexport default setupSocketHandlers;\n[V0_FILE]js:file=\"utils/error.js\"\n// Create custom error with status code\nexport const createError = (statusCode, message) =\u003e {\n  const error = new Error(message);\n  error.statusCode = statusCode;\n  return error;\n};\n[V0_FILE]js:file=\"utils/email.js\"\nimport nodemailer from 'nodemailer';\n\n// Configure email transporter\nconst transporter = nodemailer.createTransport({\n  host: process.env.EMAIL_HOST || 'smtp.example.com',\n  port: process.env.EMAIL_PORT || 587,\n  secure: process.env.EMAIL_SECURE === 'true',\n  auth: {\n    user: process.env.EMAIL_USER || 'user@example.com',\n    pass: process.env.EMAIL_PASS || 'password'\n  }\n});\n\n// Send email\nexport const sendEmail = async ({ to, subject, text, html }) =\u003e {\n  try {\n    // Skip sending emails in development mode if no email config\n    if (process.env.NODE_ENV === 'development' \u0026\u0026 !process.env.EMAIL_HOST) {\n      console.log('Email sending skipped in development mode');\n      console.log({ to, subject, text });\n      return;\n    }\n    \n    const mailOptions = {\n      from: process.env.EMAIL_FROM || 'Task Management \u003cnoreply@taskmanagement.com\u003e',\n      to,\n      subject,\n      text,\n      html\n    };\n    \n    const info = await transporter.sendMail(mailOptions);\n    console.log('Email sent:', info.messageId);\n    return info;\n  } catch (error) {\n    console.error('Error sending email:', error);\n    throw error;\n  }\n};\n\n// Send deadline reminder emails\nexport const sendDeadlineReminders = async (tasks, users) =\u003e {\n  for (const task of tasks) {\n    // Get assignee\n    const assignee = users.find(user =\u003e \n      user._id.toString() === task.assignee.toString() \u0026\u0026\n      user.notificationPreferences.emailNotifications \u0026\u0026\n      user.notificationPreferences.deadlineReminder\n    );\n    \n    if (assignee) {\n      await sendEmail({\n        to: assignee.email,\n        subject: 'Task Deadline Reminder',\n        text: `Hello ${assignee.name},\\n\\nThis is a reminder that the task \"${task.title}\" is due soon (${new Date(task.dueDate).toLocaleDateString()}).\\n\\nBest regards,\\nThe Task Management Team`\n      });\n    }\n  }\n};\n[V0_FILE]js:file=\"utils/export.js\"\nimport PDFDocument from 'pdfkit';\nimport { Parser } from 'json2csv';\n\n// Generate PDF report\nexport const generatePDF = (title, data) =\u003e {\n  return new Promise((resolve, reject) =\u003e {\n    try {\n      // Create PDF document\n      const doc = new PDFDocument();\n      const buffers = [];\n      \n      // Collect PDF data chunks\n      doc.on('data', buffer =\u003e buffers.push(buffer));\n      doc.on('end', () =\u003e resolve(Buffer.concat(buffers)));\n      \n      // Add title\n      doc.fontSize(20).text(title, { align: 'center' });\n      doc.moveDown();\n      \n      // Add date\n      doc.fontSize(12).text(`Generated on: ${new Date().toLocaleDateString()}`, { align: 'center' });\n      doc.moveDown(2);\n      \n      // Add data table\n      if (data.length \u003e 0) {\n        // Get column headers\n        const headers = Object.keys(data[0]);\n        \n        // Calculate column widths\n        const columnWidth = 500 / headers.length;\n        \n        // Draw header row\n        doc.fontSize(10).font('Helvetica-Bold');\n        headers.forEach((header, i) =\u003e {\n          const x = 50 + (i * columnWidth);\n          doc.text(\n            header.charAt(0).toUpperCase() + header.slice(1).replace(/([A-Z])/g, ' $1'),\n            x,\n            doc.y,\n            { width: columnWidth, align: 'left' }\n          );\n        });\n        \n        doc.moveDown();\n        doc.font('Helvetica');\n        \n        // Draw data rows\n        data.forEach(row =\u003e {\n          const y = doc.y;\n          \n          headers.forEach((header, i) =\u003e {\n            const x = 50 + (i * columnWidth);\n            doc.text(\n              row[header] !== undefined ? row[header].toString() : '',\n              x,\n              y,\n              { width: columnWidth, align: 'left' }\n            );\n          });\n          \n          doc.moveDown();\n        });\n      } else {\n        doc.text('No data available', { align: 'center' });\n      }\n      \n      // Finalize PDF\n      doc.end();\n    } catch (err) {\n      reject(err);\n    }\n  });\n};\n\n// Generate CSV report\nexport const generateCSV = (data) =\u003e {\n  return new Promise((resolve, reject) =\u003e {\n    try {\n      if (data.length === 0) {\n        return resolve('No data available');\n      }\n      \n      // Configure CSV parser\n      const json2csvParser = new Parser();\n      \n      // Convert JSON to CSV\n      const csv = json2csvParser.parse(data);\n      \n      resolve(csv);\n    } catch (err) {\n      reject(err);\n    }\n  });\n};\n[V0_FILE]js:file=\"utils/scheduler.js\"\nimport cron from 'node-cron';\nimport Task from '../models/Task.js';\nimport User from '../models/User.js';\nimport Notification from '../models/Notification.js';\nimport { sendDeadlineReminders } from './email.js';\n\n// Schedule deadline reminders\nexport const scheduleDeadlineReminders = () =\u003e {\n  // Run every day at 9:00 AM\n  cron.schedule('0 9 * * *', async () =\u003e {\n    try {\n      console.log('Running deadline reminder scheduler...');\n      \n      // Get current date\n      const today = new Date();\n      today.setHours(0, 0, 0, 0);\n      \n      // Get tomorrow's date\n      const tomorrow = new Date(today);\n      tomorrow.setDate(tomorrow.getDate() + 1);\n      \n      // Get tasks due tomorrow\n      const tasks = await Task.find({\n        dueDate: {\n          $gte: tomorrow,\n          $lt: new Date(tomorrow.getTime() + 24 * 60 * 60 * 1000)\n        },\n        status: { $ne: 'completed' }\n      }).populate('assignee');\n      \n      if (tasks.length === 0) {\n        console.log('No tasks due tomorrow');\n        return;\n      }\n      \n      console.log(`Found ${tasks.length} tasks due tomorrow`);\n      \n      // Get all users\n      const users = await User.find({\n        _id: { $in: tasks.map(task =\u003e task.assignee) }\n      });\n      \n      // Create notifications\n      const notifications = tasks.map(task =\u003e ({\n        recipient: task.assignee,\n        type: 'deadline_reminder',\n        title: 'Task Due Tomorrow',\n        message: `The task \"${task.title}\" is due tomorrow`,\n        relatedTask: task._id\n      }));\n      \n      // Save notifications\n      await Notification.insertMany(notifications);\n      \n      // Send email reminders\n      await sendDeadlineReminders(tasks, users);\n      \n      console.log('Deadline reminders sent successfully');\n    } catch (err) {\n      console.error('Error sending deadline reminders:', err);\n    }\n  });\n};\n\n// Schedule weekly digest emails\nexport const scheduleWeeklyDigest = () =\u003e {\n  // Run every Monday at 8:00 AM\n  cron.schedule('0 8 * * 1', async () =\u003e {\n    try {\n      console.log('Running weekly digest scheduler...');\n      \n      // Get users who have enabled weekly digest\n      const users = await User.find({\n        'notificationPreferences.weeklyDigest': true,\n        'notificationPreferences.emailNotifications': true\n      });\n      \n      if (users.length === 0) {\n        console.log('No users have enabled weekly digest');\n        return;\n      }\n      \n      console.log(`Sending weekly digest to ${users.length} users`);\n      \n      // Get date range for the past week\n      const endDate = new Date();\n      const startDate = new Date();\n      startDate.setDate(startDate.getDate() - 7);\n      \n      // Process each user\n      for (const user of users) {\n        // Get tasks assigned to user\n        const assignedTasks = await Task.find({\n          assignee: user._id,\n          updatedAt: { $gte: startDate, $lte: endDate }\n        });\n        \n        // Get tasks created by user\n        const createdTasks = await Task.find({\n          creator: user._id,\n          updatedAt: { $gte: startDate, $lte: endDate }\n        });\n        \n        // Count tasks by status\n        const tasksByStatus = {\n          completed: assignedTasks.filter(task =\u003e task.status === 'completed').length,\n          inProgress: assignedTasks.filter(task =\u003e task.status === 'in-progress').length,\n          inReview: assignedTasks.filter(task =\u003e task.status === 'in-review').length,\n          toDo: assignedTasks.filter(task =\u003e task.status === 'to-do').length\n        };\n        \n        // Get overdue tasks\n        const today = new Date();\n        today.setHours(0, 0, 0, 0);\n        \n        const overdueTasks = await Task.find({\n          assignee: user._id,\n          dueDate: { $lt: today },\n          status: { $ne: 'completed' }\n        });\n        \n        // Send digest email\n        await sendEmail({\n          to: user.email,\n          subject: 'Your Weekly Task Digest',\n          text: `Hello ${user.name},\\n\\nHere's your weekly task summary:\\n\\nTasks Assigned to You: ${assignedTasks.length}\\n- Completed: ${tasksByStatus.completed}\\n- In Progress: ${tasksByStatus.inProgress}\\n- In Review: ${tasksByStatus.inReview}\\n- To Do: ${tasksByStatus.toDo}\\n\\nTasks Created by You: ${createdTasks.length}\\n\\nOverdue Tasks: ${overdueTasks.length}\\n\\nBest regards,\\nThe Task Management Team`\n        });\n      }\n      \n      console.log('Weekly digest emails sent successfully');\n    } catch (err) {\n      console.error('Error sending weekly digest emails:', err);\n    }\n  });\n};\n[V0_FILE]js:file=\"utils/scheduler.js\" isFixed\nimport cron from 'node-cron';\nimport Task from '../models/Task.js';\nimport User from '../models/User.js';\nimport Notification from '../models/Notification.js';\nimport { sendDeadlineReminders } from './email.js';\nimport { sendEmail } from './email.js'; // Import sendEmail\n\n// Schedule deadline reminders\nexport const scheduleDeadlineReminders = () =\u003e {\n  // Run every day at 9:00 AM\n  cron.schedule('0 9 * * *', async () =\u003e {\n    try {\n      console.log('Running deadline reminder scheduler...');\n      \n      // Get current date\n      const today = new Date();\n      today.setHours(0, 0, 0, 0);\n      \n      // Get tomorrow's date\n      const tomorrow = new Date(today);\n      tomorrow.setDate(tomorrow.getDate() + 1);\n      \n      // Get tasks due tomorrow\n      const tasks = await Task.find({\n        dueDate: {\n          $gte: tomorrow,\n          $lt: new Date(tomorrow.getTime() + 24 * 60 * 60 * 1000)\n        },\n        status: { $ne: 'completed' }\n      }).populate('assignee');\n      \n      if (tasks.length === 0) {\n        console.log('No tasks due tomorrow');\n        return;\n      }\n      \n      console.log(`Found ${tasks.length} tasks due tomorrow`);\n      \n      // Get all users\n      const users = await User.find({\n        _id: { $in: tasks.map(task =\u003e task.assignee) }\n      });\n      \n      // Create notifications\n      const notifications = tasks.map(task =\u003e ({\n        recipient: task.assignee,\n        type: 'deadline_reminder',\n        title: 'Task Due Tomorrow',\n        message: `The task \"${task.title}\" is due tomorrow`,\n        relatedTask: task._id\n      }));\n      \n      // Save notifications\n      await Notification.insertMany(notifications);\n      \n      // Send email reminders\n      await sendDeadlineReminders(tasks, users);\n      \n      console.log('Deadline reminders sent successfully');\n    } catch (err) {\n      console.error('Error sending deadline reminders:', err);\n    }\n  });\n};\n\n// Schedule weekly digest emails\nexport const scheduleWeeklyDigest = () =\u003e {\n  // Run every Monday at 8:00 AM\n  cron.schedule('0 8 * * 1', async () =\u003e {\n    try {\n      console.log('Running weekly digest scheduler...');\n      \n      // Get users who have enabled weekly digest\n      const users = await User.find({\n        'notificationPreferences.weeklyDigest': true,\n        'notificationPreferences.emailNotifications': true\n      });\n      \n      if (users.length === 0) {\n        console.log('No users have enabled weekly digest');\n        return;\n      }\n      \n      console.log(`Sending weekly digest to ${users.length} users`);\n      \n      // Get date range for the past week\n      const endDate = new Date();\n      const startDate = new Date();\n      startDate.setDate(startDate.getDate() - 7);\n      \n      // Process each user\n      for (const user of users) {\n        // Get tasks assigned to user\n        const assignedTasks = await Task.find({\n          assignee: user._id,\n          updatedAt: { $gte: startDate, $lte: endDate }\n        });\n        \n        // Get tasks created by user\n        const createdTasks = await Task.find({\n          creator: user._id,\n          updatedAt: { $gte: startDate, $lte: endDate }\n        });\n        \n        // Count tasks by status\n        const tasksByStatus = {\n          completed: assignedTasks.filter(task =\u003e task.status === 'completed').length,\n          inProgress: assignedTasks.filter(task =\u003e task.status === 'in-progress').length,\n          inReview: assignedTasks.filter(task =\u003e task.status === 'in-review').length,\n          toDo: assignedTasks.filter(task =\u003e task.status === 'to-do').length\n        };\n        \n        // Get overdue tasks\n        const today = new Date();\n        today.setHours(0, 0, 0, 0);\n        \n        const overdueTasks = await Task.find({\n          assignee: user._id,\n          dueDate: { $lt: today },\n          status: { $ne: 'completed' }\n        });\n        \n        // Send digest email\n        await sendEmail({\n          to: user.email,\n          subject: 'Your Weekly Task Digest',\n          text: `Hello ${user.name},\\n\\nHere's your weekly task summary:\\n\\nTasks Assigned to You: ${assignedTasks.length}\\n- Completed: ${tasksByStatus.completed}\\n- In Progress: ${tasksByStatus.inProgress}\\n- In Review: ${tasksByStatus.inReview}\\n- To Do: ${tasksByStatus.toDo}\\n\\nTasks Created by You: ${createdTasks.length}\\n\\nOverdue Tasks: ${overdueTasks.length}\\n\\nBest regards,\\nThe Task Management Team`\n        });\n      }\n      \n      console.log('Weekly digest emails sent successfully');\n    } catch (err) {\n      console.error('Error sending weekly digest emails:', err);\n    }\n  });\n};\n[V0_FILE]js:file=\"package.json\"\n{\n  \"name\": \"task-management-backend\",\n  \"version\": \"1.0.0\",\n  \"description\": \"Backend for Task Management Application\",\n  \"main\": \"server.js\",\n  \"type\": \"module\",\n  \"scripts\": {\n    \"start\": \"node server.js\",\n    \"dev\": \"nodemon server.js\",\n    \"test\": \"jest\"\n  },\n  \"dependencies\": {\n    \"bcrypt\": \"^5.1.1\",\n    \"cookie-parser\": \"^1.4.6\",\n    \"cors\": \"^2.8.5\",\n    \"dotenv\": \"^16.3.1\",\n    \"express\": \"^4.18.2\",\n    \"jose\": \"^5.1.1\",\n    \"json2csv\": \"^6.0.0-alpha.2\",\n    \"jsonwebtoken\": \"^9.0.2\",\n    \"mongoose\": \"^8.0.1\",\n    \"multer\": \"^1.4.5-lts.1\",\n    \"node-cron\": \"^3.0.3\",\n    \"nodemailer\": \"^6.9.7\",\n    \"pdfkit\": \"^0.14.0\",\n    \"socket.io\": \"^4.7.2\"\n  },\n  \"devDependencies\": {\n    \"jest\": \"^29.7.0\",\n    \"nodemon\": \"^3.0.1\",\n    \"supertest\": \"^6.3.3\"\n  },\n  \"engines\": {\n    \"node\": \"\u003e=18.0.0\"\n  }\n}\n[V0_FILE]js:file=\"package.json\" isFixed\n{\n  \"name\": \"task-management-backend\",\n  \"version\": \"1.0.0\",\n  \"description\": \"Backend for Task Management Application\",\n  \"main\": \"server.js\",\n  \"type\": \"module\",\n  \"private\": true,\n  \"scripts\": {\n    \"start\": \"node server.js\",\n    \"dev\": \"nodemon server.js\",\n    \"test\": \"jest\"\n  },\n  \"dependencies\": {\n    \"bcrypt\": \"^5.1.1\",\n    \"cookie-parser\": \"^1.4.6\",\n    \"cors\": \"^2.8.5\",\n    \"dotenv\": \"^16.3.1\",\n    \"express\": \"^4.18.2\",\n    \"jose\": \"^5.1.1\",\n    \"json2csv\": \"^6.0.0-alpha.2\",\n    \"jsonwebtoken\": \"^9.0.2\",\n    \"mongoose\": \"^8.0.1\",\n    \"multer\": \"^1.4.5-lts.1\",\n    \"node-cron\": \"^3.0.3\",\n    \"nodemailer\": \"^6.9.7\",\n    \"pdfkit\": \"^0.14.0\",\n    \"socket.io\": \"^4.7.2\",\n    \"@hookform/resolvers\": \"^3.9.1\",\n    \"@radix-ui/react-accordion\": \"^1.2.2\",\n    \"@radix-ui/react-alert-dialog\": \"^1.1.4\",\n    \"@radix-ui/react-aspect-ratio\": \"^1.1.1\",\n    \"@radix-ui/react-avatar\": \"^1.1.2\",\n    \"@radix-ui/react-checkbox\": \"^1.1.3\",\n    \"@radix-ui/react-collapsible\": \"^1.1.2\",\n    \"@radix-ui/react-context-menu\": \"^2.2.4\",\n    \"@radix-ui/react-dialog\": \"^1.1.4\",\n    \"@radix-ui/react-dropdown-menu\": \"^2.1.4\",\n    \"@radix-ui/react-hover-card\": \"^1.1.4\",\n    \"@radix-ui/react-label\": \"^2.1.1\",\n    \"@radix-ui/react-menubar\": \"^1.1.4\",\n    \"@radix-ui/react-navigation-menu\": \"^1.2.3\",\n    \"@radix-ui/react-popover\": \"^1.1.4\",\n    \"@radix-ui/react-progress\": \"^1.1.1\",\n    \"@radix-ui/react-radio-group\": \"^1.2.2\",\n    \"@radix-ui/react-scroll-area\": \"^1.2.2\",\n    \"@radix-ui/react-select\": \"^2.1.4\",\n    \"@radix-ui/react-separator\": \"^1.1.1\",\n    \"@radix-ui/react-slider\": \"^1.2.2\",\n    \"@radix-ui/react-slot\": \"^1.1.1\",\n    \"@radix-ui/react-switch\": \"^1.1.2\",\n    \"@radix-ui/react-tabs\": \"^1.1.2\",\n    \"@radix-ui/react-toast\": \"^1.2.4\",\n    \"@radix-ui/react-toggle\": \"^1.1.1\",\n    \"@radix-ui/react-toggle-group\": \"^1.1.1\",\n    \"@radix-ui/react-tooltip\": \"^1.1.6\",\n    \"autoprefixer\": \"^10.4.20\",\n    \"class-variance-authority\": \"^0.7.1\",\n    \"clsx\": \"^2.1.1\",\n    \"cmdk\": \"1.0.4\",\n    \"date-fns\": \"4.1.0\",\n    \"embla-carousel-react\": \"8.5.1\",\n    \"input-otp\": \"1.4.1\",\n    \"lucide-react\": \"^0.454.0\",\n    \"next\": \"14.2.16\",\n    \"next-themes\": \"^0.4.4\",\n    \"react\": \"^19\",\n    \"react-day-picker\": \"8.10.1\",\n    \"react-dom\": \"^19\",\n    \"react-hook-form\": \"^7.54.1\",\n    \"react-resizable-panels\": \"^2.1.7\",\n    \"recharts\": \"2.15.0\",\n    \"sonner\": \"^1.7.1\",\n    \"tailwind-merge\": \"^2.5.5\",\n    \"tailwindcss-animate\": \"^1.0.7\",\n    \"vaul\": \"^0.9.6\",\n    \"zod\": \"^3.24.1\"\n  },\n  \"devDependencies\": {\n    \"jest\": \"^29.7.0\",\n    \"nodemon\": \"^3.0.1\",\n    \"supertest\": \"^6.3.3\",\n    \"@types/node\": \"^22\",\n    \"@types/react\": \"^18\",\n    \"@types/react-dom\": \"^18\",\n    \"postcss\": \"^8\",\n    \"tailwindcss\": \"^3.4.17\",\n    \"typescript\": \"^5\"\n  },\n  \"engines\": {\n    \"node\": \"\u003e=18.0.0\"\n  }\n}\n[V0_FILE]js:file=\".env.example\"\n# Server Configuration\nPORT=5000\nNODE_ENV=development\nFRONTEND_URL=http://localhost:3000\n\n# MongoDB Configuration\nMONGODB_URI=mongodb://localhost:27017/task-management\n\n# JWT Configuration\nJWT_SECRET=your_jwt_secret_key\n\n# Email Configuration\nEMAIL_HOST=smtp.example.com\nEMAIL_PORT=587\nEMAIL_SECURE=false\nEMAIL_USER=user@example.com\nEMAIL_PASS=password\nEMAIL_FROM=Task Management \u003cnoreply@taskmanagement.com\u003e\n\n# File Upload Configuration\nUPLOAD_PATH=uploads"])</script><script>self.__next_f.push([1,"5e:Td43,"])</script><script>self.__next_f.push([1,"// This is a simplified demo of some backend functionality\n\n// Mock database for demonstration\nconst mockTasks = [\n  {\n    id: \"task-1\",\n    title: \"Create new landing page\",\n    status: \"in-progress\",\n    priority: \"high\",\n    assignee: \"Emma Wilson\",\n    dueDate: \"2023-12-15\"\n  },\n  {\n    id: \"task-2\",\n    title: \"Update user authentication flow\",\n    status: \"to-do\",\n    priority: \"medium\",\n    assignee: \"Jackson Lee\",\n    dueDate: \"2023-12-20\"\n  },\n  {\n    id: \"task-3\",\n    title: \"Fix mobile responsiveness issues\",\n    status: \"in-review\",\n    priority: \"high\",\n    assignee: \"Liam Johnson\",\n    dueDate: \"2023-12-05\"\n  }\n];\n\n// Simulate JWT verification\nfunction verifyToken(token) {\n  // In a real app, this would verify the JWT signature\n  console.log(\"Verifying token:\", token);\n  return { id: \"user-1\", role: \"admin\" };\n}\n\n// Simulate task filtering API endpoint\nfunction getFilteredTasks(filters, user) {\n  console.log(`User ${user.id} with role ${user.role} requesting tasks`);\n  console.log(\"Applying filters:\", filters);\n  \n  let filteredTasks = [...mockTasks];\n  \n  // Apply status filter\n  if (filters.status \u0026\u0026 filters.status !== 'all') {\n    filteredTasks = filteredTasks.filter(task =\u003e task.status === filters.status);\n  }\n  \n  // Apply priority filter\n  if (filters.priority \u0026\u0026 filters.priority !== 'all') {\n    filteredTasks = filteredTasks.filter(task =\u003e task.priority === filters.priority);\n  }\n  \n  // Apply assignee filter\n  if (filters.assignee) {\n    filteredTasks = filteredTasks.filter(task =\u003e task.assignee === filters.assignee);\n  }\n  \n  console.log(`Found ${filteredTasks.length} tasks matching filters`);\n  return filteredTasks;\n}\n\n// Simulate creating a new task\nfunction createTask(taskData, user) {\n  console.log(`User ${user.id} creating new task`);\n  \n  // Check authorization\n  if (user.role !== 'admin' \u0026\u0026 user.role !== 'editor') {\n    throw new Error('Unauthorized: Only admins and editors can create tasks');\n  }\n  \n  // Validate required fields\n  if (!taskData.title) {\n    throw new Error('Task title is required');\n  }\n  \n  // Create new task\n  const newTask = {\n    id: `task-${mockTasks.length + 1}`,\n    title: taskData.title,\n    status: taskData.status || 'to-do',\n    priority: taskData.priority || 'medium',\n    assignee: taskData.assignee,\n    dueDate: taskData.dueDate,\n    createdBy: user.id,\n    createdAt: new Date().toISOString()\n  };\n  \n  console.log(\"Created new task:\", newTask);\n  return newTask;\n}\n\n// Demo execution\nconsole.log(\"=== Task Management API Demo ===\\n\");\n\n// Simulate authentication\nconst token = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\";\nconst user = verifyToken(token);\n\n// Demo 1: Get filtered tasks\nconsole.log(\"DEMO 1: Filtering tasks\");\nconst filters = { status: 'in-progress', priority: 'high' };\nconst filteredTasks = getFilteredTasks(filters, user);\nconsole.log(\"Filtered tasks:\", JSON.stringify(filteredTasks, null, 2));\nconsole.log(\"\\n---\\n\");\n\n// Demo 2: Create a new task\nconsole.log(\"DEMO 2: Creating a new task\");\ntry {\n  const newTaskData = {\n    title: \"Implement notification system\",\n    status: \"to-do\",\n    priority: \"high\",\n    assignee: \"Sophia Chen\",\n    dueDate: \"2023-12-25\"\n  };\n  \n  const newTask = createTask(newTaskData, user);\n  console.log(\"Task created successfully:\", JSON.stringify(newTask, null, 2));\n} catch (error) {\n  console.error(\"Error creating task:\", error.message);\n}"])</script><script>self.__next_f.push([1,"5f:Td43,"])</script><script>self.__next_f.push([1,"// This is a simplified demo of some backend functionality\n\n// Mock database for demonstration\nconst mockTasks = [\n  {\n    id: \"task-1\",\n    title: \"Create new landing page\",\n    status: \"in-progress\",\n    priority: \"high\",\n    assignee: \"Emma Wilson\",\n    dueDate: \"2023-12-15\"\n  },\n  {\n    id: \"task-2\",\n    title: \"Update user authentication flow\",\n    status: \"to-do\",\n    priority: \"medium\",\n    assignee: \"Jackson Lee\",\n    dueDate: \"2023-12-20\"\n  },\n  {\n    id: \"task-3\",\n    title: \"Fix mobile responsiveness issues\",\n    status: \"in-review\",\n    priority: \"high\",\n    assignee: \"Liam Johnson\",\n    dueDate: \"2023-12-05\"\n  }\n];\n\n// Simulate JWT verification\nfunction verifyToken(token) {\n  // In a real app, this would verify the JWT signature\n  console.log(\"Verifying token:\", token);\n  return { id: \"user-1\", role: \"admin\" };\n}\n\n// Simulate task filtering API endpoint\nfunction getFilteredTasks(filters, user) {\n  console.log(`User ${user.id} with role ${user.role} requesting tasks`);\n  console.log(\"Applying filters:\", filters);\n  \n  let filteredTasks = [...mockTasks];\n  \n  // Apply status filter\n  if (filters.status \u0026\u0026 filters.status !== 'all') {\n    filteredTasks = filteredTasks.filter(task =\u003e task.status === filters.status);\n  }\n  \n  // Apply priority filter\n  if (filters.priority \u0026\u0026 filters.priority !== 'all') {\n    filteredTasks = filteredTasks.filter(task =\u003e task.priority === filters.priority);\n  }\n  \n  // Apply assignee filter\n  if (filters.assignee) {\n    filteredTasks = filteredTasks.filter(task =\u003e task.assignee === filters.assignee);\n  }\n  \n  console.log(`Found ${filteredTasks.length} tasks matching filters`);\n  return filteredTasks;\n}\n\n// Simulate creating a new task\nfunction createTask(taskData, user) {\n  console.log(`User ${user.id} creating new task`);\n  \n  // Check authorization\n  if (user.role !== 'admin' \u0026\u0026 user.role !== 'editor') {\n    throw new Error('Unauthorized: Only admins and editors can create tasks');\n  }\n  \n  // Validate required fields\n  if (!taskData.title) {\n    throw new Error('Task title is required');\n  }\n  \n  // Create new task\n  const newTask = {\n    id: `task-${mockTasks.length + 1}`,\n    title: taskData.title,\n    status: taskData.status || 'to-do',\n    priority: taskData.priority || 'medium',\n    assignee: taskData.assignee,\n    dueDate: taskData.dueDate,\n    createdBy: user.id,\n    createdAt: new Date().toISOString()\n  };\n  \n  console.log(\"Created new task:\", newTask);\n  return newTask;\n}\n\n// Demo execution\nconsole.log(\"=== Task Management API Demo ===\\n\");\n\n// Simulate authentication\nconst token = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\";\nconst user = verifyToken(token);\n\n// Demo 1: Get filtered tasks\nconsole.log(\"DEMO 1: Filtering tasks\");\nconst filters = { status: 'in-progress', priority: 'high' };\nconst filteredTasks = getFilteredTasks(filters, user);\nconsole.log(\"Filtered tasks:\", JSON.stringify(filteredTasks, null, 2));\nconsole.log(\"\\n---\\n\");\n\n// Demo 2: Create a new task\nconsole.log(\"DEMO 2: Creating a new task\");\ntry {\n  const newTaskData = {\n    title: \"Implement notification system\",\n    status: \"to-do\",\n    priority: \"high\",\n    assignee: \"Sophia Chen\",\n    dueDate: \"2023-12-25\"\n  };\n  \n  const newTask = createTask(newTaskData, user);\n  console.log(\"Task created successfully:\", JSON.stringify(newTask, null, 2));\n} catch (error) {\n  console.error(\"Error creating task:\", error.message);\n}"])</script><script>self.__next_f.push([1,"60:T92d,"])</script><script>self.__next_f.push([1,"import express from \"express\";\nimport cors from \"cors\";\nimport dotenv from \"dotenv\";\nimport mongoose from \"mongoose\";\nimport { createServer } from \"http\";\nimport { Server } from \"socket.io\";\nimport cookieParser from \"cookie-parser\";\nimport path from \"path\";\nimport { fileURLToPath } from \"url\";\n\n// Import routes\nimport authRoutes from \"./routes/auth.js\";\nimport userRoutes from \"./routes/users.js\";\nimport taskRoutes from \"./routes/tasks.js\";\nimport commentRoutes from \"./routes/comments.js\";\nimport reportRoutes from \"./routes/reports.js\";\nimport notificationRoutes from \"./routes/notifications.js\";\n\n// Import socket handler\nimport setupSocketHandlers from \"./socket/socketHandlers.js\";\n\n// Import middleware\nimport { errorHandler } from \"./middleware/errorHandler.js\";\n\n// Configure environment variables\ndotenv.config();\n\n// Create Express app\nconst app = express();\nconst PORT = process.env.PORT || 5000;\n\n// Create HTTP server\nconst httpServer = createServer(app);\n\n// Setup Socket.io\nconst io = new Server(httpServer, {\n  cors: {\n    origin: process.env.FRONTEND_URL || \"http://localhost:3000\",\n    methods: [\"GET\", \"POST\"],\n    credentials: true,\n  },\n});\n\n// Connect to MongoDB\nmongoose\n  .connect(process.env.MONGODB_URI)\n  .then(() =\u003e console.log(\"Connected to MongoDB\"))\n  .catch((err) =\u003e {\n    console.error(\"MongoDB connection error:\", err);\n    process.exit(1);\n  });\n\n// Middleware\napp.use(\n  cors({\n    origin: process.env.FRONTEND_URL || \"http://localhost:3000\",\n    credentials: true,\n  }),\n);\napp.use(express.json());\napp.use(express.urlencoded({ extended: true }));\napp.use(cookieParser());\n\n// Set up socket handlers\nsetupSocketHandlers(io);\n\n// Make io accessible to route handlers\napp.use((req, res, next) =\u003e {\n  req.io = io;\n  next();\n});\n\n// API routes\napp.use(\"/api/auth\", authRoutes);\napp.use(\"/api/users\", userRoutes);\napp.use(\"/api/tasks\", taskRoutes);\napp.use(\"/api/comments\", commentRoutes);\napp.use(\"/api/reports\", reportRoutes);\napp.use(\"/api/notifications\", notificationRoutes);\n\n// Serve uploaded files\nconst __dirname = path.dirname(fileURLToPath(import.meta.url));\napp.use(\"/uploads\", express.static(path.join(__dirname, \"uploads\")));\n\n// Error handling middleware\napp.use(errorHandler);\n\n// Start server\nhttpServer.listen(PORT, () =\u003e {\n  console.log(`Server running on port ${PORT}`);\n});\n\nexport default app;"])</script><script>self.__next_f.push([1,"61:T92d,"])</script><script>self.__next_f.push([1,"import express from \"express\";\nimport cors from \"cors\";\nimport dotenv from \"dotenv\";\nimport mongoose from \"mongoose\";\nimport { createServer } from \"http\";\nimport { Server } from \"socket.io\";\nimport cookieParser from \"cookie-parser\";\nimport path from \"path\";\nimport { fileURLToPath } from \"url\";\n\n// Import routes\nimport authRoutes from \"./routes/auth.js\";\nimport userRoutes from \"./routes/users.js\";\nimport taskRoutes from \"./routes/tasks.js\";\nimport commentRoutes from \"./routes/comments.js\";\nimport reportRoutes from \"./routes/reports.js\";\nimport notificationRoutes from \"./routes/notifications.js\";\n\n// Import socket handler\nimport setupSocketHandlers from \"./socket/socketHandlers.js\";\n\n// Import middleware\nimport { errorHandler } from \"./middleware/errorHandler.js\";\n\n// Configure environment variables\ndotenv.config();\n\n// Create Express app\nconst app = express();\nconst PORT = process.env.PORT || 5000;\n\n// Create HTTP server\nconst httpServer = createServer(app);\n\n// Setup Socket.io\nconst io = new Server(httpServer, {\n  cors: {\n    origin: process.env.FRONTEND_URL || \"http://localhost:3000\",\n    methods: [\"GET\", \"POST\"],\n    credentials: true,\n  },\n});\n\n// Connect to MongoDB\nmongoose\n  .connect(process.env.MONGODB_URI)\n  .then(() =\u003e console.log(\"Connected to MongoDB\"))\n  .catch((err) =\u003e {\n    console.error(\"MongoDB connection error:\", err);\n    process.exit(1);\n  });\n\n// Middleware\napp.use(\n  cors({\n    origin: process.env.FRONTEND_URL || \"http://localhost:3000\",\n    credentials: true,\n  }),\n);\napp.use(express.json());\napp.use(express.urlencoded({ extended: true }));\napp.use(cookieParser());\n\n// Set up socket handlers\nsetupSocketHandlers(io);\n\n// Make io accessible to route handlers\napp.use((req, res, next) =\u003e {\n  req.io = io;\n  next();\n});\n\n// API routes\napp.use(\"/api/auth\", authRoutes);\napp.use(\"/api/users\", userRoutes);\napp.use(\"/api/tasks\", taskRoutes);\napp.use(\"/api/comments\", commentRoutes);\napp.use(\"/api/reports\", reportRoutes);\napp.use(\"/api/notifications\", notificationRoutes);\n\n// Serve uploaded files\nconst __dirname = path.dirname(fileURLToPath(import.meta.url));\napp.use(\"/uploads\", express.static(path.join(__dirname, \"uploads\")));\n\n// Error handling middleware\napp.use(errorHandler);\n\n// Start server\nhttpServer.listen(PORT, () =\u003e {\n  console.log(`Server running on port ${PORT}`);\n});\n\nexport default app;"])</script><script>self.__next_f.push([1,"62:Tb1e,"])</script><script>self.__next_f.push([1,"import mongoose from \"mongoose\";\nimport bcrypt from \"bcrypt\";\n\nconst userSchema = new mongoose.Schema(\n  {\n    name: {\n      type: String,\n      required: [true, \"Name is required\"],\n      trim: true,\n    },\n    email: {\n      type: String,\n      required: [true, \"Email is required\"],\n      unique: true,\n      lowercase: true,\n      trim: true,\n      match: [/^\\S+@\\S+\\.\\S+$/, \"Please use a valid email address\"],\n    },\n    password: {\n      type: String,\n      required: [true, \"Password is required\"],\n      minlength: [8, \"Password must be at least 8 characters long\"],\n    },\n    role: {\n      type: String,\n      enum: [\"admin\", \"editor\", \"viewer\"],\n      default: \"viewer\",\n    },\n    avatar: {\n      type: String,\n      default: \"\",\n    },\n    bio: {\n      type: String,\n      default: \"\",\n    },\n    jobTitle: {\n      type: String,\n      default: \"\",\n    },\n    company: {\n      type: String,\n      default: \"\",\n    },\n    status: {\n      type: String,\n      enum: [\"active\", \"inactive\", \"pending\"],\n      default: \"active\",\n    },\n    notificationPreferences: {\n      emailNotifications: {\n        type: Boolean,\n        default: true,\n      },\n      pushNotifications: {\n        type: Boolean,\n        default: true,\n      },\n      taskAssigned: {\n        type: Boolean,\n        default: true,\n      },\n      taskUpdated: {\n        type: Boolean,\n        default: true,\n      },\n      taskCompleted: {\n        type: Boolean,\n        default: true,\n      },\n      commentAdded: {\n        type: Boolean,\n        default: true,\n      },\n      deadlineReminder: {\n        type: Boolean,\n        default: true,\n      },\n      weeklyDigest: {\n        type: Boolean,\n        default: false,\n      },\n    },\n    twoFactorEnabled: {\n      type: Boolean,\n      default: false,\n    },\n    resetPasswordToken: String,\n    resetPasswordExpires: Date,\n    lastActive: {\n      type: Date,\n      default: Date.now,\n    },\n  },\n  {\n    timestamps: true,\n  },\n);\n\n// Pre-save hook to hash password\nuserSchema.pre(\"save\", async function (next) {\n  // Only hash the password if it's modified or new\n  if (!this.isModified(\"password\")) return next();\n\n  try {\n    // Generate salt\n    const salt = await bcrypt.genSalt(10);\n    // Hash password\n    this.password = await bcrypt.hash(this.password, salt);\n    next();\n  } catch (error) {\n    next(error);\n  }\n});\n\n// Method to compare passwords\nuserSchema.methods.comparePassword = async function (candidatePassword) {\n  return await bcrypt.compare(candidatePassword, this.password);\n};\n\n// Method to return user data without sensitive information\nuserSchema.methods.toJSON = function () {\n  const user = this.toObject();\n  delete user.password;\n  delete user.resetPasswordToken;\n  delete user.resetPasswordExpires;\n  return user;\n};\n\nconst User = mongoose.model(\"User\", userSchema);\n\nexport default User;"])</script><script>self.__next_f.push([1,"63:Tb1e,"])</script><script>self.__next_f.push([1,"import mongoose from \"mongoose\";\nimport bcrypt from \"bcrypt\";\n\nconst userSchema = new mongoose.Schema(\n  {\n    name: {\n      type: String,\n      required: [true, \"Name is required\"],\n      trim: true,\n    },\n    email: {\n      type: String,\n      required: [true, \"Email is required\"],\n      unique: true,\n      lowercase: true,\n      trim: true,\n      match: [/^\\S+@\\S+\\.\\S+$/, \"Please use a valid email address\"],\n    },\n    password: {\n      type: String,\n      required: [true, \"Password is required\"],\n      minlength: [8, \"Password must be at least 8 characters long\"],\n    },\n    role: {\n      type: String,\n      enum: [\"admin\", \"editor\", \"viewer\"],\n      default: \"viewer\",\n    },\n    avatar: {\n      type: String,\n      default: \"\",\n    },\n    bio: {\n      type: String,\n      default: \"\",\n    },\n    jobTitle: {\n      type: String,\n      default: \"\",\n    },\n    company: {\n      type: String,\n      default: \"\",\n    },\n    status: {\n      type: String,\n      enum: [\"active\", \"inactive\", \"pending\"],\n      default: \"active\",\n    },\n    notificationPreferences: {\n      emailNotifications: {\n        type: Boolean,\n        default: true,\n      },\n      pushNotifications: {\n        type: Boolean,\n        default: true,\n      },\n      taskAssigned: {\n        type: Boolean,\n        default: true,\n      },\n      taskUpdated: {\n        type: Boolean,\n        default: true,\n      },\n      taskCompleted: {\n        type: Boolean,\n        default: true,\n      },\n      commentAdded: {\n        type: Boolean,\n        default: true,\n      },\n      deadlineReminder: {\n        type: Boolean,\n        default: true,\n      },\n      weeklyDigest: {\n        type: Boolean,\n        default: false,\n      },\n    },\n    twoFactorEnabled: {\n      type: Boolean,\n      default: false,\n    },\n    resetPasswordToken: String,\n    resetPasswordExpires: Date,\n    lastActive: {\n      type: Date,\n      default: Date.now,\n    },\n  },\n  {\n    timestamps: true,\n  },\n);\n\n// Pre-save hook to hash password\nuserSchema.pre(\"save\", async function (next) {\n  // Only hash the password if it's modified or new\n  if (!this.isModified(\"password\")) return next();\n\n  try {\n    // Generate salt\n    const salt = await bcrypt.genSalt(10);\n    // Hash password\n    this.password = await bcrypt.hash(this.password, salt);\n    next();\n  } catch (error) {\n    next(error);\n  }\n});\n\n// Method to compare passwords\nuserSchema.methods.comparePassword = async function (candidatePassword) {\n  return await bcrypt.compare(candidatePassword, this.password);\n};\n\n// Method to return user data without sensitive information\nuserSchema.methods.toJSON = function () {\n  const user = this.toObject();\n  delete user.password;\n  delete user.resetPasswordToken;\n  delete user.resetPasswordExpires;\n  return user;\n};\n\nconst User = mongoose.model(\"User\", userSchema);\n\nexport default User;"])</script><script>self.__next_f.push([1,"64:T91e,"])</script><script>self.__next_f.push([1,"import mongoose from \"mongoose\";\n\nconst subtaskSchema = new mongoose.Schema(\n  {\n    title: {\n      type: String,\n      required: true,\n      trim: true,\n    },\n    completed: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  {\n    timestamps: true,\n  },\n);\n\nconst taskSchema = new mongoose.Schema(\n  {\n    title: {\n      type: String,\n      required: [true, \"Task title is required\"],\n      trim: true,\n    },\n    description: {\n      type: String,\n      trim: true,\n    },\n    status: {\n      type: String,\n      enum: [\"to-do\", \"in-progress\", \"in-review\", \"completed\"],\n      default: \"to-do\",\n    },\n    priority: {\n      type: String,\n      enum: [\"high\", \"medium\", \"low\"],\n      default: \"medium\",\n    },\n    dueDate: {\n      type: Date,\n    },\n    assignee: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"User\",\n    },\n    creator: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"User\",\n      required: true,\n    },\n    tags: [\n      {\n        type: String,\n        trim: true,\n      },\n    ],\n    subtasks: [subtaskSchema],\n    attachments: [\n      {\n        name: String,\n        path: String,\n        type: String,\n        size: Number,\n        uploadedAt: {\n          type: Date,\n          default: Date.now,\n        },\n      },\n    ],\n    progress: {\n      type: Number,\n      default: 0,\n      min: 0,\n      max: 100,\n    },\n    watchers: [\n      {\n        type: mongoose.Schema.Types.ObjectId,\n        ref: \"User\",\n      },\n    ],\n  },\n  {\n    timestamps: true,\n  },\n);\n\n// Method to calculate progress based on subtasks\ntaskSchema.methods.calculateProgress = function () {\n  if (this.subtasks.length === 0) return 0;\n\n  const completedCount = this.subtasks.filter((subtask) =\u003e subtask.completed).length;\n  return Math.round((completedCount / this.subtasks.length) * 100);\n};\n\n// Pre-save hook to update progress\ntaskSchema.pre(\"save\", function (next) {\n  if (this.subtasks \u0026\u0026 this.subtasks.length \u003e 0) {\n    this.progress = this.calculateProgress();\n  }\n  next();\n});\n\n// Create indexes for better query performance\ntaskSchema.index({ status: 1 });\ntaskSchema.index({ priority: 1 });\ntaskSchema.index({ assignee: 1 });\ntaskSchema.index({ dueDate: 1 });\ntaskSchema.index({ creator: 1 });\ntaskSchema.index({ tags: 1 });\n\nconst Task = mongoose.model(\"Task\", taskSchema);\n\nexport default Task;"])</script><script>self.__next_f.push([1,"65:T91e,"])</script><script>self.__next_f.push([1,"import mongoose from \"mongoose\";\n\nconst subtaskSchema = new mongoose.Schema(\n  {\n    title: {\n      type: String,\n      required: true,\n      trim: true,\n    },\n    completed: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  {\n    timestamps: true,\n  },\n);\n\nconst taskSchema = new mongoose.Schema(\n  {\n    title: {\n      type: String,\n      required: [true, \"Task title is required\"],\n      trim: true,\n    },\n    description: {\n      type: String,\n      trim: true,\n    },\n    status: {\n      type: String,\n      enum: [\"to-do\", \"in-progress\", \"in-review\", \"completed\"],\n      default: \"to-do\",\n    },\n    priority: {\n      type: String,\n      enum: [\"high\", \"medium\", \"low\"],\n      default: \"medium\",\n    },\n    dueDate: {\n      type: Date,\n    },\n    assignee: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"User\",\n    },\n    creator: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"User\",\n      required: true,\n    },\n    tags: [\n      {\n        type: String,\n        trim: true,\n      },\n    ],\n    subtasks: [subtaskSchema],\n    attachments: [\n      {\n        name: String,\n        path: String,\n        type: String,\n        size: Number,\n        uploadedAt: {\n          type: Date,\n          default: Date.now,\n        },\n      },\n    ],\n    progress: {\n      type: Number,\n      default: 0,\n      min: 0,\n      max: 100,\n    },\n    watchers: [\n      {\n        type: mongoose.Schema.Types.ObjectId,\n        ref: \"User\",\n      },\n    ],\n  },\n  {\n    timestamps: true,\n  },\n);\n\n// Method to calculate progress based on subtasks\ntaskSchema.methods.calculateProgress = function () {\n  if (this.subtasks.length === 0) return 0;\n\n  const completedCount = this.subtasks.filter((subtask) =\u003e subtask.completed).length;\n  return Math.round((completedCount / this.subtasks.length) * 100);\n};\n\n// Pre-save hook to update progress\ntaskSchema.pre(\"save\", function (next) {\n  if (this.subtasks \u0026\u0026 this.subtasks.length \u003e 0) {\n    this.progress = this.calculateProgress();\n  }\n  next();\n});\n\n// Create indexes for better query performance\ntaskSchema.index({ status: 1 });\ntaskSchema.index({ priority: 1 });\ntaskSchema.index({ assignee: 1 });\ntaskSchema.index({ dueDate: 1 });\ntaskSchema.index({ creator: 1 });\ntaskSchema.index({ tags: 1 });\n\nconst Task = mongoose.model(\"Task\", taskSchema);\n\nexport default Task;"])</script><script>self.__next_f.push([1,"66:T4a5,import mongoose from \"mongoose\";\n\nconst notificationSchema = new mongoose.Schema(\n  {\n    recipient: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"User\",\n      required: true,\n    },\n    sender: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"User\",\n    },\n    type: {\n      type: String,\n      enum: [\n        \"task_assigned\",\n        \"task_updated\",\n        \"task_completed\",\n        \"comment_added\",\n        \"deadline_reminder\",\n        \"mention\",\n        \"system\",\n      ],\n      required: true,\n    },\n    title: {\n      type: String,\n      required: true,\n    },\n    message: {\n      type: String,\n      required: true,\n    },\n    read: {\n      type: Boolean,\n      default: false,\n    },\n    relatedTask: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"Task\",\n    },\n    relatedComment: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"Comment\",\n    },\n  },\n  {\n    timestamps: true,\n  },\n);\n\n// Create indexes for better query performance\nnotificationSchema.index({ recipient: 1, read: 1 });\nnotificationSchema.index({ createdAt: -1 });\n\nconst Notification = mongoose.model(\"Notification\", notificationSchema);\n\nexport default Notification;67:T4a5,import mongoose from \"mongoose\";\n\nconst notificationSchema = new mongoose.Schema(\n  {\n    recipient: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"User\",\n      required: true,\n    },\n    sender: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"User\",\n    },\n    type: {\n      type: String,\n      enum: [\n        \"task_assigned\",\n        \"task_updated\",\n        \"task_completed\",\n        \"comment_added\",\n        \"deadline_reminder\",\n        \"mention\",\n        \"system\",\n      ],\n      required: true,\n    },\n    title: {\n      type: String,\n      required: true,\n    },\n    message: {\n      type: String,\n      required: true,\n    },\n    read: {\n      type: Boolean,\n      default: false,\n    },\n    relatedTask: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"Task\",\n    },\n    relatedComment: {\n      type: mon"])</script><script>self.__next_f.push([1,"goose.Schema.Types.ObjectId,\n      ref: \"Comment\",\n    },\n  },\n  {\n    timestamps: true,\n  },\n);\n\n// Create indexes for better query performance\nnotificationSchema.index({ recipient: 1, read: 1 });\nnotificationSchema.index({ createdAt: -1 });\n\nconst Notification = mongoose.model(\"Notification\", notificationSchema);\n\nexport default Notification;68:Ta6a,"])</script><script>self.__next_f.push([1,"import jwt from \"jsonwebtoken\";\nimport User from \"../models/User.js\";\nimport { createError } from \"../utils/error.js\";\n\n// Verify JWT token\nexport const verifyToken = async (req, res, next) =\u003e {\n  try {\n    // Get token from cookies or authorization header\n    const token =\n      req.cookies.token ||\n      (req.headers.authorization \u0026\u0026 req.headers.authorization.startsWith(\"Bearer\")\n        ? req.headers.authorization.split(\" \")[1]\n        : null);\n\n    if (!token) {\n      return next(createError(401, \"You are not authenticated\"));\n    }\n\n    // Verify token\n    const decoded = jwt.verify(token, process.env.JWT_SECRET);\n\n    // Find user\n    const user = await User.findById(decoded.id);\n    if (!user) {\n      return next(createError(404, \"User not found\"));\n    }\n\n    // Check if user is active\n    if (user.status !== \"active\") {\n      return next(createError(403, \"Your account is not active\"));\n    }\n\n    // Update last active timestamp\n    user.lastActive = new Date();\n    await user.save();\n\n    // Attach user to request\n    req.user = user;\n    next();\n  } catch (err) {\n    if (err.name === \"JsonWebTokenError\") {\n      return next(createError(401, \"Invalid token\"));\n    }\n    if (err.name === \"TokenExpiredError\") {\n      return next(createError(401, \"Token expired\"));\n    }\n    next(err);\n  }\n};\n\n// Check if user is admin\nexport const verifyAdmin = (req, res, next) =\u003e {\n  if (req.user.role !== \"admin\") {\n    return next(createError(403, \"You are not authorized to perform this action\"));\n  }\n  next();\n};\n\n// Check if user is admin or editor\nexport const verifyAdminOrEditor = (req, res, next) =\u003e {\n  if (req.user.role !== \"admin\" \u0026\u0026 req.user.role !== \"editor\") {\n    return next(createError(403, \"You are not authorized to perform this action\"));\n  }\n  next();\n};\n\n// Check if user is the owner of the resource or an admin\nexport const verifyOwnerOrAdmin = (resourceModel) =\u003e {\n  return async (req, res, next) =\u003e {\n    try {\n      const resourceId = req.params.id;\n      const resource = await resourceModel.findById(resourceId);\n\n      if (!resource) {\n        return next(createError(404, \"Resource not found\"));\n      }\n\n      // Check if user is admin or the owner\n      const isOwner = resource.creator \u0026\u0026 resource.creator.toString() === req.user._id.toString();\n      const isAssignee = resource.assignee \u0026\u0026 resource.assignee.toString() === req.user._id.toString();\n\n      if (req.user.role === \"admin\" || isOwner || isAssignee) {\n        req.resource = resource;\n        return next();\n      }\n\n      return next(createError(403, \"You are not authorized to perform this action\"));\n    } catch (err) {\n      next(err);\n    }\n  };\n};"])</script><script>self.__next_f.push([1,"69:Ta6a,"])</script><script>self.__next_f.push([1,"import jwt from \"jsonwebtoken\";\nimport User from \"../models/User.js\";\nimport { createError } from \"../utils/error.js\";\n\n// Verify JWT token\nexport const verifyToken = async (req, res, next) =\u003e {\n  try {\n    // Get token from cookies or authorization header\n    const token =\n      req.cookies.token ||\n      (req.headers.authorization \u0026\u0026 req.headers.authorization.startsWith(\"Bearer\")\n        ? req.headers.authorization.split(\" \")[1]\n        : null);\n\n    if (!token) {\n      return next(createError(401, \"You are not authenticated\"));\n    }\n\n    // Verify token\n    const decoded = jwt.verify(token, process.env.JWT_SECRET);\n\n    // Find user\n    const user = await User.findById(decoded.id);\n    if (!user) {\n      return next(createError(404, \"User not found\"));\n    }\n\n    // Check if user is active\n    if (user.status !== \"active\") {\n      return next(createError(403, \"Your account is not active\"));\n    }\n\n    // Update last active timestamp\n    user.lastActive = new Date();\n    await user.save();\n\n    // Attach user to request\n    req.user = user;\n    next();\n  } catch (err) {\n    if (err.name === \"JsonWebTokenError\") {\n      return next(createError(401, \"Invalid token\"));\n    }\n    if (err.name === \"TokenExpiredError\") {\n      return next(createError(401, \"Token expired\"));\n    }\n    next(err);\n  }\n};\n\n// Check if user is admin\nexport const verifyAdmin = (req, res, next) =\u003e {\n  if (req.user.role !== \"admin\") {\n    return next(createError(403, \"You are not authorized to perform this action\"));\n  }\n  next();\n};\n\n// Check if user is admin or editor\nexport const verifyAdminOrEditor = (req, res, next) =\u003e {\n  if (req.user.role !== \"admin\" \u0026\u0026 req.user.role !== \"editor\") {\n    return next(createError(403, \"You are not authorized to perform this action\"));\n  }\n  next();\n};\n\n// Check if user is the owner of the resource or an admin\nexport const verifyOwnerOrAdmin = (resourceModel) =\u003e {\n  return async (req, res, next) =\u003e {\n    try {\n      const resourceId = req.params.id;\n      const resource = await resourceModel.findById(resourceId);\n\n      if (!resource) {\n        return next(createError(404, \"Resource not found\"));\n      }\n\n      // Check if user is admin or the owner\n      const isOwner = resource.creator \u0026\u0026 resource.creator.toString() === req.user._id.toString();\n      const isAssignee = resource.assignee \u0026\u0026 resource.assignee.toString() === req.user._id.toString();\n\n      if (req.user.role === \"admin\" || isOwner || isAssignee) {\n        req.resource = resource;\n        return next();\n      }\n\n      return next(createError(403, \"You are not authorized to perform this action\"));\n    } catch (err) {\n      next(err);\n    }\n  };\n};"])</script><script>self.__next_f.push([1,"6a:T783,import multer from \"multer\";\nimport path from \"path\";\nimport fs from \"fs\";\nimport { fileURLToPath } from \"url\";\nimport { createError } from \"../utils/error.js\";\n\n// Get directory name\nconst __dirname = path.dirname(fileURLToPath(import.meta.url));\n\n// Create uploads directory if it doesn't exist\nconst uploadsDir = path.join(__dirname, \"../uploads\");\nif (!fs.existsSync(uploadsDir)) {\n  fs.mkdirSync(uploadsDir, { recursive: true });\n}\n\n// Configure storage\nconst storage = multer.diskStorage({\n  destination: (req, file, cb) =\u003e {\n    // Create subdirectory based on file type\n    let dir = \"general\";\n\n    if (file.mimetype.startsWith(\"image/\")) {\n      dir = \"images\";\n    } else if (file.mimetype.includes(\"pdf\") || file.mimetype.includes(\"document\")) {\n      dir = \"documents\";\n    }\n\n    const fullPath = path.join(uploadsDir, dir);\n\n    // Create directory if it doesn't exist\n    if (!fs.existsSync(fullPath)) {\n      fs.mkdirSync(fullPath, { recursive: true });\n    }\n\n    cb(null, path.join(\"uploads\", dir));\n  },\n  filename: (req, file, cb) =\u003e {\n    // Generate unique filename\n    const uniqueSuffix = Date.now() + \"-\" + Math.round(Math.random() * 1e9);\n    const ext = path.extname(file.originalname);\n    cb(null, file.fieldname + \"-\" + uniqueSuffix + ext);\n  },\n});\n\n// File filter\nconst fileFilter = (req, file, cb) =\u003e {\n  // Accept images, documents, and common file types\n  const allowedFileTypes = /jpeg|jpg|png|gif|pdf|doc|docx|xls|xlsx|ppt|pptx|txt|csv|zip|rar/;\n  const extname = allowedFileTypes.test(path.extname(file.originalname).toLowerCase());\n  const mimetype = allowedFileTypes.test(file.mimetype);\n\n  if (extname \u0026\u0026 mimetype) {\n    return cb(null, true);\n  } else {\n    cb(createError(400, \"Only certain file types are allowed\"));\n  }\n};\n\n// Configure multer\nconst upload = multer({\n  storage,\n  fileFilter,\n  limits: {\n    fileSize: 10 * 1024 * 1024, // 10MB\n  },\n});\n\nexport default upload;6b:T783,import multer from \"multer\";\nimport path from \"path\";\nimport fs from \"fs\";\nimport { fileURLToPath } from \"url"])</script><script>self.__next_f.push([1,"\";\nimport { createError } from \"../utils/error.js\";\n\n// Get directory name\nconst __dirname = path.dirname(fileURLToPath(import.meta.url));\n\n// Create uploads directory if it doesn't exist\nconst uploadsDir = path.join(__dirname, \"../uploads\");\nif (!fs.existsSync(uploadsDir)) {\n  fs.mkdirSync(uploadsDir, { recursive: true });\n}\n\n// Configure storage\nconst storage = multer.diskStorage({\n  destination: (req, file, cb) =\u003e {\n    // Create subdirectory based on file type\n    let dir = \"general\";\n\n    if (file.mimetype.startsWith(\"image/\")) {\n      dir = \"images\";\n    } else if (file.mimetype.includes(\"pdf\") || file.mimetype.includes(\"document\")) {\n      dir = \"documents\";\n    }\n\n    const fullPath = path.join(uploadsDir, dir);\n\n    // Create directory if it doesn't exist\n    if (!fs.existsSync(fullPath)) {\n      fs.mkdirSync(fullPath, { recursive: true });\n    }\n\n    cb(null, path.join(\"uploads\", dir));\n  },\n  filename: (req, file, cb) =\u003e {\n    // Generate unique filename\n    const uniqueSuffix = Date.now() + \"-\" + Math.round(Math.random() * 1e9);\n    const ext = path.extname(file.originalname);\n    cb(null, file.fieldname + \"-\" + uniqueSuffix + ext);\n  },\n});\n\n// File filter\nconst fileFilter = (req, file, cb) =\u003e {\n  // Accept images, documents, and common file types\n  const allowedFileTypes = /jpeg|jpg|png|gif|pdf|doc|docx|xls|xlsx|ppt|pptx|txt|csv|zip|rar/;\n  const extname = allowedFileTypes.test(path.extname(file.originalname).toLowerCase());\n  const mimetype = allowedFileTypes.test(file.mimetype);\n\n  if (extname \u0026\u0026 mimetype) {\n    return cb(null, true);\n  } else {\n    cb(createError(400, \"Only certain file types are allowed\"));\n  }\n};\n\n// Configure multer\nconst upload = multer({\n  storage,\n  fileFilter,\n  limits: {\n    fileSize: 10 * 1024 * 1024, // 10MB\n  },\n});\n\nexport default upload;6c:T1a8a,"])</script><script>self.__next_f.push([1,"import express from \"express\";\nimport jwt from \"jsonwebtoken\";\nimport User from \"../models/User.js\";\nimport { verifyToken } from \"../middleware/auth.js\";\nimport { createError } from \"../utils/error.js\";\nimport { sendEmail } from \"../utils/email.js\";\nimport crypto from \"crypto\";\n\nconst router = express.Router();\n\n// Register a new user\nrouter.post(\"/register\", async (req, res, next) =\u003e {\n  try {\n    const { name, email, password } = req.body;\n\n    // Check if user already exists\n    const existingUser = await User.findOne({ email });\n    if (existingUser) {\n      return next(createError(400, \"User with this email already exists\"));\n    }\n\n    // Create new user\n    const newUser = new User({\n      name,\n      email,\n      password,\n    });\n\n    // Save user to database\n    const savedUser = await newUser.save();\n\n    // Generate JWT token\n    const token = jwt.sign({ id: savedUser._id, role: savedUser.role }, process.env.JWT_SECRET, { expiresIn: \"7d\" });\n\n    // Set token as cookie\n    res.cookie(\"token\", token, {\n      httpOnly: true,\n      secure: process.env.NODE_ENV === \"production\",\n      maxAge: 7 * 24 * 60 * 60 * 1000, // 7 days\n    });\n\n    // Send welcome email\n    sendEmail({\n      to: savedUser.email,\n      subject: \"Welcome to Task Management App\",\n      text: `Hello ${savedUser.name},\n\nWelcome to our Task Management App! Your account has been created successfully.\n\nBest regards,\nThe Task Management Team`,\n    });\n\n    res.status(201).json({\n      success: true,\n      message: \"User registered successfully\",\n      user: savedUser,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Login user\nrouter.post(\"/login\", async (req, res, next) =\u003e {\n  try {\n    const { email, password } = req.body;\n\n    // Find user by email\n    const user = await User.findOne({ email });\n    if (!user) {\n      return next(createError(404, \"User not found\"));\n    }\n\n    // Check if user is active\n    if (user.status !== \"active\") {\n      return next(createError(403, \"Your account is not active\"));\n    }\n\n    // Check password\n    const isPasswordValid = await user.comparePassword(password);\n    if (!isPasswordValid) {\n      return next(createError(401, \"Invalid credentials\"));\n    }\n\n    // Generate JWT token\n    const token = jwt.sign({ id: user._id, role: user.role }, process.env.JWT_SECRET, { expiresIn: \"7d\" });\n\n    // Set token as cookie\n    res.cookie(\"token\", token, {\n      httpOnly: true,\n      secure: process.env.NODE_ENV === \"production\",\n      maxAge: 7 * 24 * 60 * 60 * 1000, // 7 days\n    });\n\n    // Update last active timestamp\n    user.lastActive = new Date();\n    await user.save();\n\n    res.status(200).json({\n      success: true,\n      message: \"Login successful\",\n      user,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Logout user\nrouter.post(\"/logout\", (req, res) =\u003e {\n  res.clearCookie(\"token\");\n  res.status(200).json({\n    success: true,\n    message: \"Logout successful\",\n  });\n});\n\n// Get current user\nrouter.get(\"/me\", verifyToken, (req, res) =\u003e {\n  res.status(200).json({\n    success: true,\n    user: req.user,\n  });\n});\n\n// Forgot password\nrouter.post(\"/forgot-password\", async (req, res, next) =\u003e {\n  try {\n    const { email } = req.body;\n\n    // Find user by email\n    const user = await User.findOne({ email });\n    if (!user) {\n      return next(createError(404, \"User not found\"));\n    }\n\n    // Generate reset token\n    const resetToken = crypto.randomBytes(32).toString(\"hex\");\n\n    // Hash token and set to resetPasswordToken field\n    user.resetPasswordToken = crypto.createHash(\"sha256\").update(resetToken).digest(\"hex\");\n\n    // Set token expiry\n    user.resetPasswordExpires = Date.now() + 30 * 60 * 1000; // 30 minutes\n\n    // Save user\n    await user.save();\n\n    // Create reset URL\n    const resetUrl = `${process.env.FRONTEND_URL}/reset-password/${resetToken}`;\n\n    // Send email\n    sendEmail({\n      to: user.email,\n      subject: \"Password Reset Request\",\n      text: `You are receiving this email because you (or someone else) has requested the reset of a password. Please click on the following link, or paste this into your browser to complete the process:\n\n${resetUrl}\n\nIf you did not request this, please ignore this email and your password will remain unchanged.\n`,\n    });\n\n    res.status(200).json({\n      success: true,\n      message: \"Password reset email sent\",\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Reset password\nrouter.post(\"/reset-password/:token\", async (req, res, next) =\u003e {\n  try {\n    const { password } = req.body;\n\n    // Get token from params\n    const resetToken = req.params.token;\n\n    // Hash token\n    const hashedToken = crypto.createHash(\"sha256\").update(resetToken).digest(\"hex\");\n\n    // Find user by token and check if token is expired\n    const user = await User.findOne({\n      resetPasswordToken: hashedToken,\n      resetPasswordExpires: { $gt: Date.now() },\n    });\n\n    if (!user) {\n      return next(createError(400, \"Password reset token is invalid or has expired\"));\n    }\n\n    // Set new password\n    user.password = password;\n    user.resetPasswordToken = undefined;\n    user.resetPasswordExpires = undefined;\n\n    // Save user\n    await user.save();\n\n    // Send confirmation email\n    sendEmail({\n      to: user.email,\n      subject: \"Password Reset Confirmation\",\n      text: `Hello ${user.name},\n\nThis is a confirmation that the password for your account ${user.email} has just been changed.\n`,\n    });\n\n    res.status(200).json({\n      success: true,\n      message: \"Password reset successful\",\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// OAuth login with Google\nrouter.post(\"/google\", async (req, res, next) =\u003e {\n  try {\n    const { token, profile } = req.body;\n\n    // Verify token with Google (in a real app)\n    // For demo purposes, we'll assume the token is valid\n\n    // Check if user exists\n    let user = await User.findOne({ email: profile.email });\n\n    if (!user) {\n      // Create new user\n      user = new User({\n        name: profile.name,\n        email: profile.email,\n        password: crypto.randomBytes(16).toString(\"hex\"), // Random password\n        avatar: profile.picture,\n      });\n\n      await user.save();\n    }\n\n    // Generate JWT token\n    const jwtToken = jwt.sign({ id: user._id, role: user.role }, process.env.JWT_SECRET, { expiresIn: \"7d\" });\n\n    // Set token as cookie\n    res.cookie(\"token\", jwtToken, {\n      httpOnly: true,\n      secure: process.env.NODE_ENV === \"production\",\n      maxAge: 7 * 24 * 60 * 60 * 1000, // 7 days\n    });\n\n    // Update last active timestamp\n    user.lastActive = new Date();\n    await user.save();\n\n    res.status(200).json({\n      success: true,\n      message: \"Login successful\",\n      user,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\nexport default router;"])</script><script>self.__next_f.push([1,"6d:T1a8a,"])</script><script>self.__next_f.push([1,"import express from \"express\";\nimport jwt from \"jsonwebtoken\";\nimport User from \"../models/User.js\";\nimport { verifyToken } from \"../middleware/auth.js\";\nimport { createError } from \"../utils/error.js\";\nimport { sendEmail } from \"../utils/email.js\";\nimport crypto from \"crypto\";\n\nconst router = express.Router();\n\n// Register a new user\nrouter.post(\"/register\", async (req, res, next) =\u003e {\n  try {\n    const { name, email, password } = req.body;\n\n    // Check if user already exists\n    const existingUser = await User.findOne({ email });\n    if (existingUser) {\n      return next(createError(400, \"User with this email already exists\"));\n    }\n\n    // Create new user\n    const newUser = new User({\n      name,\n      email,\n      password,\n    });\n\n    // Save user to database\n    const savedUser = await newUser.save();\n\n    // Generate JWT token\n    const token = jwt.sign({ id: savedUser._id, role: savedUser.role }, process.env.JWT_SECRET, { expiresIn: \"7d\" });\n\n    // Set token as cookie\n    res.cookie(\"token\", token, {\n      httpOnly: true,\n      secure: process.env.NODE_ENV === \"production\",\n      maxAge: 7 * 24 * 60 * 60 * 1000, // 7 days\n    });\n\n    // Send welcome email\n    sendEmail({\n      to: savedUser.email,\n      subject: \"Welcome to Task Management App\",\n      text: `Hello ${savedUser.name},\n\nWelcome to our Task Management App! Your account has been created successfully.\n\nBest regards,\nThe Task Management Team`,\n    });\n\n    res.status(201).json({\n      success: true,\n      message: \"User registered successfully\",\n      user: savedUser,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Login user\nrouter.post(\"/login\", async (req, res, next) =\u003e {\n  try {\n    const { email, password } = req.body;\n\n    // Find user by email\n    const user = await User.findOne({ email });\n    if (!user) {\n      return next(createError(404, \"User not found\"));\n    }\n\n    // Check if user is active\n    if (user.status !== \"active\") {\n      return next(createError(403, \"Your account is not active\"));\n    }\n\n    // Check password\n    const isPasswordValid = await user.comparePassword(password);\n    if (!isPasswordValid) {\n      return next(createError(401, \"Invalid credentials\"));\n    }\n\n    // Generate JWT token\n    const token = jwt.sign({ id: user._id, role: user.role }, process.env.JWT_SECRET, { expiresIn: \"7d\" });\n\n    // Set token as cookie\n    res.cookie(\"token\", token, {\n      httpOnly: true,\n      secure: process.env.NODE_ENV === \"production\",\n      maxAge: 7 * 24 * 60 * 60 * 1000, // 7 days\n    });\n\n    // Update last active timestamp\n    user.lastActive = new Date();\n    await user.save();\n\n    res.status(200).json({\n      success: true,\n      message: \"Login successful\",\n      user,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Logout user\nrouter.post(\"/logout\", (req, res) =\u003e {\n  res.clearCookie(\"token\");\n  res.status(200).json({\n    success: true,\n    message: \"Logout successful\",\n  });\n});\n\n// Get current user\nrouter.get(\"/me\", verifyToken, (req, res) =\u003e {\n  res.status(200).json({\n    success: true,\n    user: req.user,\n  });\n});\n\n// Forgot password\nrouter.post(\"/forgot-password\", async (req, res, next) =\u003e {\n  try {\n    const { email } = req.body;\n\n    // Find user by email\n    const user = await User.findOne({ email });\n    if (!user) {\n      return next(createError(404, \"User not found\"));\n    }\n\n    // Generate reset token\n    const resetToken = crypto.randomBytes(32).toString(\"hex\");\n\n    // Hash token and set to resetPasswordToken field\n    user.resetPasswordToken = crypto.createHash(\"sha256\").update(resetToken).digest(\"hex\");\n\n    // Set token expiry\n    user.resetPasswordExpires = Date.now() + 30 * 60 * 1000; // 30 minutes\n\n    // Save user\n    await user.save();\n\n    // Create reset URL\n    const resetUrl = `${process.env.FRONTEND_URL}/reset-password/${resetToken}`;\n\n    // Send email\n    sendEmail({\n      to: user.email,\n      subject: \"Password Reset Request\",\n      text: `You are receiving this email because you (or someone else) has requested the reset of a password. Please click on the following link, or paste this into your browser to complete the process:\n\n${resetUrl}\n\nIf you did not request this, please ignore this email and your password will remain unchanged.\n`,\n    });\n\n    res.status(200).json({\n      success: true,\n      message: \"Password reset email sent\",\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Reset password\nrouter.post(\"/reset-password/:token\", async (req, res, next) =\u003e {\n  try {\n    const { password } = req.body;\n\n    // Get token from params\n    const resetToken = req.params.token;\n\n    // Hash token\n    const hashedToken = crypto.createHash(\"sha256\").update(resetToken).digest(\"hex\");\n\n    // Find user by token and check if token is expired\n    const user = await User.findOne({\n      resetPasswordToken: hashedToken,\n      resetPasswordExpires: { $gt: Date.now() },\n    });\n\n    if (!user) {\n      return next(createError(400, \"Password reset token is invalid or has expired\"));\n    }\n\n    // Set new password\n    user.password = password;\n    user.resetPasswordToken = undefined;\n    user.resetPasswordExpires = undefined;\n\n    // Save user\n    await user.save();\n\n    // Send confirmation email\n    sendEmail({\n      to: user.email,\n      subject: \"Password Reset Confirmation\",\n      text: `Hello ${user.name},\n\nThis is a confirmation that the password for your account ${user.email} has just been changed.\n`,\n    });\n\n    res.status(200).json({\n      success: true,\n      message: \"Password reset successful\",\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// OAuth login with Google\nrouter.post(\"/google\", async (req, res, next) =\u003e {\n  try {\n    const { token, profile } = req.body;\n\n    // Verify token with Google (in a real app)\n    // For demo purposes, we'll assume the token is valid\n\n    // Check if user exists\n    let user = await User.findOne({ email: profile.email });\n\n    if (!user) {\n      // Create new user\n      user = new User({\n        name: profile.name,\n        email: profile.email,\n        password: crypto.randomBytes(16).toString(\"hex\"), // Random password\n        avatar: profile.picture,\n      });\n\n      await user.save();\n    }\n\n    // Generate JWT token\n    const jwtToken = jwt.sign({ id: user._id, role: user.role }, process.env.JWT_SECRET, { expiresIn: \"7d\" });\n\n    // Set token as cookie\n    res.cookie(\"token\", jwtToken, {\n      httpOnly: true,\n      secure: process.env.NODE_ENV === \"production\",\n      maxAge: 7 * 24 * 60 * 60 * 1000, // 7 days\n    });\n\n    // Update last active timestamp\n    user.lastActive = new Date();\n    await user.save();\n\n    res.status(200).json({\n      success: true,\n      message: \"Login successful\",\n      user,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\nexport default router;"])</script><script>self.__next_f.push([1,"6e:T223a,"])</script><script>self.__next_f.push([1,"import express from \"express\";\nimport User from \"../models/User.js\";\nimport Task from \"../models/Task.js\";\nimport { verifyToken, verifyAdmin } from \"../middleware/auth.js\";\nimport { createError } from \"../utils/error.js\";\nimport upload from \"../middleware/upload.js\";\n\nconst router = express.Router();\n\n// Get all users (admin only)\nrouter.get(\"/\", verifyToken, verifyAdmin, async (req, res, next) =\u003e {\n  try {\n    const { role, status, search, sort, page = 1, limit = 10 } = req.query;\n\n    // Build query\n    const query = {};\n\n    // Filter by role\n    if (role \u0026\u0026 role !== \"all\") {\n      query.role = role;\n    }\n\n    // Filter by status\n    if (status \u0026\u0026 status !== \"all\") {\n      query.status = status;\n    }\n\n    // Search by name or email\n    if (search) {\n      query.$or = [{ name: { $regex: search, $options: \"i\" } }, { email: { $regex: search, $options: \"i\" } }];\n    }\n\n    // Count total documents\n    const total = await User.countDocuments(query);\n\n    // Build sort options\n    let sortOptions = { createdAt: -1 }; // Default sort\n    if (sort) {\n      const [field, order] = sort.split(\":\");\n      sortOptions = { [field]: order === \"asc\" ? 1 : -1 };\n    }\n\n    // Fetch users with pagination\n    const users = await User.find(query)\n      .sort(sortOptions)\n      .skip((page - 1) * limit)\n      .limit(Number.parseInt(limit));\n\n    res.status(200).json({\n      success: true,\n      count: users.length,\n      total,\n      totalPages: Math.ceil(total / limit),\n      currentPage: Number.parseInt(page),\n      users,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Get user by ID\nrouter.get(\"/:id\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Check if user is admin or requesting their own profile\n    if (req.user.role !== \"admin\" \u0026\u0026 req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to access this resource\"));\n    }\n\n    const user = await User.findById(req.params.id);\n    if (!user) {\n      return next(createError(404, \"User not found\"));\n    }\n\n    res.status(200).json({\n      success: true,\n      user,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Update user\nrouter.put(\"/:id\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Check if user is admin or updating their own profile\n    if (req.user.role !== \"admin\" \u0026\u0026 req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to update this user\"));\n    }\n\n    const { name, email, bio, jobTitle, company, notificationPreferences } = req.body;\n\n    // Find user\n    const user = await User.findById(req.params.id);\n    if (!user) {\n      return next(createError(404, \"User not found\"));\n    }\n\n    // Update fields\n    if (name) user.name = name;\n    if (bio) user.bio = bio;\n    if (jobTitle) user.jobTitle = jobTitle;\n    if (company) user.company = company;\n    if (notificationPreferences)\n      user.notificationPreferences = {\n        ...user.notificationPreferences,\n        ...notificationPreferences,\n      };\n\n    // Only admin can update email or role\n    if (req.user.role === \"admin\") {\n      if (email \u0026\u0026 email !== user.email) {\n        // Check if email is already in use\n        const existingUser = await User.findOne({ email });\n        if (existingUser) {\n          return next(createError(400, \"Email is already in use\"));\n        }\n        user.email = email;\n      }\n\n      if (req.body.role) user.role = req.body.role;\n      if (req.body.status) user.status = req.body.status;\n    }\n\n    // Save user\n    const updatedUser = await user.save();\n\n    res.status(200).json({\n      success: true,\n      message: \"User updated successfully\",\n      user: updatedUser,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Update user avatar\nrouter.put(\"/:id/avatar\", verifyToken, upload.single(\"avatar\"), async (req, res, next) =\u003e {\n  try {\n    // Check if user is updating their own avatar\n    if (req.user._id.toString  next) =\u003e {\n  try {\n    // Check if user is updating their own avatar\n    if (req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to update this user\"));\n    }\n\n    if (!req.file) {\n      return next(createError(400, \"No file uploaded\"));\n    }\n\n    // Find user\n    const user = await User.findById(req.params.id);\n    if (!user) {\n      return next(createError(404, \"User not found\"));\n    }\n\n    // Update avatar\n    user.avatar = `/${req.file.path}`;\n\n    // Save user\n    const updatedUser = await user.save();\n\n    res.status(200).json({\n      success: true,\n      message: \"Avatar updated successfully\",\n      user: updatedUser,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Change password\nrouter.put(\"/:id/password\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Check if user is changing their own password\n    if (req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to change this user's password\"));\n    }\n\n    const { currentPassword, newPassword } = req.body;\n\n    // Find user\n    const user = await User.findById(req.params.id);\n    if (!user) {\n      return next(createError(404, \"User not found\"));\n    }\n\n    // Check current password\n    const isPasswordValid = await user.comparePassword(currentPassword);\n    if (!isPasswordValid) {\n      return next(createError(401, \"Current password is incorrect\"));\n    }\n\n    // Update password\n    user.password = newPassword;\n\n    // Save user\n    await user.save();\n\n    res.status(200).json({\n      success: true,\n      message: \"Password changed successfully\",\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Toggle two-factor authentication\nrouter.put(\"/:id/two-factor\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Check if user is updating their own settings\n    if (req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to update this user\"));\n    }\n\n    // Find user\n    const user = await User.findById(req.params.id);\n    if (!user) {\n      return next(createError(404, \"User not found\"));\n    }\n\n    // Toggle two-factor authentication\n    user.twoFactorEnabled = !user.twoFactorEnabled;\n\n    // Save user\n    const updatedUser = await user.save();\n\n    res.status(200).json({\n      success: true,\n      message: `Two-factor authentication ${updatedUser.twoFactorEnabled ? \"enabled\" : \"disabled\"}`,\n      user: updatedUser,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Delete user (admin only)\nrouter.delete(\"/:id\", verifyToken, verifyAdmin, async (req, res, next) =\u003e {\n  try {\n    // Find user\n    const user = await User.findById(req.params.id);\n    if (!user) {\n      return next(createError(404, \"User not found\"));\n    }\n\n    // Check if user is trying to delete themselves\n    if (req.user._id.toString() === req.params.id) {\n      return next(createError(400, \"You cannot delete your own account\"));\n    }\n\n    // Delete user\n    await User.findByIdAndDelete(req.params.id);\n\n    // Update tasks assigned to this user\n    await Task.updateMany({ assignee: req.params.id }, { $unset: { assignee: 1 } });\n\n    res.status(200).json({\n      success: true,\n      message: \"User deleted successfully\",\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Get user tasks\nrouter.get(\"/:id/tasks\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Check if user is admin or requesting their own tasks\n    if (req.user.role !== \"admin\" \u0026\u0026 req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to access this resource\"));\n    }\n\n    const { status, priority, sort, page = 1, limit = 10 } = req.query;\n\n    // Build query\n    const query = { assignee: req.params.id };\n\n    // Filter by status\n    if (status \u0026\u0026 status !== \"all\") {\n      query.status = status;\n    }\n\n    // Filter by priority\n    if (priority \u0026\u0026 priority !== \"all\") {\n      query.priority = priority;\n    }\n\n    // Count total documents\n    const total = await Task.countDocuments(query);\n\n    // Build sort options\n    let sortOptions = { createdAt: -1 }; // Default sort\n    if (sort) {\n      const [field, order] = sort.split(\":\");\n      sortOptions = { [field]: order === \"asc\" ? 1 : -1 };\n    }\n\n    // Fetch tasks with pagination\n    const tasks = await Task.find(query)\n      .populate(\"assignee\", \"name email avatar\")\n      .populate(\"creator\", \"name email avatar\")\n      .sort(sortOptions)\n      .skip((page - 1) * limit)\n      .limit(Number.parseInt(limit));\n\n    res.status(200).json({\n      success: true,\n      count: tasks.length,\n      total,\n      totalPages: Math.ceil(total / limit),\n      currentPage: Number.parseInt(page),\n      tasks,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\nexport default router;"])</script><script>self.__next_f.push([1,"6f:T223a,"])</script><script>self.__next_f.push([1,"import express from \"express\";\nimport User from \"../models/User.js\";\nimport Task from \"../models/Task.js\";\nimport { verifyToken, verifyAdmin } from \"../middleware/auth.js\";\nimport { createError } from \"../utils/error.js\";\nimport upload from \"../middleware/upload.js\";\n\nconst router = express.Router();\n\n// Get all users (admin only)\nrouter.get(\"/\", verifyToken, verifyAdmin, async (req, res, next) =\u003e {\n  try {\n    const { role, status, search, sort, page = 1, limit = 10 } = req.query;\n\n    // Build query\n    const query = {};\n\n    // Filter by role\n    if (role \u0026\u0026 role !== \"all\") {\n      query.role = role;\n    }\n\n    // Filter by status\n    if (status \u0026\u0026 status !== \"all\") {\n      query.status = status;\n    }\n\n    // Search by name or email\n    if (search) {\n      query.$or = [{ name: { $regex: search, $options: \"i\" } }, { email: { $regex: search, $options: \"i\" } }];\n    }\n\n    // Count total documents\n    const total = await User.countDocuments(query);\n\n    // Build sort options\n    let sortOptions = { createdAt: -1 }; // Default sort\n    if (sort) {\n      const [field, order] = sort.split(\":\");\n      sortOptions = { [field]: order === \"asc\" ? 1 : -1 };\n    }\n\n    // Fetch users with pagination\n    const users = await User.find(query)\n      .sort(sortOptions)\n      .skip((page - 1) * limit)\n      .limit(Number.parseInt(limit));\n\n    res.status(200).json({\n      success: true,\n      count: users.length,\n      total,\n      totalPages: Math.ceil(total / limit),\n      currentPage: Number.parseInt(page),\n      users,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Get user by ID\nrouter.get(\"/:id\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Check if user is admin or requesting their own profile\n    if (req.user.role !== \"admin\" \u0026\u0026 req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to access this resource\"));\n    }\n\n    const user = await User.findById(req.params.id);\n    if (!user) {\n      return next(createError(404, \"User not found\"));\n    }\n\n    res.status(200).json({\n      success: true,\n      user,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Update user\nrouter.put(\"/:id\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Check if user is admin or updating their own profile\n    if (req.user.role !== \"admin\" \u0026\u0026 req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to update this user\"));\n    }\n\n    const { name, email, bio, jobTitle, company, notificationPreferences } = req.body;\n\n    // Find user\n    const user = await User.findById(req.params.id);\n    if (!user) {\n      return next(createError(404, \"User not found\"));\n    }\n\n    // Update fields\n    if (name) user.name = name;\n    if (bio) user.bio = bio;\n    if (jobTitle) user.jobTitle = jobTitle;\n    if (company) user.company = company;\n    if (notificationPreferences)\n      user.notificationPreferences = {\n        ...user.notificationPreferences,\n        ...notificationPreferences,\n      };\n\n    // Only admin can update email or role\n    if (req.user.role === \"admin\") {\n      if (email \u0026\u0026 email !== user.email) {\n        // Check if email is already in use\n        const existingUser = await User.findOne({ email });\n        if (existingUser) {\n          return next(createError(400, \"Email is already in use\"));\n        }\n        user.email = email;\n      }\n\n      if (req.body.role) user.role = req.body.role;\n      if (req.body.status) user.status = req.body.status;\n    }\n\n    // Save user\n    const updatedUser = await user.save();\n\n    res.status(200).json({\n      success: true,\n      message: \"User updated successfully\",\n      user: updatedUser,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Update user avatar\nrouter.put(\"/:id/avatar\", verifyToken, upload.single(\"avatar\"), async (req, res, next) =\u003e {\n  try {\n    // Check if user is updating their own avatar\n    if (req.user._id.toString  next) =\u003e {\n  try {\n    // Check if user is updating their own avatar\n    if (req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to update this user\"));\n    }\n\n    if (!req.file) {\n      return next(createError(400, \"No file uploaded\"));\n    }\n\n    // Find user\n    const user = await User.findById(req.params.id);\n    if (!user) {\n      return next(createError(404, \"User not found\"));\n    }\n\n    // Update avatar\n    user.avatar = `/${req.file.path}`;\n\n    // Save user\n    const updatedUser = await user.save();\n\n    res.status(200).json({\n      success: true,\n      message: \"Avatar updated successfully\",\n      user: updatedUser,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Change password\nrouter.put(\"/:id/password\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Check if user is changing their own password\n    if (req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to change this user's password\"));\n    }\n\n    const { currentPassword, newPassword } = req.body;\n\n    // Find user\n    const user = await User.findById(req.params.id);\n    if (!user) {\n      return next(createError(404, \"User not found\"));\n    }\n\n    // Check current password\n    const isPasswordValid = await user.comparePassword(currentPassword);\n    if (!isPasswordValid) {\n      return next(createError(401, \"Current password is incorrect\"));\n    }\n\n    // Update password\n    user.password = newPassword;\n\n    // Save user\n    await user.save();\n\n    res.status(200).json({\n      success: true,\n      message: \"Password changed successfully\",\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Toggle two-factor authentication\nrouter.put(\"/:id/two-factor\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Check if user is updating their own settings\n    if (req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to update this user\"));\n    }\n\n    // Find user\n    const user = await User.findById(req.params.id);\n    if (!user) {\n      return next(createError(404, \"User not found\"));\n    }\n\n    // Toggle two-factor authentication\n    user.twoFactorEnabled = !user.twoFactorEnabled;\n\n    // Save user\n    const updatedUser = await user.save();\n\n    res.status(200).json({\n      success: true,\n      message: `Two-factor authentication ${updatedUser.twoFactorEnabled ? \"enabled\" : \"disabled\"}`,\n      user: updatedUser,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Delete user (admin only)\nrouter.delete(\"/:id\", verifyToken, verifyAdmin, async (req, res, next) =\u003e {\n  try {\n    // Find user\n    const user = await User.findById(req.params.id);\n    if (!user) {\n      return next(createError(404, \"User not found\"));\n    }\n\n    // Check if user is trying to delete themselves\n    if (req.user._id.toString() === req.params.id) {\n      return next(createError(400, \"You cannot delete your own account\"));\n    }\n\n    // Delete user\n    await User.findByIdAndDelete(req.params.id);\n\n    // Update tasks assigned to this user\n    await Task.updateMany({ assignee: req.params.id }, { $unset: { assignee: 1 } });\n\n    res.status(200).json({\n      success: true,\n      message: \"User deleted successfully\",\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Get user tasks\nrouter.get(\"/:id/tasks\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Check if user is admin or requesting their own tasks\n    if (req.user.role !== \"admin\" \u0026\u0026 req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to access this resource\"));\n    }\n\n    const { status, priority, sort, page = 1, limit = 10 } = req.query;\n\n    // Build query\n    const query = { assignee: req.params.id };\n\n    // Filter by status\n    if (status \u0026\u0026 status !== \"all\") {\n      query.status = status;\n    }\n\n    // Filter by priority\n    if (priority \u0026\u0026 priority !== \"all\") {\n      query.priority = priority;\n    }\n\n    // Count total documents\n    const total = await Task.countDocuments(query);\n\n    // Build sort options\n    let sortOptions = { createdAt: -1 }; // Default sort\n    if (sort) {\n      const [field, order] = sort.split(\":\");\n      sortOptions = { [field]: order === \"asc\" ? 1 : -1 };\n    }\n\n    // Fetch tasks with pagination\n    const tasks = await Task.find(query)\n      .populate(\"assignee\", \"name email avatar\")\n      .populate(\"creator\", \"name email avatar\")\n      .sort(sortOptions)\n      .skip((page - 1) * limit)\n      .limit(Number.parseInt(limit));\n\n    res.status(200).json({\n      success: true,\n      count: tasks.length,\n      total,\n      totalPages: Math.ceil(total / limit),\n      currentPage: Number.parseInt(page),\n      tasks,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\nexport default router;"])</script><script>self.__next_f.push([1,"70:T21d6,"])</script><script>self.__next_f.push([1,"import express from \"express\";\nimport User from \"../models/User.js\";\nimport Task from \"../models/Task.js\";\nimport { verifyToken, verifyAdmin } from \"../middleware/auth.js\";\nimport { createError } from \"../utils/error.js\";\nimport upload from \"../middleware/upload.js\";\n\nconst router = express.Router();\n\n// Get all users (admin only)\nrouter.get(\"/\", verifyToken, verifyAdmin, async (req, res, next) =\u003e {\n  try {\n    const { role, status, search, sort, page = 1, limit = 10 } = req.query;\n\n    // Build query\n    const query = {};\n\n    // Filter by role\n    if (role \u0026\u0026 role !== \"all\") {\n      query.role = role;\n    }\n\n    // Filter by status\n    if (status \u0026\u0026 status !== \"all\") {\n      query.status = status;\n    }\n\n    // Search by name or email\n    if (search) {\n      query.$or = [{ name: { $regex: search, $options: \"i\" } }, { email: { $regex: search, $options: \"i\" } }];\n    }\n\n    // Count total documents\n    const total = await User.countDocuments(query);\n\n    // Build sort options\n    let sortOptions = { createdAt: -1 }; // Default sort\n    if (sort) {\n      const [field, order] = sort.split(\":\");\n      sortOptions = { [field]: order === \"asc\" ? 1 : -1 };\n    }\n\n    // Fetch users with pagination\n    const users = await User.find(query)\n      .sort(sortOptions)\n      .skip((page - 1) * limit)\n      .limit(Number.parseInt(limit));\n\n    res.status(200).json({\n      success: true,\n      count: users.length,\n      total,\n      totalPages: Math.ceil(total / limit),\n      currentPage: Number.parseInt(page),\n      users,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Get user by ID\nrouter.get(\"/:id\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Check if user is admin or requesting their own profile\n    if (req.user.role !== \"admin\" \u0026\u0026 req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to access this resource\"));\n    }\n\n    const user = await User.findById(req.params.id);\n    if (!user) {\n      return next(createError(404, \"User not found\"));\n    }\n\n    res.status(200).json({\n      success: true,\n      user,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Update user\nrouter.put(\"/:id\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Check if user is admin or updating their own profile\n    if (req.user.role !== \"admin\" \u0026\u0026 req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to update this user\"));\n    }\n\n    const { name, email, bio, jobTitle, company, notificationPreferences } = req.body;\n\n    // Find user\n    const user = await User.findById(req.params.id);\n    if (!user) {\n      return next(createError(404, \"User not found\"));\n    }\n\n    // Update fields\n    if (name) user.name = name;\n    if (bio) user.bio = bio;\n    if (jobTitle) user.jobTitle = jobTitle;\n    if (company) user.company = company;\n    if (notificationPreferences)\n      user.notificationPreferences = {\n        ...user.notificationPreferences,\n        ...notificationPreferences,\n      };\n\n    // Only admin can update email or role\n    if (req.user.role === \"admin\") {\n      if (email \u0026\u0026 email !== user.email) {\n        // Check if email is already in use\n        const existingUser = await User.findOne({ email });\n        if (existingUser) {\n          return next(createError(400, \"Email is already in use\"));\n        }\n        user.email = email;\n      }\n\n      if (req.body.role) user.role = req.body.role;\n      if (req.body.status) user.status = req.body.status;\n    }\n\n    // Save user\n    const updatedUser = await user.save();\n\n    res.status(200).json({\n      success: true,\n      message: \"User updated successfully\",\n      user: updatedUser,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Update user avatar\nrouter.put(\"/:id/avatar\", verifyToken, upload.single(\"avatar\"), async (req, res, next) =\u003e {\n  try {\n    // Check if user is updating their own avatar\n    if (req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to update this user\"));\n    }\n\n    if (!req.file) {\n      return next(createError(400, \"No file uploaded\"));\n    }\n\n    // Find user\n    const user = await User.findById(req.params.id);\n    if (!user) {\n      return next(createError(404, \"User not found\"));\n    }\n\n    // Update avatar\n    user.avatar = `/${req.file.path}`;\n\n    // Save user\n    const updatedUser = await user.save();\n\n    res.status(200).json({\n      success: true,\n      message: \"Avatar updated successfully\",\n      user: updatedUser,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Change password\nrouter.put(\"/:id/password\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Check if user is changing their own password\n    if (req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to change this user's password\"));\n    }\n\n    const { currentPassword, newPassword } = req.body;\n\n    // Find user\n    const user = await User.findById(req.params.id);\n    if (!user) {\n      return next(createError(404, \"User not found\"));\n    }\n\n    // Check current password\n    const isPasswordValid = await user.comparePassword(currentPassword);\n    if (!isPasswordValid) {\n      return next(createError(401, \"Current password is incorrect\"));\n    }\n\n    // Update password\n    user.password = newPassword;\n\n    // Save user\n    await user.save();\n\n    res.status(200).json({\n      success: true,\n      message: \"Password changed successfully\",\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Toggle two-factor authentication\nrouter.put(\"/:id/two-factor\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Check if user is updating their own settings\n    if (req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to update this user\"));\n    }\n\n    // Find user\n    const user = await User.findById(req.params.id);\n    if (!user) {\n      return next(createError(404, \"User not found\"));\n    }\n\n    // Toggle two-factor authentication\n    user.twoFactorEnabled = !user.twoFactorEnabled;\n\n    // Save user\n    const updatedUser = await user.save();\n\n    res.status(200).json({\n      success: true,\n      message: `Two-factor authentication ${updatedUser.twoFactorEnabled ? \"enabled\" : \"disabled\"}`,\n      user: updatedUser,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Delete user (admin only)\nrouter.delete(\"/:id\", verifyToken, verifyAdmin, async (req, res, next) =\u003e {\n  try {\n    // Find user\n    const user = await User.findById(req.params.id);\n    if (!user) {\n      return next(createError(404, \"User not found\"));\n    }\n\n    // Check if user is trying to delete themselves\n    if (req.user._id.toString() === req.params.id) {\n      return next(createError(400, \"You cannot delete your own account\"));\n    }\n\n    // Delete user\n    await User.findByIdAndDelete(req.params.id);\n\n    // Update tasks assigned to this user\n    await Task.updateMany({ assignee: req.params.id }, { $unset: { assignee: 1 } });\n\n    res.status(200).json({\n      success: true,\n      message: \"User deleted successfully\",\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Get user tasks\nrouter.get(\"/:id/tasks\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Check if user is admin or requesting their own tasks\n    if (req.user.role !== \"admin\" \u0026\u0026 req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to access this resource\"));\n    }\n\n    const { status, priority, sort, page = 1, limit = 10 } = req.query;\n\n    // Build query\n    const query = { assignee: req.params.id };\n\n    // Filter by status\n    if (status \u0026\u0026 status !== \"all\") {\n      query.status = status;\n    }\n\n    // Filter by priority\n    if (priority \u0026\u0026 priority !== \"all\") {\n      query.priority = priority;\n    }\n\n    // Count total documents\n    const total = await Task.countDocuments(query);\n\n    // Build sort options\n    let sortOptions = { createdAt: -1 }; // Default sort\n    if (sort) {\n      const [field, order] = sort.split(\":\");\n      sortOptions = { [field]: order === \"asc\" ? 1 : -1 };\n    }\n\n    // Fetch tasks with pagination\n    const tasks = await Task.find(query)\n      .populate(\"assignee\", \"name email avatar\")\n      .populate(\"creator\", \"name email avatar\")\n      .sort(sortOptions)\n      .skip((page - 1) * limit)\n      .limit(Number.parseInt(limit));\n\n    res.status(200).json({\n      success: true,\n      count: tasks.length,\n      total,\n      totalPages: Math.ceil(total / limit),\n      currentPage: Number.parseInt(page),\n      tasks,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\nexport default router;"])</script><script>self.__next_f.push([1,"71:T21d6,"])</script><script>self.__next_f.push([1,"import express from \"express\";\nimport User from \"../models/User.js\";\nimport Task from \"../models/Task.js\";\nimport { verifyToken, verifyAdmin } from \"../middleware/auth.js\";\nimport { createError } from \"../utils/error.js\";\nimport upload from \"../middleware/upload.js\";\n\nconst router = express.Router();\n\n// Get all users (admin only)\nrouter.get(\"/\", verifyToken, verifyAdmin, async (req, res, next) =\u003e {\n  try {\n    const { role, status, search, sort, page = 1, limit = 10 } = req.query;\n\n    // Build query\n    const query = {};\n\n    // Filter by role\n    if (role \u0026\u0026 role !== \"all\") {\n      query.role = role;\n    }\n\n    // Filter by status\n    if (status \u0026\u0026 status !== \"all\") {\n      query.status = status;\n    }\n\n    // Search by name or email\n    if (search) {\n      query.$or = [{ name: { $regex: search, $options: \"i\" } }, { email: { $regex: search, $options: \"i\" } }];\n    }\n\n    // Count total documents\n    const total = await User.countDocuments(query);\n\n    // Build sort options\n    let sortOptions = { createdAt: -1 }; // Default sort\n    if (sort) {\n      const [field, order] = sort.split(\":\");\n      sortOptions = { [field]: order === \"asc\" ? 1 : -1 };\n    }\n\n    // Fetch users with pagination\n    const users = await User.find(query)\n      .sort(sortOptions)\n      .skip((page - 1) * limit)\n      .limit(Number.parseInt(limit));\n\n    res.status(200).json({\n      success: true,\n      count: users.length,\n      total,\n      totalPages: Math.ceil(total / limit),\n      currentPage: Number.parseInt(page),\n      users,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Get user by ID\nrouter.get(\"/:id\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Check if user is admin or requesting their own profile\n    if (req.user.role !== \"admin\" \u0026\u0026 req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to access this resource\"));\n    }\n\n    const user = await User.findById(req.params.id);\n    if (!user) {\n      return next(createError(404, \"User not found\"));\n    }\n\n    res.status(200).json({\n      success: true,\n      user,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Update user\nrouter.put(\"/:id\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Check if user is admin or updating their own profile\n    if (req.user.role !== \"admin\" \u0026\u0026 req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to update this user\"));\n    }\n\n    const { name, email, bio, jobTitle, company, notificationPreferences } = req.body;\n\n    // Find user\n    const user = await User.findById(req.params.id);\n    if (!user) {\n      return next(createError(404, \"User not found\"));\n    }\n\n    // Update fields\n    if (name) user.name = name;\n    if (bio) user.bio = bio;\n    if (jobTitle) user.jobTitle = jobTitle;\n    if (company) user.company = company;\n    if (notificationPreferences)\n      user.notificationPreferences = {\n        ...user.notificationPreferences,\n        ...notificationPreferences,\n      };\n\n    // Only admin can update email or role\n    if (req.user.role === \"admin\") {\n      if (email \u0026\u0026 email !== user.email) {\n        // Check if email is already in use\n        const existingUser = await User.findOne({ email });\n        if (existingUser) {\n          return next(createError(400, \"Email is already in use\"));\n        }\n        user.email = email;\n      }\n\n      if (req.body.role) user.role = req.body.role;\n      if (req.body.status) user.status = req.body.status;\n    }\n\n    // Save user\n    const updatedUser = await user.save();\n\n    res.status(200).json({\n      success: true,\n      message: \"User updated successfully\",\n      user: updatedUser,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Update user avatar\nrouter.put(\"/:id/avatar\", verifyToken, upload.single(\"avatar\"), async (req, res, next) =\u003e {\n  try {\n    // Check if user is updating their own avatar\n    if (req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to update this user\"));\n    }\n\n    if (!req.file) {\n      return next(createError(400, \"No file uploaded\"));\n    }\n\n    // Find user\n    const user = await User.findById(req.params.id);\n    if (!user) {\n      return next(createError(404, \"User not found\"));\n    }\n\n    // Update avatar\n    user.avatar = `/${req.file.path}`;\n\n    // Save user\n    const updatedUser = await user.save();\n\n    res.status(200).json({\n      success: true,\n      message: \"Avatar updated successfully\",\n      user: updatedUser,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Change password\nrouter.put(\"/:id/password\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Check if user is changing their own password\n    if (req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to change this user's password\"));\n    }\n\n    const { currentPassword, newPassword } = req.body;\n\n    // Find user\n    const user = await User.findById(req.params.id);\n    if (!user) {\n      return next(createError(404, \"User not found\"));\n    }\n\n    // Check current password\n    const isPasswordValid = await user.comparePassword(currentPassword);\n    if (!isPasswordValid) {\n      return next(createError(401, \"Current password is incorrect\"));\n    }\n\n    // Update password\n    user.password = newPassword;\n\n    // Save user\n    await user.save();\n\n    res.status(200).json({\n      success: true,\n      message: \"Password changed successfully\",\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Toggle two-factor authentication\nrouter.put(\"/:id/two-factor\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Check if user is updating their own settings\n    if (req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to update this user\"));\n    }\n\n    // Find user\n    const user = await User.findById(req.params.id);\n    if (!user) {\n      return next(createError(404, \"User not found\"));\n    }\n\n    // Toggle two-factor authentication\n    user.twoFactorEnabled = !user.twoFactorEnabled;\n\n    // Save user\n    const updatedUser = await user.save();\n\n    res.status(200).json({\n      success: true,\n      message: `Two-factor authentication ${updatedUser.twoFactorEnabled ? \"enabled\" : \"disabled\"}`,\n      user: updatedUser,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Delete user (admin only)\nrouter.delete(\"/:id\", verifyToken, verifyAdmin, async (req, res, next) =\u003e {\n  try {\n    // Find user\n    const user = await User.findById(req.params.id);\n    if (!user) {\n      return next(createError(404, \"User not found\"));\n    }\n\n    // Check if user is trying to delete themselves\n    if (req.user._id.toString() === req.params.id) {\n      return next(createError(400, \"You cannot delete your own account\"));\n    }\n\n    // Delete user\n    await User.findByIdAndDelete(req.params.id);\n\n    // Update tasks assigned to this user\n    await Task.updateMany({ assignee: req.params.id }, { $unset: { assignee: 1 } });\n\n    res.status(200).json({\n      success: true,\n      message: \"User deleted successfully\",\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Get user tasks\nrouter.get(\"/:id/tasks\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Check if user is admin or requesting their own tasks\n    if (req.user.role !== \"admin\" \u0026\u0026 req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to access this resource\"));\n    }\n\n    const { status, priority, sort, page = 1, limit = 10 } = req.query;\n\n    // Build query\n    const query = { assignee: req.params.id };\n\n    // Filter by status\n    if (status \u0026\u0026 status !== \"all\") {\n      query.status = status;\n    }\n\n    // Filter by priority\n    if (priority \u0026\u0026 priority !== \"all\") {\n      query.priority = priority;\n    }\n\n    // Count total documents\n    const total = await Task.countDocuments(query);\n\n    // Build sort options\n    let sortOptions = { createdAt: -1 }; // Default sort\n    if (sort) {\n      const [field, order] = sort.split(\":\");\n      sortOptions = { [field]: order === \"asc\" ? 1 : -1 };\n    }\n\n    // Fetch tasks with pagination\n    const tasks = await Task.find(query)\n      .populate(\"assignee\", \"name email avatar\")\n      .populate(\"creator\", \"name email avatar\")\n      .sort(sortOptions)\n      .skip((page - 1) * limit)\n      .limit(Number.parseInt(limit));\n\n    res.status(200).json({\n      success: true,\n      count: tasks.length,\n      total,\n      totalPages: Math.ceil(total / limit),\n      currentPage: Number.parseInt(page),\n      tasks,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\nexport default router;"])</script><script>self.__next_f.push([1,"72:T3671,"])</script><script>self.__next_f.push([1,"import express from \"express\";\nimport Task from \"../models/Task.js\";\nimport User from \"../models/User.js\";\nimport Comment from \"../models/Comment.js\";\nimport Notification from \"../models/Notification.js\";\nimport { verifyToken, verifyAdminOrEditor, verifyOwnerOrAdmin } from \"../middleware/auth.js\";\nimport { createError } from \"../utils/error.js\";\nimport upload from \"../middleware/upload.js\";\nimport { sendEmail } from \"../utils/email.js\";\n\nconst router = express.Router();\n\n// Create a new task\nrouter.post(\"/\", verifyToken, verifyAdminOrEditor, async (req, res, next) =\u003e {\n  try {\n    const { title, description, status, priority, dueDate, assignee, tags, subtasks } = req.body;\n\n    // Create new task\n    const newTask = new Task({\n      title,\n      description,\n      status: status || \"to-do\",\n      priority: priority || \"medium\",\n      dueDate,\n      assignee,\n      creator: req.user._id,\n      tags: tags || [],\n      subtasks: subtasks || [],\n    });\n\n    // Save task\n    const savedTask = await newTask.save();\n\n    // If task is assigned to someone, send notification\n    if (assignee) {\n      // Create notification\n      const notification = new Notification({\n        recipient: assignee,\n        sender: req.user._id,\n        type: \"task_assigned\",\n        title: \"New Task Assigned\",\n        message: `You have been assigned a new task: ${title}`,\n        relatedTask: savedTask._id,\n      });\n\n      await notification.save();\n\n      // Send real-time notification\n      if (req.io) {\n        req.io.to(assignee.toString()).emit(\"notification\", notification);\n      }\n\n      // Get assignee details\n      const assigneeUser = await User.findById(assignee);\n\n      // Send email notification if user has email notifications enabled\n      if (\n        assigneeUser \u0026\u0026\n        assigneeUser.notificationPreferences.emailNotifications \u0026\u0026\n        assigneeUser.notificationPreferences.taskAssigned\n      ) {\n        sendEmail({\n          to: assigneeUser.email,\n          subject: \"New Task Assigned\",\n          text: `Hello ${assigneeUser.name},\n\nYou have been assigned a new task: ${title}\n\nDue Date: ${dueDate ? new Date(dueDate).toLocaleDateString() : \"Not set\"}\nPriority: ${priority || \"Medium\"}\n\nDescription:\n${description || \"No description provided\"}\n\nBest regards,\nThe Task Management Team`,\n        });\n      }\n    }\n\n    res.status(201).json({\n      success: true,\n      message: \"Task created successfully\",\n      task: savedTask,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Get all tasks\nrouter.get(\"/\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { status, priority, assignee, creator, search, tags, dueDate, sort, page = 1, limit = 10 } = req.query;\n\n    // Build query\n    const query = {};\n\n    // Filter by status\n    if (status \u0026\u0026 status !== \"all\") {\n      query.status = status;\n    }\n\n    // Filter by priority\n    if (priority \u0026\u0026 priority !== \"all\") {\n      query.priority = priority;\n    }\n\n    // Filter by assignee\n    if (assignee) {\n      query.assignee = assignee;\n    }\n\n    // Filter by creator\n    if (creator) {\n      query.creator = creator;\n    }\n\n    // Filter by tags\n    if (tags) {\n      query.tags = { $in: tags.split(\",\") };\n    }\n\n    // Filter by due date\n    if (dueDate) {\n      const today = new Date();\n      today.setHours(0, 0, 0, 0);\n\n      if (dueDate === \"overdue\") {\n        query.dueDate = { $lt: today };\n        query.status = { $ne: \"completed\" };\n      } else if (dueDate === \"today\") {\n        const tomorrow = new Date(today);\n        tomorrow.setDate(tomorrow.getDate() + 1);\n        query.dueDate = { $gte: today, $lt: tomorrow };\n      } else if (dueDate === \"week\") {\n        const nextWeek = new Date(today);\n        nextWeek.setDate(nextWeek.getDate() + 7);\n        query.dueDate = { $gte: today, $lt: nextWeek };\n      }\n    }\n\n    // Search by title or description\n    if (search) {\n      query.$or = [{ title: { $regex: search, $options: \"i\" } }, { description: { $regex: search, $options: \"i\" } }];\n    }\n\n    // Viewers can only see tasks assigned to them or created by them\n    if (req.user.role === \"viewer\") {\n      query.$or = [{ assignee: req.user._id }, { creator: req.user._id }, { watchers: req.user._id }];\n    }\n\n    // Count total documents\n    const total = await Task.countDocuments(query);\n\n    // Build sort options\n    let sortOptions = { createdAt: -1 }; // Default sort\n    if (sort) {\n      const [field, order] = sort.split(\":\");\n      sortOptions = { [field]: order === \"asc\" ? 1 : -1 };\n    }\n\n    // Fetch tasks with pagination\n    const tasks = await Task.find(query)\n      .populate(\"assignee\", \"name email avatar\")\n      .populate(\"creator\", \"name email avatar\")\n      .sort(sortOptions)\n      .skip((page - 1) * limit)\n      .limit(Number.parseInt(limit));\n\n    res.status(200).json({\n      success: true,\n      count: tasks.length,\n      total,\n      totalPages: Math.ceil(total / limit),\n      currentPage: Number.parseInt(page),\n      tasks,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Get task by ID\nrouter.get(\"/:id\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const task = await Task.findById(req.params.id)\n      .populate(\"assignee\", \"name email avatar\")\n      .populate(\"creator\", \"name email avatar\")\n      .populate(\"watchers\", \"name email avatar\");\n\n    if (!task) {\n      return next(createError(404, \"Task not found\"));\n    }\n\n    // Check if user has access to this task\n    if (\n      req.user.role === \"viewer\" \u0026\u0026\n      task.assignee?._id.toString() !== req.user._id.toString() \u0026\u0026\n      task.creator._id.toString() !== req.user._id.toString() \u0026\u0026\n      !task.watchers.some((watcher) =\u003e watcher._id.toString() === req.user._id.toString())\n    ) {\n      return next(createError(403, \"You are not authorized to access this task\"));\n    }\n\n    res.status(200).json({\n      success: true,\n      task,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Update task\nrouter.put(\"/:id\", verifyToken, verifyOwnerOrAdmin(Task), async (req, res, next) =\u003e {\n  try {\n    const { title, description, status, priority, dueDate, assignee, tags, subtasks, progress } = req.body;\n\n    const task = req.resource; // From verifyOwnerOrAdmin middleware\n\n    // Store old assignee for notification\n    const oldAssignee = task.assignee;\n\n    // Update fields\n    if (title) task.title = title;\n    if (description !== undefined) task.description = description;\n    if (status) task.status = status;\n    if (priority) task.priority = priority;\n    if (dueDate !== undefined) task.dueDate = dueDate;\n    if (assignee !== undefined) task.assignee = assignee;\n    if (tags) task.tags = tags;\n    if (subtasks) task.subtasks = subtasks;\n    if (progress !== undefined) task.progress = progress;\n\n    // Save task\n    const updatedTask = await task.save();\n\n    // If assignee has changed, send notification to new assignee\n    if (assignee \u0026\u0026 (!oldAssignee || oldAssignee.toString() !== assignee.toString())) {\n      // Create notification\n      const notification = new Notification({\n        recipient: assignee,\n        sender: req.user._id,\n        type: \"task_assigned\",\n        title: \"Task Assigned\",\n        message: `You have been assigned to the task: ${task.title}`,\n        relatedTask: task._id,\n      });\n\n      await notification.save();\n\n      // Send real-time notification\n      if (req.io) {\n        req.io.to(assignee.toString()).emit(\"notification\", notification);\n      }\n\n      // Get assignee details\n      const assigneeUser = await User.findById(assignee);\n\n      // Send email notification if user has email notifications enabled\n      if (\n        assigneeUser \u0026\u0026\n        assigneeUser.notificationPreferences.emailNotifications \u0026\u0026\n        assigneeUser.notificationPreferences.taskAssigned\n      ) {\n        sendEmail({\n          to: assigneeUser.email,\n          subject: \"Task Assigned\",\n          text: `Hello ${assigneeUser.name},\n\nYou have been assigned to the task: ${task.title}\n\nDue Date: ${task.dueDate ? new Date(task.dueDate).toLocaleDateString() : \"Not set\"}\nPriority: ${task.priority}\n\nDescription:\n${task.description || \"No description provided\"}\n\nBest regards,\nThe Task Management Team`,\n        });\n      }\n    }\n\n    // If status has changed to completed, send notification to creator\n    if (status === \"completed\" \u0026\u0026 task.status !== \"completed\") {\n      // Create notification for creator\n      const notification = new Notification({\n        recipient: task.creator,\n        sender: req.user._id,\n        type: \"task_completed\",\n        title: \"Task Completed\",\n        message: `The task \"${task.title}\" has been marked as completed`,\n        relatedTask: task._id,\n      });\n\n      await notification.save();\n\n      // Send real-time notification\n      if (req.io) {\n        req.io.to(task.creator.toString()).emit(\"notification\", notification);\n      }\n\n      // Get creator details\n      const creatorUser = await User.findById(task.creator);\n\n      // Send email notification if user has email notifications enabled\n      if (\n        creatorUser \u0026\u0026\n        creatorUser.notificationPreferences.emailNotifications \u0026\u0026\n        creatorUser.notificationPreferences.taskCompleted\n      ) {\n        sendEmail({\n          to: creatorUser.email,\n          subject: \"Task Completed\",\n          text: `Hello ${creatorUser.name},\n\nThe task \"${task.title}\" has been marked as completed.\n\nBest regards,\nThe Task Management Team`,\n        });\n      }\n    }\n\n    // If task has been updated, notify assignee\n    if (task.assignee \u0026\u0026 task.assignee.toString() !== req.user._id.toString()) {\n      // Create notification\n      const notification = new Notification({\n        recipient: task.assignee,\n        sender: req.user._id,\n        type: \"task_updated\",\n        title: \"Task Updated\",\n        message: `The task \"${task.title}\" has been updated`,\n        relatedTask: task._id,\n      });\n\n      await notification.save();\n\n      // Send real-time notification\n      if (req.io) {\n        req.io.to(task.assignee.toString()).emit(\"notification\", notification);\n      }\n\n      // Get assignee details\n      const assigneeUser = await User.findById(task.assignee);\n\n      // Send email notification if user has email notifications enabled\n      if (\n        assigneeUser \u0026\u0026\n        assigneeUser.notificationPreferences.emailNotifications \u0026\u0026\n        assigneeUser.notificationPreferences.taskUpdated\n      ) {\n        sendEmail({\n          to: assigneeUser.email,\n          subject: \"Task Updated\",\n          text: `Hello ${assigneeUser.name},\n\nThe task \"${task.title}\" has been updated.\n\nBest regards,\nThe Task Management Team`,\n        });\n      }\n    }\n\n    res.status(200).json({\n      success: true,\n      message: \"Task updated successfully\",\n      task: updatedTask,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Delete task\nrouter.delete(\"/:id\", verifyToken, verifyOwnerOrAdmin(Task), async (req, res, next) =\u003e {\n  try {\n    const task = req.resource; // From verifyOwnerOrAdmin middleware\n\n    // Delete task\n    await Task.findByIdAndDelete(req.params.id);\n\n    // Delete associated comments\n    await Comment.deleteMany({ task: req.params.id });\n\n    // Delete associated notifications\n    await Notification.deleteMany({ relatedTask: req.params.id });\n\n    res.status(200).json({\n      success: true,\n      message: \"Task deleted successfully\",\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Add attachment to task\nrouter.post(\n  \"/:id/attachments\",\n  verifyToken,\n  verifyOwnerOrAdmin(Task),\n  upload.single(\"file\"),\n  async (req, res, next) =\u003e {\n    try {\n      if (!req.file) {\n        return next(createError(400, \"No file uploaded\"));\n      }\n\n      const task = req.resource; // From verifyOwnerOrAdmin middleware\n\n      // Add attachment\n      task.attachments.push({\n        name: req.file.originalname,\n        path: `/${req.file.path}`,\n        type: req.file.mimetype,\n        size: req.file.size,\n      });\n\n      // Save task\n      const updatedTask = await task.save();\n\n      res.status(200).json({\n        success: true,\n        message: \"Attachment added successfully\",\n        task: updatedTask,\n      });\n    } catch (err) {\n      next(err);\n    }\n  },\n);\n\n// Delete attachment from task\nrouter.delete(\"/:id/attachments/:attachmentId\", verifyToken, verifyOwnerOrAdmin(Task), async (req, res, next) =\u003e {\n  try {\n    const task = req.resource; // From verifyOwnerOrAdmin middleware\n\n    // Remove attachment\n    task.attachments = task.attachments.filter((attachment) =\u003e attachment._id.toString() !== req.params.attachmentId);\n\n    // Save task\n    const updatedTask = await task.save();\n\n    res.status(200).json({\n      success: true,\n      message: \"Attachment deleted successfully\",\n      task: updatedTask,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Add watcher to task\nrouter.post(\"/:id/watchers\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const task = await Task.findById(req.params.id);\n    if (!task) {\n      return next(createError(404, \"Task not found\"));\n    }\n\n    // Add user to watchers if not already watching\n    if (!task.watchers.includes(req.user._id)) {\n      task.watchers.push(req.user._id);\n      await task.save();\n    }\n\n    res.status(200).json({\n      success: true,\n      message: \"You are now watching this task\",\n      task,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Remove watcher from task\nrouter.delete(\"/:id/watchers\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const task = await Task.findById(req.params.id);\n    if (!task) {\n      return next(createError(404, \"Task not found\"));\n    }\n\n    // Remove user from watchers\n    task.watchers = task.watchers.filter((watcher) =\u003e watcher.toString() !== req.user._id.toString());\n\n    await task.save();\n\n    res.status(200).json({\n      success: true,\n      message: \"You are no longer watching this task\",\n      task,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\nexport default router;"])</script><script>self.__next_f.push([1,"73:T3671,"])</script><script>self.__next_f.push([1,"import express from \"express\";\nimport Task from \"../models/Task.js\";\nimport User from \"../models/User.js\";\nimport Comment from \"../models/Comment.js\";\nimport Notification from \"../models/Notification.js\";\nimport { verifyToken, verifyAdminOrEditor, verifyOwnerOrAdmin } from \"../middleware/auth.js\";\nimport { createError } from \"../utils/error.js\";\nimport upload from \"../middleware/upload.js\";\nimport { sendEmail } from \"../utils/email.js\";\n\nconst router = express.Router();\n\n// Create a new task\nrouter.post(\"/\", verifyToken, verifyAdminOrEditor, async (req, res, next) =\u003e {\n  try {\n    const { title, description, status, priority, dueDate, assignee, tags, subtasks } = req.body;\n\n    // Create new task\n    const newTask = new Task({\n      title,\n      description,\n      status: status || \"to-do\",\n      priority: priority || \"medium\",\n      dueDate,\n      assignee,\n      creator: req.user._id,\n      tags: tags || [],\n      subtasks: subtasks || [],\n    });\n\n    // Save task\n    const savedTask = await newTask.save();\n\n    // If task is assigned to someone, send notification\n    if (assignee) {\n      // Create notification\n      const notification = new Notification({\n        recipient: assignee,\n        sender: req.user._id,\n        type: \"task_assigned\",\n        title: \"New Task Assigned\",\n        message: `You have been assigned a new task: ${title}`,\n        relatedTask: savedTask._id,\n      });\n\n      await notification.save();\n\n      // Send real-time notification\n      if (req.io) {\n        req.io.to(assignee.toString()).emit(\"notification\", notification);\n      }\n\n      // Get assignee details\n      const assigneeUser = await User.findById(assignee);\n\n      // Send email notification if user has email notifications enabled\n      if (\n        assigneeUser \u0026\u0026\n        assigneeUser.notificationPreferences.emailNotifications \u0026\u0026\n        assigneeUser.notificationPreferences.taskAssigned\n      ) {\n        sendEmail({\n          to: assigneeUser.email,\n          subject: \"New Task Assigned\",\n          text: `Hello ${assigneeUser.name},\n\nYou have been assigned a new task: ${title}\n\nDue Date: ${dueDate ? new Date(dueDate).toLocaleDateString() : \"Not set\"}\nPriority: ${priority || \"Medium\"}\n\nDescription:\n${description || \"No description provided\"}\n\nBest regards,\nThe Task Management Team`,\n        });\n      }\n    }\n\n    res.status(201).json({\n      success: true,\n      message: \"Task created successfully\",\n      task: savedTask,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Get all tasks\nrouter.get(\"/\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { status, priority, assignee, creator, search, tags, dueDate, sort, page = 1, limit = 10 } = req.query;\n\n    // Build query\n    const query = {};\n\n    // Filter by status\n    if (status \u0026\u0026 status !== \"all\") {\n      query.status = status;\n    }\n\n    // Filter by priority\n    if (priority \u0026\u0026 priority !== \"all\") {\n      query.priority = priority;\n    }\n\n    // Filter by assignee\n    if (assignee) {\n      query.assignee = assignee;\n    }\n\n    // Filter by creator\n    if (creator) {\n      query.creator = creator;\n    }\n\n    // Filter by tags\n    if (tags) {\n      query.tags = { $in: tags.split(\",\") };\n    }\n\n    // Filter by due date\n    if (dueDate) {\n      const today = new Date();\n      today.setHours(0, 0, 0, 0);\n\n      if (dueDate === \"overdue\") {\n        query.dueDate = { $lt: today };\n        query.status = { $ne: \"completed\" };\n      } else if (dueDate === \"today\") {\n        const tomorrow = new Date(today);\n        tomorrow.setDate(tomorrow.getDate() + 1);\n        query.dueDate = { $gte: today, $lt: tomorrow };\n      } else if (dueDate === \"week\") {\n        const nextWeek = new Date(today);\n        nextWeek.setDate(nextWeek.getDate() + 7);\n        query.dueDate = { $gte: today, $lt: nextWeek };\n      }\n    }\n\n    // Search by title or description\n    if (search) {\n      query.$or = [{ title: { $regex: search, $options: \"i\" } }, { description: { $regex: search, $options: \"i\" } }];\n    }\n\n    // Viewers can only see tasks assigned to them or created by them\n    if (req.user.role === \"viewer\") {\n      query.$or = [{ assignee: req.user._id }, { creator: req.user._id }, { watchers: req.user._id }];\n    }\n\n    // Count total documents\n    const total = await Task.countDocuments(query);\n\n    // Build sort options\n    let sortOptions = { createdAt: -1 }; // Default sort\n    if (sort) {\n      const [field, order] = sort.split(\":\");\n      sortOptions = { [field]: order === \"asc\" ? 1 : -1 };\n    }\n\n    // Fetch tasks with pagination\n    const tasks = await Task.find(query)\n      .populate(\"assignee\", \"name email avatar\")\n      .populate(\"creator\", \"name email avatar\")\n      .sort(sortOptions)\n      .skip((page - 1) * limit)\n      .limit(Number.parseInt(limit));\n\n    res.status(200).json({\n      success: true,\n      count: tasks.length,\n      total,\n      totalPages: Math.ceil(total / limit),\n      currentPage: Number.parseInt(page),\n      tasks,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Get task by ID\nrouter.get(\"/:id\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const task = await Task.findById(req.params.id)\n      .populate(\"assignee\", \"name email avatar\")\n      .populate(\"creator\", \"name email avatar\")\n      .populate(\"watchers\", \"name email avatar\");\n\n    if (!task) {\n      return next(createError(404, \"Task not found\"));\n    }\n\n    // Check if user has access to this task\n    if (\n      req.user.role === \"viewer\" \u0026\u0026\n      task.assignee?._id.toString() !== req.user._id.toString() \u0026\u0026\n      task.creator._id.toString() !== req.user._id.toString() \u0026\u0026\n      !task.watchers.some((watcher) =\u003e watcher._id.toString() === req.user._id.toString())\n    ) {\n      return next(createError(403, \"You are not authorized to access this task\"));\n    }\n\n    res.status(200).json({\n      success: true,\n      task,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Update task\nrouter.put(\"/:id\", verifyToken, verifyOwnerOrAdmin(Task), async (req, res, next) =\u003e {\n  try {\n    const { title, description, status, priority, dueDate, assignee, tags, subtasks, progress } = req.body;\n\n    const task = req.resource; // From verifyOwnerOrAdmin middleware\n\n    // Store old assignee for notification\n    const oldAssignee = task.assignee;\n\n    // Update fields\n    if (title) task.title = title;\n    if (description !== undefined) task.description = description;\n    if (status) task.status = status;\n    if (priority) task.priority = priority;\n    if (dueDate !== undefined) task.dueDate = dueDate;\n    if (assignee !== undefined) task.assignee = assignee;\n    if (tags) task.tags = tags;\n    if (subtasks) task.subtasks = subtasks;\n    if (progress !== undefined) task.progress = progress;\n\n    // Save task\n    const updatedTask = await task.save();\n\n    // If assignee has changed, send notification to new assignee\n    if (assignee \u0026\u0026 (!oldAssignee || oldAssignee.toString() !== assignee.toString())) {\n      // Create notification\n      const notification = new Notification({\n        recipient: assignee,\n        sender: req.user._id,\n        type: \"task_assigned\",\n        title: \"Task Assigned\",\n        message: `You have been assigned to the task: ${task.title}`,\n        relatedTask: task._id,\n      });\n\n      await notification.save();\n\n      // Send real-time notification\n      if (req.io) {\n        req.io.to(assignee.toString()).emit(\"notification\", notification);\n      }\n\n      // Get assignee details\n      const assigneeUser = await User.findById(assignee);\n\n      // Send email notification if user has email notifications enabled\n      if (\n        assigneeUser \u0026\u0026\n        assigneeUser.notificationPreferences.emailNotifications \u0026\u0026\n        assigneeUser.notificationPreferences.taskAssigned\n      ) {\n        sendEmail({\n          to: assigneeUser.email,\n          subject: \"Task Assigned\",\n          text: `Hello ${assigneeUser.name},\n\nYou have been assigned to the task: ${task.title}\n\nDue Date: ${task.dueDate ? new Date(task.dueDate).toLocaleDateString() : \"Not set\"}\nPriority: ${task.priority}\n\nDescription:\n${task.description || \"No description provided\"}\n\nBest regards,\nThe Task Management Team`,\n        });\n      }\n    }\n\n    // If status has changed to completed, send notification to creator\n    if (status === \"completed\" \u0026\u0026 task.status !== \"completed\") {\n      // Create notification for creator\n      const notification = new Notification({\n        recipient: task.creator,\n        sender: req.user._id,\n        type: \"task_completed\",\n        title: \"Task Completed\",\n        message: `The task \"${task.title}\" has been marked as completed`,\n        relatedTask: task._id,\n      });\n\n      await notification.save();\n\n      // Send real-time notification\n      if (req.io) {\n        req.io.to(task.creator.toString()).emit(\"notification\", notification);\n      }\n\n      // Get creator details\n      const creatorUser = await User.findById(task.creator);\n\n      // Send email notification if user has email notifications enabled\n      if (\n        creatorUser \u0026\u0026\n        creatorUser.notificationPreferences.emailNotifications \u0026\u0026\n        creatorUser.notificationPreferences.taskCompleted\n      ) {\n        sendEmail({\n          to: creatorUser.email,\n          subject: \"Task Completed\",\n          text: `Hello ${creatorUser.name},\n\nThe task \"${task.title}\" has been marked as completed.\n\nBest regards,\nThe Task Management Team`,\n        });\n      }\n    }\n\n    // If task has been updated, notify assignee\n    if (task.assignee \u0026\u0026 task.assignee.toString() !== req.user._id.toString()) {\n      // Create notification\n      const notification = new Notification({\n        recipient: task.assignee,\n        sender: req.user._id,\n        type: \"task_updated\",\n        title: \"Task Updated\",\n        message: `The task \"${task.title}\" has been updated`,\n        relatedTask: task._id,\n      });\n\n      await notification.save();\n\n      // Send real-time notification\n      if (req.io) {\n        req.io.to(task.assignee.toString()).emit(\"notification\", notification);\n      }\n\n      // Get assignee details\n      const assigneeUser = await User.findById(task.assignee);\n\n      // Send email notification if user has email notifications enabled\n      if (\n        assigneeUser \u0026\u0026\n        assigneeUser.notificationPreferences.emailNotifications \u0026\u0026\n        assigneeUser.notificationPreferences.taskUpdated\n      ) {\n        sendEmail({\n          to: assigneeUser.email,\n          subject: \"Task Updated\",\n          text: `Hello ${assigneeUser.name},\n\nThe task \"${task.title}\" has been updated.\n\nBest regards,\nThe Task Management Team`,\n        });\n      }\n    }\n\n    res.status(200).json({\n      success: true,\n      message: \"Task updated successfully\",\n      task: updatedTask,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Delete task\nrouter.delete(\"/:id\", verifyToken, verifyOwnerOrAdmin(Task), async (req, res, next) =\u003e {\n  try {\n    const task = req.resource; // From verifyOwnerOrAdmin middleware\n\n    // Delete task\n    await Task.findByIdAndDelete(req.params.id);\n\n    // Delete associated comments\n    await Comment.deleteMany({ task: req.params.id });\n\n    // Delete associated notifications\n    await Notification.deleteMany({ relatedTask: req.params.id });\n\n    res.status(200).json({\n      success: true,\n      message: \"Task deleted successfully\",\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Add attachment to task\nrouter.post(\n  \"/:id/attachments\",\n  verifyToken,\n  verifyOwnerOrAdmin(Task),\n  upload.single(\"file\"),\n  async (req, res, next) =\u003e {\n    try {\n      if (!req.file) {\n        return next(createError(400, \"No file uploaded\"));\n      }\n\n      const task = req.resource; // From verifyOwnerOrAdmin middleware\n\n      // Add attachment\n      task.attachments.push({\n        name: req.file.originalname,\n        path: `/${req.file.path}`,\n        type: req.file.mimetype,\n        size: req.file.size,\n      });\n\n      // Save task\n      const updatedTask = await task.save();\n\n      res.status(200).json({\n        success: true,\n        message: \"Attachment added successfully\",\n        task: updatedTask,\n      });\n    } catch (err) {\n      next(err);\n    }\n  },\n);\n\n// Delete attachment from task\nrouter.delete(\"/:id/attachments/:attachmentId\", verifyToken, verifyOwnerOrAdmin(Task), async (req, res, next) =\u003e {\n  try {\n    const task = req.resource; // From verifyOwnerOrAdmin middleware\n\n    // Remove attachment\n    task.attachments = task.attachments.filter((attachment) =\u003e attachment._id.toString() !== req.params.attachmentId);\n\n    // Save task\n    const updatedTask = await task.save();\n\n    res.status(200).json({\n      success: true,\n      message: \"Attachment deleted successfully\",\n      task: updatedTask,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Add watcher to task\nrouter.post(\"/:id/watchers\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const task = await Task.findById(req.params.id);\n    if (!task) {\n      return next(createError(404, \"Task not found\"));\n    }\n\n    // Add user to watchers if not already watching\n    if (!task.watchers.includes(req.user._id)) {\n      task.watchers.push(req.user._id);\n      await task.save();\n    }\n\n    res.status(200).json({\n      success: true,\n      message: \"You are now watching this task\",\n      task,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Remove watcher from task\nrouter.delete(\"/:id/watchers\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const task = await Task.findById(req.params.id);\n    if (!task) {\n      return next(createError(404, \"Task not found\"));\n    }\n\n    // Remove user from watchers\n    task.watchers = task.watchers.filter((watcher) =\u003e watcher.toString() !== req.user._id.toString());\n\n    await task.save();\n\n    res.status(200).json({\n      success: true,\n      message: \"You are no longer watching this task\",\n      task,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\nexport default router;"])</script><script>self.__next_f.push([1,"74:T1c87,"])</script><script>self.__next_f.push([1,"import express from \"express\";\nimport Comment from \"../models/Comment.js\";\nimport Task from \"../models/Task.js\";\nimport User from \"../models/User.js\";\nimport Notification from \"../models/Notification.js\";\nimport { verifyToken } from \"../middleware/auth.js\";\nimport { createError } from \"../utils/error.js\";\nimport upload from \"../middleware/upload.js\";\nimport { sendEmail } from \"../utils/email.js\";\n\nconst router = express.Router();\n\n// Create a new comment\nrouter.post(\"/\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { taskId, content, mentions } = req.body;\n\n    // Check if task exists\n    const task = await Task.findById(taskId);\n    if (!task) {\n      return next(createError(404, \"Task not found\"));\n    }\n\n    // Create new comment\n    const newComment = new Comment({\n      task: taskId,\n      user: req.user._id,\n      content,\n      mentions: mentions || [],\n    });\n\n    // Save comment\n    const savedComment = await newComment.save();\n\n    // Populate user data\n    await savedComment.populate(\"user\", \"name email avatar\");\n\n    // Notify task assignee and creator about the comment\n    const notifyUsers = new Set();\n\n    // Add task assignee if exists and is not the commenter\n    if (task.assignee \u0026\u0026 task.assignee.toString() !== req.user._id.toString()) {\n      notifyUsers.add(task.assignee.toString());\n    }\n\n    // Add task creator if not the commenter\n    if (task.creator.toString() !== req.user._id.toString()) {\n      notifyUsers.add(task.creator.toString());\n    }\n\n    // Add watchers if not the commenter\n    task.watchers.forEach((watcher) =\u003e {\n      if (watcher.toString() !== req.user._id.toString()) {\n        notifyUsers.add(watcher.toString());\n      }\n    });\n\n    // Add mentioned users\n    if (mentions \u0026\u0026 mentions.length \u003e 0) {\n      mentions.forEach((userId) =\u003e notifyUsers.add(userId));\n    }\n\n    // Send notifications\n    for (const userId of notifyUsers) {\n      // Create notification\n      const notification = new Notification({\n        recipient: userId,\n        sender: req.user._id,\n        type: \"comment_added\",\n        title: \"New Comment\",\n        message: `${req.user.name} commented on task: ${task.title}`,\n        relatedTask: taskId,\n        relatedComment: savedComment._id,\n      });\n\n      await notification.save();\n\n      // Send real-time notification\n      if (req.io) {\n        req.io.to(userId).emit(\"notification\", notification);\n      }\n\n      // Get user details\n      const user = await User.findById(userId);\n\n      // Send email notification if user has email notifications enabled\n      if (user \u0026\u0026 user.notificationPreferences.emailNotifications \u0026\u0026 user.notificationPreferences.commentAdded) {\n        sendEmail({\n          to: user.email,\n          subject: \"New Comment on Task\",\n          text: `Hello ${user.name},\n\n${req.user.name} commented on the task \"${task.title}\":\n\n\"${content}\"\n\nBest regards,\nThe Task Management Team`,\n        });\n      }\n    }\n\n    res.status(201).json({\n      success: true,\n      message: \"Comment added successfully\",\n      comment: savedComment,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Get comments for a task\nrouter.get(\"/task/:taskId\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { page = 1, limit = 10 } = req.query;\n\n    // Check if task exists\n    const task = await Task.findById(req.params.taskId);\n    if (!task) {\n      return next(createError(404, \"Task not found\"));\n    }\n\n    // Check if user has access to this task\n    if (\n      req.user.role === \"viewer\" \u0026\u0026\n      task.assignee?.toString() !== req.user._id.toString() \u0026\u0026\n      task.creator.toString() !== req.user._id.toString() \u0026\u0026\n      !task.watchers.some((watcher) =\u003e watcher.toString() === req.user._id.toString())\n    ) {\n      return next(createError(403, \"You are not authorized to access this task\"));\n    }\n\n    // Count total comments\n    const total = await Comment.countDocuments({ task: req.params.taskId });\n\n    // Fetch comments with pagination\n    const comments = await Comment.find({ task: req.params.taskId })\n      .populate(\"user\", \"name email avatar\")\n      .sort({ createdAt: -1 })\n      .skip((page - 1) * limit)\n      .limit(Number.parseInt(limit));\n\n    res.status(200).json({\n      success: true,\n      count: comments.length,\n      total,\n      totalPages: Math.ceil(total / limit),\n      currentPage: Number.parseInt(page),\n      comments,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Update comment\nrouter.put(\"/:id\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { content, mentions } = req.body;\n\n    // Find comment\n    const comment = await Comment.findById(req.params.id);\n    if (!comment) {\n      return next(createError(404, \"Comment not found\"));\n    }\n\n    // Check if user is the comment author\n    if (comment.user.toString() !== req.user._id.toString() \u0026\u0026 req.user.role !== \"admin\") {\n      return next(createError(403, \"You are not authorized to update this comment\"));\n    }\n\n    // Update fields\n    if (content) comment.content = content;\n    if (mentions) comment.mentions = mentions;\n\n    // Save comment\n    const updatedComment = await comment.save();\n\n    // Populate user data\n    await updatedComment.populate(\"user\", \"name email avatar\");\n\n    res.status(200).json({\n      success: true,\n      message: \"Comment updated successfully\",\n      comment: updatedComment,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Delete comment\nrouter.delete(\"/:id\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Find comment\n    const comment = await Comment.findById(req.params.id);\n    if (!comment) {\n      return next(createError(404, \"Comment not found\"));\n    }\n\n    // Check if user is the comment author or admin\n    if (comment.user.toString() !== req.user._id.toString() \u0026\u0026 req.user.role !== \"admin\") {\n      return next(createError(403, \"You are not authorized to delete this comment\"));\n    }\n\n    // Delete comment\n    await Comment.findByIdAndDelete(req.params.id);\n\n    // Delete associated notifications\n    await Notification.deleteMany({ relatedComment: req.params.id });\n\n    res.status(200).json({\n      success: true,\n      message: \"Comment deleted successfully\",\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Add attachment to comment\nrouter.post(\"/:id/attachments\", verifyToken, upload.single(\"file\"), async (req, res, next) =\u003e {\n  try {\n    if (!req.file) {\n      return next(createError(400, \"No file uploaded\"));\n    }\n\n    // Find comment\n    const comment = await Comment.findById(req.params.id);\n    if (!comment) {\n      return next(createError(404, \"Comment not found\"));\n    }\n\n    // Check if user is the comment author\n    if (comment.user.toString() !== req.user._id.toString() \u0026\u0026 req.user.role !== \"admin\") {\n      return next(createError(403, \"You are not authorized to update this comment\"));\n    }\n\n    // Add attachment\n    comment.attachments.push({\n      name: req.file.originalname,\n      path: `/${req.file.path}`,\n      type: req.file.mimetype,\n      size: req.file.size,\n    });\n\n    // Save comment\n    const updatedComment = await comment.save();\n\n    res.status(200).json({\n      success: true,\n      message: \"Attachment added successfully\",\n      comment: updatedComment,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\nexport default router;"])</script><script>self.__next_f.push([1,"75:T1c87,"])</script><script>self.__next_f.push([1,"import express from \"express\";\nimport Comment from \"../models/Comment.js\";\nimport Task from \"../models/Task.js\";\nimport User from \"../models/User.js\";\nimport Notification from \"../models/Notification.js\";\nimport { verifyToken } from \"../middleware/auth.js\";\nimport { createError } from \"../utils/error.js\";\nimport upload from \"../middleware/upload.js\";\nimport { sendEmail } from \"../utils/email.js\";\n\nconst router = express.Router();\n\n// Create a new comment\nrouter.post(\"/\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { taskId, content, mentions } = req.body;\n\n    // Check if task exists\n    const task = await Task.findById(taskId);\n    if (!task) {\n      return next(createError(404, \"Task not found\"));\n    }\n\n    // Create new comment\n    const newComment = new Comment({\n      task: taskId,\n      user: req.user._id,\n      content,\n      mentions: mentions || [],\n    });\n\n    // Save comment\n    const savedComment = await newComment.save();\n\n    // Populate user data\n    await savedComment.populate(\"user\", \"name email avatar\");\n\n    // Notify task assignee and creator about the comment\n    const notifyUsers = new Set();\n\n    // Add task assignee if exists and is not the commenter\n    if (task.assignee \u0026\u0026 task.assignee.toString() !== req.user._id.toString()) {\n      notifyUsers.add(task.assignee.toString());\n    }\n\n    // Add task creator if not the commenter\n    if (task.creator.toString() !== req.user._id.toString()) {\n      notifyUsers.add(task.creator.toString());\n    }\n\n    // Add watchers if not the commenter\n    task.watchers.forEach((watcher) =\u003e {\n      if (watcher.toString() !== req.user._id.toString()) {\n        notifyUsers.add(watcher.toString());\n      }\n    });\n\n    // Add mentioned users\n    if (mentions \u0026\u0026 mentions.length \u003e 0) {\n      mentions.forEach((userId) =\u003e notifyUsers.add(userId));\n    }\n\n    // Send notifications\n    for (const userId of notifyUsers) {\n      // Create notification\n      const notification = new Notification({\n        recipient: userId,\n        sender: req.user._id,\n        type: \"comment_added\",\n        title: \"New Comment\",\n        message: `${req.user.name} commented on task: ${task.title}`,\n        relatedTask: taskId,\n        relatedComment: savedComment._id,\n      });\n\n      await notification.save();\n\n      // Send real-time notification\n      if (req.io) {\n        req.io.to(userId).emit(\"notification\", notification);\n      }\n\n      // Get user details\n      const user = await User.findById(userId);\n\n      // Send email notification if user has email notifications enabled\n      if (user \u0026\u0026 user.notificationPreferences.emailNotifications \u0026\u0026 user.notificationPreferences.commentAdded) {\n        sendEmail({\n          to: user.email,\n          subject: \"New Comment on Task\",\n          text: `Hello ${user.name},\n\n${req.user.name} commented on the task \"${task.title}\":\n\n\"${content}\"\n\nBest regards,\nThe Task Management Team`,\n        });\n      }\n    }\n\n    res.status(201).json({\n      success: true,\n      message: \"Comment added successfully\",\n      comment: savedComment,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Get comments for a task\nrouter.get(\"/task/:taskId\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { page = 1, limit = 10 } = req.query;\n\n    // Check if task exists\n    const task = await Task.findById(req.params.taskId);\n    if (!task) {\n      return next(createError(404, \"Task not found\"));\n    }\n\n    // Check if user has access to this task\n    if (\n      req.user.role === \"viewer\" \u0026\u0026\n      task.assignee?.toString() !== req.user._id.toString() \u0026\u0026\n      task.creator.toString() !== req.user._id.toString() \u0026\u0026\n      !task.watchers.some((watcher) =\u003e watcher.toString() === req.user._id.toString())\n    ) {\n      return next(createError(403, \"You are not authorized to access this task\"));\n    }\n\n    // Count total comments\n    const total = await Comment.countDocuments({ task: req.params.taskId });\n\n    // Fetch comments with pagination\n    const comments = await Comment.find({ task: req.params.taskId })\n      .populate(\"user\", \"name email avatar\")\n      .sort({ createdAt: -1 })\n      .skip((page - 1) * limit)\n      .limit(Number.parseInt(limit));\n\n    res.status(200).json({\n      success: true,\n      count: comments.length,\n      total,\n      totalPages: Math.ceil(total / limit),\n      currentPage: Number.parseInt(page),\n      comments,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Update comment\nrouter.put(\"/:id\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { content, mentions } = req.body;\n\n    // Find comment\n    const comment = await Comment.findById(req.params.id);\n    if (!comment) {\n      return next(createError(404, \"Comment not found\"));\n    }\n\n    // Check if user is the comment author\n    if (comment.user.toString() !== req.user._id.toString() \u0026\u0026 req.user.role !== \"admin\") {\n      return next(createError(403, \"You are not authorized to update this comment\"));\n    }\n\n    // Update fields\n    if (content) comment.content = content;\n    if (mentions) comment.mentions = mentions;\n\n    // Save comment\n    const updatedComment = await comment.save();\n\n    // Populate user data\n    await updatedComment.populate(\"user\", \"name email avatar\");\n\n    res.status(200).json({\n      success: true,\n      message: \"Comment updated successfully\",\n      comment: updatedComment,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Delete comment\nrouter.delete(\"/:id\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Find comment\n    const comment = await Comment.findById(req.params.id);\n    if (!comment) {\n      return next(createError(404, \"Comment not found\"));\n    }\n\n    // Check if user is the comment author or admin\n    if (comment.user.toString() !== req.user._id.toString() \u0026\u0026 req.user.role !== \"admin\") {\n      return next(createError(403, \"You are not authorized to delete this comment\"));\n    }\n\n    // Delete comment\n    await Comment.findByIdAndDelete(req.params.id);\n\n    // Delete associated notifications\n    await Notification.deleteMany({ relatedComment: req.params.id });\n\n    res.status(200).json({\n      success: true,\n      message: \"Comment deleted successfully\",\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Add attachment to comment\nrouter.post(\"/:id/attachments\", verifyToken, upload.single(\"file\"), async (req, res, next) =\u003e {\n  try {\n    if (!req.file) {\n      return next(createError(400, \"No file uploaded\"));\n    }\n\n    // Find comment\n    const comment = await Comment.findById(req.params.id);\n    if (!comment) {\n      return next(createError(404, \"Comment not found\"));\n    }\n\n    // Check if user is the comment author\n    if (comment.user.toString() !== req.user._id.toString() \u0026\u0026 req.user.role !== \"admin\") {\n      return next(createError(403, \"You are not authorized to update this comment\"));\n    }\n\n    // Add attachment\n    comment.attachments.push({\n      name: req.file.originalname,\n      path: `/${req.file.path}`,\n      type: req.file.mimetype,\n      size: req.file.size,\n    });\n\n    // Save comment\n    const updatedComment = await comment.save();\n\n    res.status(200).json({\n      success: true,\n      message: \"Attachment added successfully\",\n      comment: updatedComment,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\nexport default router;"])</script><script>self.__next_f.push([1,"76:Te06,"])</script><script>self.__next_f.push([1,"import express from \"express\";\nimport Notification from \"../models/Notification.js\";\nimport { verifyToken } from \"../middleware/auth.js\";\nimport { createError } from \"../utils/error.js\";\n\nconst router = express.Router();\n\n// Get user notifications\nrouter.get(\"/\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { read, page = 1, limit = 10 } = req.query;\n\n    // Build query\n    const query = { recipient: req.user._id };\n\n    // Filter by read status\n    if (read === \"true\") {\n      query.read = true;\n    } else if (read === \"false\") {\n      query.read = false;\n    }\n\n    // Count total notifications\n    const total = await Notification.countDocuments(query);\n\n    // Fetch notifications with pagination\n    const notifications = await Notification.find(query)\n      .populate(\"sender\", \"name email avatar\")\n      .populate(\"relatedTask\", \"title\")\n      .sort({ createdAt: -1 })\n      .skip((page - 1) * limit)\n      .limit(Number.parseInt(limit));\n\n    res.status(200).json({\n      success: true,\n      count: notifications.length,\n      total,\n      totalPages: Math.ceil(total / limit),\n      currentPage: Number.parseInt(page),\n      unreadCount: await Notification.countDocuments({ recipient: req.user._id, read: false }),\n      notifications,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Mark notification as read\nrouter.put(\"/:id/read\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Find notification\n    const notification = await Notification.findById(req.params.id);\n    if (!notification) {\n      return next(createError(404, \"Notification not found\"));\n    }\n\n    // Check if user is the recipient\n    if (notification.recipient.toString() !== req.user._id.toString()) {\n      return next(createError(403, \"You are not authorized to update this notification\"));\n    }\n\n    // Mark as read\n    notification.read = true;\n\n    // Save notification\n    await notification.save();\n\n    res.status(200).json({\n      success: true,\n      message: \"Notification marked as read\",\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Mark all notifications as read\nrouter.put(\"/read-all\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Update all unread notifications for the user\n    await Notification.updateMany({ recipient: req.user._id, read: false }, { $set: { read: true } });\n\n    res.status(200).json({\n      success: true,\n      message: \"All notifications marked as read\",\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Delete notification\nrouter.delete(\"/:id\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Find notification\n    const notification = await Notification.findById(req.params.id);\n    if (!notification) {\n      return next(createError(404, \"Notification not found\"));\n    }\n\n    // Check if user is the recipient\n    if (notification.recipient.toString() !== req.user._id.toString()) {\n      return next(createError(403, \"You are not authorized to delete this notification\"));\n    }\n\n    // Delete notification\n    await Notification.findByIdAndDelete(req.params.id);\n\n    res.status(200).json({\n      success: true,\n      message: \"Notification deleted successfully\",\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Delete all notifications\nrouter.delete(\"/\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Delete all notifications for the user\n    await Notification.deleteMany({ recipient: req.user._id });\n\n    res.status(200).json({\n      success: true,\n      message: \"All notifications deleted successfully\",\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\nexport default router;"])</script><script>self.__next_f.push([1,"77:Te06,"])</script><script>self.__next_f.push([1,"import express from \"express\";\nimport Notification from \"../models/Notification.js\";\nimport { verifyToken } from \"../middleware/auth.js\";\nimport { createError } from \"../utils/error.js\";\n\nconst router = express.Router();\n\n// Get user notifications\nrouter.get(\"/\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { read, page = 1, limit = 10 } = req.query;\n\n    // Build query\n    const query = { recipient: req.user._id };\n\n    // Filter by read status\n    if (read === \"true\") {\n      query.read = true;\n    } else if (read === \"false\") {\n      query.read = false;\n    }\n\n    // Count total notifications\n    const total = await Notification.countDocuments(query);\n\n    // Fetch notifications with pagination\n    const notifications = await Notification.find(query)\n      .populate(\"sender\", \"name email avatar\")\n      .populate(\"relatedTask\", \"title\")\n      .sort({ createdAt: -1 })\n      .skip((page - 1) * limit)\n      .limit(Number.parseInt(limit));\n\n    res.status(200).json({\n      success: true,\n      count: notifications.length,\n      total,\n      totalPages: Math.ceil(total / limit),\n      currentPage: Number.parseInt(page),\n      unreadCount: await Notification.countDocuments({ recipient: req.user._id, read: false }),\n      notifications,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Mark notification as read\nrouter.put(\"/:id/read\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Find notification\n    const notification = await Notification.findById(req.params.id);\n    if (!notification) {\n      return next(createError(404, \"Notification not found\"));\n    }\n\n    // Check if user is the recipient\n    if (notification.recipient.toString() !== req.user._id.toString()) {\n      return next(createError(403, \"You are not authorized to update this notification\"));\n    }\n\n    // Mark as read\n    notification.read = true;\n\n    // Save notification\n    await notification.save();\n\n    res.status(200).json({\n      success: true,\n      message: \"Notification marked as read\",\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Mark all notifications as read\nrouter.put(\"/read-all\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Update all unread notifications for the user\n    await Notification.updateMany({ recipient: req.user._id, read: false }, { $set: { read: true } });\n\n    res.status(200).json({\n      success: true,\n      message: \"All notifications marked as read\",\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Delete notification\nrouter.delete(\"/:id\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Find notification\n    const notification = await Notification.findById(req.params.id);\n    if (!notification) {\n      return next(createError(404, \"Notification not found\"));\n    }\n\n    // Check if user is the recipient\n    if (notification.recipient.toString() !== req.user._id.toString()) {\n      return next(createError(403, \"You are not authorized to delete this notification\"));\n    }\n\n    // Delete notification\n    await Notification.findByIdAndDelete(req.params.id);\n\n    res.status(200).json({\n      success: true,\n      message: \"Notification deleted successfully\",\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Delete all notifications\nrouter.delete(\"/\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Delete all notifications for the user\n    await Notification.deleteMany({ recipient: req.user._id });\n\n    res.status(200).json({\n      success: true,\n      message: \"All notifications deleted successfully\",\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\nexport default router;"])</script><script>self.__next_f.push([1,"78:T2018,"])</script><script>self.__next_f.push([1,"import express from \"express\";\nimport Task from \"../models/Task.js\";\nimport User from \"../models/User.js\";\nimport { verifyToken, verifyAdminOrEditor } from \"../middleware/auth.js\";\nimport { generatePDF, generateCSV } from \"../utils/export.js\";\n\nconst router = express.Router();\n\n// Get task completion report\nrouter.get(\"/task-completion\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { startDate, endDate, format } = req.query;\n\n    // Parse dates\n    const start = startDate ? new Date(startDate) : new Date(Date.now() - 30 * 24 * 60 * 60 * 1000); // Default to last 30 days\n    const end = endDate ? new Date(endDate) : new Date();\n\n    // Set end date to end of day\n    end.setHours(23, 59, 59, 999);\n\n    // Aggregate tasks by status and date\n    const tasksByStatus = await Task.aggregate([\n      {\n        $match: {\n          updatedAt: { $gte: start, $lte: end },\n        },\n      },\n      {\n        $group: {\n          _id: {\n            status: \"$status\",\n            date: { $dateToString: { format: \"%Y-%m-%d\", date: \"$updatedAt\" } },\n          },\n          count: { $sum: 1 },\n        },\n      },\n      {\n        $sort: { \"_id.date\": 1 },\n      },\n    ]);\n\n    // Transform data for chart\n    const dates = [...new Set(tasksByStatus.map((item) =\u003e item._id.date))].sort();\n\n    const chartData = dates.map((date) =\u003e {\n      const dataPoint = { date };\n      [\"to-do\", \"in-progress\", \"in-review\", \"completed\"].forEach((status) =\u003e {\n        const statusData = tasksByStatus.find((item) =\u003e item._id.date === date \u0026\u0026 item._id.status === status);\n        dataPoint[status] = statusData ? statusData.count : 0;\n      });\n\n      return dataPoint;\n    });\n\n    // If format is specified, export data\n    if (format === \"pdf\") {\n      const pdfBuffer = await generatePDF(\"Task Completion Report\", chartData);\n\n      res.setHeader(\"Content-Type\", \"application/pdf\");\n      res.setHeader(\"Content-Disposition\", \"attachment; filename=task-completion-report.pdf\");\n      return res.send(pdfBuffer);\n    }\n\n    if (format === \"csv\") {\n      const csvData = await generateCSV(chartData);\n\n      res.setHeader(\"Content-Type\", \"text/csv\");\n      res.setHeader(\"Content-Disposition\", \"attachment; filename=task-completion-report.csv\");\n      return res.send(csvData);\n    }\n\n    res.status(200).json({\n      success: true,\n      data: chartData,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Get team performance report\nrouter.get(\"/team-performance\", verifyToken, verifyAdminOrEditor, async (req, res, next) =\u003e {\n  try {\n    const { startDate, endDate, format } = req.query;\n\n    // Parse dates\n    const start = startDate ? new Date(startDate) : new Date(Date.now() - 30 * 24 * 60 * 60 * 1000); // Default to last 30 days\n    const end = endDate ? new Date(endDate) : new Date();\n\n    // Set end date to end of day\n    end.setHours(23, 59, 59, 999);\n\n    // Aggregate tasks by assignee\n    const tasksByAssignee = await Task.aggregate([\n      {\n        $match: {\n          assignee: { $exists: true, $ne: null },\n          updatedAt: { $gte: start, $lte: end },\n        },\n      },\n      {\n        $group: {\n          _id: {\n            assignee: \"$assignee\",\n            status: \"$status\",\n          },\n          count: { $sum: 1 },\n        },\n      },\n    ]);\n\n    // Get user details\n    const userIds = [...new Set(tasksByAssignee.map((item) =\u003e item._id.assignee))];\n    const users = await User.find({ _id: { $in: userIds } }, \"name email avatar\");\n\n    // Transform data for chart\n    const chartData = users.map((user) =\u003e {\n      const userData = {\n        name: user.name,\n        email: user.email,\n        avatar: user.avatar,\n      };\n      [\"to-do\", \"in-progress\", \"in-review\", \"completed\"].forEach((status) =\u003e {\n        const statusData = tasksByAssignee.find(\n          (item) =\u003e item._id.assignee.toString() === user._id.toString() \u0026\u0026 item._id.status === status,\n        );\n        userData[status] = statusData ? statusData.count : 0;\n      });\n\n      // Calculate total tasks\n      userData.total = Object.values(userData)\n        .filter((value) =\u003e typeof value === \"number\")\n        .reduce((sum, value) =\u003e sum + value, 0);\n\n      // Calculate completion rate\n      userData.completionRate = userData.total \u003e 0 ? Math.round((userData.completed / userData.total) * 100) : 0;\n\n      return userData;\n    });\n\n    // Sort by completion rate\n    chartData.sort((a, b) =\u003e b.completionRate - a.completionRate);\n\n    // If format is specified, export data\n    if (format === \"pdf\") {\n      const pdfBuffer = await generatePDF(\"Team Performance Report\", chartData);\n\n      res.setHeader(\"Content-Type\", \"application/pdf\");\n      res.setHeader(\"Content-Disposition\", \"attachment; filename=team-performance-report.pdf\");\n      return res.send(pdfBuffer);\n    }\n\n    if (format === \"csv\") {\n      const csvData = await generateCSV(chartData);\n\n      res.setHeader(\"Content-Type\", \"text/csv\");\n      res.setHeader(\"Content-Disposition\", \"attachment; filename=team-performance-report.csv\");\n      return res.send(csvData);\n    }\n\n    res.status(200).json({\n      success: true,\n      data: chartData,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Get priority distribution report\nrouter.get(\"/priority-distribution\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { format } = req.query;\n\n    // Aggregate tasks by priority\n    const tasksByPriority = await Task.aggregate([\n      {\n        $group: {\n          _id: \"$priority\",\n          count: { $sum: 1 },\n        },\n      },\n    ]);\n\n    // Transform data for chart\n    const chartData = tasksByPriority.map((item) =\u003e ({\n      priority: item._id,\n      count: item.count,\n    }));\n\n    // If format is specified, export data\n    if (format === \"pdf\") {\n      const pdfBuffer = await generatePDF(\"Priority Distribution Report\", chartData);\n\n      res.setHeader(\"Content-Type\", \"application/pdf\");\n      res.setHeader(\"Content-Disposition\", \"attachment; filename=priority-distribution-report.pdf\");\n      return res.send(pdfBuffer);\n    }\n\n    if (format === \"csv\") {\n      const csvData = await generateCSV(chartData);\n\n      res.setHeader(\"Content-Type\", \"text/csv\");\n      res.setHeader(\"Content-Disposition\", \"attachment; filename=priority-distribution-report.csv\");\n      return res.send(csvData);\n    }\n\n    res.status(200).json({\n      success: true,\n      data: chartData,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Get overdue tasks report\nrouter.get(\"/overdue-tasks\", verifyToken, verifyAdminOrEditor, async (req, res, next) =\u003e {\n  try {\n    const { format } = req.query;\n\n    // Get current date\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n\n    // Find overdue tasks\n    const overdueTasks = await Task.find({\n      dueDate: { $lt: today },\n      status: { $ne: \"completed\" },\n    })\n      .populate(\"assignee\", \"name email avatar\")\n      .populate(\"creator\", \"name email avatar\")\n      .sort({ dueDate: 1 });\n\n    // Transform data for export\n    const reportData = overdueTasks.map((task) =\u003e ({\n      id: task._id,\n      title: task.title,\n      priority: task.priority,\n      status: task.status,\n      dueDate: task.dueDate ? task.dueDate.toLocaleDateString() : \"Not set\",\n      assignee: task.assignee ? task.assignee.name : \"Unassigned\",\n      creator: task.creator ? task.creator.name : \"Unknown\",\n      daysOverdue: Math.ceil((today - new Date(task.dueDate)) / (1000 * 60 * 60 * 24)),\n    }));\n\n    // If format is specified, export data\n    if (format === \"pdf\") {\n      const pdfBuffer = await generatePDF(\"Overdue Tasks Report\", reportData);\n\n      res.setHeader(\"Content-Type\", \"application/pdf\");\n      res.setHeader(\"Content-Disposition\", \"attachment; filename=overdue-tasks-report.pdf\");\n      return res.send(pdfBuffer);\n    }\n\n    if (format === \"csv\") {\n      const csvData = await generateCSV(reportData);\n\n      res.setHeader(\"Content-Type\", \"text/csv\");\n      res.setHeader(\"Content-Disposition\", \"attachment; filename=overdue-tasks-report.csv\");\n      return res.send(csvData);\n    }\n\n    res.status(200).json({\n      success: true,\n      count: reportData.length,\n      data: reportData,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\nexport default router;"])</script><script>self.__next_f.push([1,"79:T2018,"])</script><script>self.__next_f.push([1,"import express from \"express\";\nimport Task from \"../models/Task.js\";\nimport User from \"../models/User.js\";\nimport { verifyToken, verifyAdminOrEditor } from \"../middleware/auth.js\";\nimport { generatePDF, generateCSV } from \"../utils/export.js\";\n\nconst router = express.Router();\n\n// Get task completion report\nrouter.get(\"/task-completion\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { startDate, endDate, format } = req.query;\n\n    // Parse dates\n    const start = startDate ? new Date(startDate) : new Date(Date.now() - 30 * 24 * 60 * 60 * 1000); // Default to last 30 days\n    const end = endDate ? new Date(endDate) : new Date();\n\n    // Set end date to end of day\n    end.setHours(23, 59, 59, 999);\n\n    // Aggregate tasks by status and date\n    const tasksByStatus = await Task.aggregate([\n      {\n        $match: {\n          updatedAt: { $gte: start, $lte: end },\n        },\n      },\n      {\n        $group: {\n          _id: {\n            status: \"$status\",\n            date: { $dateToString: { format: \"%Y-%m-%d\", date: \"$updatedAt\" } },\n          },\n          count: { $sum: 1 },\n        },\n      },\n      {\n        $sort: { \"_id.date\": 1 },\n      },\n    ]);\n\n    // Transform data for chart\n    const dates = [...new Set(tasksByStatus.map((item) =\u003e item._id.date))].sort();\n\n    const chartData = dates.map((date) =\u003e {\n      const dataPoint = { date };\n      [\"to-do\", \"in-progress\", \"in-review\", \"completed\"].forEach((status) =\u003e {\n        const statusData = tasksByStatus.find((item) =\u003e item._id.date === date \u0026\u0026 item._id.status === status);\n        dataPoint[status] = statusData ? statusData.count : 0;\n      });\n\n      return dataPoint;\n    });\n\n    // If format is specified, export data\n    if (format === \"pdf\") {\n      const pdfBuffer = await generatePDF(\"Task Completion Report\", chartData);\n\n      res.setHeader(\"Content-Type\", \"application/pdf\");\n      res.setHeader(\"Content-Disposition\", \"attachment; filename=task-completion-report.pdf\");\n      return res.send(pdfBuffer);\n    }\n\n    if (format === \"csv\") {\n      const csvData = await generateCSV(chartData);\n\n      res.setHeader(\"Content-Type\", \"text/csv\");\n      res.setHeader(\"Content-Disposition\", \"attachment; filename=task-completion-report.csv\");\n      return res.send(csvData);\n    }\n\n    res.status(200).json({\n      success: true,\n      data: chartData,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Get team performance report\nrouter.get(\"/team-performance\", verifyToken, verifyAdminOrEditor, async (req, res, next) =\u003e {\n  try {\n    const { startDate, endDate, format } = req.query;\n\n    // Parse dates\n    const start = startDate ? new Date(startDate) : new Date(Date.now() - 30 * 24 * 60 * 60 * 1000); // Default to last 30 days\n    const end = endDate ? new Date(endDate) : new Date();\n\n    // Set end date to end of day\n    end.setHours(23, 59, 59, 999);\n\n    // Aggregate tasks by assignee\n    const tasksByAssignee = await Task.aggregate([\n      {\n        $match: {\n          assignee: { $exists: true, $ne: null },\n          updatedAt: { $gte: start, $lte: end },\n        },\n      },\n      {\n        $group: {\n          _id: {\n            assignee: \"$assignee\",\n            status: \"$status\",\n          },\n          count: { $sum: 1 },\n        },\n      },\n    ]);\n\n    // Get user details\n    const userIds = [...new Set(tasksByAssignee.map((item) =\u003e item._id.assignee))];\n    const users = await User.find({ _id: { $in: userIds } }, \"name email avatar\");\n\n    // Transform data for chart\n    const chartData = users.map((user) =\u003e {\n      const userData = {\n        name: user.name,\n        email: user.email,\n        avatar: user.avatar,\n      };\n      [\"to-do\", \"in-progress\", \"in-review\", \"completed\"].forEach((status) =\u003e {\n        const statusData = tasksByAssignee.find(\n          (item) =\u003e item._id.assignee.toString() === user._id.toString() \u0026\u0026 item._id.status === status,\n        );\n        userData[status] = statusData ? statusData.count : 0;\n      });\n\n      // Calculate total tasks\n      userData.total = Object.values(userData)\n        .filter((value) =\u003e typeof value === \"number\")\n        .reduce((sum, value) =\u003e sum + value, 0);\n\n      // Calculate completion rate\n      userData.completionRate = userData.total \u003e 0 ? Math.round((userData.completed / userData.total) * 100) : 0;\n\n      return userData;\n    });\n\n    // Sort by completion rate\n    chartData.sort((a, b) =\u003e b.completionRate - a.completionRate);\n\n    // If format is specified, export data\n    if (format === \"pdf\") {\n      const pdfBuffer = await generatePDF(\"Team Performance Report\", chartData);\n\n      res.setHeader(\"Content-Type\", \"application/pdf\");\n      res.setHeader(\"Content-Disposition\", \"attachment; filename=team-performance-report.pdf\");\n      return res.send(pdfBuffer);\n    }\n\n    if (format === \"csv\") {\n      const csvData = await generateCSV(chartData);\n\n      res.setHeader(\"Content-Type\", \"text/csv\");\n      res.setHeader(\"Content-Disposition\", \"attachment; filename=team-performance-report.csv\");\n      return res.send(csvData);\n    }\n\n    res.status(200).json({\n      success: true,\n      data: chartData,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Get priority distribution report\nrouter.get(\"/priority-distribution\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { format } = req.query;\n\n    // Aggregate tasks by priority\n    const tasksByPriority = await Task.aggregate([\n      {\n        $group: {\n          _id: \"$priority\",\n          count: { $sum: 1 },\n        },\n      },\n    ]);\n\n    // Transform data for chart\n    const chartData = tasksByPriority.map((item) =\u003e ({\n      priority: item._id,\n      count: item.count,\n    }));\n\n    // If format is specified, export data\n    if (format === \"pdf\") {\n      const pdfBuffer = await generatePDF(\"Priority Distribution Report\", chartData);\n\n      res.setHeader(\"Content-Type\", \"application/pdf\");\n      res.setHeader(\"Content-Disposition\", \"attachment; filename=priority-distribution-report.pdf\");\n      return res.send(pdfBuffer);\n    }\n\n    if (format === \"csv\") {\n      const csvData = await generateCSV(chartData);\n\n      res.setHeader(\"Content-Type\", \"text/csv\");\n      res.setHeader(\"Content-Disposition\", \"attachment; filename=priority-distribution-report.csv\");\n      return res.send(csvData);\n    }\n\n    res.status(200).json({\n      success: true,\n      data: chartData,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Get overdue tasks report\nrouter.get(\"/overdue-tasks\", verifyToken, verifyAdminOrEditor, async (req, res, next) =\u003e {\n  try {\n    const { format } = req.query;\n\n    // Get current date\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n\n    // Find overdue tasks\n    const overdueTasks = await Task.find({\n      dueDate: { $lt: today },\n      status: { $ne: \"completed\" },\n    })\n      .populate(\"assignee\", \"name email avatar\")\n      .populate(\"creator\", \"name email avatar\")\n      .sort({ dueDate: 1 });\n\n    // Transform data for export\n    const reportData = overdueTasks.map((task) =\u003e ({\n      id: task._id,\n      title: task.title,\n      priority: task.priority,\n      status: task.status,\n      dueDate: task.dueDate ? task.dueDate.toLocaleDateString() : \"Not set\",\n      assignee: task.assignee ? task.assignee.name : \"Unassigned\",\n      creator: task.creator ? task.creator.name : \"Unknown\",\n      daysOverdue: Math.ceil((today - new Date(task.dueDate)) / (1000 * 60 * 60 * 24)),\n    }));\n\n    // If format is specified, export data\n    if (format === \"pdf\") {\n      const pdfBuffer = await generatePDF(\"Overdue Tasks Report\", reportData);\n\n      res.setHeader(\"Content-Type\", \"application/pdf\");\n      res.setHeader(\"Content-Disposition\", \"attachment; filename=overdue-tasks-report.pdf\");\n      return res.send(pdfBuffer);\n    }\n\n    if (format === \"csv\") {\n      const csvData = await generateCSV(reportData);\n\n      res.setHeader(\"Content-Type\", \"text/csv\");\n      res.setHeader(\"Content-Disposition\", \"attachment; filename=overdue-tasks-report.csv\");\n      return res.send(csvData);\n    }\n\n    res.status(200).json({\n      success: true,\n      count: reportData.length,\n      data: reportData,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\nexport default router;"])</script><script>self.__next_f.push([1,"7a:T72a,import nodemailer from \"nodemailer\";\n\n// Configure email transporter\nconst transporter = nodemailer.createTransport({\n  host: process.env.EMAIL_HOST || \"smtp.example.com\",\n  port: process.env.EMAIL_PORT || 587,\n  secure: process.env.EMAIL_SECURE === \"true\",\n  auth: {\n    user: process.env.EMAIL_USER || \"user@example.com\",\n    pass: process.env.EMAIL_PASS || \"password\",\n  },\n});\n\n// Send email\nexport const sendEmail = async ({ to, subject, text, html }) =\u003e {\n  try {\n    // Skip sending emails in development mode if no email config\n    if (process.env.NODE_ENV === \"development\" \u0026\u0026 !process.env.EMAIL_HOST) {\n      console.log(\"Email sending skipped in development mode\");\n      console.log({ to, subject, text });\n      return;\n    }\n\n    const mailOptions = {\n      from: process.env.EMAIL_FROM || \"Task Management \u003cnoreply@taskmanagement.com\u003e\",\n      to,\n      subject,\n      text,\n      html,\n    };\n\n    const info = await transporter.sendMail(mailOptions);\n    console.log(\"Email sent:\", info.messageId);\n    return info;\n  } catch (error) {\n    console.error(\"Error sending email:\", error);\n    throw error;\n  }\n};\n\n// Send deadline reminder emails\nexport const sendDeadlineReminders = async (tasks, users) =\u003e {\n  for (const task of tasks) {\n    // Get assignee\n    const assignee = users.find(\n      (user) =\u003e\n        user._id.toString() === task.assignee.toString() \u0026\u0026\n        user.notificationPreferences.emailNotifications \u0026\u0026\n        user.notificationPreferences.deadlineReminder,\n    );\n\n    if (assignee) {\n      await sendEmail({\n        to: assignee.email,\n        subject: \"Task Deadline Reminder\",\n        text: `Hello ${assignee.name},\n\nThis is a reminder that the task \"${task.title}\" is due soon (${new Date(task.dueDate).toLocaleDateString()}).\n\nBest regards,\nThe Task Management Team`,\n      });\n    }\n  }\n};7b:T72a,import nodemailer from \"nodemailer\";\n\n// Configure email transporter\nconst transporter = nodemailer.createTransport({\n  host: process.env.EMAIL_HOST || \"smtp.example.com\",\n  port: process.env.EMAIL_"])</script><script>self.__next_f.push([1,"PORT || 587,\n  secure: process.env.EMAIL_SECURE === \"true\",\n  auth: {\n    user: process.env.EMAIL_USER || \"user@example.com\",\n    pass: process.env.EMAIL_PASS || \"password\",\n  },\n});\n\n// Send email\nexport const sendEmail = async ({ to, subject, text, html }) =\u003e {\n  try {\n    // Skip sending emails in development mode if no email config\n    if (process.env.NODE_ENV === \"development\" \u0026\u0026 !process.env.EMAIL_HOST) {\n      console.log(\"Email sending skipped in development mode\");\n      console.log({ to, subject, text });\n      return;\n    }\n\n    const mailOptions = {\n      from: process.env.EMAIL_FROM || \"Task Management \u003cnoreply@taskmanagement.com\u003e\",\n      to,\n      subject,\n      text,\n      html,\n    };\n\n    const info = await transporter.sendMail(mailOptions);\n    console.log(\"Email sent:\", info.messageId);\n    return info;\n  } catch (error) {\n    console.error(\"Error sending email:\", error);\n    throw error;\n  }\n};\n\n// Send deadline reminder emails\nexport const sendDeadlineReminders = async (tasks, users) =\u003e {\n  for (const task of tasks) {\n    // Get assignee\n    const assignee = users.find(\n      (user) =\u003e\n        user._id.toString() === task.assignee.toString() \u0026\u0026\n        user.notificationPreferences.emailNotifications \u0026\u0026\n        user.notificationPreferences.deadlineReminder,\n    );\n\n    if (assignee) {\n      await sendEmail({\n        to: assignee.email,\n        subject: \"Task Deadline Reminder\",\n        text: `Hello ${assignee.name},\n\nThis is a reminder that the task \"${task.title}\" is due soon (${new Date(task.dueDate).toLocaleDateString()}).\n\nBest regards,\nThe Task Management Team`,\n      });\n    }\n  }\n};7c:T8f9,"])</script><script>self.__next_f.push([1,"import PDFDocument from \"pdfkit\";\nimport { Parser } from \"json2csv\";\n\n// Generate PDF report\nexport const generatePDF = (title, data) =\u003e {\n  return new Promise((resolve, reject) =\u003e {\n    try {\n      // Create PDF document\n      const doc = new PDFDocument();\n      const buffers = [];\n\n      // Collect PDF data chunks\n      doc.on(\"data\", (buffer) =\u003e buffers.push(buffer));\n      doc.on(\"end\", () =\u003e resolve(Buffer.concat(buffers)));\n\n      // Add title\n      doc.fontSize(20).text(title, { align: \"center\" });\n      doc.moveDown();\n\n      // Add date\n      doc.fontSize(12).text(`Generated on: ${new Date().toLocaleDateString()}`, { align: \"center\" });\n      doc.moveDown(2);\n\n      // Add data table\n      if (data.length \u003e 0) {\n        // Get column headers\n        const headers = Object.keys(data[0]);\n\n        // Calculate column widths\n        const columnWidth = 500 / headers.length;\n\n        // Draw header row\n        doc.fontSize(10).font(\"Helvetica-Bold\");\n        headers.forEach((header, i) =\u003e {\n          const x = 50 + i * columnWidth;\n          doc.text(header.charAt(0).toUpperCase() + header.slice(1).replace(/([A-Z])/g, \" $1\"), x, doc.y, {\n            width: columnWidth,\n            align: \"left\",\n          });\n        });\n\n        doc.moveDown();\n        doc.font(\"Helvetica\");\n\n        // Draw data rows\n        data.forEach((row) =\u003e {\n          const y = doc.y;\n\n          headers.forEach((header, i) =\u003e {\n            const x = 50 + i * columnWidth;\n            doc.text(row[header] !== undefined ? row[header].toString() : \"\", x, y, {\n              width: columnWidth,\n              align: \"left\",\n            });\n          });\n\n          doc.moveDown();\n        });\n      } else {\n        doc.text(\"No data available\", { align: \"center\" });\n      }\n\n      // Finalize PDF\n      doc.end();\n    } catch (err) {\n      reject(err);\n    }\n  });\n};\n\n// Generate CSV report\nexport const generateCSV = (data) =\u003e {\n  return new Promise((resolve, reject) =\u003e {\n    try {\n      if (data.length === 0) {\n        return resolve(\"No data available\");\n      }\n\n      // Configure CSV parser\n      const json2csvParser = new Parser();\n\n      // Convert JSON to CSV\n      const csv = json2csvParser.parse(data);\n\n      resolve(csv);\n    } catch (err) {\n      reject(err);\n    }\n  });\n};"])</script><script>self.__next_f.push([1,"7d:T8f9,"])</script><script>self.__next_f.push([1,"import PDFDocument from \"pdfkit\";\nimport { Parser } from \"json2csv\";\n\n// Generate PDF report\nexport const generatePDF = (title, data) =\u003e {\n  return new Promise((resolve, reject) =\u003e {\n    try {\n      // Create PDF document\n      const doc = new PDFDocument();\n      const buffers = [];\n\n      // Collect PDF data chunks\n      doc.on(\"data\", (buffer) =\u003e buffers.push(buffer));\n      doc.on(\"end\", () =\u003e resolve(Buffer.concat(buffers)));\n\n      // Add title\n      doc.fontSize(20).text(title, { align: \"center\" });\n      doc.moveDown();\n\n      // Add date\n      doc.fontSize(12).text(`Generated on: ${new Date().toLocaleDateString()}`, { align: \"center\" });\n      doc.moveDown(2);\n\n      // Add data table\n      if (data.length \u003e 0) {\n        // Get column headers\n        const headers = Object.keys(data[0]);\n\n        // Calculate column widths\n        const columnWidth = 500 / headers.length;\n\n        // Draw header row\n        doc.fontSize(10).font(\"Helvetica-Bold\");\n        headers.forEach((header, i) =\u003e {\n          const x = 50 + i * columnWidth;\n          doc.text(header.charAt(0).toUpperCase() + header.slice(1).replace(/([A-Z])/g, \" $1\"), x, doc.y, {\n            width: columnWidth,\n            align: \"left\",\n          });\n        });\n\n        doc.moveDown();\n        doc.font(\"Helvetica\");\n\n        // Draw data rows\n        data.forEach((row) =\u003e {\n          const y = doc.y;\n\n          headers.forEach((header, i) =\u003e {\n            const x = 50 + i * columnWidth;\n            doc.text(row[header] !== undefined ? row[header].toString() : \"\", x, y, {\n              width: columnWidth,\n              align: \"left\",\n            });\n          });\n\n          doc.moveDown();\n        });\n      } else {\n        doc.text(\"No data available\", { align: \"center\" });\n      }\n\n      // Finalize PDF\n      doc.end();\n    } catch (err) {\n      reject(err);\n    }\n  });\n};\n\n// Generate CSV report\nexport const generateCSV = (data) =\u003e {\n  return new Promise((resolve, reject) =\u003e {\n    try {\n      if (data.length === 0) {\n        return resolve(\"No data available\");\n      }\n\n      // Configure CSV parser\n      const json2csvParser = new Parser();\n\n      // Convert JSON to CSV\n      const csv = json2csvParser.parse(data);\n\n      resolve(csv);\n    } catch (err) {\n      reject(err);\n    }\n  });\n};"])</script><script>self.__next_f.push([1,"7e:T1159,"])</script><script>self.__next_f.push([1,"import cron from \"node-cron\";\nimport Task from \"../models/Task.js\";\nimport User from \"../models/User.js\";\nimport Notification from \"../models/Notification.js\";\nimport { sendDeadlineReminders, sendEmail } from \"./email.js\";\n\n// Schedule deadline reminders\nexport const scheduleDeadlineReminders = () =\u003e {\n  // Run every day at 9:00 AM\n  cron.schedule(\"0 9 * * *\", async () =\u003e {\n    try {\n      console.log(\"Running deadline reminder scheduler...\");\n\n      // Get current date\n      const today = new Date();\n      today.setHours(0, 0, 0, 0);\n\n      // Get tomorrow's date\n      const tomorrow = new Date(today);\n      tomorrow.setDate(tomorrow.getDate() + 1);\n\n      // Get tasks due tomorrow\n      const tasks = await Task.find({\n        dueDate: {\n          $gte: tomorrow,\n          $lt: new Date(tomorrow.getTime() + 24 * 60 * 60 * 1000),\n        },\n        status: { $ne: \"completed\" },\n      }).populate(\"assignee\");\n\n      if (tasks.length === 0) {\n        console.log(\"No tasks due tomorrow\");\n        return;\n      }\n\n      console.log(`Found ${tasks.length} tasks due tomorrow`);\n\n      // Get all users\n      const users = await User.find({\n        _id: { $in: tasks.map((task) =\u003e task.assignee) },\n      });\n\n      // Create notifications\n      const notifications = tasks.map((task) =\u003e ({\n        recipient: task.assignee,\n        type: \"deadline_reminder\",\n        title: \"Task Due Tomorrow\",\n        message: `The task \"${task.title}\" is due tomorrow`,\n        relatedTask: task._id,\n      }));\n\n      // Save notifications\n      await Notification.insertMany(notifications);\n\n      // Send email reminders\n      await sendDeadlineReminders(tasks, users);\n\n      console.log(\"Deadline reminders sent successfully\");\n    } catch (err) {\n      console.error(\"Error sending deadline reminders:\", err);\n    }\n  });\n};\n\n// Schedule weekly digest emails\nexport const scheduleWeeklyDigest = () =\u003e {\n  // Run every Monday at 8:00 AM\n  cron.schedule(\"0 8 * * 1\", async () =\u003e {\n    try {\n      console.log(\"Running weekly digest scheduler...\");\n\n      // Get users who have enabled weekly digest\n      const users = await User.find({\n        \"notificationPreferences.weeklyDigest\": true,\n        \"notificationPreferences.emailNotifications\": true,\n      });\n\n      if (users.length === 0) {\n        console.log(\"No users have enabled weekly digest\");\n        return;\n      }\n\n      console.log(`Sending weekly digest to ${users.length} users`);\n\n      // Get date range for the past week\n      const endDate = new Date();\n      const startDate = new Date();\n      startDate.setDate(startDate.getDate() - 7);\n\n      // Process each user\n      for (const user of users) {\n        // Get tasks assigned to user\n        const assignedTasks = await Task.find({\n          assignee: user._id,\n          updatedAt: { $gte: startDate, $lte: endDate },\n        });\n\n        // Get tasks created by user\n        const createdTasks = await Task.find({\n          creator: user._id,\n          updatedAt: { $gte: startDate, $lte: endDate },\n        });\n\n        // Count tasks by status\n        const tasksByStatus = {\n          completed: assignedTasks.filter((task) =\u003e task.status === \"completed\").length,\n          inProgress: assignedTasks.filter((task) =\u003e task.status === \"in-progress\").length,\n          inReview: assignedTasks.filter((task) =\u003e task.status === \"in-review\").length,\n          toDo: assignedTasks.filter((task) =\u003e task.status === \"to-do\").length,\n        };\n\n        // Get overdue tasks\n        const today = new Date();\n        today.setHours(0, 0, 0, 0);\n\n        const overdueTasks = await Task.find({\n          assignee: user._id,\n          dueDate: { $lt: today },\n          status: { $ne: \"completed\" },\n        });\n\n        // Send digest email\n        await sendEmail({\n          to: user.email,\n          subject: \"Your Weekly Task Digest\",\n          text: `Hello ${user.name},\n\nHere's your weekly task summary:\n\nTasks Assigned to You: ${assignedTasks.length}\n- Completed: ${tasksByStatus.completed}\n- In Progress: ${tasksByStatus.inProgress}\n- In Review: ${tasksByStatus.inReview}\n- To Do: ${tasksByStatus.toDo}\n\nTasks Created by You: ${createdTasks.length}\n\nOverdue Tasks: ${overdueTasks.length}\n\nBest regards,\nThe Task Management Team`,\n        });\n      }\n\n      console.log(\"Weekly digest emails sent successfully\");\n    } catch (err) {\n      console.error(\"Error sending weekly digest emails:\", err);\n    }\n  });\n};"])</script><script>self.__next_f.push([1,"7f:T1159,"])</script><script>self.__next_f.push([1,"import cron from \"node-cron\";\nimport Task from \"../models/Task.js\";\nimport User from \"../models/User.js\";\nimport Notification from \"../models/Notification.js\";\nimport { sendDeadlineReminders, sendEmail } from \"./email.js\";\n\n// Schedule deadline reminders\nexport const scheduleDeadlineReminders = () =\u003e {\n  // Run every day at 9:00 AM\n  cron.schedule(\"0 9 * * *\", async () =\u003e {\n    try {\n      console.log(\"Running deadline reminder scheduler...\");\n\n      // Get current date\n      const today = new Date();\n      today.setHours(0, 0, 0, 0);\n\n      // Get tomorrow's date\n      const tomorrow = new Date(today);\n      tomorrow.setDate(tomorrow.getDate() + 1);\n\n      // Get tasks due tomorrow\n      const tasks = await Task.find({\n        dueDate: {\n          $gte: tomorrow,\n          $lt: new Date(tomorrow.getTime() + 24 * 60 * 60 * 1000),\n        },\n        status: { $ne: \"completed\" },\n      }).populate(\"assignee\");\n\n      if (tasks.length === 0) {\n        console.log(\"No tasks due tomorrow\");\n        return;\n      }\n\n      console.log(`Found ${tasks.length} tasks due tomorrow`);\n\n      // Get all users\n      const users = await User.find({\n        _id: { $in: tasks.map((task) =\u003e task.assignee) },\n      });\n\n      // Create notifications\n      const notifications = tasks.map((task) =\u003e ({\n        recipient: task.assignee,\n        type: \"deadline_reminder\",\n        title: \"Task Due Tomorrow\",\n        message: `The task \"${task.title}\" is due tomorrow`,\n        relatedTask: task._id,\n      }));\n\n      // Save notifications\n      await Notification.insertMany(notifications);\n\n      // Send email reminders\n      await sendDeadlineReminders(tasks, users);\n\n      console.log(\"Deadline reminders sent successfully\");\n    } catch (err) {\n      console.error(\"Error sending deadline reminders:\", err);\n    }\n  });\n};\n\n// Schedule weekly digest emails\nexport const scheduleWeeklyDigest = () =\u003e {\n  // Run every Monday at 8:00 AM\n  cron.schedule(\"0 8 * * 1\", async () =\u003e {\n    try {\n      console.log(\"Running weekly digest scheduler...\");\n\n      // Get users who have enabled weekly digest\n      const users = await User.find({\n        \"notificationPreferences.weeklyDigest\": true,\n        \"notificationPreferences.emailNotifications\": true,\n      });\n\n      if (users.length === 0) {\n        console.log(\"No users have enabled weekly digest\");\n        return;\n      }\n\n      console.log(`Sending weekly digest to ${users.length} users`);\n\n      // Get date range for the past week\n      const endDate = new Date();\n      const startDate = new Date();\n      startDate.setDate(startDate.getDate() - 7);\n\n      // Process each user\n      for (const user of users) {\n        // Get tasks assigned to user\n        const assignedTasks = await Task.find({\n          assignee: user._id,\n          updatedAt: { $gte: startDate, $lte: endDate },\n        });\n\n        // Get tasks created by user\n        const createdTasks = await Task.find({\n          creator: user._id,\n          updatedAt: { $gte: startDate, $lte: endDate },\n        });\n\n        // Count tasks by status\n        const tasksByStatus = {\n          completed: assignedTasks.filter((task) =\u003e task.status === \"completed\").length,\n          inProgress: assignedTasks.filter((task) =\u003e task.status === \"in-progress\").length,\n          inReview: assignedTasks.filter((task) =\u003e task.status === \"in-review\").length,\n          toDo: assignedTasks.filter((task) =\u003e task.status === \"to-do\").length,\n        };\n\n        // Get overdue tasks\n        const today = new Date();\n        today.setHours(0, 0, 0, 0);\n\n        const overdueTasks = await Task.find({\n          assignee: user._id,\n          dueDate: { $lt: today },\n          status: { $ne: \"completed\" },\n        });\n\n        // Send digest email\n        await sendEmail({\n          to: user.email,\n          subject: \"Your Weekly Task Digest\",\n          text: `Hello ${user.name},\n\nHere's your weekly task summary:\n\nTasks Assigned to You: ${assignedTasks.length}\n- Completed: ${tasksByStatus.completed}\n- In Progress: ${tasksByStatus.inProgress}\n- In Review: ${tasksByStatus.inReview}\n- To Do: ${tasksByStatus.toDo}\n\nTasks Created by You: ${createdTasks.length}\n\nOverdue Tasks: ${overdueTasks.length}\n\nBest regards,\nThe Task Management Team`,\n        });\n      }\n\n      console.log(\"Weekly digest emails sent successfully\");\n    } catch (err) {\n      console.error(\"Error sending weekly digest emails:\", err);\n    }\n  });\n};"])</script><script>self.__next_f.push([1,"80:T7c0,import jwt from \"jsonwebtoken\";\nimport User from \"../models/User.js\";\n\nconst setupSocketHandlers = (io) =\u003e {\n  // Middleware for authentication\n  io.use(async (socket, next) =\u003e {\n    try {\n      const token =\n        socket.handshake.auth.token ||\n        (socket.handshake.headers.authorization \u0026\u0026 socket.handshake.headers.authorization.startsWith(\"Bearer\")\n          ? socket.handshake.headers.authorization.split(\" \")[1]\n          : null);\n\n      if (!token) {\n        return next(new Error(\"Authentication error\"));\n      }\n\n      // Verify token\n      const decoded = jwt.verify(token, process.env.JWT_SECRET);\n\n      // Find user\n      const user = await User.findById(decoded.id);\n      if (!user || user.status !== \"active\") {\n        return next(new Error(\"Authentication error\"));\n      }\n\n      // Attach user to socket\n      socket.user = user;\n      next();\n    } catch (err) {\n      next(new Error(\"Authentication error\"));\n    }\n  });\n\n  io.on(\"connection\", (socket) =\u003e {\n    console.log(`User connected: ${socket.user._id}`);\n\n    // Join user's room for private notifications\n    socket.join(socket.user._id.toString());\n\n    // Handle task updates\n    socket.on(\"task:update\", (taskId) =\u003e {\n      // Broadcast to all clients except sender\n      socket.broadcast.emit(\"task:updated\", taskId);\n    });\n\n    // Handle new comments\n    socket.on(\"comment:new\", (taskId) =\u003e {\n      // Broadcast to all clients except sender\n      socket.broadcast.emit(\"comment:added\", taskId);\n    });\n\n    // Handle user typing in comments\n    socket.on(\"typing\", (data) =\u003e {\n      // Broadcast to all clients except sender\n      socket.broadcast.emit(\"user:typing\", {\n        taskId: data.taskId,\n        user: {\n          id: socket.user._id,\n          name: socket.user.name,\n        },\n      });\n    });\n\n    // Handle disconnection\n    socket.on(\"disconnect\", () =\u003e {\n      console.log(`User disconnected: ${socket.user._id}`);\n    });\n  });\n};\n\nexport default setupSocketHandlers;81:T7c0,import jwt from \"jsonwebtoken\";\nimport User from"])</script><script>self.__next_f.push([1," \"../models/User.js\";\n\nconst setupSocketHandlers = (io) =\u003e {\n  // Middleware for authentication\n  io.use(async (socket, next) =\u003e {\n    try {\n      const token =\n        socket.handshake.auth.token ||\n        (socket.handshake.headers.authorization \u0026\u0026 socket.handshake.headers.authorization.startsWith(\"Bearer\")\n          ? socket.handshake.headers.authorization.split(\" \")[1]\n          : null);\n\n      if (!token) {\n        return next(new Error(\"Authentication error\"));\n      }\n\n      // Verify token\n      const decoded = jwt.verify(token, process.env.JWT_SECRET);\n\n      // Find user\n      const user = await User.findById(decoded.id);\n      if (!user || user.status !== \"active\") {\n        return next(new Error(\"Authentication error\"));\n      }\n\n      // Attach user to socket\n      socket.user = user;\n      next();\n    } catch (err) {\n      next(new Error(\"Authentication error\"));\n    }\n  });\n\n  io.on(\"connection\", (socket) =\u003e {\n    console.log(`User connected: ${socket.user._id}`);\n\n    // Join user's room for private notifications\n    socket.join(socket.user._id.toString());\n\n    // Handle task updates\n    socket.on(\"task:update\", (taskId) =\u003e {\n      // Broadcast to all clients except sender\n      socket.broadcast.emit(\"task:updated\", taskId);\n    });\n\n    // Handle new comments\n    socket.on(\"comment:new\", (taskId) =\u003e {\n      // Broadcast to all clients except sender\n      socket.broadcast.emit(\"comment:added\", taskId);\n    });\n\n    // Handle user typing in comments\n    socket.on(\"typing\", (data) =\u003e {\n      // Broadcast to all clients except sender\n      socket.broadcast.emit(\"user:typing\", {\n        taskId: data.taskId,\n        user: {\n          id: socket.user._id,\n          name: socket.user.name,\n        },\n      });\n    });\n\n    // Handle disconnection\n    socket.on(\"disconnect\", () =\u003e {\n      console.log(`User disconnected: ${socket.user._id}`);\n    });\n  });\n};\n\nexport default setupSocketHandlers;82:[[\"b_ziXtDRY6T4u\",false],[\"b_DsBjUrm49AS\",false],[\"b_licofAqb22B\",false],[\"b_dQFv16063iB\",false],[\"b_aWSIXSqh"])</script><script>self.__next_f.push([1,"U7z\",false],[\"b_dw1WvYsMPad\",false],[\"b_TaCaAzHRcKS\",false],[\"b_Fe77xFVKTs4\",false],[\"b_4IaEDoUN54E\",false],[\"b_vgL82lhdt0R\",false],[\"b_r7kaWysF38W\",false],[\"b_LVFWZIx1NAn\",false],[\"b_Yz55zBYhKP2\",false],[\"b_EhgUWUE9ELV\",false],[\"b_56bCXte5aZW\",false],[\"b_JDRupuXoNDJ\",false],[\"b_HvByXziVBAQ\",false],[\"b_EiyqaDkSPt5\",false],[\"b_wa7sA2Uqpfy\",false],[\"b_4Ip545uDOCJ\",false],[\"b_tkUnrsg5LdA\",false],[\"b_RMVpqoDSbDW\",false],[\"b_ZjGn6OWeTM5\",false],[\"b_xuNsm3mxjhy\",false],[\"b_r20rrt0by07\",false],[\"b_TR4z7KynM4h\",false]]\n83:[[\"b_ziXtDRY6T4u\",\"$undefined\"],[\"b_DsBjUrm49AS\",\"$undefined\"],[\"b_licofAqb22B\",\"$undefined\"],[\"b_dQFv16063iB\",\"$undefined\"],[\"b_aWSIXSqhU7z\",\"$undefined\"],[\"b_dw1WvYsMPad\",\"$undefined\"],[\"b_TaCaAzHRcKS\",\"$undefined\"],[\"b_Fe77xFVKTs4\",\"$undefined\"],[\"b_4IaEDoUN54E\",\"$undefined\"],[\"b_vgL82lhdt0R\",\"$undefined\"],[\"b_r7kaWysF38W\",\"$undefined\"],[\"b_LVFWZIx1NAn\",\"$undefined\"],[\"b_Yz55zBYhKP2\",\"$undefined\"],[\"b_EhgUWUE9ELV\",\"$undefined\"],[\"b_56bCXte5aZW\",\"$undefined\"],[\"b_JDRupuXoNDJ\",\"$undefined\"],[\"b_HvByXziVBAQ\",\"$undefined\"],[\"b_EiyqaDkSPt5\",\"$undefined\"],[\"b_wa7sA2Uqpfy\",\"$undefined\"],[\"b_4Ip545uDOCJ\",\"$undefined\"],[\"b_tkUnrsg5LdA\",\"$undefined\"],[\"b_RMVpqoDSbDW\",\"$undefined\"],[\"b_ZjGn6OWeTM5\",\"$undefined\"],[\"b_xuNsm3mxjhy\",\"$undefined\"],[\"b_r20rrt0by07\",\"$undefined\"],[\"b_TR4z7KynM4h\",\"$undefined\"]]\n84:[[\"b_ziXtDRY6T4u\",null],[\"b_DsBjUrm49AS\",null],[\"b_licofAqb22B\",null],[\"b_dQFv16063iB\",null],[\"b_aWSIXSqhU7z\",null],[\"b_dw1WvYsMPad\",null],[\"b_TaCaAzHRcKS\",null],[\"b_Fe77xFVKTs4\",null],[\"b_4IaEDoUN54E\",null],[\"b_vgL82lhdt0R\",null],[\"b_r7kaWysF38W\",null],[\"b_LVFWZIx1NAn\",null],[\"b_Yz55zBYhKP2\",null],[\"b_EhgUWUE9ELV\",null],[\"b_56bCXte5aZW\",null],[\"b_JDRupuXoNDJ\",null],[\"b_HvByXziVBAQ\",null],[\"b_EiyqaDkSPt5\",null],[\"b_wa7sA2Uqpfy\",null],[\"b_4Ip545uDOCJ\",null],[\"b_tkUnrsg5LdA\",null],[\"b_RMVpqoDSbDW\",null],[\"b_ZjGn6OWeTM5\",null],[\"b_xuNsm3mxjhy\",null],[\"b_r20rrt0by07\",null],[\"b_TR4z7KynM4h\",null]]\n85:[[\"b_ziXtDRY6T4u\",true],[\"b_DsBjUrm49AS\",true],[\"b_licofAqb22B\",true],[\"b_dQFv16063iB\",true],[\"b_aWSIXSqhU7z\",true"])</script><script>self.__next_f.push([1,"],[\"b_dw1WvYsMPad\",true],[\"b_TaCaAzHRcKS\",true],[\"b_Fe77xFVKTs4\",true],[\"b_4IaEDoUN54E\",true],[\"b_vgL82lhdt0R\",true],[\"b_r7kaWysF38W\",true],[\"b_LVFWZIx1NAn\",true],[\"b_Yz55zBYhKP2\",true],[\"b_EhgUWUE9ELV\",true],[\"b_56bCXte5aZW\",true],[\"b_JDRupuXoNDJ\",true],[\"b_HvByXziVBAQ\",true],[\"b_EiyqaDkSPt5\",true],[\"b_wa7sA2Uqpfy\",true],[\"b_4Ip545uDOCJ\",true],[\"b_tkUnrsg5LdA\",true],[\"b_RMVpqoDSbDW\",true],[\"b_ZjGn6OWeTM5\",true],[\"b_xuNsm3mxjhy\",true],[\"b_r20rrt0by07\",true],[\"b_TR4z7KynM4h\",true]]\n86:[[\"b_ziXtDRY6T4u\",true],[\"b_DsBjUrm49AS\",true],[\"b_licofAqb22B\",true],[\"b_dQFv16063iB\",true],[\"b_aWSIXSqhU7z\",true],[\"b_dw1WvYsMPad\",true],[\"b_TaCaAzHRcKS\",true],[\"b_Fe77xFVKTs4\",true],[\"b_4IaEDoUN54E\",true],[\"b_vgL82lhdt0R\",true],[\"b_r7kaWysF38W\",true],[\"b_LVFWZIx1NAn\",true],[\"b_Yz55zBYhKP2\",true],[\"b_EhgUWUE9ELV\",true],[\"b_56bCXte5aZW\",true],[\"b_JDRupuXoNDJ\",true],[\"b_HvByXziVBAQ\",true],[\"b_EiyqaDkSPt5\",true],[\"b_wa7sA2Uqpfy\",true],[\"b_4Ip545uDOCJ\",true],[\"b_tkUnrsg5LdA\",true],[\"b_RMVpqoDSbDW\",true],[\"b_ZjGn6OWeTM5\",true],[\"b_xuNsm3mxjhy\",true],[\"b_r20rrt0by07\",true],[\"b_TR4z7KynM4h\",true]]\n87:T2c612,"])</script><script>self.__next_f.push([1,"[V0_FILE]typescriptreact:file=\"app/page.tsx\" isMerged=\"true\"\nimport { redirect } from \"next/navigation\"\nimport { DashboardHeader } from \"@/components/dashboard/dashboard-header\"\nimport { DashboardShell } from \"@/components/dashboard/dashboard-shell\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Overview } from \"@/components/dashboard/overview\"\nimport { RecentTasks } from \"@/components/dashboard/recent-tasks\"\nimport { TeamMembers } from \"@/components/dashboard/team-members\"\nimport { getUserSession } from \"@/lib/auth\"\n\nexport default async function DashboardPage() {\n  const user = await getUserSession()\n\n  if (!user) {\n    redirect(\"/login\")\n  }\n\n  return (\n    \u003cDashboardShell\u003e\n      \u003cDashboardHeader heading=\"Dashboard\" text=\"Welcome back! Here's an overview of your team's tasks.\"\u003e\n        \u003cButton\u003e\n          \u003ca href=\"/tasks/new\"\u003eCreate Task\u003c/a\u003e\n        \u003c/Button\u003e\n      \u003c/DashboardHeader\u003e\n      \u003cdiv className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\"\u003e\n        \u003cCard\u003e\n          \u003cCardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\"\u003e\n            \u003cCardTitle className=\"text-sm font-medium\"\u003eTotal Tasks\u003c/CardTitle\u003e\n            \u003csvg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2\"\n              className=\"h-4 w-4 text-muted-foreground\"\n            \u003e\n              \u003cpath d=\"M12 2v20M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6\" /\u003e\n            \u003c/svg\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent\u003e\n            \u003cdiv className=\"text-2xl font-bold\"\u003e24\u003c/div\u003e\n            \u003cp className=\"text-xs text-muted-foreground\"\u003e+10% from last month\u003c/p\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n        \u003cCard\u003e\n          \u003cCardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\"\u003e\n            \u003cCardTitle className=\"text-sm font-medium\"\u003eCompleted\u003c/CardTitle\u003e\n            \u003csvg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2\"\n              className=\"h-4 w-4 text-muted-foreground\"\n            \u003e\n              \u003cpath d=\"M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2\" /\u003e\n              \u003ccircle cx=\"9\" cy=\"7\" r=\"4\" /\u003e\n              \u003cpath d=\"M22 21v-2a4 4 0 0 0-3-3.87M16 3.13a4 4 0 0 1 0 7.75\" /\u003e\n            \u003c/svg\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent\u003e\n            \u003cdiv className=\"text-2xl font-bold\"\u003e16\u003c/div\u003e\n            \u003cp className=\"text-xs text-muted-foreground\"\u003e+12% from last month\u003c/p\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n        \u003cCard\u003e\n          \u003cCardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\"\u003e\n            \u003cCardTitle className=\"text-sm font-medium\"\u003eIn Progress\u003c/CardTitle\u003e\n            \u003csvg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2\"\n              className=\"h-4 w-4 text-muted-foreground\"\n            \u003e\n              \u003crect width=\"20\" height=\"14\" x=\"2\" y=\"5\" rx=\"2\" /\u003e\n              \u003cpath d=\"M2 10h20\" /\u003e\n            \u003c/svg\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent\u003e\n            \u003cdiv className=\"text-2xl font-bold\"\u003e6\u003c/div\u003e\n            \u003cp className=\"text-xs text-muted-foreground\"\u003e-2% from last month\u003c/p\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n        \u003cCard\u003e\n          \u003cCardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\"\u003e\n            \u003cCardTitle className=\"text-sm font-medium\"\u003eOverdue\u003c/CardTitle\u003e\n            \u003csvg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2\"\n              className=\"h-4 w-4 text-muted-foreground\"\n            \u003e\n              \u003cpath d=\"M22 12h-4l-3 9L9 3l-3 9H2\" /\u003e\n            \u003c/svg\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent\u003e\n            \u003cdiv className=\"text-2xl font-bold\"\u003e2\u003c/div\u003e\n            \u003cp className=\"text-xs text-muted-foreground\"\u003e-4% from last month\u003c/p\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n      \u003c/div\u003e\n      \u003cdiv className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-7\"\u003e\n        \u003cCard className=\"col-span-4\"\u003e\n          \u003cCardHeader\u003e\n            \u003cCardTitle\u003eTask Completion Overview\u003c/CardTitle\u003e\n            \u003cCardDescription\u003eTask completion rate over the last 30 days\u003c/CardDescription\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent className=\"pl-2\"\u003e\n            \u003cOverview /\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n        \u003cCard className=\"col-span-3\"\u003e\n          \u003cCardHeader\u003e\n            \u003cCardTitle\u003eRecent Tasks\u003c/CardTitle\u003e\n            \u003cCardDescription\u003eRecently created or updated tasks\u003c/CardDescription\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent\u003e\n            \u003cRecentTasks /\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n      \u003c/div\u003e\n      \u003cdiv className=\"grid gap-4 md:grid-cols-1\"\u003e\n        \u003cCard\u003e\n          \u003cCardHeader\u003e\n            \u003cCardTitle\u003eTeam Members\u003c/CardTitle\u003e\n            \u003cCardDescription\u003eManage your team and their task assignments\u003c/CardDescription\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent\u003e\n            \u003cTeamMembers /\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n      \u003c/div\u003e\n    \u003c/DashboardShell\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"app/tasks/page.tsx\" isMerged=\"true\"\nimport { redirect } from \"next/navigation\"\nimport { DashboardHeader } from \"@/components/dashboard/dashboard-header\"\nimport { DashboardShell } from \"@/components/dashboard/dashboard-shell\"\nimport { Button } from \"@/components/ui/button\"\nimport { KanbanBoard } from \"@/components/tasks/kanban-board\"\nimport { TaskFilters } from \"@/components/tasks/task-filters\"\nimport { getUserSession } from \"@/lib/auth\"\n\nexport default async function TasksPage() {\n  const user = await getUserSession()\n\n  if (!user) {\n    redirect(\"/login\")\n  }\n\n  return (\n    \u003cDashboardShell\u003e\n      \u003cDashboardHeader heading=\"Tasks\" text=\"Manage and organize your team's tasks\"\u003e\n        \u003cButton\u003e\n          \u003ca href=\"/tasks/new\"\u003eCreate Task\u003c/a\u003e\n        \u003c/Button\u003e\n      \u003c/DashboardHeader\u003e\n      \u003cdiv className=\"space-y-4\"\u003e\n        \u003cTaskFilters /\u003e\n        \u003cKanbanBoard /\u003e\n      \u003c/div\u003e\n    \u003c/DashboardShell\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"app/tasks/new/page.tsx\" isMerged=\"true\"\nimport { redirect } from \"next/navigation\"\nimport { DashboardHeader } from \"@/components/dashboard/dashboard-header\"\nimport { DashboardShell } from \"@/components/dashboard/dashboard-shell\"\nimport { TaskForm } from \"@/components/tasks/task-form\"\nimport { getUserSession } from \"@/lib/auth\"\n\nexport default async function NewTaskPage() {\n  const user = await getUserSession()\n\n  if (!user) {\n    redirect(\"/login\")\n  }\n\n  // Check if user has permission to create tasks\n  if (user.role === \"viewer\") {\n    redirect(\"/dashboard\")\n  }\n\n  return (\n    \u003cDashboardShell\u003e\n      \u003cDashboardHeader heading=\"Create New Task\" text=\"Add a new task and assign it to team members\" /\u003e\n      \u003cdiv className=\"grid gap-4\"\u003e\n        \u003cTaskForm /\u003e\n      \u003c/div\u003e\n    \u003c/DashboardShell\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"app/tasks/[id]/page.tsx\" isMerged=\"true\"\nimport { redirect } from \"next/navigation\"\nimport { DashboardHeader } from \"@/components/dashboard/dashboard-header\"\nimport { DashboardShell } from \"@/components/dashboard/dashboard-shell\"\nimport { TaskDetails } from \"@/components/tasks/task-details\"\nimport { TaskComments } from \"@/components/tasks/task-comments\"\nimport { TaskAttachments } from \"@/components/tasks/task-attachments\"\nimport { getUserSession } from \"@/lib/auth\"\n\nexport default async function TaskDetailsPage({ params }: { params: { id: string } }) {\n  const user = await getUserSession()\n\n  if (!user) {\n    redirect(\"/login\")\n  }\n\n  return (\n    \u003cDashboardShell\u003e\n      \u003cDashboardHeader heading=\"Task Details\" text=\"View and manage task details\" /\u003e\n      \u003cdiv className=\"grid gap-6\"\u003e\n        \u003cTaskDetails id={params.id} /\u003e\n        \u003cdiv className=\"grid gap-4 md:grid-cols-2\"\u003e\n          \u003cTaskComments id={params.id} /\u003e\n          \u003cTaskAttachments id={params.id} /\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n    \u003c/DashboardShell\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"app/reports/page.tsx\" isMerged=\"true\"\nimport { redirect } from \"next/navigation\"\nimport { DashboardHeader } from \"@/components/dashboard/dashboard-header\"\nimport { DashboardShell } from \"@/components/dashboard/dashboard-shell\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { TaskCompletionChart } from \"@/components/reports/task-completion-chart\"\nimport { TeamPerformanceChart } from \"@/components/reports/team-performance-chart\"\nimport { PriorityDistributionChart } from \"@/components/reports/priority-distribution-chart\"\nimport { getUserSession } from \"@/lib/auth\"\n\nexport default async function ReportsPage() {\n  const user = await getUserSession()\n\n  if (!user) {\n    redirect(\"/login\")\n  }\n\n  return (\n    \u003cDashboardShell\u003e\n      \u003cDashboardHeader heading=\"Reports\" text=\"Analyze task performance and team productivity\"\u003e\n        \u003cdiv className=\"flex space-x-2\"\u003e\n          \u003cButton variant=\"outline\"\u003eExport CSV\u003c/Button\u003e\n          \u003cButton variant=\"outline\"\u003eExport PDF\u003c/Button\u003e\n        \u003c/div\u003e\n      \u003c/DashboardHeader\u003e\n      \u003cdiv className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-2\"\u003e\n        \u003cCard className=\"col-span-1\"\u003e\n          \u003cCardHeader\u003e\n            \u003cCardTitle\u003eTask Completion Rate\u003c/CardTitle\u003e\n            \u003cCardDescription\u003ePercentage of tasks completed on time\u003c/CardDescription\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent className=\"h-80\"\u003e\n            \u003cTaskCompletionChart /\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n        \u003cCard className=\"col-span-1\"\u003e\n          \u003cCardHeader\u003e\n            \u003cCardTitle\u003eTeam Performance\u003c/CardTitle\u003e\n            \u003cCardDescription\u003eTasks completed by team members\u003c/CardDescription\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent className=\"h-80\"\u003e\n            \u003cTeamPerformanceChart /\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n        \u003cCard className=\"col-span-2\"\u003e\n          \u003cCardHeader\u003e\n            \u003cCardTitle\u003eTask Priority Distribution\u003c/CardTitle\u003e\n            \u003cCardDescription\u003eDistribution of tasks by priority level\u003c/CardDescription\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent className=\"h-80\"\u003e\n            \u003cPriorityDistributionChart /\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n      \u003c/div\u003e\n    \u003c/DashboardShell\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"app/settings/page.tsx\" isMerged=\"true\"\nimport { redirect } from \"next/navigation\"\nimport { DashboardHeader } from \"@/components/dashboard/dashboard-header\"\nimport { DashboardShell } from \"@/components/dashboard/dashboard-shell\"\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\nimport { ProfileSettings } from \"@/components/settings/profile-settings\"\nimport { NotificationSettings } from \"@/components/settings/notification-settings\"\nimport { SecuritySettings } from \"@/components/settings/security-settings\"\nimport { getUserSession } from \"@/lib/auth\"\n\nexport default async function SettingsPage() {\n  const user = await getUserSession()\n\n  if (!user) {\n    redirect(\"/login\")\n  }\n\n  return (\n    \u003cDashboardShell\u003e\n      \u003cDashboardHeader heading=\"Settings\" text=\"Manage your account settings and preferences\" /\u003e\n      \u003cTabs defaultValue=\"profile\" className=\"space-y-4\"\u003e\n        \u003cTabsList\u003e\n          \u003cTabsTrigger value=\"profile\"\u003eProfile\u003c/TabsTrigger\u003e\n          \u003cTabsTrigger value=\"notifications\"\u003eNotifications\u003c/TabsTrigger\u003e\n          \u003cTabsTrigger value=\"security\"\u003eSecurity\u003c/TabsTrigger\u003e\n        \u003c/TabsList\u003e\n        \u003cTabsContent value=\"profile\" className=\"space-y-4\"\u003e\n          \u003cProfileSettings user={user} /\u003e\n        \u003c/TabsContent\u003e\n        \u003cTabsContent value=\"notifications\" className=\"space-y-4\"\u003e\n          \u003cNotificationSettings user={user} /\u003e\n        \u003c/TabsContent\u003e\n        \u003cTabsContent value=\"security\" className=\"space-y-4\"\u003e\n          \u003cSecuritySettings user={user} /\u003e\n        \u003c/TabsContent\u003e\n      \u003c/Tabs\u003e\n    \u003c/DashboardShell\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"app/users/page.tsx\" isMerged=\"true\"\nimport { redirect } from \"next/navigation\"\nimport { DashboardHeader } from \"@/components/dashboard/dashboard-header\"\nimport { DashboardShell } from \"@/components/dashboard/dashboard-shell\"\nimport { Button } from \"@/components/ui/button\"\nimport { UserManagement } from \"@/components/users/user-management\"\nimport { getUserSession } from \"@/lib/auth\"\n\nexport default async function UsersPage() {\n  const user = await getUserSession()\n\n  if (!user) {\n    redirect(\"/login\")\n  }\n\n  // Only admins can access user management\n  if (user.role !== \"admin\") {\n    redirect(\"/dashboard\")\n  }\n\n  return (\n    \u003cDashboardShell\u003e\n      \u003cDashboardHeader heading=\"User Management\" text=\"Manage users and their permissions\"\u003e\n        \u003cButton\u003e\n          \u003ca href=\"/users/new\"\u003eAdd User\u003c/a\u003e\n        \u003c/Button\u003e\n      \u003c/DashboardHeader\u003e\n      \u003cdiv className=\"grid gap-4\"\u003e\n        \u003cUserManagement /\u003e\n      \u003c/div\u003e\n    \u003c/DashboardShell\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"app/login/page.tsx\" isMerged=\"true\"\n\"use client\"\n\nimport type React from \"react\"\n\nimport { useState } from \"react\"\nimport Link from \"next/link\"\nimport { useRouter } from \"next/navigation\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { loginUser } from \"@/lib/auth\"\n\nexport default function LoginPage() {\n  const router = useRouter()\n  const [isLoading, setIsLoading] = useState(false)\n  const [error, setError] = useState(\"\")\n\n  async function handleSubmit(event: React.FormEvent\u003cHTMLFormElement\u003e) {\n    event.preventDefault()\n    setIsLoading(true)\n    setError(\"\")\n\n    const formData = new FormData(event.currentTarget)\n    const email = formData.get(\"email\") as string\n    const password = formData.get(\"password\") as string\n\n    try {\n      await loginUser(email, password)\n      router.push(\"/dashboard\")\n    } catch (err) {\n      setError(\"Invalid email or password\")\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    \u003cdiv className=\"flex min-h-screen items-center justify-center bg-gray-50 px-4 py-12 sm:px-6 lg:px-8\"\u003e\n      \u003cCard className=\"w-full max-w-md\"\u003e\n        \u003cCardHeader className=\"space-y-1\"\u003e\n          \u003cCardTitle className=\"text-2xl font-bold\"\u003eLogin\u003c/CardTitle\u003e\n          \u003cCardDescription\u003eEnter your credentials to access your account\u003c/CardDescription\u003e\n        \u003c/CardHeader\u003e\n        \u003cform onSubmit={handleSubmit}\u003e\n          \u003cCardContent className=\"space-y-4\"\u003e\n            {error \u0026\u0026 \u003cdiv className=\"rounded-md bg-red-50 p-2 text-sm text-red-500\"\u003e{error}\u003c/div\u003e}\n            \u003cdiv className=\"space-y-2\"\u003e\n              \u003cLabel htmlFor=\"email\"\u003eEmail\u003c/Label\u003e\n              \u003cInput id=\"email\" name=\"email\" type=\"email\" required /\u003e\n            \u003c/div\u003e\n            \u003cdiv className=\"space-y-2\"\u003e\n              \u003cdiv className=\"flex items-center justify-between\"\u003e\n                \u003cLabel htmlFor=\"password\"\u003ePassword\u003c/Label\u003e\n                \u003cLink href=\"/forgot-password\" className=\"text-sm text-primary\"\u003e\n                  Forgot password?\n                \u003c/Link\u003e\n              \u003c/div\u003e\n              \u003cInput id=\"password\" name=\"password\" type=\"password\" required /\u003e\n            \u003c/div\u003e\n            \u003cdiv className=\"flex items-center space-x-2\"\u003e\n              \u003chr className=\"flex-1\" /\u003e\n              \u003cspan className=\"text-sm text-muted-foreground\"\u003eOR\u003c/span\u003e\n              \u003chr className=\"flex-1\" /\u003e\n            \u003c/div\u003e\n            \u003cdiv className=\"grid grid-cols-2 gap-4\"\u003e\n              \u003cButton variant=\"outline\" type=\"button\" className=\"w-full\"\u003e\n                \u003csvg className=\"mr-2 h-4 w-4\" viewBox=\"0 0 24 24\"\u003e\n                  \u003cpath\n                    d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\"\n                    fill=\"#4285F4\"\n                  /\u003e\n                  \u003cpath\n                    d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\"\n                    fill=\"#34A853\"\n                  /\u003e\n                  \u003cpath\n                    d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\"\n                    fill=\"#FBBC05\"\n                  /\u003e\n                  \u003cpath\n                    d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\"\n                    fill=\"#EA4335\"\n                  /\u003e\n                \u003c/svg\u003e\n                Google\n              \u003c/Button\u003e\n              \u003cButton variant=\"outline\" type=\"button\" className=\"w-full\"\u003e\n                \u003csvg className=\"mr-2 h-4 w-4\" viewBox=\"0 0 24 24\"\u003e\n                  \u003cpath\n                    d=\"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12\"\n                    fill=\"currentColor\"\n                  /\u003e\n                \u003c/svg\u003e\n                GitHub\n              \u003c/Button\u003e\n            \u003c/div\u003e\n          \u003c/CardContent\u003e\n          \u003cCardFooter className=\"flex flex-col space-y-4\"\u003e\n            \u003cButton type=\"submit\" className=\"w-full\" disabled={isLoading}\u003e\n              {isLoading ? \"Logging in...\" : \"Login\"}\n            \u003c/Button\u003e\n            \u003cdiv className=\"text-center text-sm\"\u003e\n              Don\u0026apos;t have an account?{\" \"}\n              \u003cLink href=\"/register\" className=\"text-primary\"\u003e\n                Sign up\n              \u003c/Link\u003e\n            \u003c/div\u003e\n          \u003c/CardFooter\u003e\n        \u003c/form\u003e\n      \u003c/Card\u003e\n    \u003c/div\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"app/register/page.tsx\" isMerged=\"true\"\n\"use client\"\n\nimport type React from \"react\"\n\nimport { useState } from \"react\"\nimport Link from \"next/link\"\nimport { useRouter } from \"next/navigation\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { registerUser } from \"@/lib/auth\"\n\nexport default function RegisterPage() {\n  const router = useRouter()\n  const [isLoading, setIsLoading] = useState(false)\n  const [error, setError] = useState(\"\")\n\n  async function handleSubmit(event: React.FormEvent\u003cHTMLFormElement\u003e) {\n    event.preventDefault()\n    setIsLoading(true)\n    setError(\"\")\n\n    const formData = new FormData(event.currentTarget)\n    const name = formData.get(\"name\") as string\n    const email = formData.get(\"email\") as string\n    const password = formData.get(\"password\") as string\n    const confirmPassword = formData.get(\"confirmPassword\") as string\n\n    if (password !== confirmPassword) {\n      setError(\"Passwords do not match\")\n      setIsLoading(false)\n      return\n    }\n\n    try {\n      await registerUser(name, email, password)\n      router.push(\"/dashboard\")\n    } catch (err) {\n      setError(\"Failed to create account\")\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    \u003cdiv className=\"flex min-h-screen items-center justify-center bg-gray-50 px-4 py-12 sm:px-6 lg:px-8\"\u003e\n      \u003cCard className=\"w-full max-w-md\"\u003e\n        \u003cCardHeader className=\"space-y-1\"\u003e\n          \u003cCardTitle className=\"text-2xl font-bold\"\u003eCreate an account\u003c/CardTitle\u003e\n          \u003cCardDescription\u003eEnter your information to create an account\u003c/CardDescription\u003e\n        \u003c/CardHeader\u003e\n        \u003cform onSubmit={handleSubmit}\u003e\n          \u003cCardContent className=\"space-y-4\"\u003e\n            {error \u0026\u0026 \u003cdiv className=\"rounded-md bg-red-50 p-2 text-sm text-red-500\"\u003e{error}\u003c/div\u003e}\n            \u003cdiv className=\"space-y-2\"\u003e\n              \u003cLabel htmlFor=\"name\"\u003eFull Name\u003c/Label\u003e\n              \u003cInput id=\"name\" name=\"name\" required /\u003e\n            \u003c/div\u003e\n            \u003cdiv className=\"space-y-2\"\u003e\n              \u003cLabel htmlFor=\"email\"\u003eEmail\u003c/Label\u003e\n              \u003cInput id=\"email\" name=\"email\" type=\"email\" required /\u003e\n            \u003c/div\u003e\n            \u003cdiv className=\"space-y-2\"\u003e\n              \u003cLabel htmlFor=\"password\"\u003ePassword\u003c/Label\u003e\n              \u003cInput id=\"password\" name=\"password\" type=\"password\" required /\u003e\n            \u003c/div\u003e\n            \u003cdiv className=\"space-y-2\"\u003e\n              \u003cLabel htmlFor=\"confirmPassword\"\u003eConfirm Password\u003c/Label\u003e\n              \u003cInput id=\"confirmPassword\" name=\"confirmPassword\" type=\"password\" required /\u003e\n            \u003c/div\u003e\n          \u003c/CardContent\u003e\n          \u003cCardFooter className=\"flex flex-col space-y-4\"\u003e\n            \u003cButton type=\"submit\" className=\"w-full\" disabled={isLoading}\u003e\n              {isLoading ? \"Creating account...\" : \"Create account\"}\n            \u003c/Button\u003e\n            \u003cdiv className=\"text-center text-sm\"\u003e\n              Already have an account?{\" \"}\n              \u003cLink href=\"/login\" className=\"text-primary\"\u003e\n                Login\n              \u003c/Link\u003e\n            \u003c/div\u003e\n          \u003c/CardFooter\u003e\n        \u003c/form\u003e\n      \u003c/Card\u003e\n    \u003c/div\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/dashboard/dashboard-header.tsx\" isMerged=\"true\"\nimport type React from \"react\"\ninterface DashboardHeaderProps {\n  heading: string\n  text?: string\n  children?: React.ReactNode\n}\n\nexport function DashboardHeader({ heading, text, children }: DashboardHeaderProps) {\n  return (\n    \u003cdiv className=\"flex items-center justify-between px-2\"\u003e\n      \u003cdiv className=\"grid gap-1\"\u003e\n        \u003ch1 className=\"font-heading text-3xl md:text-4xl\"\u003e{heading}\u003c/h1\u003e\n        {text \u0026\u0026 \u003cp className=\"text-lg text-muted-foreground\"\u003e{text}\u003c/p\u003e}\n      \u003c/div\u003e\n      {children}\n    \u003c/div\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/dashboard/dashboard-shell.tsx\" isMerged=\"true\"\nimport type React from \"react\"\ninterface DashboardShellProps {\n  children: React.ReactNode\n}\n\nexport function DashboardShell({ children }: DashboardShellProps) {\n  return (\n    \u003cdiv className=\"flex min-h-screen flex-col\"\u003e\n      \u003cmain className=\"flex flex-1 flex-col gap-4 p-4 md:gap-8 md:p-8\"\u003e\n        \u003cdiv className=\"mx-auto grid w-full max-w-7xl gap-4 md:gap-8\"\u003e{children}\u003c/div\u003e\n      \u003c/main\u003e\n    \u003c/div\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/dashboard/overview.tsx\" isMerged=\"true\"\n\"use client\"\nimport { Area, AreaChart, ResponsiveContainer, Tooltip, XAxis, YAxis } from \"@/components/ui/chart\"\n\nconst data = [\n  {\n    name: \"Jan\",\n    total: 12,\n  },\n  {\n    name: \"Feb\",\n    total: 18,\n  },\n  {\n    name: \"Mar\",\n    total: 24,\n  },\n  {\n    name: \"Apr\",\n    total: 30,\n  },\n  {\n    name: \"May\",\n    total: 22,\n  },\n  {\n    name: \"Jun\",\n    total: 28,\n  },\n  {\n    name: \"Jul\",\n    total: 32,\n  },\n  {\n    name: \"Aug\",\n    total: 36,\n  },\n  {\n    name: \"Sep\",\n    total: 30,\n  },\n  {\n    name: \"Oct\",\n    total: 28,\n  },\n  {\n    name: \"Nov\",\n    total: 34,\n  },\n  {\n    name: \"Dec\",\n    total: 40,\n  },\n]\n\nexport function Overview() {\n  return (\n    \u003cResponsiveContainer width=\"100%\" height={350}\u003e\n      \u003cAreaChart\n        data={data}\n        margin={{\n          top: 10,\n          right: 30,\n          left: 0,\n          bottom: 0,\n        }}\n      \u003e\n        \u003cdefs\u003e\n          \u003clinearGradient id=\"colorTotal\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\"\u003e\n            \u003cstop offset=\"5%\" stopColor=\"#8884d8\" stopOpacity={0.8} /\u003e\n            \u003cstop offset=\"95%\" stopColor=\"#8884d8\" stopOpacity={0} /\u003e\n          \u003c/linearGradient\u003e\n        \u003c/defs\u003e\n        \u003cXAxis dataKey=\"name\" stroke=\"#888888\" fontSize={12} tickLine={false} axisLine={false} /\u003e\n        \u003cYAxis stroke=\"#888888\" fontSize={12} tickLine={false} axisLine={false} tickFormatter={(value) =\u003e `${value}`} /\u003e\n        \u003cTooltip /\u003e\n        \u003cArea type=\"monotone\" dataKey=\"total\" stroke=\"#8884d8\" fillOpacity={1} fill=\"url(#colorTotal)\" /\u003e\n      \u003c/AreaChart\u003e\n    \u003c/ResponsiveContainer\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/dashboard/recent-tasks.tsx\" isMerged=\"true\"\n\"use client\"\n\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\nimport { Badge } from \"@/components/ui/badge\"\n\nconst tasks = [\n  {\n    id: \"TASK-8782\",\n    title: \"Create new landing page\",\n    status: \"In Progress\",\n    priority: \"High\",\n    assignee: {\n      name: \"Emma Wilson\",\n      email: \"emma@example.com\",\n      avatar: \"/placeholder.svg?height=32\u0026width=32\",\n    },\n  },\n  {\n    id: \"TASK-7878\",\n    title: \"Update user authentication flow\",\n    status: \"In Review\",\n    priority: \"Medium\",\n    assignee: {\n      name: \"Jackson Lee\",\n      email: \"jackson@example.com\",\n      avatar: \"/placeholder.svg?height=32\u0026width=32\",\n    },\n  },\n  {\n    id: \"TASK-7839\",\n    title: \"Implement notification system\",\n    status: \"Completed\",\n    priority: \"Medium\",\n    assignee: {\n      name: \"Sophia Chen\",\n      email: \"sophia@example.com\",\n      avatar: \"/placeholder.svg?height=32\u0026width=32\",\n    },\n  },\n  {\n    id: \"TASK-7349\",\n    title: \"Fix mobile responsiveness issues\",\n    status: \"In Progress\",\n    priority: \"High\",\n    assignee: {\n      name: \"Liam Johnson\",\n      email: \"liam@example.com\",\n      avatar: \"/placeholder.svg?height=32\u0026width=32\",\n    },\n  },\n  {\n    id: \"TASK-8572\",\n    title: \"Create API documentation\",\n    status: \"Not Started\",\n    priority: \"Low\",\n    assignee: {\n      name: \"Olivia Martinez\",\n      email: \"olivia@example.com\",\n      avatar: \"/placeholder.svg?height=32\u0026width=32\",\n    },\n  },\n]\n\nexport function RecentTasks() {\n  return (\n    \u003cdiv className=\"space-y-8\"\u003e\n      {tasks.map((task) =\u003e (\n        \u003cdiv key={task.id} className=\"flex items-center\"\u003e\n          \u003cAvatar className=\"h-9 w-9\"\u003e\n            \u003cAvatarImage src={task.assignee.avatar} alt={task.assignee.name} /\u003e\n            \u003cAvatarFallback\u003e\n              {task.assignee.name\n                .split(\" \")\n                .map((n) =\u003e n[0])\n                .join(\"\")}\n            \u003c/AvatarFallback\u003e\n          \u003c/Avatar\u003e\n          \u003cdiv className=\"ml-4 space-y-1\"\u003e\n            \u003cp className=\"text-sm font-medium leading-none\"\u003e{task.title}\u003c/p\u003e\n            \u003cp className=\"text-sm text-muted-foreground\"\u003e\n              {task.id} · Assigned to {task.assignee.name}\n            \u003c/p\u003e\n          \u003c/div\u003e\n          \u003cdiv className=\"ml-auto flex items-center gap-2\"\u003e\n            \u003cBadge\n              variant={\n                task.status === \"Completed\"\n                  ? \"success\"\n                  : task.status === \"In Progress\"\n                    ? \"default\"\n                    : task.status === \"In Review\"\n                      ? \"warning\"\n                      : \"secondary\"\n              }\n            \u003e\n              {task.status}\n            \u003c/Badge\u003e\n            \u003cBadge\n              variant={task.priority === \"High\" ? \"destructive\" : task.priority === \"Medium\" ? \"default\" : \"outline\"}\n            \u003e\n              {task.priority}\n            \u003c/Badge\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n      ))}\n    \u003c/div\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/dashboard/team-members.tsx\" isMerged=\"true\"\n\"use client\"\n\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\n\nconst teamMembers = [\n  {\n    id: 1,\n    name: \"Emma Wilson\",\n    email: \"emma@example.com\",\n    role: \"Product Manager\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    tasksAssigned: 8,\n    tasksCompleted: 5,\n  },\n  {\n    id: 2,\n    name: \"Jackson Lee\",\n    email: \"jackson@example.com\",\n    role: \"Frontend Developer\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    tasksAssigned: 12,\n    tasksCompleted: 10,\n  },\n  {\n    id: 3,\n    name: \"Sophia Chen\",\n    email: \"sophia@example.com\",\n    role: \"Backend Developer\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    tasksAssigned: 10,\n    tasksCompleted: 7,\n  },\n  {\n    id: 4,\n    name: \"Liam Johnson\",\n    email: \"liam@example.com\",\n    role: \"UI/UX Designer\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    tasksAssigned: 6,\n    tasksCompleted: 4,\n  },\n  {\n    id: 5,\n    name: \"Olivia Martinez\",\n    email: \"olivia@example.com\",\n    role: \"QA Engineer\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    tasksAssigned: 9,\n    tasksCompleted: 8,\n  },\n]\n\nexport function TeamMembers() {\n  return (\n    \u003cdiv className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\"\u003e\n      {teamMembers.map((member) =\u003e (\n        \u003cCard key={member.id}\u003e\n          \u003cCardHeader className=\"flex flex-row items-center gap-4 pb-2\"\u003e\n            \u003cAvatar className=\"h-10 w-10\"\u003e\n              \u003cAvatarImage src={member.avatar} alt={member.name} /\u003e\n              \u003cAvatarFallback\u003e\n                {member.name\n                  .split(\" \")\n                  .map((n) =\u003e n[0])\n                  .join(\"\")}\n              \u003c/AvatarFallback\u003e\n            \u003c/Avatar\u003e\n            \u003cdiv className=\"grid gap-1\"\u003e\n              \u003cCardTitle className=\"text-base\"\u003e{member.name}\u003c/CardTitle\u003e\n              \u003cCardDescription className=\"text-xs\"\u003e{member.role}\u003c/CardDescription\u003e\n            \u003c/div\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent\u003e\n            \u003cdiv className=\"grid gap-2\"\u003e\n              \u003cdiv className=\"grid grid-cols-2 gap-2 text-sm\"\u003e\n                \u003cdiv className=\"flex flex-col\"\u003e\n                  \u003cspan className=\"text-muted-foreground\"\u003eAssigned\u003c/span\u003e\n                  \u003cspan className=\"font-medium\"\u003e{member.tasksAssigned}\u003c/span\u003e\n                \u003c/div\u003e\n                \u003cdiv className=\"flex flex-col\"\u003e\n                  \u003cspan className=\"text-muted-foreground\"\u003eCompleted\u003c/span\u003e\n                  \u003cspan className=\"font-medium\"\u003e{member.tasksCompleted}\u003c/span\u003e\n                \u003c/div\u003e\n              \u003c/div\u003e\n              \u003cdiv className=\"mt-2 flex justify-between\"\u003e\n                \u003cButton size=\"sm\" variant=\"outline\"\u003e\n                  View Profile\n                \u003c/Button\u003e\n                \u003cButton size=\"sm\"\u003eAssign Task\u003c/Button\u003e\n              \u003c/div\u003e\n            \u003c/div\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n      ))}\n    \u003c/div\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/tasks/kanban-board.tsx\" isMerged=\"true\"\n\"use client\"\n\nimport { useState } from \"react\"\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\"\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\n\n// Initial task data\nconst initialTasks = {\n  \"to-do\": [\n    {\n      id: \"task-1\",\n      title: \"Create new landing page\",\n      description: \"Design and implement a new landing page for the product\",\n      priority: \"High\",\n      assignee: {\n        name: \"Emma Wilson\",\n        avatar: \"/placeholder.svg?height=32\u0026width=32\",\n      },\n      dueDate: \"2023-12-15\",\n    },\n    {\n      id: \"task-2\",\n      title: \"Update user authentication flow\",\n      description: \"Improve the user authentication experience\",\n      priority: \"Medium\",\n      assignee: {\n        name: \"Jackson Lee\",\n        avatar: \"/placeholder.svg?height=32\u0026width=32\",\n      },\n      dueDate: \"2023-12-20\",\n    },\n    {\n      id: \"task-3\",\n      title: \"Create API documentation\",\n      description: \"Document all API endpoints for developers\",\n      priority: \"Low\",\n      assignee: {\n        name: \"Olivia Martinez\",\n        avatar: \"/placeholder.svg?height=32\u0026width=32\",\n      },\n      dueDate: \"2023-12-30\",\n    },\n  ],\n  \"in-progress\": [\n    {\n      id: \"task-4\",\n      title: \"Implement notification system\",\n      description: \"Create a real-time notification system for users\",\n      priority: \"Medium\",\n      assignee: {\n        name: \"Sophia Chen\",\n        avatar: \"/placeholder.svg?height=32\u0026width=32\",\n      },\n      dueDate: \"2023-12-10\",\n    },\n    {\n      id: \"task-5\",\n      title: \"Fix mobile responsiveness issues\",\n      description: \"Address UI issues on mobile devices\",\n      priority: \"High\",\n      assignee: {\n        name: \"Liam Johnson\",\n        avatar: \"/placeholder.svg?height=32\u0026width=32\",\n      },\n      dueDate: \"2023-12-05\",\n    },\n  ],\n  \"in-review\": [\n    {\n      id: \"task-6\",\n      title: \"Optimize database queries\",\n      description: \"Improve performance of slow database queries\",\n      priority: \"High\",\n      assignee: {\n        name: \"Jackson Lee\",\n        avatar: \"/placeholder.svg?height=32\u0026width=32\",\n      },\n      dueDate: \"2023-12-08\",\n    },\n  ],\n  completed: [\n    {\n      id: \"task-7\",\n      title: \"Set up CI/CD pipeline\",\n      description: \"Implement continuous integration and deployment\",\n      priority: \"Medium\",\n      assignee: {\n        name: \"Sophia Chen\",\n        avatar: \"/placeholder.svg?height=32\u0026width=32\",\n      },\n      dueDate: \"2023-12-01\",\n    },\n    {\n      id: \"task-8\",\n      title: \"Create user onboarding flow\",\n      description: \"Design and implement user onboarding experience\",\n      priority: \"Medium\",\n      assignee: {\n        name: \"Emma Wilson\",\n        avatar: \"/placeholder.svg?height=32\u0026width=32\",\n      },\n      dueDate: \"2023-11-25\",\n    },\n  ],\n}\n\n// Column definitions\nconst columns = [\n  {\n    id: \"to-do\",\n    title: \"To Do\",\n    color: \"bg-gray-100\",\n  },\n  {\n    id: \"in-progress\",\n    title: \"In Progress\",\n    color: \"bg-blue-50\",\n  },\n  {\n    id: \"in-review\",\n    title: \"In Review\",\n    color: \"bg-yellow-50\",\n  },\n  {\n    id: \"completed\",\n    title: \"Completed\",\n    color: \"bg-green-50\",\n  },\n]\n\nexport function KanbanBoard() {\n  const [tasks, setTasks] = useState(initialTasks)\n\n  const handleDragEnd = (result) =\u003e {\n    const { destination, source, draggableId } = result\n\n    // If there's no destination or the item is dropped in the same place\n    if (!destination || (destination.droppableId === source.droppableId \u0026\u0026 destination.index === source.index)) {\n      return\n    }\n\n    // Find the task that was dragged\n    const sourceColumn = tasks[source.droppableId]\n    const taskToMove = sourceColumn.find((task) =\u003e task.id === draggableId)\n\n    // Create new state\n    const newTasks = { ...tasks }\n\n    // Remove from source column\n    newTasks[source.droppableId] = sourceColumn.filter((task) =\u003e task.id !== draggableId)\n\n    // Add to destination column\n    newTasks[destination.droppableId] = [\n      ...newTasks[destination.droppableId].slice(0, destination.index),\n      taskToMove,\n      ...newTasks[destination.droppableId].slice(destination.index),\n    ]\n\n    setTasks(newTasks)\n  }\n\n  return (\n    \u003cDragDropContext onDragEnd={handleDragEnd}\u003e\n      \u003cdiv className=\"grid grid-cols-1 gap-4 md:grid-cols-2 lg:grid-cols-4\"\u003e\n        {columns.map((column) =\u003e (\n          \u003cdiv key={column.id} className=\"flex flex-col\"\u003e\n            \u003cdiv className={`rounded-t-md p-3 ${column.color}`}\u003e\n              \u003ch3 className=\"font-medium\"\u003e{column.title}\u003c/h3\u003e\n              \u003cdiv className=\"text-sm text-muted-foreground\"\u003e{tasks[column.id].length} tasks\u003c/div\u003e\n            \u003c/div\u003e\n            \u003cDroppable droppableId={column.id}\u003e\n              {(provided) =\u003e (\n                \u003cdiv\n                  {...provided.droppableProps}\n                  ref={provided.innerRef}\n                  className=\"flex flex-1 flex-col gap-2 rounded-b-md border border-t-0 bg-background p-2\"\n                \u003e\n                  {tasks[column.id].map((task, index) =\u003e (\n                    \u003cDraggable key={task.id} draggableId={task.id} index={index}\u003e\n                      {(provided) =\u003e (\n                        \u003cCard\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                          className=\"cursor-grab\"\n                        \u003e\n                          \u003cCardHeader className=\"p-3 pb-0\"\u003e\n                            \u003cCardTitle className=\"text-sm font-medium\"\u003e{task.title}\u003c/CardTitle\u003e\n                          \u003c/CardHeader\u003e\n                          \u003cCardContent className=\"p-3\"\u003e\n                            \u003cp className=\"text-xs text-muted-foreground\"\u003e{task.description}\u003c/p\u003e\n                            \u003cdiv className=\"mt-2 flex items-center justify-between\"\u003e\n                              \u003cBadge\n                                variant={\n                                  task.priority === \"High\"\n                                    ? \"destructive\"\n                                    : task.priority === \"Medium\"\n                                      ? \"default\"\n                                      : \"outline\"\n                                }\n                                className=\"text-xs\"\n                              \u003e\n                                {task.priority}\n                              \u003c/Badge\u003e\n                              \u003cdiv className=\"flex items-center gap-1\"\u003e\n                                \u003cspan className=\"text-xs text-muted-foreground\"\u003e\n                                  {new Date(task.dueDate).toLocaleDateString()}\n                                \u003c/span\u003e\n                                \u003cAvatar className=\"h-6 w-6\"\u003e\n                                  \u003cAvatarImage src={task.assignee.avatar} alt={task.assignee.name} /\u003e\n                                  \u003cAvatarFallback className=\"text-xs\"\u003e\n                                    {task.assignee.name\n                                      .split(\" \")\n                                      .map((n) =\u003e n[0])\n                                      .join(\"\")}\n                                  \u003c/AvatarFallback\u003e\n                                \u003c/Avatar\u003e\n                              \u003c/div\u003e\n                            \u003c/div\u003e\n                          \u003c/CardContent\u003e\n                        \u003c/Card\u003e\n                      )}\n                    \u003c/Draggable\u003e\n                  ))}\n                  {provided.placeholder}\n                \u003c/div\u003e\n              )}\n            \u003c/Droppable\u003e\n          \u003c/div\u003e\n        ))}\n      \u003c/div\u003e\n    \u003c/DragDropContext\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/tasks/task-filters.tsx\" isMerged=\"true\"\n\"use client\"\n\nimport { useState } from \"react\"\nimport { Input } from \"@/components/ui/input\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { Tabs, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\n\nexport function TaskFilters() {\n  const [view, setView] = useState(\"kanban\")\n\n  return (\n    \u003cdiv className=\"flex flex-col gap-4 sm:flex-row sm:items-center sm:justify-between\"\u003e\n      \u003cdiv className=\"flex items-center gap-2\"\u003e\n        \u003cTabs defaultValue=\"kanban\" className=\"w-[400px]\" onValueChange={setView}\u003e\n          \u003cTabsList\u003e\n            \u003cTabsTrigger value=\"kanban\"\u003eKanban\u003c/TabsTrigger\u003e\n            \u003cTabsTrigger value=\"list\"\u003eList\u003c/TabsTrigger\u003e\n            \u003cTabsTrigger value=\"calendar\"\u003eCalendar\u003c/TabsTrigger\u003e\n          \u003c/TabsList\u003e\n        \u003c/Tabs\u003e\n      \u003c/div\u003e\n      \u003cdiv className=\"flex flex-col gap-2 sm:flex-row sm:items-center\"\u003e\n        \u003cdiv className=\"flex items-center gap-2\"\u003e\n          \u003cInput placeholder=\"Search tasks...\" className=\"h-9 w-[150px] sm:w-[180px] lg:w-[250px]\" /\u003e\n          \u003cSelect defaultValue=\"all\"\u003e\n            \u003cSelectTrigger className=\"h-9 w-[130px]\"\u003e\n              \u003cSelectValue placeholder=\"Priority\" /\u003e\n            \u003c/SelectTrigger\u003e\n            \u003cSelectContent\u003e\n              \u003cSelectItem value=\"all\"\u003eAll Priorities\u003c/SelectItem\u003e\n              \u003cSelectItem value=\"high\"\u003eHigh\u003c/SelectItem\u003e\n              \u003cSelectItem value=\"medium\"\u003eMedium\u003c/SelectItem\u003e\n              \u003cSelectItem value=\"low\"\u003eLow\u003c/SelectItem\u003e\n            \u003c/SelectContent\u003e\n          \u003c/Select\u003e\n          \u003cSelect defaultValue=\"all\"\u003e\n            \u003cSelectTrigger className=\"h-9 w-[130px]\"\u003e\n              \u003cSelectValue placeholder=\"Assignee\" /\u003e\n            \u003c/SelectTrigger\u003e\n            \u003cSelectContent\u003e\n              \u003cSelectItem value=\"all\"\u003eAll Assignees\u003c/SelectItem\u003e\n              \u003cSelectItem value=\"emma\"\u003eEmma Wilson\u003c/SelectItem\u003e\n              \u003cSelectItem value=\"jackson\"\u003eJackson Lee\u003c/SelectItem\u003e\n              \u003cSelectItem value=\"sophia\"\u003eSophia Chen\u003c/SelectItem\u003e\n              \u003cSelectItem value=\"liam\"\u003eLiam Johnson\u003c/SelectItem\u003e\n              \u003cSelectItem value=\"olivia\"\u003eOlivia Martinez\u003c/SelectItem\u003e\n            \u003c/SelectContent\u003e\n          \u003c/Select\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/tasks/task-form.tsx\" isMerged=\"true\"\n\"use client\"\n\nimport { useState } from \"react\"\nimport { useRouter } from \"next/navigation\"\nimport { Button } from \"@/components/ui/button\"\nimport { Calendar } from \"@/components/ui/calendar\"\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Form, FormControl, FormDescription, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\"\nimport { Input } from \"@/components/ui/input\"\nimport { Popover, PopoverContent, PopoverTrigger } from \"@/components/ui/popover\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { format } from \"date-fns\"\nimport { CalendarIcon } from \"lucide-react\"\nimport { useForm } from \"react-hook-form\"\n\nexport function TaskForm() {\n  const router = useRouter()\n  const [isLoading, setIsLoading] = useState(false)\n\n  const form = useForm({\n    defaultValues: {\n      title: \"\",\n      description: \"\",\n      priority: \"medium\",\n      assignee: \"\",\n      dueDate: new Date(),\n      tags: \"\",\n    },\n  })\n\n  async function onSubmit(data) {\n    setIsLoading(true)\n\n    try {\n      // Here you would normally send the data to your API\n      console.log(\"Form submitted:\", data)\n\n      // Simulate API call\n      await new Promise((resolve) =\u003e setTimeout(resolve, 1000))\n\n      // Redirect to tasks page\n      router.push(\"/tasks\")\n    } catch (error) {\n      console.error(\"Error creating task:\", error)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    \u003cCard\u003e\n      \u003cCardHeader\u003e\n        \u003cCardTitle\u003eCreate New Task\u003c/CardTitle\u003e\n        \u003cCardDescription\u003eAdd a new task and assign it to team members\u003c/CardDescription\u003e\n      \u003c/CardHeader\u003e\n      \u003cForm {...form}\u003e\n        \u003cform onSubmit={form.handleSubmit(onSubmit)}\u003e\n          \u003cCardContent className=\"space-y-4\"\u003e\n            \u003cFormField\n              control={form.control}\n              name=\"title\"\n              render={({ field }) =\u003e (\n                \u003cFormItem\u003e\n                  \u003cFormLabel\u003eTask Title\u003c/FormLabel\u003e\n                  \u003cFormControl\u003e\n                    \u003cInput placeholder=\"Enter task title\" {...field} /\u003e\n                  \u003c/FormControl\u003e\n                  \u003cFormMessage /\u003e\n                \u003c/FormItem\u003e\n              )}\n            /\u003e\n            \u003cFormField\n              control={form.control}\n              name=\"description\"\n              render={({ field }) =\u003e (\n                \u003cFormItem\u003e\n                  \u003cFormLabel\u003eDescription\u003c/FormLabel\u003e\n                  \u003cFormControl\u003e\n                    \u003cTextarea placeholder=\"Enter task description\" className=\"min-h-[100px]\" {...field} /\u003e\n                  \u003c/FormControl\u003e\n                  \u003cFormMessage /\u003e\n                \u003c/FormItem\u003e\n              )}\n            /\u003e\n            \u003cdiv className=\"grid grid-cols-1 gap-4 md:grid-cols-2\"\u003e\n              \u003cFormField\n                control={form.control}\n                name=\"priority\"\n                render={({ field }) =\u003e (\n                  \u003cFormItem\u003e\n                    \u003cFormLabel\u003ePriority\u003c/FormLabel\u003e\n                    \u003cSelect onValueChange={field.onChange} defaultValue={field.value}\u003e\n                      \u003cFormControl\u003e\n                        \u003cSelectTrigger\u003e\n                          \u003cSelectValue placeholder=\"Select priority\" /\u003e\n                        \u003c/SelectTrigger\u003e\n                      \u003c/FormControl\u003e\n                      \u003cSelectContent\u003e\n                        \u003cSelectItem value=\"high\"\u003eHigh\u003c/SelectItem\u003e\n                        \u003cSelectItem value=\"medium\"\u003eMedium\u003c/SelectItem\u003e\n                        \u003cSelectItem value=\"low\"\u003eLow\u003c/SelectItem\u003e\n                      \u003c/SelectContent\u003e\n                    \u003c/Select\u003e\n                    \u003cFormMessage /\u003e\n                  \u003c/FormItem\u003e\n                )}\n              /\u003e\n              \u003cFormField\n                control={form.control}\n                name=\"assignee\"\n                render={({ field }) =\u003e (\n                  \u003cFormItem\u003e\n                    \u003cFormLabel\u003eAssignee\u003c/FormLabel\u003e\n                    \u003cSelect onValueChange={field.onChange} defaultValue={field.value}\u003e\n                      \u003cFormControl\u003e\n                        \u003cSelectTrigger\u003e\n                          \u003cSelectValue placeholder=\"Select team member\" /\u003e\n                        \u003c/SelectTrigger\u003e\n                      \u003c/FormControl\u003e\n                      \u003cSelectContent\u003e\n                        \u003cSelectItem value=\"emma\"\u003eEmma Wilson\u003c/SelectItem\u003e\n                        \u003cSelectItem value=\"jackson\"\u003eJackson Lee\u003c/SelectItem\u003e\n                        \u003cSelectItem value=\"sophia\"\u003eSophia Chen\u003c/SelectItem\u003e\n                        \u003cSelectItem value=\"liam\"\u003eLiam Johnson\u003c/SelectItem\u003e\n                        \u003cSelectItem value=\"olivia\"\u003eOlivia Martinez\u003c/SelectItem\u003e\n                      \u003c/SelectContent\u003e\n                    \u003c/Select\u003e\n                    \u003cFormMessage /\u003e\n                  \u003c/FormItem\u003e\n                )}\n              /\u003e\n            \u003c/div\u003e\n            \u003cdiv className=\"grid grid-cols-1 gap-4 md:grid-cols-2\"\u003e\n              \u003cFormField\n                control={form.control}\n                name=\"dueDate\"\n                render={({ field }) =\u003e (\n                  \u003cFormItem className=\"flex flex-col\"\u003e\n                    \u003cFormLabel\u003eDue Date\u003c/FormLabel\u003e\n                    \u003cPopover\u003e\n                      \u003cPopoverTrigger asChild\u003e\n                        \u003cFormControl\u003e\n                          \u003cButton variant={\"outline\"} className={\"w-full pl-3 text-left font-normal\"}\u003e\n                            {field.value ? format(field.value, \"PPP\") : \u003cspan\u003ePick a date\u003c/span\u003e}\n                            \u003cCalendarIcon className=\"ml-auto h-4 w-4 opacity-50\" /\u003e\n                          \u003c/Button\u003e\n                        \u003c/FormControl\u003e\n                      \u003c/PopoverTrigger\u003e\n                      \u003cPopoverContent className=\"w-auto p-0\" align=\"start\"\u003e\n                        \u003cCalendar mode=\"single\" selected={field.value} onSelect={field.onChange} initialFocus /\u003e\n                      \u003c/PopoverContent\u003e\n                    \u003c/Popover\u003e\n                    \u003cFormMessage /\u003e\n                  \u003c/FormItem\u003e\n                )}\n              /\u003e\n              \u003cFormField\n                control={form.control}\n                name=\"tags\"\n                render={({ field }) =\u003e (\n                  \u003cFormItem\u003e\n                    \u003cFormLabel\u003eTags\u003c/FormLabel\u003e\n                    \u003cFormControl\u003e\n                      \u003cInput placeholder=\"Enter tags separated by commas\" {...field} /\u003e\n                    \u003c/FormControl\u003e\n                    \u003cFormDescription\u003eE.g. frontend, bug, feature\u003c/FormDescription\u003e\n                    \u003cFormMessage /\u003e\n                  \u003c/FormItem\u003e\n                )}\n              /\u003e\n            \u003c/div\u003e\n          \u003c/CardContent\u003e\n          \u003cCardFooter className=\"flex justify-between\"\u003e\n            \u003cButton variant=\"outline\" type=\"button\" onClick={() =\u003e router.back()}\u003e\n              Cancel\n            \u003c/Button\u003e\n            \u003cButton type=\"submit\" disabled={isLoading}\u003e\n              {isLoading ? \"Creating...\" : \"Create Task\"}\n            \u003c/Button\u003e\n          \u003c/CardFooter\u003e\n        \u003c/form\u003e\n      \u003c/Form\u003e\n    \u003c/Card\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/tasks/task-details.tsx\" isMerged=\"true\"\n\"use client\"\n\nimport { useState } from \"react\"\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Progress } from \"@/components/ui/progress\"\nimport { Separator } from \"@/components/ui/separator\"\nimport { format } from \"date-fns\"\n\n// Mock task data - in a real app, this would come from an API\nconst taskData = {\n  id: \"TASK-8782\",\n  title: \"Create new landing page\",\n  description:\n    \"Design and implement a new landing page for the product. The page should highlight key features and include a sign-up form for new users. Make sure it's responsive and works well on mobile devices.\",\n  status: \"In Progress\",\n  priority: \"High\",\n  createdAt: \"2023-11-15T10:30:00Z\",\n  dueDate: \"2023-12-15T23:59:59Z\",\n  progress: 65,\n  assignee: {\n    name: \"Emma Wilson\",\n    email: \"emma@example.com\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n  },\n  creator: {\n    name: \"Liam Johnson\",\n    email: \"liam@example.com\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n  },\n  tags: [\"frontend\", \"design\", \"marketing\"],\n  subtasks: [\n    { id: 1, title: \"Design mockups\", completed: true },\n    { id: 2, title: \"Implement HTML/CSS\", completed: true },\n    { id: 3, title: \"Add JavaScript interactions\", completed: false },\n    { id: 4, title: \"Optimize for mobile\", completed: false },\n    { id: 5, title: \"Test across browsers\", completed: false },\n  ],\n}\n\nexport function TaskDetails({ id }: { id: string }) {\n  const [task, setTask] = useState(taskData)\n  const [isEditing, setIsEditing] = useState(false)\n\n  const toggleSubtask = (subtaskId: number) =\u003e {\n    setTask((prevTask) =\u003e ({\n      ...prevTask,\n      subtasks: prevTask.subtasks.map((subtask) =\u003e\n        subtask.id === subtaskId ? { ...subtask, completed: !subtask.completed } : subtask,\n      ),\n      progress: calculateProgress(\n        prevTask.subtasks.map((subtask) =\u003e\n          subtask.id === subtaskId ? { ...subtask, completed: !subtask.completed } : subtask,\n        ),\n      ),\n    }))\n  }\n\n  const calculateProgress = (subtasks) =\u003e {\n    if (subtasks.length === 0) return 0\n    const completedCount = subtasks.filter((subtask) =\u003e subtask.completed).length\n    return Math.round((completedCount / subtasks.length) * 100)\n  }\n\n  return (\n    \u003cCard\u003e\n      \u003cCardHeader\u003e\n        \u003cdiv className=\"flex items-start justify-between\"\u003e\n          \u003cdiv\u003e\n            \u003cCardTitle className=\"text-xl\"\u003e{task.title}\u003c/CardTitle\u003e\n            \u003cCardDescription\u003e\n              {task.id} · Created on {format(new Date(task.createdAt), \"MMM d, yyyy\")}\n            \u003c/CardDescription\u003e\n          \u003c/div\u003e\n          \u003cdiv className=\"flex items-center gap-2\"\u003e\n            \u003cButton variant=\"outline\" size=\"sm\" onClick={() =\u003e setIsEditing(true)}\u003e\n              Edit\n            \u003c/Button\u003e\n            \u003cButton variant=\"outline\" size=\"sm\"\u003e\n              Delete\n            \u003c/Button\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n        \u003cdiv className=\"mt-2 flex flex-wrap gap-2\"\u003e\n          \u003cBadge\n            variant={\n              task.status === \"Completed\"\n                ? \"success\"\n                : task.status === \"In Progress\"\n                  ? \"default\"\n                  : task.status === \"In Review\"\n                    ? \"warning\"\n                    : \"secondary\"\n            }\n          \u003e\n            {task.status}\n          \u003c/Badge\u003e\n          \u003cBadge\n            variant={task.priority === \"High\" ? \"destructive\" : task.priority === \"Medium\" ? \"default\" : \"outline\"}\n          \u003e\n            {task.priority}\n          \u003c/Badge\u003e\n          {task.tags.map((tag) =\u003e (\n            \u003cBadge key={tag} variant=\"outline\"\u003e\n              {tag}\n            \u003c/Badge\u003e\n          ))}\n        \u003c/div\u003e\n      \u003c/CardHeader\u003e\n      \u003cCardContent className=\"space-y-4\"\u003e\n        \u003cdiv\u003e\n          \u003ch3 className=\"mb-2 font-medium\"\u003eDescription\u003c/h3\u003e\n          \u003cp className=\"text-sm text-muted-foreground\"\u003e{task.description}\u003c/p\u003e\n        \u003c/div\u003e\n\n        \u003cdiv\u003e\n          \u003cdiv className=\"mb-2 flex items-center justify-between\"\u003e\n            \u003ch3 className=\"font-medium\"\u003eProgress\u003c/h3\u003e\n            \u003cspan className=\"text-sm font-medium\"\u003e{task.progress}%\u003c/span\u003e\n          \u003c/div\u003e\n          \u003cProgress value={task.progress} className=\"h-2\" /\u003e\n        \u003c/div\u003e\n\n        \u003cdiv className=\"grid gap-4 md:grid-cols-2\"\u003e\n          \u003cdiv\u003e\n            \u003ch3 className=\"mb-2 font-medium\"\u003eAssignee\u003c/h3\u003e\n            \u003cdiv className=\"flex items-center gap-2\"\u003e\n              \u003cAvatar\u003e\n                \u003cAvatarImage src={task.assignee.avatar} alt={task.assignee.name} /\u003e\n                \u003cAvatarFallback\u003e\n                  {task.assignee.name\n                    .split(\" \")\n                    .map((n) =\u003e n[0])\n                    .join(\"\")}\n                \u003c/AvatarFallback\u003e\n              \u003c/Avatar\u003e\n              \u003cdiv\u003e\n                \u003cp className=\"text-sm font-medium\"\u003e{task.assignee.name}\u003c/p\u003e\n                \u003cp className=\"text-xs text-muted-foreground\"\u003e{task.assignee.email}\u003c/p\u003e\n              \u003c/div\u003e\n            \u003c/div\u003e\n          \u003c/div\u003e\n\n          \u003cdiv\u003e\n            \u003ch3 className=\"mb-2 font-medium\"\u003eDue Date\u003c/h3\u003e\n            \u003cp className=\"text-sm\"\u003e{format(new Date(task.dueDate), \"MMMM d, yyyy\")}\u003c/p\u003e\n            \u003cp className=\"text-xs text-muted-foreground\"\u003e\n              {new Date(task.dueDate) \u003c new Date()\n                ? \"Overdue\"\n                : `${Math.ceil(\n                    (new Date(task.dueDate).getTime() - new Date().getTime()) / (1000 * 60 * 60 * 24),\n                  )} days remaining`}\n            \u003c/p\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n\n        \u003cSeparator /\u003e\n\n        \u003cdiv\u003e\n          \u003ch3 className=\"mb-2 font-medium\"\u003eSubtasks\u003c/h3\u003e\n          \u003cdiv className=\"space-y-2\"\u003e\n            {task.subtasks.map((subtask) =\u003e (\n              \u003cdiv key={subtask.id} className=\"flex items-center gap-2 rounded-md border p-2\"\u003e\n                \u003cinput\n                  type=\"checkbox\"\n                  checked={subtask.completed}\n                  onChange={() =\u003e toggleSubtask(subtask.id)}\n                  className=\"h-4 w-4 rounded border-gray-300\"\n                /\u003e\n                \u003cspan className={`text-sm ${subtask.completed ? \"text-muted-foreground line-through\" : \"\"}`}\u003e\n                  {subtask.title}\n                \u003c/span\u003e\n              \u003c/div\u003e\n            ))}\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/CardContent\u003e\n      \u003cCardFooter className=\"flex justify-between\"\u003e\n        \u003cButton variant=\"outline\"\u003eBack to Tasks\u003c/Button\u003e\n        \u003cButton\u003eUpdate Status\u003c/Button\u003e\n      \u003c/CardFooter\u003e\n    \u003c/Card\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/tasks/task-comments.tsx\" isMerged=\"true\"\n\"use client\"\n\nimport { useState } from \"react\"\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { formatDistanceToNow } from \"date-fns\"\n\n// Mock comments data\nconst initialComments = [\n  {\n    id: 1,\n    user: {\n      name: \"Emma Wilson\",\n      avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    },\n    content: \"I've started working on the design mockups. Will share them by tomorrow.\",\n    timestamp: new Date(Date.now() - 1000 * 60 * 60 * 3), // 3 hours ago\n  },\n  {\n    id: 2,\n    user: {\n      name: \"Liam Johnson\",\n      avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    },\n    content: \"Looks good! Make sure to follow the brand guidelines for colors and typography.\",\n    timestamp: new Date(Date.now() - 1000 * 60 * 60 * 2), // 2 hours ago\n  },\n  {\n    id: 3,\n    user: {\n      name: \"Sophia Chen\",\n      avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    },\n    content: \"I can help with the JavaScript interactions once the HTML/CSS is ready.\",\n    timestamp: new Date(Date.now() - 1000 * 60 * 30), // 30 minutes ago\n  },\n]\n\nexport function TaskComments({ id }: { id: string }) {\n  const [comments, setComments] = useState(initialComments)\n  const [newComment, setNewComment] = useState(\"\")\n  const [isSubmitting, setIsSubmitting] = useState(false)\n\n  const handleSubmitComment = () =\u003e {\n    if (!newComment.trim()) return\n\n    setIsSubmitting(true)\n\n    // Simulate API call\n    setTimeout(() =\u003e {\n      const comment = {\n        id: comments.length + 1,\n        user: {\n          name: \"Current User\", // In a real app, this would be the logged-in user\n          avatar: \"/placeholder.svg?height=40\u0026width=40\",\n        },\n        content: newComment,\n        timestamp: new Date(),\n      }\n\n      setComments([...comments, comment])\n      setNewComment(\"\")\n      setIsSubmitting(false)\n    }, 500)\n  }\n\n  return (\n    \u003cCard\u003e\n      \u003cCardHeader\u003e\n        \u003cCardTitle className=\"text-lg\"\u003eComments\u003c/CardTitle\u003e\n      \u003c/CardHeader\u003e\n      \u003cCardContent className=\"space-y-4\"\u003e\n        {comments.length === 0 ? (\n          \u003cp className=\"text-center text-sm text-muted-foreground\"\u003eNo comments yet. Be the first to comment!\u003c/p\u003e\n        ) : (\n          \u003cdiv className=\"space-y-4\"\u003e\n            {comments.map((comment) =\u003e (\n              \u003cdiv key={comment.id} className=\"flex gap-3\"\u003e\n                \u003cAvatar className=\"h-8 w-8\"\u003e\n                  \u003cAvatarImage src={comment.user.avatar} alt={comment.user.name} /\u003e\n                  \u003cAvatarFallback\u003e\n                    {comment.user.name\n                      .split(\" \")\n                      .map((n) =\u003e n[0])\n                      .join(\"\")}\n                  \u003c/AvatarFallback\u003e\n                \u003c/Avatar\u003e\n                \u003cdiv className=\"flex-1 space-y-1\"\u003e\n                  \u003cdiv className=\"flex items-center justify-between\"\u003e\n                    \u003cp className=\"text-sm font-medium\"\u003e{comment.user.name}\u003c/p\u003e\n                    \u003cp className=\"text-xs text-muted-foreground\"\u003e\n                      {formatDistanceToNow(comment.timestamp, { addSuffix: true })}\n                    \u003c/p\u003e\n                  \u003c/div\u003e\n                  \u003cp className=\"text-sm\"\u003e{comment.content}\u003c/p\u003e\n                \u003c/div\u003e\n              \u003c/div\u003e\n            ))}\n          \u003c/div\u003e\n        )}\n      \u003c/CardContent\u003e\n      \u003cCardFooter\u003e\n        \u003cdiv className=\"flex w-full flex-col space-y-2\"\u003e\n          \u003cTextarea\n            placeholder=\"Add a comment...\"\n            value={newComment}\n            onChange={(e) =\u003e setNewComment(e.target.value)}\n            className=\"min-h-[80px] resize-none\"\n          /\u003e\n          \u003cdiv className=\"flex justify-end\"\u003e\n            \u003cButton onClick={handleSubmitComment} disabled={!newComment.trim() || isSubmitting}\u003e\n              {isSubmitting ? \"Posting...\" : \"Post Comment\"}\n            \u003c/Button\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/CardFooter\u003e\n    \u003c/Card\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/tasks/task-attachments.tsx\" isMerged=\"true\"\n\"use client\"\n\nimport { useState } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { formatBytes } from \"@/lib/utils\"\nimport { FileIcon, ImageIcon, PaperclipIcon, TrashIcon, UploadIcon } from \"lucide-react\"\n\n// Mock attachments data\nconst initialAttachments = [\n  {\n    id: 1,\n    name: \"landing-page-mockup.png\",\n    type: \"image/png\",\n    size: 1200000, // 1.2 MB\n    url: \"/placeholder.svg?height=100\u0026width=100\",\n    uploadedAt: new Date(Date.now() - 1000 * 60 * 60 * 24), // 1 day ago\n  },\n  {\n    id: 2,\n    name: \"requirements.pdf\",\n    type: \"application/pdf\",\n    size: 500000, // 500 KB\n    url: \"#\",\n    uploadedAt: new Date(Date.now() - 1000 * 60 * 60 * 48), // 2 days ago\n  },\n  {\n    id: 3,\n    name: \"brand-guidelines.docx\",\n    type: \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n    size: 350000, // 350 KB\n    url: \"#\",\n    uploadedAt: new Date(Date.now() - 1000 * 60 * 60 * 72), // 3 days ago\n  },\n]\n\nexport function TaskAttachments({ id }: { id: string }) {\n  const [attachments, setAttachments] = useState(initialAttachments)\n  const [isUploading, setIsUploading] = useState(false)\n\n  const handleFileUpload = (event) =\u003e {\n    const files = event.target.files\n    if (!files || files.length === 0) return\n\n    setIsUploading(true)\n\n    // Simulate API call for file upload\n    setTimeout(() =\u003e {\n      const newAttachments = Array.from(files).map((file, index) =\u003e ({\n        id: attachments.length + index + 1,\n        name: file.name,\n        type: file.type,\n        size: file.size,\n        url: file.type.startsWith(\"image/\") ? URL.createObjectURL(file) : \"#\",\n        uploadedAt: new Date(),\n      }))\n\n      setAttachments([...attachments, ...newAttachments])\n      setIsUploading(false)\n    }, 1000)\n  }\n\n  const handleDeleteAttachment = (id) =\u003e {\n    setAttachments(attachments.filter((attachment) =\u003e attachment.id !== id))\n  }\n\n  const getFileIcon = (type) =\u003e {\n    if (type.startsWith(\"image/\")) {\n      return \u003cImageIcon className=\"h-6 w-6 text-blue-500\" /\u003e\n    } else if (type === \"application/pdf\" || type.includes(\"document\") || type.includes(\"text\")) {\n      return \u003cFileIcon className=\"h-6 w-6 text-red-500\" /\u003e\n    } else {\n      return \u003cPaperclipIcon className=\"h-6 w-6 text-gray-500\" /\u003e\n    }\n  }\n\n  return (\n    \u003cCard\u003e\n      \u003cCardHeader\u003e\n        \u003cCardTitle className=\"text-lg\"\u003eAttachments\u003c/CardTitle\u003e\n      \u003c/CardHeader\u003e\n      \u003cCardContent className=\"space-y-4\"\u003e\n        {attachments.length === 0 ? (\n          \u003cp className=\"text-center text-sm text-muted-foreground\"\u003e\n            No attachments yet. Upload files to share with the team.\n          \u003c/p\u003e\n        ) : (\n          \u003cdiv className=\"space-y-2\"\u003e\n            {attachments.map((attachment) =\u003e (\n              \u003cdiv key={attachment.id} className=\"flex items-center justify-between rounded-md border p-2\"\u003e\n                \u003cdiv className=\"flex items-center gap-2\"\u003e\n                  {getFileIcon(attachment.type)}\n                  \u003cdiv\u003e\n                    \u003cp className=\"text-sm font-medium\"\u003e{attachment.name}\u003c/p\u003e\n                    \u003cp className=\"text-xs text-muted-foreground\"\u003e\n                      {formatBytes(attachment.size)} · {attachment.uploadedAt.toLocaleDateString()}\n                    \u003c/p\u003e\n                  \u003c/div\u003e\n                \u003c/div\u003e\n                \u003cdiv className=\"flex items-center gap-2\"\u003e\n                  \u003cButton variant=\"ghost\" size=\"sm\" asChild\u003e\n                    \u003ca href={attachment.url} target=\"_blank\" rel=\"noopener noreferrer\"\u003e\n                      View\n                    \u003c/a\u003e\n                  \u003c/Button\u003e\n                  \u003cButton variant=\"ghost\" size=\"sm\" onClick={() =\u003e handleDeleteAttachment(attachment.id)}\u003e\n                    \u003cTrashIcon className=\"h-4 w-4 text-red-500\" /\u003e\n                  \u003c/Button\u003e\n                \u003c/div\u003e\n              \u003c/div\u003e\n            ))}\n          \u003c/div\u003e\n        )}\n      \u003c/CardContent\u003e\n      \u003cCardFooter\u003e\n        \u003cdiv className=\"w-full\"\u003e\n          \u003clabel htmlFor=\"file-upload\"\u003e\n            \u003cdiv className=\"flex cursor-pointer items-center justify-center gap-2 rounded-md border border-dashed p-4 hover:bg-muted\"\u003e\n              \u003cUploadIcon className=\"h-5 w-5\" /\u003e\n              \u003cspan className=\"text-sm font-medium\"\u003e{isUploading ? \"Uploading...\" : \"Upload Files\"}\u003c/span\u003e\n              \u003cinput\n                id=\"file-upload\"\n                type=\"file\"\n                multiple\n                className=\"hidden\"\n                onChange={handleFileUpload}\n                disabled={isUploading}\n              /\u003e\n            \u003c/div\u003e\n          \u003c/label\u003e\n        \u003c/div\u003e\n      \u003c/CardFooter\u003e\n    \u003c/Card\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/reports/task-completion-chart.tsx\" isMerged=\"true\"\n\"use client\"\n\nimport { Bar, BarChart, CartesianGrid, Legend, ResponsiveContainer, Tooltip, XAxis, YAxis } from \"@/components/ui/chart\"\n\n// Mock data for task completion\nconst data = [\n  {\n    name: \"Week 1\",\n    completed: 12,\n    overdue: 2,\n  },\n  {\n    name: \"Week 2\",\n    completed: 18,\n    overdue: 1,\n  },\n  {\n    name: \"Week 3\",\n    completed: 15,\n    overdue: 3,\n  },\n  {\n    name: \"Week 4\",\n    completed: 20,\n    overdue: 0,\n  },\n  {\n    name: \"Week 5\",\n    completed: 16,\n    overdue: 2,\n  },\n  {\n    name: \"Week 6\",\n    completed: 22,\n    overdue: 1,\n  },\n]\n\nexport function TaskCompletionChart() {\n  return (\n    \u003cResponsiveContainer width=\"100%\" height=\"100%\"\u003e\n      \u003cBarChart\n        data={data}\n        margin={{\n          top: 20,\n          right: 30,\n          left: 20,\n          bottom: 5,\n        }}\n      \u003e\n        \u003cCartesianGrid strokeDasharray=\"3 3\" /\u003e\n        \u003cXAxis dataKey=\"name\" /\u003e\n        \u003cYAxis /\u003e\n        \u003cTooltip /\u003e\n        \u003cLegend /\u003e\n        \u003cBar dataKey=\"completed\" fill=\"#4ade80\" name=\"Completed Tasks\" /\u003e\n        \u003cBar dataKey=\"overdue\" fill=\"#f87171\" name=\"Overdue Tasks\" /\u003e\n      \u003c/BarChart\u003e\n    \u003c/ResponsiveContainer\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/reports/team-performance-chart.tsx\" isMerged=\"true\"\n\"use client\"\n\nimport { Bar, BarChart, CartesianGrid, Legend, ResponsiveContainer, Tooltip, XAxis, YAxis } from \"@/components/ui/chart\"\n\n// Mock data for team performance\nconst data = [\n  {\n    name: \"Emma\",\n    completed: 15,\n    inProgress: 3,\n  },\n  {\n    name: \"Jackson\",\n    completed: 20,\n    inProgress: 5,\n  },\n  {\n    name: \"Sophia\",\n    completed: 18,\n    inProgress: 2,\n  },\n  {\n    name: \"Liam\",\n    completed: 12,\n    inProgress: 4,\n  },\n  {\n    name: \"Olivia\",\n    completed: 16,\n    inProgress: 3,\n  },\n]\n\nexport function TeamPerformanceChart() {\n  return (\n    \u003cResponsiveContainer width=\"100%\" height=\"100%\"\u003e\n      \u003cBarChart\n        data={data}\n        layout=\"vertical\"\n        margin={{\n          top: 20,\n          right: 30,\n          left: 60,\n          bottom: 5,\n        }}\n      \u003e\n        \u003cCartesianGrid strokeDasharray=\"3 3\" /\u003e\n        \u003cXAxis type=\"number\" /\u003e\n        \u003cYAxis dataKey=\"name\" type=\"category\" /\u003e\n        \u003cTooltip /\u003e\n        \u003cLegend /\u003e\n        \u003cBar dataKey=\"completed\" stackId=\"a\" fill=\"#8884d8\" name=\"Completed\" /\u003e\n        \u003cBar dataKey=\"inProgress\" stackId=\"a\" fill=\"#82ca9d\" name=\"In Progress\" /\u003e\n      \u003c/BarChart\u003e\n    \u003c/ResponsiveContainer\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/reports/priority-distribution-chart.tsx\" isMerged=\"true\"\n\"use client\"\n\nimport { Cell, Legend, Pie, PieChart, ResponsiveContainer, Tooltip } from \"@/components/ui/chart\"\n\n// Mock data for priority distribution\nconst data = [\n  { name: \"High\", value: 12, color: \"#ef4444\" },\n  { name: \"Medium\", value: 24, color: \"#f59e0b\" },\n  { name: \"Low\", value: 18, color: \"#10b981\" },\n]\n\nexport function PriorityDistributionChart() {\n  return (\n    \u003cResponsiveContainer width=\"100%\" height=\"100%\"\u003e\n      \u003cPieChart\u003e\n        \u003cPie\n          data={data}\n          cx=\"50%\"\n          cy=\"50%\"\n          labelLine={false}\n          outerRadius={80}\n          fill=\"#8884d8\"\n          dataKey=\"value\"\n          label={({ name, percent }) =\u003e `${name} ${(percent * 100).toFixed(0)}%`}\n        \u003e\n          {data.map((entry, index) =\u003e (\n            \u003cCell key={`cell-${index}`} fill={entry.color} /\u003e\n          ))}\n        \u003c/Pie\u003e\n        \u003cTooltip /\u003e\n        \u003cLegend /\u003e\n      \u003c/PieChart\u003e\n    \u003c/ResponsiveContainer\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/settings/profile-settings.tsx\" isMerged=\"true\"\n\"use client\"\n\nimport { useState } from \"react\"\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Form, FormControl, FormDescription, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\"\nimport { Input } from \"@/components/ui/input\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { useForm } from \"react-hook-form\"\n\nexport function ProfileSettings({ user }) {\n  const [isLoading, setIsLoading] = useState(false)\n\n  const form = useForm({\n    defaultValues: {\n      name: user.name || \"\",\n      email: user.email || \"\",\n      bio: user.bio || \"\",\n      jobTitle: user.jobTitle || \"\",\n      company: user.company || \"\",\n    },\n  })\n\n  async function onSubmit(data) {\n    setIsLoading(true)\n\n    try {\n      // Here you would normally send the data to your API\n      console.log(\"Profile updated:\", data)\n\n      // Simulate API call\n      await new Promise((resolve) =\u003e setTimeout(resolve, 1000))\n    } catch (error) {\n      console.error(\"Error updating profile:\", error)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    \u003cCard\u003e\n      \u003cCardHeader\u003e\n        \u003cCardTitle\u003eProfile Information\u003c/CardTitle\u003e\n        \u003cCardDescription\u003eUpdate your profile information and how others see you on the platform\u003c/CardDescription\u003e\n      \u003c/CardHeader\u003e\n      \u003cForm {...form}\u003e\n        \u003cform onSubmit={form.handleSubmit(onSubmit)}\u003e\n          \u003cCardContent className=\"space-y-6\"\u003e\n            \u003cdiv className=\"flex items-center gap-4\"\u003e\n              \u003cAvatar className=\"h-16 w-16\"\u003e\n                \u003cAvatarImage src={user.avatar || \"/placeholder.svg?height=64\u0026width=64\"} alt={user.name} /\u003e\n                \u003cAvatarFallback\u003e\n                  {user.name\n                    ? user.name\n                        .split(\" \")\n                        .map((n) =\u003e n[0])\n                        .join(\"\")\n                    : \"U\"}\n                \u003c/AvatarFallback\u003e\n              \u003c/Avatar\u003e\n              \u003cdiv\u003e\n                \u003cButton variant=\"outline\" size=\"sm\"\u003e\n                  Change Avatar\n                \u003c/Button\u003e\n                \u003cp className=\"mt-1 text-xs text-muted-foreground\"\u003eJPG, GIF or PNG. Max size of 2MB.\u003c/p\u003e\n              \u003c/div\u003e\n            \u003c/div\u003e\n\n            \u003cdiv className=\"grid gap-4 md:grid-cols-2\"\u003e\n              \u003cFormField\n                control={form.control}\n                name=\"name\"\n                render={({ field }) =\u003e (\n                  \u003cFormItem\u003e\n                    \u003cFormLabel\u003eFull Name\u003c/FormLabel\u003e\n                    \u003cFormControl\u003e\n                      \u003cInput placeholder=\"Your name\" {...field} /\u003e\n                    \u003c/FormControl\u003e\n                    \u003cFormMessage /\u003e\n                  \u003c/FormItem\u003e\n                )}\n              /\u003e\n              \u003cFormField\n                control={form.control}\n                name=\"email\"\n                render={({ field }) =\u003e (\n                  \u003cFormItem\u003e\n                    \u003cFormLabel\u003eEmail\u003c/FormLabel\u003e\n                    \u003cFormControl\u003e\n                      \u003cInput placeholder=\"Your email\" type=\"email\" {...field} /\u003e\n                    \u003c/FormControl\u003e\n                    \u003cFormMessage /\u003e\n                  \u003c/FormItem\u003e\n                )}\n              /\u003e\n            \u003c/div\u003e\n\n            \u003cFormField\n              control={form.control}\n              name=\"bio\"\n              render={({ field }) =\u003e (\n                \u003cFormItem\u003e\n                  \u003cFormLabel\u003eBio\u003c/FormLabel\u003e\n                  \u003cFormControl\u003e\n                    \u003cTextarea placeholder=\"Tell us a little about yourself\" className=\"min-h-[100px]\" {...field} /\u003e\n                  \u003c/FormControl\u003e\n                  \u003cFormDescription\u003eBrief description for your profile. URLs are hyperlinked.\u003c/FormDescription\u003e\n                  \u003cFormMessage /\u003e\n                \u003c/FormItem\u003e\n              )}\n            /\u003e\n\n            \u003cdiv className=\"grid gap-4 md:grid-cols-2\"\u003e\n              \u003cFormField\n                control={form.control}\n                name=\"jobTitle\"\n                render={({ field }) =\u003e (\n                  \u003cFormItem\u003e\n                    \u003cFormLabel\u003eJob Title\u003c/FormLabel\u003e\n                    \u003cFormControl\u003e\n                      \u003cInput placeholder=\"Your job title\" {...field} /\u003e\n                    \u003c/FormControl\u003e\n                    \u003cFormMessage /\u003e\n                  \u003c/FormItem\u003e\n                )}\n              /\u003e\n              \u003cFormField\n                control={form.control}\n                name=\"company\"\n                render={({ field }) =\u003e (\n                  \u003cFormItem\u003e\n                    \u003cFormLabel\u003eCompany\u003c/FormLabel\u003e\n                    \u003cFormControl\u003e\n                      \u003cInput placeholder=\"Your company\" {...field} /\u003e\n                    \u003c/FormControl\u003e\n                    \u003cFormMessage /\u003e\n                  \u003c/FormItem\u003e\n                )}\n              /\u003e\n            \u003c/div\u003e\n          \u003c/CardContent\u003e\n          \u003cCardFooter\u003e\n            \u003cButton type=\"submit\" disabled={isLoading}\u003e\n              {isLoading ? \"Saving...\" : \"Save Changes\"}\n            \u003c/Button\u003e\n          \u003c/CardFooter\u003e\n        \u003c/form\u003e\n      \u003c/Form\u003e\n    \u003c/Card\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/settings/notification-settings.tsx\" isMerged=\"true\"\n\"use client\"\n\nimport { useState } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Label } from \"@/components/ui/label\"\nimport { Switch } from \"@/components/ui/switch\"\n\nexport function NotificationSettings({ user }) {\n  const [isLoading, setIsLoading] = useState(false)\n  const [settings, setSettings] = useState({\n    emailNotifications: true,\n    pushNotifications: true,\n    taskAssigned: true,\n    taskUpdated: true,\n    taskCompleted: true,\n    commentAdded: true,\n    deadlineReminder: true,\n    weeklyDigest: false,\n  })\n\n  const handleToggle = (key) =\u003e {\n    setSettings({\n      ...settings,\n      [key]: !settings[key],\n    })\n  }\n\n  const handleSave = async () =\u003e {\n    setIsLoading(true)\n\n    try {\n      // Here you would normally send the data to your API\n      console.log(\"Notification settings updated:\", settings)\n\n      // Simulate API call\n      await new Promise((resolve) =\u003e setTimeout(resolve, 1000))\n    } catch (error) {\n      console.error(\"Error updating notification settings:\", error)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    \u003cCard\u003e\n      \u003cCardHeader\u003e\n        \u003cCardTitle\u003eNotification Preferences\u003c/CardTitle\u003e\n        \u003cCardDescription\u003eChoose how and when you want to be notified\u003c/CardDescription\u003e\n      \u003c/CardHeader\u003e\n      \u003cCardContent className=\"space-y-6\"\u003e\n        \u003cdiv className=\"space-y-4\"\u003e\n          \u003ch3 className=\"text-sm font-medium\"\u003eNotification Channels\u003c/h3\u003e\n          \u003cdiv className=\"flex items-center justify-between\"\u003e\n            \u003cdiv className=\"space-y-0.5\"\u003e\n              \u003cLabel htmlFor=\"emailNotifications\"\u003eEmail Notifications\u003c/Label\u003e\n              \u003cp className=\"text-xs text-muted-foreground\"\u003eReceive notifications via email\u003c/p\u003e\n            \u003c/div\u003e\n            \u003cSwitch\n              id=\"emailNotifications\"\n              checked={settings.emailNotifications}\n              onCheckedChange={() =\u003e handleToggle(\"emailNotifications\")}\n            /\u003e\n          \u003c/div\u003e\n          \u003cdiv className=\"flex items-center justify-between\"\u003e\n            \u003cdiv className=\"space-y-0.5\"\u003e\n              \u003cLabel htmlFor=\"pushNotifications\"\u003ePush Notifications\u003c/Label\u003e\n              \u003cp className=\"text-xs text-muted-foreground\"\u003eReceive notifications in your browser\u003c/p\u003e\n            \u003c/div\u003e\n            \u003cSwitch\n              id=\"pushNotifications\"\n              checked={settings.pushNotifications}\n              onCheckedChange={() =\u003e handleToggle(\"pushNotifications\")}\n            /\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n\n        \u003cdiv className=\"space-y-4\"\u003e\n          \u003ch3 className=\"text-sm font-medium\"\u003eTask Notifications\u003c/h3\u003e\n          \u003cdiv className=\"flex items-center justify-between\"\u003e\n            \u003cdiv className=\"space-y-0.5\"\u003e\n              \u003cLabel htmlFor=\"taskAssigned\"\u003eTask Assigned\u003c/Label\u003e\n              \u003cp className=\"text-xs text-muted-foreground\"\u003eWhen a task is assigned to you\u003c/p\u003e\n            \u003c/div\u003e\n            \u003cSwitch\n              id=\"taskAssigned\"\n              checked={settings.taskAssigned}\n              onCheckedChange={() =\u003e handleToggle(\"taskAssigned\")}\n            /\u003e\n          \u003c/div\u003e\n          \u003cdiv className=\"flex items-center justify-between\"\u003e\n            \u003cdiv className=\"space-y-0.5\"\u003e\n              \u003cLabel htmlFor=\"taskUpdated\"\u003eTask Updated\u003c/Label\u003e\n              \u003cp className=\"text-xs text-muted-foreground\"\u003eWhen a task you're assigned to is updated\u003c/p\u003e\n            \u003c/div\u003e\n            \u003cSwitch\n              id=\"taskUpdated\"\n              checked={settings.taskUpdated}\n              onCheckedChange={() =\u003e handleToggle(\"taskUpdated\")}\n            /\u003e\n          \u003c/div\u003e\n          \u003cdiv className=\"flex items-center justify-between\"\u003e\n            \u003cdiv className=\"space-y-0.5\"\u003e\n              \u003cLabel htmlFor=\"taskCompleted\"\u003eTask Completed\u003c/Label\u003e\n              \u003cp className=\"text-xs text-muted-foreground\"\u003eWhen a task you're assigned to is marked as completed\u003c/p\u003e\n            \u003c/div\u003e\n            \u003cSwitch\n              id=\"taskCompleted\"\n              checked={settings.taskCompleted}\n              onCheckedChange={() =\u003e handleToggle(\"taskCompleted\")}\n            /\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n\n        \u003cdiv className=\"space-y-4\"\u003e\n          \u003ch3 className=\"text-sm font-medium\"\u003eOther Notifications\u003c/h3\u003e\n          \u003cdiv className=\"flex items-center justify-between\"\u003e\n            \u003cdiv className=\"space-y-0.5\"\u003e\n              \u003cLabel htmlFor=\"commentAdded\"\u003eComment Added\u003c/Label\u003e\n              \u003cp className=\"text-xs text-muted-foreground\"\u003eWhen someone comments on a task you're involved with\u003c/p\u003e\n            \u003c/div\u003e\n            \u003cSwitch\n              id=\"commentAdded\"\n              checked={settings.commentAdded}\n              onCheckedChange={() =\u003e handleToggle(\"commentAdded\")}\n            /\u003e\n          \u003c/div\u003e\n          \u003cdiv className=\"flex items-center justify-between\"\u003e\n            \u003cdiv className=\"space-y-0.5\"\u003e\n              \u003cLabel htmlFor=\"deadlineReminder\"\u003eDeadline Reminders\u003c/Label\u003e\n              \u003cp className=\"text-xs text-muted-foreground\"\u003eReceive reminders before task deadlines\u003c/p\u003e\n            \u003c/div\u003e\n            \u003cSwitch\n              id=\"deadlineReminder\"\n              checked={settings.deadlineReminder}\n              onCheckedChange={() =\u003e handleToggle(\"deadlineReminder\")}\n            /\u003e\n          \u003c/div\u003e\n          \u003cdiv className=\"flex items-center justify-between\"\u003e\n            \u003cdiv className=\"space-y-0.5\"\u003e\n              \u003cLabel htmlFor=\"weeklyDigest\"\u003eWeekly Digest\u003c/Label\u003e\n              \u003cp className=\"text-xs text-muted-foreground\"\u003eReceive a weekly summary of your tasks and progress\u003c/p\u003e\n            \u003c/div\u003e\n            \u003cSwitch\n              id=\"weeklyDigest\"\n              checked={settings.weeklyDigest}\n              onCheckedChange={() =\u003e handleToggle(\"weeklyDigest\")}\n            /\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/CardContent\u003e\n      \u003cCardFooter\u003e\n        \u003cButton onClick={handleSave} disabled={isLoading}\u003e\n          {isLoading ? \"Saving...\" : \"Save Preferences\"}\n        \u003c/Button\u003e\n      \u003c/CardFooter\u003e\n    \u003c/Card\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/settings/security-settings.tsx\" isMerged=\"true\"\n\"use client\"\n\nimport { useState } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Form, FormControl, FormDescription, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { Switch } from \"@/components/ui/switch\"\nimport { useForm } from \"react-hook-form\"\n\nexport function SecuritySettings({ user }) {\n  const [isLoading, setIsLoading] = useState(false)\n  const [twoFactorEnabled, setTwoFactorEnabled] = useState(false)\n\n  const form = useForm({\n    defaultValues: {\n      currentPassword: \"\",\n      newPassword: \"\",\n      confirmPassword: \"\",\n    },\n  })\n\n  async function onSubmit(data) {\n    setIsLoading(true)\n\n    try {\n      // Here you would normally send the data to your API\n      console.log(\"Password updated:\", data)\n\n      // Simulate API call\n      await new Promise((resolve) =\u003e setTimeout(resolve, 1000))\n\n      // Reset form\n      form.reset()\n    } catch (error) {\n      console.error(\"Error updating password:\", error)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const handleToggleTwoFactor = async () =\u003e {\n    setIsLoading(true)\n\n    try {\n      // Here you would normally send the data to your API\n      console.log(\"Two-factor authentication toggled:\", !twoFactorEnabled)\n\n      // Simulate API call\n      await new Promise((resolve) =\u003e setTimeout(resolve, 1000))\n\n      setTwoFactorEnabled(!twoFactorEnabled)\n    } catch (error) {\n      console.error(\"Error toggling two-factor authentication:\", error)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    \u003cCard\u003e\n      \u003cCardHeader\u003e\n        \u003cCardTitle\u003eSecurity Settings\u003c/CardTitle\u003e\n        \u003cCardDescription\u003eManage your password and account security\u003c/CardDescription\u003e\n      \u003c/CardHeader\u003e\n      \u003cCardContent className=\"space-y-6\"\u003e\n        \u003cForm {...form}\u003e\n          \u003cform onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\"\u003e\n            \u003cFormField\n              control={form.control}\n              name=\"currentPassword\"\n              render={({ field }) =\u003e (\n                \u003cFormItem\u003e\n                  \u003cFormLabel\u003eCurrent Password\u003c/FormLabel\u003e\n                  \u003cFormControl\u003e\n                    \u003cInput type=\"password\" {...field} /\u003e\n                  \u003c/FormControl\u003e\n                  \u003cFormMessage /\u003e\n                \u003c/FormItem\u003e\n              )}\n            /\u003e\n            \u003cFormField\n              control={form.control}\n              name=\"newPassword\"\n              render={({ field }) =\u003e (\n                \u003cFormItem\u003e\n                  \u003cFormLabel\u003eNew Password\u003c/FormLabel\u003e\n                  \u003cFormControl\u003e\n                    \u003cInput type=\"password\" {...field} /\u003e\n                  \u003c/FormControl\u003e\n                  \u003cFormDescription\u003e\n                    Password must be at least 8 characters long and include a mix of letters, numbers, and symbols.\n                  \u003c/FormDescription\u003e\n                  \u003cFormMessage /\u003e\n                \u003c/FormItem\u003e\n              )}\n            /\u003e\n            \u003cFormField\n              control={form.control}\n              name=\"confirmPassword\"\n              render={({ field }) =\u003e (\n                \u003cFormItem\u003e\n                  \u003cFormLabel\u003eConfirm New Password\u003c/FormLabel\u003e\n                  \u003cFormControl\u003e\n                    \u003cInput type=\"password\" {...field} /\u003e\n                  \u003c/FormControl\u003e\n                  \u003cFormMessage /\u003e\n                \u003c/FormItem\u003e\n              )}\n            /\u003e\n            \u003cButton type=\"submit\" disabled={isLoading}\u003e\n              {isLoading ? \"Updating...\" : \"Update Password\"}\n            \u003c/Button\u003e\n          \u003c/form\u003e\n        \u003c/Form\u003e\n\n        \u003cdiv className=\"space-y-4\"\u003e\n          \u003ch3 className=\"text-sm font-medium\"\u003eTwo-Factor Authentication\u003c/h3\u003e\n          \u003cdiv className=\"flex items-center justify-between\"\u003e\n            \u003cdiv className=\"space-y-0.5\"\u003e\n              \u003cLabel htmlFor=\"twoFactorAuth\"\u003eEnable Two-Factor Authentication\u003c/Label\u003e\n              \u003cp className=\"text-xs text-muted-foreground\"\u003eAdd an extra layer of security to your account\u003c/p\u003e\n            \u003c/div\u003e\n            \u003cSwitch\n              id=\"twoFactorAuth\"\n              checked={twoFactorEnabled}\n              onCheckedChange={handleToggleTwoFactor}\n              disabled={isLoading}\n            /\u003e\n          \u003c/div\u003e\n          {twoFactorEnabled \u0026\u0026 (\n            \u003cdiv className=\"rounded-md bg-muted p-4\"\u003e\n              \u003cp className=\"text-sm\"\u003e\n                Two-factor authentication is enabled. You will receive a verification code via email when signing in.\n              \u003c/p\u003e\n            \u003c/div\u003e\n          )}\n        \u003c/div\u003e\n\n        \u003cdiv className=\"space-y-4\"\u003e\n          \u003ch3 className=\"text-sm font-medium\"\u003eSession Management\u003c/h3\u003e\n          \u003cdiv className=\"rounded-md border p-4\"\u003e\n            \u003cdiv className=\"flex items-center justify-between\"\u003e\n              \u003cdiv\u003e\n                \u003cp className=\"text-sm font-medium\"\u003eActive Sessions\u003c/p\u003e\n                \u003cp className=\"text-xs text-muted-foreground\"\u003eYou are currently logged in on 2 devices\u003c/p\u003e\n              \u003c/div\u003e\n              \u003cButton variant=\"outline\" size=\"sm\"\u003e\n                Manage Sessions\n              \u003c/Button\u003e\n            \u003c/div\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/CardContent\u003e\n      \u003cCardFooter className=\"flex justify-between\"\u003e\n        \u003cButton variant=\"outline\" className=\"text-red-500\"\u003e\n          Delete Account\n        \u003c/Button\u003e\n        \u003cButton variant=\"outline\"\u003eDownload Personal Data\u003c/Button\u003e\n      \u003c/CardFooter\u003e\n    \u003c/Card\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/users/user-management.tsx\" isMerged=\"true\"\n\"use client\"\n\nimport { useState } from \"react\"\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\"\nimport { Input } from \"@/components/ui/input\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\"\nimport { MoreHorizontalIcon, SearchIcon } from \"lucide-react\"\n\n// Mock users data\nconst initialUsers = [\n  {\n    id: 1,\n    name: \"Emma Wilson\",\n    email: \"emma@example.com\",\n    role: \"admin\",\n    status: \"active\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    lastActive: \"2023-11-28T10:30:00Z\",\n  },\n  {\n    id: 2,\n    name: \"Jackson Lee\",\n    email: \"jackson@example.com\",\n    role: \"editor\",\n    status: \"active\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    lastActive: \"2023-11-27T14:45:00Z\",\n  },\n  {\n    id: 3,\n    name: \"Sophia Chen\",\n    email: \"sophia@example.com\",\n    role: \"editor\",\n    status: \"active\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    lastActive: \"2023-11-28T09:15:00Z\",\n  },\n  {\n    id: 4,\n    name: \"Liam Johnson\",\n    email: \"liam@example.com\",\n    role: \"viewer\",\n    status: \"active\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    lastActive: \"2023-11-26T11:20:00Z\",\n  },\n  {\n    id: 5,\n    name: \"Olivia Martinez\",\n    email: \"olivia@example.com\",\n    role: \"editor\",\n    status: \"inactive\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    lastActive: \"2023-11-20T16:30:00Z\",\n  },\n  {\n    id: 6,\n    name: \"Noah Williams\",\n    email: \"noah@example.com\",\n    role: \"viewer\",\n    status: \"pending\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    lastActive: null,\n  },\n]\n\nexport function UserManagement() {\n  const [users, setUsers] = useState(initialUsers)\n  const [searchQuery, setSearchQuery] = useState(\"\")\n  const [roleFilter, setRoleFilter] = useState(\"all\")\n  const [statusFilter, setStatusFilter] = useState(\"all\")\n\n  const filteredUsers = users.filter((user) =\u003e {\n    const matchesSearch =\n      user.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n      user.email.toLowerCase().includes(searchQuery.toLowerCase())\n\n    const matchesRole = roleFilter === \"all\" || user.role === roleFilter\n    const matchesStatus = statusFilter === \"all\" || user.status === statusFilter\n\n    return matchesSearch \u0026\u0026 matchesRole \u0026\u0026 matchesStatus\n  })\n\n  const handleRoleChange = (userId, newRole) =\u003e {\n    setUsers(users.map((user) =\u003e (user.id === userId ? { ...user, role: newRole } : user)))\n  }\n\n  const handleStatusChange = (userId, newStatus) =\u003e {\n    setUsers(users.map((user) =\u003e (user.id === userId ? { ...user, status: newStatus } : user)))\n  }\n\n  const getRoleBadgeVariant = (role) =\u003e {\n    switch (role) {\n      case \"admin\":\n        return \"default\"\n      case \"editor\":\n        return \"secondary\"\n      case \"viewer\":\n        return \"outline\"\n      default:\n        return \"outline\"\n    }\n  }\n\n  const getStatusBadgeVariant = (status) =\u003e {\n    switch (status) {\n      case \"active\":\n        return \"success\"\n      case \"inactive\":\n        return \"secondary\"\n      case \"pending\":\n        return \"warning\"\n      default:\n        return \"outline\"\n    }\n  }\n\n  const formatLastActive = (lastActive) =\u003e {\n    if (!lastActive) return \"Never\"\n\n    const date = new Date(lastActive)\n    return date.toLocaleDateString() + \" \" + date.toLocaleTimeString()\n  }\n\n  return (\n    \u003cCard\u003e\n      \u003cCardHeader\u003e\n        \u003cCardTitle\u003eUser Management\u003c/CardTitle\u003e\n        \u003cCardDescription\u003eManage users and their permissions in your organization\u003c/CardDescription\u003e\n      \u003c/CardHeader\u003e\n      \u003cCardContent\u003e\n        \u003cdiv className=\"mb-4 flex flex-col gap-4 sm:flex-row sm:items-center sm:justify-between\"\u003e\n          \u003cdiv className=\"flex items-center gap-2\"\u003e\n            \u003cdiv className=\"relative\"\u003e\n              \u003cSearchIcon className=\"absolute left-2.5 top-2.5 h-4 w-4 text-muted-foreground\" /\u003e\n              \u003cInput\n                type=\"search\"\n                placeholder=\"Search users...\"\n                className=\"pl-8\"\n                value={searchQuery}\n                onChange={(e) =\u003e setSearchQuery(e.target.value)}\n              /\u003e\n            \u003c/div\u003e\n          \u003c/div\u003e\n          \u003cdiv className=\"flex flex-col gap-2 sm:flex-row\"\u003e\n            \u003cSelect value={roleFilter} onValueChange={setRoleFilter}\u003e\n              \u003cSelectTrigger className=\"w-[180px]\"\u003e\n                \u003cSelectValue placeholder=\"Filter by role\" /\u003e\n              \u003c/SelectTrigger\u003e\n              \u003cSelectContent\u003e\n                \u003cSelectItem value=\"all\"\u003eAll Roles\u003c/SelectItem\u003e\n                \u003cSelectItem value=\"admin\"\u003eAdmin\u003c/SelectItem\u003e\n                \u003cSelectItem value=\"editor\"\u003eEditor\u003c/SelectItem\u003e\n                \u003cSelectItem value=\"viewer\"\u003eViewer\u003c/SelectItem\u003e\n              \u003c/SelectContent\u003e\n            \u003c/Select\u003e\n            \u003cSelect value={statusFilter} onValueChange={setStatusFilter}\u003e\n              \u003cSelectTrigger className=\"w-[180px]\"\u003e\n                \u003cSelectValue placeholder=\"Filter by status\" /\u003e\n              \u003c/SelectTrigger\u003e\n              \u003cSelectContent\u003e\n                \u003cSelectItem value=\"all\"\u003eAll Statuses\u003c/SelectItem\u003e\n                \u003cSelectItem value=\"active\"\u003eActive\u003c/SelectItem\u003e\n                \u003cSelectItem value=\"inactive\"\u003eInactive\u003c/SelectItem\u003e\n                \u003cSelectItem value=\"pending\"\u003ePending\u003c/SelectItem\u003e\n              \u003c/SelectContent\u003e\n            \u003c/Select\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n        \u003cdiv className=\"rounded-md border\"\u003e\n          \u003cTable\u003e\n            \u003cTableHeader\u003e\n              \u003cTableRow\u003e\n                \u003cTableHead\u003eUser\u003c/TableHead\u003e\n                \u003cTableHead\u003eRole\u003c/TableHead\u003e\n                \u003cTableHead\u003eStatus\u003c/TableHead\u003e\n                \u003cTableHead\u003eLast Active\u003c/TableHead\u003e\n                \u003cTableHead className=\"text-right\"\u003eActions\u003c/TableHead\u003e\n              \u003c/TableRow\u003e\n            \u003c/TableHeader\u003e\n            \u003cTableBody\u003e\n              {filteredUsers.length === 0 ? (\n                \u003cTableRow\u003e\n                  \u003cTableCell colSpan={5} className=\"text-center\"\u003e\n                    No users found\n                  \u003c/TableCell\u003e\n                \u003c/TableRow\u003e\n              ) : (\n                filteredUsers.map((user) =\u003e (\n                  \u003cTableRow key={user.id}\u003e\n                    \u003cTableCell\u003e\n                      \u003cdiv className=\"flex items-center gap-3\"\u003e\n                        \u003cAvatar\u003e\n                          \u003cAvatarImage src={user.avatar} alt={user.name} /\u003e\n                          \u003cAvatarFallback\u003e\n                            {user.name\n                              .split(\" \")\n                              .map((n) =\u003e n[0])\n                              .join(\"\")}\n                          \u003c/AvatarFallback\u003e\n                        \u003c/Avatar\u003e\n                        \u003cdiv\u003e\n                          \u003cp className=\"font-medium\"\u003e{user.name}\u003c/p\u003e\n                          \u003cp className=\"text-sm text-muted-foreground\"\u003e{user.email}\u003c/p\u003e\n                        \u003c/div\u003e\n                      \u003c/div\u003e\n                    \u003c/TableCell\u003e\n                    \u003cTableCell\u003e\n                      \u003cBadge variant={getRoleBadgeVariant(user.role)}\u003e\n                        {user.role.charAt(0).toUpperCase() + user.role.slice(1)}\n                      \u003c/Badge\u003e\n                    \u003c/TableCell\u003e\n                    \u003cTableCell\u003e\n                      \u003cBadge variant={getStatusBadgeVariant(user.status)}\u003e\n                        {user.status.charAt(0).toUpperCase() + user.status.slice(1)}\n                      \u003c/Badge\u003e\n                    \u003c/TableCell\u003e\n                    \u003cTableCell\u003e{formatLastActive(user.lastActive)}\u003c/TableCell\u003e\n                    \u003cTableCell className=\"text-right\"\u003e\n                      \u003cDropdownMenu\u003e\n                        \u003cDropdownMenuTrigger asChild\u003e\n                          \u003cButton variant=\"ghost\" size=\"sm\"\u003e\n                            \u003cMoreHorizontalIcon className=\"h-4 w-4\" /\u003e\n                            \u003cspan className=\"sr-only\"\u003eOpen menu\u003c/span\u003e\n                          \u003c/Button\u003e\n                        \u003c/DropdownMenuTrigger\u003e\n                        \u003cDropdownMenuContent align=\"end\"\u003e\n                          \u003cDropdownMenuLabel\u003eActions\u003c/DropdownMenuLabel\u003e\n                          \u003cDropdownMenuItem\u003eView Profile\u003c/DropdownMenuItem\u003e\n                          \u003cDropdownMenuSeparator /\u003e\n                          \u003cDropdownMenuLabel\u003eChange Role\u003c/DropdownMenuLabel\u003e\n                          \u003cDropdownMenuItem onClick={() =\u003e handleRoleChange(user.id, \"admin\")}\u003e\n                            Make Admin\n                          \u003c/DropdownMenuItem\u003e\n                          \u003cDropdownMenuItem onClick={() =\u003e handleRoleChange(user.id, \"editor\")}\u003e\n                            Make Editor\n                          \u003c/DropdownMenuItem\u003e\n                          \u003cDropdownMenuItem onClick={() =\u003e handleRoleChange(user.id, \"viewer\")}\u003e\n                            Make Viewer\n                          \u003c/DropdownMenuItem\u003e\n                          \u003cDropdownMenuSeparator /\u003e\n                          \u003cDropdownMenuLabel\u003eChange Status\u003c/DropdownMenuLabel\u003e\n                          \u003cDropdownMenuItem onClick={() =\u003e handleStatusChange(user.id, \"active\")}\u003e\n                            Set Active\n                          \u003c/DropdownMenuItem\u003e\n                          \u003cDropdownMenuItem onClick={() =\u003e handleStatusChange(user.id, \"inactive\")}\u003e\n                            Set Inactive\n                          \u003c/DropdownMenuItem\u003e\n                          \u003cDropdownMenuSeparator /\u003e\n                          \u003cDropdownMenuItem className=\"text-red-600\"\u003eDelete User\u003c/DropdownMenuItem\u003e\n                        \u003c/DropdownMenuContent\u003e\n                      \u003c/DropdownMenu\u003e\n                    \u003c/TableCell\u003e\n                  \u003c/TableRow\u003e\n                ))\n              )}\n            \u003c/TableBody\u003e\n          \u003c/Table\u003e\n        \u003c/div\u003e\n      \u003c/CardContent\u003e\n    \u003c/Card\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"lib/auth.ts\" isMerged=\"true\"\n// This is a mock implementation for demonstration purposes\n// In a real application, you would use a proper authentication library like NextAuth.js\n\nimport { jwtVerify, SignJWT } from \"jose\"\n\n// Mock user data\nconst users = [\n  {\n    id: 1,\n    name: \"Admin User\",\n    email: \"admin@example.com\",\n    password: \"admin123\", // In a real app, this would be hashed\n    role: \"admin\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    bio: \"Task management system administrator\",\n    jobTitle: \"Project Manager\",\n    company: \"Acme Inc.\",\n  },\n  {\n    id: 2,\n    name: \"Editor User\",\n    email: \"editor@example.com\",\n    password: \"editor123\", // In a real app, this would be hashed\n    role: \"editor\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    bio: \"Frontend developer working on the task management system\",\n    jobTitle: \"Senior Developer\",\n    company: \"Acme Inc.\",\n  },\n  {\n    id: 3,\n    name: \"Viewer User\",\n    email: \"viewer@example.com\",\n    password: \"viewer123\", // In a real app, this would be hashed\n    role: \"viewer\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    bio: \"Team member using the task management system\",\n    jobTitle: \"Content Writer\",\n    company: \"Acme Inc.\",\n  },\n]\n\n// Secret key for JWT\nconst JWT_SECRET = new TextEncoder().encode(process.env.JWT_SECRET || \"your-secret-key\")\n\n// Login user\nexport async function loginUser(email: string, password: string) {\n  // Find user by email\n  const user = users.find((u) =\u003e u.email === email)\n\n  // Check if user exists and password matches\n  if (!user || user.password !== password) {\n    throw new Error(\"Invalid credentials\")\n  }\n\n  // Create JWT token\n  const token = await new SignJWT({ userId: user.id, role: user.role })\n    .setProtectedHeader({ alg: \"HS256\" })\n    .setIssuedAt()\n    .setExpirationTime(\"24h\")\n    .sign(JWT_SECRET)\n\n  // Store token in localStorage (in a real app, use cookies for better security)\n  if (typeof window !== \"undefined\") {\n    localStorage.setItem(\"auth-token\", token)\n  }\n\n  return { user: { id: user.id, name: user.name, email: user.email, role: user.role } }\n}\n\n// Register user\nexport async function registerUser(name: string, email: string, password: string) {\n  // Check if user already exists\n  if (users.find((u) =\u003e u.email === email)) {\n    throw new Error(\"User already exists\")\n  }\n\n  // Create new user\n  const newUser = {\n    id: users.length + 1,\n    name,\n    email,\n    password, // In a real app, this would be hashed\n    role: \"viewer\", // Default role for new users\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    bio: \"\",\n    jobTitle: \"\",\n    company: \"\",\n  }\n\n  // Add user to the mock database\n  users.push(newUser)\n\n  // Create JWT token\n  const token = await new SignJWT({ userId: newUser.id, role: newUser.role })\n    .setProtectedHeader({ alg: \"HS256\" })\n    .setIssuedAt()\n    .setExpirationTime(\"24h\")\n    .sign(JWT_SECRET)\n\n  // Store token in localStorage (in a real app, use cookies for better security)\n  if (typeof window !== \"undefined\") {\n    localStorage.setItem(\"auth-token\", token)\n  }\n\n  return { user: { id: newUser.id, name: newUser.name, email: newUser.email, role: newUser.role } }\n}\n\n// Get user session\nexport async function getUserSession() {\n  // In a server component, we would verify the session cookie\n  // For this demo, we'll simulate a logged-in user\n\n  // In a client component, we would get the token from localStorage\n  let token\n  if (typeof window !== \"undefined\") {\n    token = localStorage.getItem(\"auth-token\")\n  }\n\n  if (!token) {\n    // For demo purposes, return a mock user\n    return users[0]\n  }\n\n  try {\n    // Verify token\n    const { payload } = await jwtVerify(token, JWT_SECRET)\n    const userId = payload.userId as number\n\n    // Find user\n    const user = users.find((u) =\u003e u.id === userId)\n    if (!user) {\n      return null\n    }\n\n    return user\n  } catch (error) {\n    console.error(\"Error verifying token:\", error)\n    return null\n  }\n}\n\n// Logout user\nexport function logoutUser() {\n  if (typeof window !== \"undefined\") {\n    localStorage.removeItem(\"auth-token\")\n  }\n}\n\n[V0_FILE]typescriptreact:file=\"lib/utils.ts\" isMerged=\"true\"\nimport { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n\n// Format bytes to human-readable format\nexport function formatBytes(bytes: number, decimals = 2) {\n  if (bytes === 0) return \"0 Bytes\"\n\n  const k = 1024\n  const dm = decimals \u003c 0 ? 0 : decimals\n  const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"]\n\n  const i = Math.floor(Math.log(bytes) / Math.log(k))\n\n  return Number.parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + \" \" + sizes[i]\n}\n\n[V0_FILE]typescriptreact:file=\"tailwind.config.js\" isMerged=\"true\"\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  darkMode: [\"class\"],\n  content: [\n    \"./pages/**/*.{ts,tsx}\",\n    \"./components/**/*.{ts,tsx}\",\n    \"./app/**/*.{ts,tsx}\",\n    \"./src/**/*.{ts,tsx}\",\n    \"*.{js,ts,jsx,tsx,mdx}\",\n  ],\n  theme: {\n    container: {\n      center: true,\n      padding: \"2rem\",\n      screens: {\n        \"2xl\": \"1400px\",\n      },\n    },\n    extend: {\n      colors: {\n        border: \"hsl(var(--border))\",\n        input: \"hsl(var(--input))\",\n        ring: \"hsl(var(--ring))\",\n        background: \"hsl(var(--background))\",\n        foreground: \"hsl(var(--foreground))\",\n        primary: {\n          DEFAULT: \"hsl(var(--primary))\",\n          foreground: \"hsl(var(--primary-foreground))\",\n        },\n        secondary: {\n          DEFAULT: \"hsl(var(--secondary))\",\n          foreground: \"hsl(var(--secondary-foreground))\",\n        },\n        destructive: {\n          DEFAULT: \"hsl(var(--destructive))\",\n          foreground: \"hsl(var(--destructive-foreground))\",\n        },\n        muted: {\n          DEFAULT: \"hsl(var(--muted))\",\n          foreground: \"hsl(var(--muted-foreground))\",\n        },\n        accent: {\n          DEFAULT: \"hsl(var(--accent))\",\n          foreground: \"hsl(var(--accent-foreground))\",\n        },\n        popover: {\n          DEFAULT: \"hsl(var(--popover))\",\n          foreground: \"hsl(var(--popover-foreground))\",\n        },\n        card: {\n          DEFAULT: \"hsl(var(--card))\",\n          foreground: \"hsl(var(--card-foreground))\",\n        },\n        success: {\n          DEFAULT: \"#10b981\",\n          foreground: \"#ffffff\",\n        },\n        warning: {\n          DEFAULT: \"#f59e0b\",\n          foreground: \"#ffffff\",\n        },\n      },\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: { height: 0 },\n          to: { height: \"var(--radix-accordion-content-height)\" },\n        },\n        \"accordion-up\": {\n          from: { height: \"var(--radix-accordion-content-height)\" },\n          to: { height: 0 },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\")],\n}\n\n[V0_FILE]typescriptreact:file=\"components/ui/chart.tsx\" isQuickEdit=\"true\" isMerged=\"true\"\nexport {\n  Area,\n  AreaChart,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n  Bar,\n  BarChart,\n  CartesianGrid,\n  Legend,\n  Cell,\n  Pie,\n  PieChart,\n} from \"recharts\"\n\n[V0_FILE]javascript:file=\"server.js\"\nimport express from \"express\"\nimport cors from \"cors\"\nimport dotenv from \"dotenv\"\nimport mongoose from \"mongoose\"\nimport { createServer } from \"http\"\nimport { Server } from \"socket.io\"\nimport cookieParser from \"cookie-parser\"\nimport path from \"path\"\nimport { fileURLToPath } from \"url\"\n\n// Import routes\nimport authRoutes from \"./routes/auth.js\"\nimport userRoutes from \"./routes/users.js\"\nimport taskRoutes from \"./routes/tasks.js\"\nimport commentRoutes from \"./routes/comments.js\"\nimport reportRoutes from \"./routes/reports.js\"\nimport notificationRoutes from \"./routes/notifications.js\"\n\n// Import socket handler\nimport setupSocketHandlers from \"./socket/socketHandlers.js\"\n\n// Import middleware\nimport { errorHandler } from \"./middleware/errorHandler.js\"\n\n// Configure environment variables\ndotenv.config()\n\n// Create Express app\nconst app = express()\nconst PORT = process.env.PORT || 5000\n\n// Create HTTP server\nconst httpServer = createServer(app)\n\n// Setup Socket.io\nconst io = new Server(httpServer, {\n  cors: {\n    origin: process.env.FRONTEND_URL || \"http://localhost:3000\",\n    methods: [\"GET\", \"POST\"],\n    credentials: true,\n  },\n})\n\n// Connect to MongoDB\nmongoose\n  .connect(process.env.MONGODB_URI)\n  .then(() =\u003e console.log(\"Connected to MongoDB\"))\n  .catch((err) =\u003e {\n    console.error(\"MongoDB connection error:\", err)\n    process.exit(1)\n  })\n\n// Middleware\napp.use(\n  cors({\n    origin: process.env.FRONTEND_URL || \"http://localhost:3000\",\n    credentials: true,\n  }),\n)\napp.use(express.json())\napp.use(express.urlencoded({ extended: true }))\napp.use(cookieParser())\n\n// Set up socket handlers\nsetupSocketHandlers(io)\n\n// Make io accessible to route handlers\napp.use((req, res, next) =\u003e {\n  req.io = io\n  next()\n})\n\n// API routes\napp.use(\"/api/auth\", authRoutes)\napp.use(\"/api/users\", userRoutes)\napp.use(\"/api/tasks\", taskRoutes)\napp.use(\"/api/comments\", commentRoutes)\napp.use(\"/api/reports\", reportRoutes)\napp.use(\"/api/notifications\", notificationRoutes)\n\n// Serve uploaded files\nconst __dirname = path.dirname(fileURLToPath(import.meta.url))\napp.use(\"/uploads\", express.static(path.join(__dirname, \"uploads\")))\n\n// Error handling middleware\napp.use(errorHandler)\n\n// Start server\nhttpServer.listen(PORT, () =\u003e {\n  console.log(`Server running on port ${PORT}`)\n})\n\nexport default app\n\n[V0_FILE]javascript:file=\"models/User.js\"\nimport mongoose from \"mongoose\"\nimport bcrypt from \"bcrypt\"\n\nconst userSchema = new mongoose.Schema(\n  {\n    name: {\n      type: String,\n      required: [true, \"Name is required\"],\n      trim: true,\n    },\n    email: {\n      type: String,\n      required: [true, \"Email is required\"],\n      unique: true,\n      lowercase: true,\n      trim: true,\n      match: [/^\\S+@\\S+\\.\\S+$/, \"Please use a valid email address\"],\n    },\n    password: {\n      type: String,\n      required: [true, \"Password is required\"],\n      minlength: [8, \"Password must be at least 8 characters long\"],\n    },\n    role: {\n      type: String,\n      enum: [\"admin\", \"editor\", \"viewer\"],\n      default: \"viewer\",\n    },\n    avatar: {\n      type: String,\n      default: \"\",\n    },\n    bio: {\n      type: String,\n      default: \"\",\n    },\n    jobTitle: {\n      type: String,\n      default: \"\",\n    },\n    company: {\n      type: String,\n      default: \"\",\n    },\n    status: {\n      type: String,\n      enum: [\"active\", \"inactive\", \"pending\"],\n      default: \"active\",\n    },\n    notificationPreferences: {\n      emailNotifications: {\n        type: Boolean,\n        default: true,\n      },\n      pushNotifications: {\n        type: Boolean,\n        default: true,\n      },\n      taskAssigned: {\n        type: Boolean,\n        default: true,\n      },\n      taskUpdated: {\n        type: Boolean,\n        default: true,\n      },\n      taskCompleted: {\n        type: Boolean,\n        default: true,\n      },\n      commentAdded: {\n        type: Boolean,\n        default: true,\n      },\n      deadlineReminder: {\n        type: Boolean,\n        default: true,\n      },\n      weeklyDigest: {\n        type: Boolean,\n        default: false,\n      },\n    },\n    twoFactorEnabled: {\n      type: Boolean,\n      default: false,\n    },\n    resetPasswordToken: String,\n    resetPasswordExpires: Date,\n    lastActive: {\n      type: Date,\n      default: Date.now,\n    },\n    createdAt: {\n      type: Date,\n      default: Date.now,\n    },\n    updatedAt: {\n      type: Date,\n      default: Date.now,\n    },\n  },\n  {\n    timestamps: true,\n  },\n)\n\n// Pre-save hook to hash password\nuserSchema.pre(\"save\", async function (next) {\n  // Only hash the password if it's modified or new\n  if (!this.isModified(\"password\")) return next()\n\n  try {\n    // Generate salt\n    const salt = await bcrypt.genSalt(10)\n    // Hash password\n    this.password = await bcrypt.hash(this.password, salt)\n    next()\n  } catch (error) {\n    next(error)\n  }\n})\n\n// Method to compare passwords\nuserSchema.methods.comparePassword = async function (candidatePassword) {\n  return await bcrypt.compare(candidatePassword, this.password)\n}\n\n// Method to return user data without sensitive information\nuserSchema.methods.toJSON = function () {\n  const user = this.toObject()\n  delete user.password\n  delete user.resetPasswordToken\n  delete user.resetPasswordExpires\n  return user\n}\n\nconst User = mongoose.model(\"User\", userSchema)\n\nexport default User\n\n[V0_FILE]javascript:file=\"models/Task.js\"\nimport mongoose from \"mongoose\"\n\nconst subtaskSchema = new mongoose.Schema(\n  {\n    title: {\n      type: String,\n      required: true,\n      trim: true,\n    },\n    completed: {\n      type: Boolean,\n      default: false,\n    },\n    createdAt: {\n      type: Date,\n      default: Date.now,\n    },\n    updatedAt: {\n      type: Date,\n      default: Date.now,\n    },\n  },\n  {\n    timestamps: true,\n  },\n)\n\nconst taskSchema = new mongoose.Schema(\n  {\n    title: {\n      type: String,\n      required: [true, \"Task title is required\"],\n      trim: true,\n    },\n    description: {\n      type: String,\n      trim: true,\n    },\n    status: {\n      type: String,\n      enum: [\"to-do\", \"in-progress\", \"in-review\", \"completed\"],\n      default: \"to-do\",\n    },\n    priority: {\n      type: String,\n      enum: [\"high\", \"medium\", \"low\"],\n      default: \"medium\",\n    },\n    dueDate: {\n      type: Date,\n    },\n    assignee: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"User\",\n    },\n    creator: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"User\",\n      required: true,\n    },\n    tags: [\n      {\n        type: String,\n        trim: true,\n      },\n    ],\n    subtasks: [subtaskSchema],\n    attachments: [\n      {\n        name: String,\n        path: String,\n        type: String,\n        size: Number,\n        uploadedAt: {\n          type: Date,\n          default: Date.now,\n        },\n      },\n    ],\n    progress: {\n      type: Number,\n      default: 0,\n      min: 0,\n      max: 100,\n    },\n    watchers: [\n      {\n        type: mongoose.Schema.Types.ObjectId,\n        ref: \"User\",\n      },\n    ],\n    createdAt: {\n      type: Date,\n      default: Date.now,\n    },\n    updatedAt: {\n      type: Date,\n      default: Date.now,\n    },\n  },\n  {\n    timestamps: true,\n  },\n)\n\n// Method to calculate progress based on subtasks\ntaskSchema.methods.calculateProgress = function () {\n  if (this.subtasks.length === 0) return 0\n\n  const completedCount = this.subtasks.filter((subtask) =\u003e subtask.completed).length\n  return Math.round((completedCount / this.subtasks.length) * 100)\n}\n\n// Pre-save hook to update progress\ntaskSchema.pre(\"save\", function (next) {\n  if (this.subtasks \u0026\u0026 this.subtasks.length \u003e 0) {\n    this.progress = this.calculateProgress()\n  }\n  next()\n})\n\n// Create indexes for better query performance\ntaskSchema.index({ status: 1 })\ntaskSchema.index({ priority: 1 })\ntaskSchema.index({ assignee: 1 })\ntaskSchema.index({ dueDate: 1 })\ntaskSchema.index({ creator: 1 })\ntaskSchema.index({ tags: 1 })\n\nconst Task = mongoose.model(\"Task\", taskSchema)\n\nexport default Task\n\n[V0_FILE]javascript:file=\"models/Comment.js\"\nimport mongoose from \"mongoose\"\n\nconst commentSchema = new mongoose.Schema(\n  {\n    task: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"Task\",\n      required: true,\n    },\n    user: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"User\",\n      required: true,\n    },\n    content: {\n      type: String,\n      required: [true, \"Comment content is required\"],\n      trim: true,\n    },\n    mentions: [\n      {\n        type: mongoose.Schema.Types.ObjectId,\n        ref: \"User\",\n      },\n    ],\n    attachments: [\n      {\n        name: String,\n        path: String,\n        type: String,\n        size: Number,\n        uploadedAt: {\n          type: Date,\n          default: Date.now,\n        },\n      },\n    ],\n    createdAt: {\n      type: Date,\n      default: Date.now,\n    },\n    updatedAt: {\n      type: Date,\n      default: Date.now,\n    },\n  },\n  {\n    timestamps: true,\n  },\n)\n\n// Create indexes for better query performance\ncommentSchema.index({ task: 1 })\ncommentSchema.index({ user: 1 })\ncommentSchema.index({ createdAt: -1 })\n\nconst Comment = mongoose.model(\"Comment\", commentSchema)\n\nexport default Comment\n\n[V0_FILE]javascript:file=\"models/Notification.js\"\nimport mongoose from \"mongoose\"\n\nconst notificationSchema = new mongoose.Schema(\n  {\n    recipient: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"User\",\n      required: true,\n    },\n    sender: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"User\",\n    },\n    type: {\n      type: String,\n      enum: [\n        \"task_assigned\",\n        \"task_updated\",\n        \"task_completed\",\n        \"comment_added\",\n        \"deadline_reminder\",\n        \"mention\",\n        \"system\",\n      ],\n      required: true,\n    },\n    title: {\n      type: String,\n      required: true,\n    },\n    message: {\n      type: String,\n      required: true,\n    },\n    read: {\n      type: Boolean,\n      default: false,\n    },\n    relatedTask: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"Task\",\n    },\n    relatedComment: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"Comment\",\n    },\n    createdAt: {\n      type: Date,\n      default: Date.now,\n    },\n  },\n  {\n    timestamps: true,\n  },\n)\n\n// Create indexes for better query performance\nnotificationSchema.index({ recipient: 1, read: 1 })\nnotificationSchema.index({ createdAt: -1 })\n\nconst Notification = mongoose.model(\"Notification\", notificationSchema)\n\nexport default Notification\n\n[V0_FILE]javascript:file=\"middleware/auth.js\"\nimport jwt from \"jsonwebtoken\"\nimport User from \"../models/User.js\"\nimport { createError } from \"../utils/error.js\"\n\n// Verify JWT token\nexport const verifyToken = async (req, res, next) =\u003e {\n  try {\n    // Get token from cookies or authorization header\n    const token =\n      req.cookies.token ||\n      (req.headers.authorization \u0026\u0026 req.headers.authorization.startsWith(\"Bearer\")\n        ? req.headers.authorization.split(\" \")[1]\n        : null)\n\n    if (!token) {\n      return next(createError(401, \"You are not authenticated\"))\n    }\n\n    // Verify token\n    const decoded = jwt.verify(token, process.env.JWT_SECRET)\n\n    // Find user\n    const user = await User.findById(decoded.id)\n    if (!user) {\n      return next(createError(404, \"User not found\"))\n    }\n\n    // Check if user is active\n    if (user.status !== \"active\") {\n      return next(createError(403, \"Your account is not active\"))\n    }\n\n    // Update last active timestamp\n    user.lastActive = new Date()\n    await user.save()\n\n    // Attach user to request\n    req.user = user\n    next()\n  } catch (err) {\n    if (err.name === \"JsonWebTokenError\") {\n      return next(createError(401, \"Invalid token\"))\n    }\n    if (err.name === \"TokenExpiredError\") {\n      return next(createError(401, \"Token expired\"))\n    }\n    next(err)\n  }\n}\n\n// Check if user is admin\nexport const verifyAdmin = (req, res, next) =\u003e {\n  if (req.user.role !== \"admin\") {\n    return next(createError(403, \"You are not authorized to perform this action\"))\n  }\n  next()\n}\n\n// Check if user is admin or editor\nexport const verifyAdminOrEditor = (req, res, next) =\u003e {\n  if (req.user.role !== \"admin\" \u0026\u0026 req.user.role !== \"editor\") {\n    return next(createError(403, \"You are not authorized to perform this action\"))\n  }\n  next()\n}\n\n// Check if user is the owner of the resource or an admin\nexport const verifyOwnerOrAdmin = (resourceModel) =\u003e {\n  return async (req, res, next) =\u003e {\n    try {\n      const resourceId = req.params.id\n      const resource = await resourceModel.findById(resourceId)\n\n      if (!resource) {\n        return next(createError(404, \"Resource not found\"))\n      }\n\n      // Check if user is admin or the owner\n      const isOwner = resource.creator \u0026\u0026 resource.creator.toString() === req.user._id.toString()\n      const isAssignee = resource.assignee \u0026\u0026 resource.assignee.toString() === req.user._id.toString()\n\n      if (req.user.role === \"admin\" || isOwner || isAssignee) {\n        req.resource = resource\n        return next()\n      }\n\n      return next(createError(403, \"You are not authorized to perform this action\"))\n    } catch (err) {\n      next(err)\n    }\n  }\n}\n\n[V0_FILE]javascript:file=\"middleware/errorHandler.js\"\n// Error handling middleware\nexport const errorHandler = (err, req, res, next) =\u003e {\n  const statusCode = err.statusCode || 500\n  const message = err.message || \"Internal Server Error\"\n\n  console.error(`[ERROR] ${statusCode} - ${message}`)\n  if (process.env.NODE_ENV === \"development\") {\n    console.error(err.stack)\n  }\n\n  res.status(statusCode).json({\n    success: false,\n    status: statusCode,\n    message,\n    stack: process.env.NODE_ENV === \"development\" ? err.stack : {},\n  })\n}\n\n[V0_FILE]javascript:file=\"middleware/upload.js\"\nimport multer from \"multer\"\nimport path from \"path\"\nimport fs from \"fs\"\nimport { fileURLToPath } from \"url\"\nimport { createError } from \"../utils/error.js\"\n\n// Get directory name\nconst __dirname = path.dirname(fileURLToPath(import.meta.url))\n\n// Create uploads directory if it doesn't exist\nconst uploadsDir = path.join(__dirname, \"../uploads\")\nif (!fs.existsSync(uploadsDir)) {\n  fs.mkdirSync(uploadsDir, { recursive: true })\n}\n\n// Configure storage\nconst storage = multer.diskStorage({\n  destination: (req, file, cb) =\u003e {\n    // Create subdirectory based on file type\n    let dir = \"general\"\n\n    if (file.mimetype.startsWith(\"image/\")) {\n      dir = \"images\"\n    } else if (file.mimetype.includes(\"pdf\") || file.mimetype.includes(\"document\")) {\n      dir = \"documents\"\n    }\n\n    const fullPath = path.join(uploadsDir, dir)\n\n    // Create directory if it doesn't exist\n    if (!fs.existsSync(fullPath)) {\n      fs.mkdirSync(fullPath, { recursive: true })\n    }\n\n    cb(null, path.join(\"uploads\", dir))\n  },\n  filename: (req, file, cb) =\u003e {\n    // Generate unique filename\n    const uniqueSuffix = Date.now() + \"-\" + Math.round(Math.random() * 1e9)\n    const ext = path.extname(file.originalname)\n    cb(null, file.fieldname + \"-\" + uniqueSuffix + ext)\n  },\n})\n\n// File filter\nconst fileFilter = (req, file, cb) =\u003e {\n  // Accept images, documents, and common file types\n  const allowedFileTypes = /jpeg|jpg|png|gif|pdf|doc|docx|xls|xlsx|ppt|pptx|txt|csv|zip|rar/\n  const extname = allowedFileTypes.test(path.extname(file.originalname).toLowerCase())\n  const mimetype = allowedFileTypes.test(file.mimetype)\n\n  if (extname \u0026\u0026 mimetype) {\n    return cb(null, true)\n  } else {\n    cb(createError(400, \"Only certain file types are allowed\"))\n  }\n}\n\n// Configure multer\nconst upload = multer({\n  storage,\n  fileFilter,\n  limits: {\n    fileSize: 10 * 1024 * 1024, // 10MB\n  },\n})\n\nexport default upload\n\n[V0_FILE]javascript:file=\"routes/auth.js\"\nimport express from \"express\"\nimport jwt from \"jsonwebtoken\"\nimport User from \"../models/User.js\"\nimport { verifyToken } from \"../middleware/auth.js\"\nimport { createError } from \"../utils/error.js\"\nimport { sendEmail } from \"../utils/email.js\"\nimport crypto from \"crypto\"\n\nconst router = express.Router()\n\n// Register a new user\nrouter.post(\"/register\", async (req, res, next) =\u003e {\n  try {\n    const { name, email, password } = req.body\n\n    // Check if user already exists\n    const existingUser = await User.findOne({ email })\n    if (existingUser) {\n      return next(createError(400, \"User with this email already exists\"))\n    }\n\n    // Create new user\n    const newUser = new User({\n      name,\n      email,\n      password,\n    })\n\n    // Save user to database\n    const savedUser = await newUser.save()\n\n    // Generate JWT token\n    const token = jwt.sign({ id: savedUser._id, role: savedUser.role }, process.env.JWT_SECRET, { expiresIn: \"7d\" })\n\n    // Set token as cookie\n    res.cookie(\"token\", token, {\n      httpOnly: true,\n      secure: process.env.NODE_ENV === \"production\",\n      maxAge: 7 * 24 * 60 * 60 * 1000, // 7 days\n    })\n\n    // Send welcome email\n    sendEmail({\n      to: savedUser.email,\n      subject: \"Welcome to Task Management App\",\n      text: `Hello ${savedUser.name},\\n\\nWelcome to our Task Management App! Your account has been created successfully.\\n\\nBest regards,\\nThe Task Management Team`,\n    })\n\n    res.status(201).json({\n      success: true,\n      message: \"User registered successfully\",\n      user: savedUser,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Login user\nrouter.post(\"/login\", async (req, res, next) =\u003e {\n  try {\n    const { email, password } = req.body\n\n    // Find user by email\n    const user = await User.findOne({ email })\n    if (!user) {\n      return next(createError(404, \"User not found\"))\n    }\n\n    // Check if user is active\n    if (user.status !== \"active\") {\n      return next(createError(403, \"Your account is not active\"))\n    }\n\n    // Check password\n    const isPasswordValid = await user.comparePassword(password)\n    if (!isPasswordValid) {\n      return next(createError(401, \"Invalid credentials\"))\n    }\n\n    // Generate JWT token\n    const token = jwt.sign({ id: user._id, role: user.role }, process.env.JWT_SECRET, { expiresIn: \"7d\" })\n\n    // Set token as cookie\n    res.cookie(\"token\", token, {\n      httpOnly: true,\n      secure: process.env.NODE_ENV === \"production\",\n      maxAge: 7 * 24 * 60 * 60 * 1000, // 7 days\n    })\n\n    // Update last active timestamp\n    user.lastActive = new Date()\n    await user.save()\n\n    res.status(200).json({\n      success: true,\n      message: \"Login successful\",\n      user,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Logout user\nrouter.post(\"/logout\", (req, res) =\u003e {\n  res.clearCookie(\"token\")\n  res.status(200).json({\n    success: true,\n    message: \"Logout successful\",\n  })\n})\n\n// Get current user\nrouter.get(\"/me\", verifyToken, (req, res) =\u003e {\n  res.status(200).json({\n    success: true,\n    user: req.user,\n  })\n})\n\n// Forgot password\nrouter.post(\"/forgot-password\", async (req, res, next) =\u003e {\n  try {\n    const { email } = req.body\n\n    // Find user by email\n    const user = await User.findOne({ email })\n    if (!user) {\n      return next(createError(404, \"User not found\"))\n    }\n\n    // Generate reset token\n    const resetToken = crypto.randomBytes(32).toString(\"hex\")\n\n    // Hash token and set to resetPasswordToken field\n    user.resetPasswordToken = crypto.createHash(\"sha256\").update(resetToken).digest(\"hex\")\n\n    // Set token expiry\n    user.resetPasswordExpires = Date.now() + 30 * 60 * 1000 // 30 minutes\n\n    // Save user\n    await user.save()\n\n    // Create reset URL\n    const resetUrl = `${process.env.FRONTEND_URL}/reset-password/${resetToken}`\n\n    // Send email\n    sendEmail({\n      to: user.email,\n      subject: \"Password Reset Request\",\n      text: `You are receiving this email because you (or someone else) has requested the reset of a password. Please click on the following link, or paste this into your browser to complete the process:\\n\\n${resetUrl}\\n\\nIf you did not request this, please ignore this email and your password will remain unchanged.\\n`,\n    })\n\n    res.status(200).json({\n      success: true,\n      message: \"Password reset email sent\",\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Reset password\nrouter.post(\"/reset-password/:token\", async (req, res, next) =\u003e {\n  try {\n    const { password } = req.body\n\n    // Get token from params\n    const resetToken = req.params.token\n\n    // Hash token\n    const hashedToken = crypto.createHash(\"sha256\").update(resetToken).digest(\"hex\")\n\n    // Find user by token and check if token is expired\n    const user = await User.findOne({\n      resetPasswordToken: hashedToken,\n      resetPasswordExpires: { $gt: Date.now() },\n    })\n\n    if (!user) {\n      return next(createError(400, \"Password reset token is invalid or has expired\"))\n    }\n\n    // Set new password\n    user.password = password\n    user.resetPasswordToken = undefined\n    user.resetPasswordExpires = undefined\n\n    // Save user\n    await user.save()\n\n    // Send confirmation email\n    sendEmail({\n      to: user.email,\n      subject: \"Password Reset Confirmation\",\n      text: `Hello ${user.name},\\n\\nThis is a confirmation that the password for your account ${user.email} has just been changed.\\n`,\n    })\n\n    res.status(200).json({\n      success: true,\n      message: \"Password reset successful\",\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// OAuth login with Google\nrouter.post(\"/google\", async (req, res, next) =\u003e {\n  try {\n    const { token, profile } = req.body\n\n    // Verify token with Google (in a real app)\n    // For demo purposes, we'll assume the token is valid\n\n    // Check if user exists\n    let user = await User.findOne({ email: profile.email })\n\n    if (!user) {\n      // Create new user\n      user = new User({\n        name: profile.name,\n        email: profile.email,\n        password: crypto.randomBytes(16).toString(\"hex\"), // Random password\n        avatar: profile.picture,\n      })\n\n      await user.save()\n    }\n\n    // Generate JWT token\n    const jwtToken = jwt.sign({ id: user._id, role: user.role }, process.env.JWT_SECRET, { expiresIn: \"7d\" })\n\n    // Set token as cookie\n    res.cookie(\"token\", jwtToken, {\n      httpOnly: true,\n      secure: process.env.NODE_ENV === \"production\",\n      maxAge: 7 * 24 * 60 * 60 * 1000, // 7 days\n    })\n\n    // Update last active timestamp\n    user.lastActive = new Date()\n    await user.save()\n\n    res.status(200).json({\n      success: true,\n      message: \"Login successful\",\n      user,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// OAuth login with GitHub\nrouter.post(\"/github\", async (req, res, next) =\u003e {\n  try {\n    const { token, profile } = req.body\n\n    // Verify token with GitHub (in a real app)\n    // For demo purposes, we'll assume the token is valid\n\n    // Check if user exists\n    let user = await User.findOne({ email: profile.email })\n\n    if (!user) {\n      // Create new user\n      user = new User({\n        name: profile.name,\n        email: profile.email,\n        password: crypto.randomBytes(16).toString(\"hex\"), // Random password\n        avatar: profile.avatar_url,\n      })\n\n      await user.save()\n    }\n\n    // Generate JWT token\n    const jwtToken = jwt.sign({ id: user._id, role: user.role }, process.env.JWT_SECRET, { expiresIn: \"7d\" })\n\n    // Set token as cookie\n    res.cookie(\"token\", jwtToken, {\n      httpOnly: true,\n      secure: process.env.NODE_ENV === \"production\",\n      maxAge: 7 * 24 * 60 * 60 * 1000, // 7 days\n    })\n\n    // Update last active timestamp\n    user.lastActive = new Date()\n    await user.save()\n\n    res.status(200).json({\n      success: true,\n      message: \"Login successful\",\n      user,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\nexport default router\n\n[V0_FILE]javascript:file=\"routes/users.js\"\nimport express from \"express\"\nimport User from \"../models/User.js\"\nimport Task from \"../models/Task.js\"\nimport { verifyToken, verifyAdmin } from \"../middleware/auth.js\"\nimport { createError } from \"../utils/error.js\"\nimport upload from \"../middleware/upload.js\"\n\nconst router = express.Router()\n\n// Get all users (admin only)\nrouter.get(\"/\", verifyToken, verifyAdmin, async (req, res, next) =\u003e {\n  try {\n    const { role, status, search, sort, page = 1, limit = 10 } = req.query\n\n    // Build query\n    const query = {}\n\n    // Filter by role\n    if (role \u0026\u0026 role !== \"all\") {\n      query.role = role\n    }\n\n    // Filter by status\n    if (status \u0026\u0026 status !== \"all\") {\n      query.status = status\n    }\n\n    // Search by name or email\n    if (search) {\n      query.$or = [{ name: { $regex: search, $options: \"i\" } }, { email: { $regex: search, $options: \"i\" } }]\n    }\n\n    // Count total documents\n    const total = await User.countDocuments(query)\n\n    // Build sort options\n    let sortOptions = { createdAt: -1 } // Default sort\n    if (sort) {\n      const [field, order] = sort.split(\":\")\n      sortOptions = { [field]: order === \"asc\" ? 1 : -1 }\n    }\n\n    // Fetch users with pagination\n    const users = await User.find(query)\n      .sort(sortOptions)\n      .skip((page - 1) * limit)\n      .limit(Number.parseInt(limit))\n\n    res.status(200).json({\n      success: true,\n      count: users.length,\n      total,\n      totalPages: Math.ceil(total / limit),\n      currentPage: Number.parseInt(page),\n      users,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Get user by ID\nrouter.get(\"/:id\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Check if user is admin or requesting their own profile\n    if (req.user.role !== \"admin\" \u0026\u0026 req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to access this resource\"))\n    }\n\n    const user = await User.findById(req.params.id)\n    if (!user) {\n      return next(createError(404, \"User not found\"))\n    }\n\n    res.status(200).json({\n      success: true,\n      user,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Update user\nrouter.put(\"/:id\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Check if user is admin or updating their own profile\n    if (req.user.role !== \"admin\" \u0026\u0026 req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to update this user\"))\n    }\n\n    const { name, email, bio, jobTitle, company, notificationPreferences } = req.body\n\n    // Find user\n    const user = await User.findById(req.params.id)\n    if (!user) {\n      return next(createError(404, \"User not found\"))\n    }\n\n    // Update fields\n    if (name) user.name = name\n    if (bio) user.bio = bio\n    if (jobTitle) user.jobTitle = jobTitle\n    if (company) user.company = company\n    if (notificationPreferences)\n      user.notificationPreferences = {\n        ...user.notificationPreferences,\n        ...notificationPreferences,\n      }\n\n    // Only admin can update email or role\n    if (req.user.role === \"admin\") {\n      if (email \u0026\u0026 email !== user.email) {\n        // Check if email is already in use\n        const existingUser = await User.findOne({ email })\n        if (existingUser) {\n          return next(createError(400, \"Email is already in use\"))\n        }\n        user.email = email\n      }\n\n      if (req.body.role) user.role = req.body.role\n      if (req.body.status) user.status = req.body.status\n    }\n\n    // Save user\n    const updatedUser = await user.save()\n\n    res.status(200).json({\n      success: true,\n      message: \"User updated successfully\",\n      user: updatedUser,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Update user avatar\nrouter.put(\"/:id/avatar\", verifyToken, upload.single(\"avatar\"), async (req, res, next) =\u003e {\n  try {\n    // Check if user is updating their own avatar\n    if (req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to update this user\"))\n    }\n\n    if (!req.file) {\n      return next(createError(400, \"No file uploaded\"))\n    }\n\n    // Find user\n    const user = await User.findById(req.params.id)\n    if (!user) {\n      return next(createError(404, \"User not found\"))\n    }\n\n    // Update avatar\n    user.avatar = `/${req.file.path}`\n\n    // Save user\n    const updatedUser = await user.save()\n\n    res.status(200).json({\n      success: true,\n      message: \"Avatar updated successfully\",\n      user: updatedUser,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Change password\nrouter.put(\"/:id/password\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Check if user is changing their own password\n    if (req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to change this user's password\"))\n    }\n\n    const { currentPassword, newPassword } = req.body\n\n    // Find user\n    const user = await User.findById(req.params.id)\n    if (!user) {\n      return next(createError(404, \"User not found\"))\n    }\n\n    // Check current password\n    const isPasswordValid = await user.comparePassword(currentPassword)\n    if (!isPasswordValid) {\n      return next(createError(401, \"Current password is incorrect\"))\n    }\n\n    // Update password\n    user.password = newPassword\n\n    // Save user\n    await user.save()\n\n    res.status(200).json({\n      success: true,\n      message: \"Password changed successfully\",\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Toggle two-factor authentication\nrouter.put(\"/:id/two-factor\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Check if user is updating their own settings\n    if (req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to update this user\"))\n    }\n\n    // Find user\n    const user = await User.findById(req.params.id)\n    if (!user) {\n      return next(createError(404, \"User not found\"))\n    }\n\n    // Toggle two-factor authentication\n    user.twoFactorEnabled = !user.twoFactorEnabled\n\n    // Save user\n    const updatedUser = await user.save()\n\n    res.status(200).json({\n      success: true,\n      message: `Two-factor authentication ${updatedUser.twoFactorEnabled ? \"enabled\" : \"disabled\"}`,\n      user: updatedUser,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Delete user (admin only)\nrouter.delete(\"/:id\", verifyToken, verifyAdmin, async (req, res, next) =\u003e {\n  try {\n    // Find user\n    const user = await User.findById(req.params.id)\n    if (!user) {\n      return next(createError(404, \"User not found\"))\n    }\n\n    // Check if user is trying to delete themselves\n    if (req.user._id.toString() === req.params.id) {\n      return next(createError(400, \"You cannot delete your own account\"))\n    }\n\n    // Delete user\n    await User.findByIdAndDelete(req.params.id)\n\n    // Update tasks assigned to this user\n    await Task.updateMany({ assignee: req.params.id }, { $unset: { assignee: 1 } })\n\n    res.status(200).json({\n      success: true,\n      message: \"User deleted successfully\",\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Get user tasks\nrouter.get(\"/:id/tasks\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Check if user is admin or requesting their own tasks\n    if (req.user.role !== \"admin\" \u0026\u0026 req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to access this resource\"))\n    }\n\n    const { status, priority, sort, page = 1, limit = 10 } = req.query\n\n    // Build query\n    const query = { assignee: req.params.id }\n\n    // Filter by status\n    if (status \u0026\u0026 status !== \"all\") {\n      query.status = status\n    }\n\n    // Filter by priority\n    if (priority \u0026\u0026 priority !== \"all\") {\n      query.priority = priority\n    }\n\n    // Count total documents\n    const total = await Task.countDocuments(query)\n\n    // Build sort options\n    let sortOptions = { createdAt: -1 } // Default sort\n    if (sort) {\n      const [field, order] = sort.split(\":\")\n      sortOptions = { [field]: order === \"asc\" ? 1 : -1 }\n    }\n\n    // Fetch tasks with pagination\n    const tasks = await Task.find(query)\n      .populate(\"assignee\", \"name email avatar\")\n      .populate(\"creator\", \"name email avatar\")\n      .sort(sortOptions)\n      .skip((page - 1) * limit)\n      .limit(Number.parseInt(limit))\n\n    res.status(200).json({\n      success: true,\n      count: tasks.length,\n      total,\n      totalPages: Math.ceil(total / limit),\n      currentPage: Number.parseInt(page),\n      tasks,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\nexport default router\n\n[V0_FILE]javascript:file=\"routes/tasks.js\"\nimport express from \"express\"\nimport Task from \"../models/Task.js\"\nimport User from \"../models/User.js\"\nimport Comment from \"../models/Comment.js\"\nimport Notification from \"../models/Notification.js\"\nimport { verifyToken, verifyAdminOrEditor, verifyOwnerOrAdmin } from \"../middleware/auth.js\"\nimport { createError } from \"../utils/error.js\"\nimport upload from \"../middleware/upload.js\"\nimport { sendEmail } from \"../utils/email.js\"\n\nconst router = express.Router()\n\n// Create a new task\nrouter.post(\"/\", verifyToken, verifyAdminOrEditor, async (req, res, next) =\u003e {\n  try {\n    const { title, description, status, priority, dueDate, assignee, tags, subtasks } = req.body\n\n    // Create new task\n    const newTask = new Task({\n      title,\n      description,\n      status: status || \"to-do\",\n      priority: priority || \"medium\",\n      dueDate,\n      assignee,\n      creator: req.user._id,\n      tags: tags || [],\n      subtasks: subtasks || [],\n    })\n\n    // Save task\n    const savedTask = await newTask.save()\n\n    // If task is assigned to someone, send notification\n    if (assignee) {\n      // Create notification\n      const notification = new Notification({\n        recipient: assignee,\n        sender: req.user._id,\n        type: \"task_assigned\",\n        title: \"New Task Assigned\",\n        message: `You have been assigned a new task: ${title}`,\n        relatedTask: savedTask._id,\n      })\n\n      await notification.save()\n\n      // Send real-time notification\n      if (req.io) {\n        req.io.to(assignee.toString()).emit(\"notification\", notification)\n      }\n\n      // Get assignee details\n      const assigneeUser = await User.findById(assignee)\n\n      // Send email notification if user has email notifications enabled\n      if (\n        assigneeUser \u0026\u0026\n        assigneeUser.notificationPreferences.emailNotifications \u0026\u0026\n        assigneeUser.notificationPreferences.taskAssigned\n      ) {\n        sendEmail({\n          to: assigneeUser.email,\n          subject: \"New Task Assigned\",\n          text: `Hello ${assigneeUser.name},\\n\\nYou have been assigned a new task: ${title}\\n\\nDue Date: ${dueDate ? new Date(dueDate).toLocaleDateString() : \"Not set\"}\\nPriority: ${priority || \"Medium\"}\\n\\nDescription:\\n${description || \"No description provided\"}\\n\\nBest regards,\\nThe Task Management Team`,\n        })\n      }\n    }\n\n    res.status(201).json({\n      success: true,\n      message: \"Task created successfully\",\n      task: savedTask,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Get all tasks\nrouter.get(\"/\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { status, priority, assignee, creator, search, tags, dueDate, sort, page = 1, limit = 10 } = req.query\n\n    // Build query\n    const query = {}\n\n    // Filter by status\n    if (status \u0026\u0026 status !== \"all\") {\n      query.status = status\n    }\n\n    // Filter by priority\n    if (priority \u0026\u0026 priority !== \"all\") {\n      query.priority = priority\n    }\n\n    // Filter by assignee\n    if (assignee) {\n      query.assignee = assignee\n    }\n\n    // Filter by creator\n    if (creator) {\n      query.creator = creator\n    }\n\n    // Filter by tags\n    if (tags) {\n      query.tags = { $in: tags.split(\",\") }\n    }\n\n    // Filter by due date\n    if (dueDate) {\n      const today = new Date()\n      today.setHours(0, 0, 0, 0)\n\n      if (dueDate === \"overdue\") {\n        query.dueDate = { $lt: today }\n        query.status = { $ne: \"completed\" }\n      } else if (dueDate === \"today\") {\n        const tomorrow = new Date(today)\n        tomorrow.setDate(tomorrow.getDate() + 1)\n        query.dueDate = { $gte: today, $lt: tomorrow }\n      } else if (dueDate === \"week\") {\n        const nextWeek = new Date(today)\n        nextWeek.setDate(nextWeek.getDate() + 7)\n        query.dueDate = { $gte: today, $lt: nextWeek }\n      }\n    }\n\n    // Search by title or description\n    if (search) {\n      query.$or = [{ title: { $regex: search, $options: \"i\" } }, { description: { $regex: search, $options: \"i\" } }]\n    }\n\n    // Viewers can only see tasks assigned to them or created by them\n    if (req.user.role === \"viewer\") {\n      query.$or = [{ assignee: req.user._id }, { creator: req.user._id }, { watchers: req.user._id }]\n    }\n\n    // Count total documents\n    const total = await Task.countDocuments(query)\n\n    // Build sort options\n    let sortOptions = { createdAt: -1 } // Default sort\n    if (sort) {\n      const [field, order] = sort.split(\":\")\n      sortOptions = { [field]: order === \"asc\" ? 1 : -1 }\n    }\n\n    // Fetch tasks with pagination\n    const tasks = await Task.find(query)\n      .populate(\"assignee\", \"name email avatar\")\n      .populate(\"creator\", \"name email avatar\")\n      .sort(sortOptions)\n      .skip((page - 1) * limit)\n      .limit(Number.parseInt(limit))\n\n    res.status(200).json({\n      success: true,\n      count: tasks.length,\n      total,\n      totalPages: Math.ceil(total / limit),\n      currentPage: Number.parseInt(page),\n      tasks,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Get task by ID\nrouter.get(\"/:id\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const task = await Task.findById(req.params.id)\n      .populate(\"assignee\", \"name email avatar\")\n      .populate(\"creator\", \"name email avatar\")\n      .populate(\"watchers\", \"name email avatar\")\n\n    if (!task) {\n      return next(createError(404, \"Task not found\"))\n    }\n\n    // Check if user has access to this task\n    if (\n      req.user.role === \"viewer\" \u0026\u0026\n      task.assignee?._id.toString() !== req.user._id.toString() \u0026\u0026\n      task.creator._id.toString() !== req.user._id.toString() \u0026\u0026\n      !task.watchers.some((watcher) =\u003e watcher._id.toString() === req.user._id.toString())\n    ) {\n      return next(createError(403, \"You are not authorized to access this task\"))\n    }\n\n    res.status(200).json({\n      success: true,\n      task,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Update task\nrouter.put(\"/:id\", verifyToken, verifyOwnerOrAdmin(Task), async (req, res, next) =\u003e {\n  try {\n    const { title, description, status, priority, dueDate, assignee, tags, subtasks, progress } = req.body\n\n    const task = req.resource // From verifyOwnerOrAdmin middleware\n\n    // Store old assignee for notification\n    const oldAssignee = task.assignee\n\n    // Update fields\n    if (title) task.title = title\n    if (description !== undefined) task.description = description\n    if (status) task.status = status\n    if (priority) task.priority = priority\n    if (dueDate !== undefined) task.dueDate = dueDate\n    if (assignee !== undefined) task.assignee = assignee\n    if (tags) task.tags = tags\n    if (subtasks) task.subtasks = subtasks\n    if (progress !== undefined) task.progress = progress\n\n    // Save task\n    const updatedTask = await task.save()\n\n    // If assignee has changed, send notification to new assignee\n    if (assignee \u0026\u0026 (!oldAssignee || oldAssignee.toString() !== assignee.toString())) {\n      // Create notification\n      const notification = new Notification({\n        recipient: assignee,\n        sender: req.user._id,\n        type: \"task_assigned\",\n        title: \"Task Assigned\",\n        message: `You have been assigned to the task: ${task.title}`,\n        relatedTask: task._id,\n      })\n\n      await notification.save()\n\n      // Send real-time notification\n      if (req.io) {\n        req.io.to(assignee.toString()).emit(\"notification\", notification)\n      }\n\n      // Get assignee details\n      const assigneeUser = await User.findById(assignee)\n\n      // Send email notification if user has email notifications enabled\n      if (\n        assigneeUser \u0026\u0026\n        assigneeUser.notificationPreferences.emailNotifications \u0026\u0026\n        assigneeUser.notificationPreferences.taskAssigned\n      ) {\n        sendEmail({\n          to: assigneeUser.email,\n          subject: \"Task Assigned\",\n          text: `Hello ${assigneeUser.name},\\n\\nYou have been assigned to the task: ${task.title}\\n\\nDue Date: ${task.dueDate ? new Date(task.dueDate).toLocaleDateString() : \"Not set\"}\\nPriority: ${task.priority}\\n\\nDescription:\\n${task.description || \"No description provided\"}\\n\\nBest regards,\\nThe Task Management Team`,\n        })\n      }\n    }\n\n    // If status has changed to completed, send notification to creator\n    if (status === \"completed\" \u0026\u0026 task.status !== \"completed\") {\n      // Create notification for creator\n      const notification = new Notification({\n        recipient: task.creator,\n        sender: req.user._id,\n        type: \"task_completed\",\n        title: \"Task Completed\",\n        message: `The task \"${task.title}\" has been marked as completed`,\n        relatedTask: task._id,\n      })\n\n      await notification.save()\n\n      // Send real-time notification\n      if (req.io) {\n        req.io.to(task.creator.toString()).emit(\"notification\", notification)\n      }\n\n      // Get creator details\n      const creatorUser = await User.findById(task.creator)\n\n      // Send email notification if user has email notifications enabled\n      if (\n        creatorUser \u0026\u0026\n        creatorUser.notificationPreferences.emailNotifications \u0026\u0026\n        creatorUser.notificationPreferences.taskCompleted\n      ) {\n        sendEmail({\n          to: creatorUser.email,\n          subject: \"Task Completed\",\n          text: `Hello ${creatorUser.name},\\n\\nThe task \"${task.title}\" has been marked as completed.\\n\\nBest regards,\\nThe Task Management Team`,\n        })\n      }\n    }\n\n    // If task has been updated, notify assignee\n    if (task.assignee \u0026\u0026 task.assignee.toString() !== req.user._id.toString()) {\n      // Create notification\n      const notification = new Notification({\n        recipient: task.assignee,\n        sender: req.user._id,\n        type: \"task_updated\",\n        title: \"Task Updated\",\n        message: `The task \"${task.title}\" has been updated`,\n        relatedTask: task._id,\n      })\n\n      await notification.save()\n\n      // Send real-time notification\n      if (req.io) {\n        req.io.to(task.assignee.toString()).emit(\"notification\", notification)\n      }\n\n      // Get assignee details\n      const assigneeUser = await User.findById(task.assignee)\n\n      // Send email notification if user has email notifications enabled\n      if (\n        assigneeUser \u0026\u0026\n        assigneeUser.notificationPreferences.emailNotifications \u0026\u0026\n        assigneeUser.notificationPreferences.taskUpdated\n      ) {\n        sendEmail({\n          to: assigneeUser.email,\n          subject: \"Task Updated\",\n          text: `Hello ${assigneeUser.name},\\n\\nThe task \"${task.title}\" has been updated.\\n\\nBest regards,\\nThe Task Management Team`,\n        })\n      }\n    }\n\n    res.status(200).json({\n      success: true,\n      message: \"Task updated successfully\",\n      task: updatedTask,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Delete task\nrouter.delete(\"/:id\", verifyToken, verifyOwnerOrAdmin(Task), async (req, res, next) =\u003e {\n  try {\n    const task = req.resource // From verifyOwnerOrAdmin middleware\n\n    // Delete task\n    await Task.findByIdAndDelete(req.params.id)\n\n    // Delete associated comments\n    await Comment.deleteMany({ task: req.params.id })\n\n    // Delete associated notifications\n    await Notification.deleteMany({ relatedTask: req.params.id })\n\n    res.status(200).json({\n      success: true,\n      message: \"Task deleted successfully\",\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Add attachment to task\nrouter.post(\n  \"/:id/attachments\",\n  verifyToken,\n  verifyOwnerOrAdmin(Task),\n  upload.single(\"file\"),\n  async (req, res, next) =\u003e {\n    try {\n      if (!req.file) {\n        return next(createError(400, \"No file uploaded\"))\n      }\n\n      const task = req.resource // From verifyOwnerOrAdmin middleware\n\n      // Add attachment\n      task.attachments.push({\n        name: req.file.originalname,\n        path: `/${req.file.path}`,\n        type: req.file.mimetype,\n        size: req.file.size,\n      })\n\n      // Save task\n      const updatedTask = await task.save()\n\n      res.status(200).json({\n        success: true,\n        message: \"Attachment added successfully\",\n        task: updatedTask,\n      })\n    } catch (err) {\n      next(err)\n    }\n  },\n)\n\n// Delete attachment from task\nrouter.delete(\"/:id/attachments/:attachmentId\", verifyToken, verifyOwnerOrAdmin(Task), async (req, res, next) =\u003e {\n  try {\n    const task = req.resource // From verifyOwnerOrAdmin middleware\n\n    // Remove attachment\n    task.attachments = task.attachments.filter((attachment) =\u003e attachment._id.toString() !== req.params.attachmentId)\n\n    // Save task\n    const updatedTask = await task.save()\n\n    res.status(200).json({\n      success: true,\n      message: \"Attachment deleted successfully\",\n      task: updatedTask,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Add watcher to task\nrouter.post(\"/:id/watchers\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const task = await Task.findById(req.params.id)\n    if (!task) {\n      return next(createError(404, \"Task not found\"))\n    }\n\n    // Add user to watchers if not already watching\n    if (!task.watchers.includes(req.user._id)) {\n      task.watchers.push(req.user._id)\n      await task.save()\n    }\n\n    res.status(200).json({\n      success: true,\n      message: \"You are now watching this task\",\n      task,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Remove watcher from task\nrouter.delete(\"/:id/watchers\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const task = await Task.findById(req.params.id)\n    if (!task) {\n      return next(createError(404, \"Task not found\"))\n    }\n\n    // Remove user from watchers\n    task.watchers = task.watchers.filter((watcher) =\u003e watcher.toString() !== req.user._id.toString())\n\n    await task.save()\n\n    res.status(200).json({\n      success: true,\n      message: \"You are no longer watching this task\",\n      task,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\nexport default router\n\n[V0_FILE]javascript:file=\"routes/comments.js\" isFixed=\"true\" isQuickEdit=\"true\"\nimport express from \"express\"\nimport Comment from \"../models/Comment.js\"\nimport Task from \"../models/Task.js\"\nimport User from \"../models/User.js\"\nimport Notification from \"../models/Notification.js\"\nimport { verifyToken } from \"../middleware/auth.js\"\nimport { createError } from \"../utils/error.js\"\nimport upload from \"../middleware/upload.js\"\nimport { sendEmail } from \"../utils/email.js\"\n\nconst router = express.Router()\n\n// Create a new comment\nrouter.post(\"/\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { taskId, content, mentions } = req.body\n\n    // Check if task exists\n    const task = await Task.findById(taskId)\n    if (!task) {\n      return next(createError(404, \"Task not found\"))\n    }\n\n    // Create new comment\n    const newComment = new Comment({\n      task: taskId,\n      user: req.user._id,\n      content,\n      mentions: mentions || [],\n    })\n\n    // Save comment\n    const savedComment = await newComment.save()\n\n    // Populate user data\n    await savedComment.populate(\"user\", \"name email avatar\")\n\n    // Notify task assignee and creator about the comment\n    const notifyUsers = new Set()\n\n    // Add task assignee if exists and is not the commenter\n    if (task.assignee \u0026\u0026 task.assignee.toString() !== req.user._id.toString()) {\n      notifyUsers.add(task.assignee.toString())\n    }\n\n    // Add task creator if not the commenter\n    if (task.creator.toString() !== req.user._id.toString()) {\n      notifyUsers.add(task.creator.toString())\n    }\n\n    // Add watchers if not the commenter\n    task.watchers.forEach((watcher) =\u003e {\n      if (watcher.toString() !== req.user._id.toString()) {\n        notifyUsers.add(watcher.toString())\n      }\n    })\n\n    // Add mentioned users\n    if (mentions \u0026\u0026 mentions.length \u003e 0) {\n      mentions.forEach((userId) =\u003e notifyUsers.add(userId))\n    }\n\n    // Send notifications\n    for (const userId of notifyUsers) {\n      // Create notification\n      const notification = new Notification({\n        recipient: userId,\n        sender: req.user._id,\n        type: \"comment_added\",\n        title: \"New Comment\",\n        message: `${req.user.name} commented on task: ${task.title}`,\n        relatedTask: taskId,\n        relatedComment: savedComment._id,\n      })\n\n      await notification.save()\n\n      // Send real-time notification\n      if (req.io) {\n        req.io.to(userId).emit(\"notification\", notification)\n      }\n\n      // Get user details\n      const user = await User.findById(userId)\n\n      // Send email notification if user has email notifications enabled\n      if (user \u0026\u0026 user.notificationPreferences.emailNotifications \u0026\u0026 user.notificationPreferences.commentAdded) {\n        sendEmail({\n          to: user.email,\n          subject: \"New Comment on Task\",\n          text: `Hello ${user.name},\\n\\n${req.user.name} commented on the task \"${task.title}\":\\n\\n\"${content}\"\\n\\nBest regards,\\nThe Task Management Team`,\n        })\n      }\n    }\n\n    res.status(201).json({\n      success: true,\n      message: \"Comment added successfully\",\n      comment: savedComment,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Get comments for a task\nrouter.get(\"/task/:taskId\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { page = 1, limit = 10 } = req.query\n\n    // Check if task exists\n    const task = await Task.findById(req.params.taskId)\n    if (!task) {\n      return next(createError(404, \"Task not found\"))\n    }\n\n    // Check if user has access to this task\n    if (\n      req.user.role === \"viewer\" \u0026\u0026\n      task.assignee?.toString() !== req.user._id.toString() \u0026\u0026\n      task.creator.toString() !== req.user._id.toString() \u0026\u0026\n      !task.watchers.some((watcher) =\u003e watcher.toString() === req.user._id.toString())\n    ) {\n      return next(createError(403, \"You are not authorized to access this task\"))\n    }\n\n    // Count total comments\n    const total = await Comment.countDocuments({ task: req.params.taskId })\n\n    // Fetch comments with pagination\n    const comments = await Comment.find({ task: req.params.taskId })\n      .populate(\"user\", \"name email avatar\")\n      .sort({ createdAt: -1 })\n      .skip((page - 1) * limit)\n      .limit(Number.parseInt(limit))\n\n    res.status(200).json({\n      success: true,\n      count: comments.length,\n      total,\n      totalPages: Math.ceil(total / limit),\n      currentPage: Number.parseInt(page),\n      comments,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Update comment\nrouter.put(\"/:id\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { content, mentions } = req.body\n\n    // Find comment\n    const comment = await Comment.findById(req.params.id)\n    if (!comment) {\n      return next(createError(404, \"Comment not found\"))\n    }\n\n    // Check if user is the comment author\n    if (comment.user.toString() !== req.user._id.toString() \u0026\u0026 req.user.role !== \"admin\") {\n      return next(createError(403, \"You are not authorized to update this comment\"))\n    }\n\n    // Update fields\n    if (content) comment.content = content\n    if (mentions) comment.mentions = mentions\n\n    // Save comment\n    const updatedComment = await comment.save()\n\n    // Populate user data\n    await updatedComment.populate(\"user\", \"name email avatar\")\n\n    res.status(200).json({\n      success: true,\n      message: \"Comment updated successfully\",\n      comment: updatedComment,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Delete comment\nrouter.delete(\"/:id\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Find comment\n    const comment = await Comment.findById(req.params.id)\n    if (!comment) {\n      return next(createError(404, \"Comment not found\"))\n    }\n\n    // Check if user is the comment author or admin\n    if (comment.user.toString() !== req.user._id.toString() \u0026\u0026 req.user.role !== \"admin\") {\n      return next(createError(403, \"You are not authorized to delete this comment\"))\n    }\n\n    // Delete comment\n    await Comment.findByIdAndDelete(req.params.id)\n\n    // Delete associated notifications\n    await Notification.deleteMany({ relatedComment: req.params.id })\n\n    res.status(200).json({\n      success: true,\n      message: \"Comment deleted successfully\",\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Add attachment to comment\nrouter.post(\"/:id/attachments\", verifyToken, upload.single(\"file\"), async (req, res, next) =\u003e {\n  try {\n    if (!req.file) {\n      return next(createError(400, \"No file uploaded\"))\n    }\n\n    // Find comment\n    const comment = await Comment.findById(req.params.id)\n    if (!comment) {\n      return next(createError(404, \"Comment not found\"))\n    }\n\n    // Check if user is the comment author\n    if (comment.user.toString() !== req.user._id.toString() \u0026\u0026 req.user.role !== \"admin\") {\n      return next(createError(403, \"You are not authorized to update this comment\"))\n    }\n\n    // Add attachment\n    comment.attachments.push({\n      name: req.file.originalname,\n      path: `/${req.file.path}`,\n      type: req.file.mimetype,\n      size: req.file.size,\n    })\n\n    // Save comment\n    const updatedComment = await comment.save()\n\n    res.status(200).json({\n      success: true,\n      message: \"Attachment added successfully\",\n      comment: updatedComment,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\nexport default router\n\n[V0_FILE]javascript:file=\"routes/reports.js\"\nimport express from \"express\"\nimport Task from \"../models/Task.js\"\nimport User from \"../models/User.js\"\nimport { verifyToken, verifyAdminOrEditor } from \"../middleware/auth.js\"\nimport { generatePDF, generateCSV } from \"../utils/export.js\"\n\nconst router = express.Router()\n\n// Get task completion report\nrouter.get(\"/task-completion\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { startDate, endDate, format } = req.query\n\n    // Parse dates\n    const start = startDate ? new Date(startDate) : new Date(Date.now() - 30 * 24 * 60 * 60 * 1000) // Default to last 30 days\n    const end = endDate ? new Date(endDate) : new Date()\n\n    // Set end date to end of day\n    end.setHours(23, 59, 59, 999)\n\n    // Aggregate tasks by status and date\n    const tasksByStatus = await Task.aggregate([\n      {\n        $match: {\n          updatedAt: { $gte: start, $lte: end },\n        },\n      },\n      {\n        $group: {\n          _id: {\n            status: \"$status\",\n            date: { $dateToString: { format: \"%Y-%m-%d\", date: \"$updatedAt\" } },\n          },\n          count: { $sum: 1 },\n        },\n      },\n      {\n        $sort: { \"_id.date\": 1 },\n      },\n    ])\n\n    // Transform data for chart\n    const dates = [...new Set(tasksByStatus.map((item) =\u003e item._id.date))].sort()\n\n    const chartData = dates.map((date) =\u003e {\n      const dataPoint = { date }\n      ;[\"to-do\", \"in-progress\", \"in-review\", \"completed\"].forEach((status) =\u003e {\n        const statusData = tasksByStatus.find((item) =\u003e item._id.date === date \u0026\u0026 item._id.status === status)\n        dataPoint[status] = statusData ? statusData.count : 0\n      })\n\n      return dataPoint\n    })\n\n    // If format is specified, export data\n    if (format === \"pdf\") {\n      const pdfBuffer = await generatePDF(\"Task Completion Report\", chartData)\n\n      res.setHeader(\"Content-Type\", \"application/pdf\")\n      res.setHeader(\"Content-Disposition\", \"attachment; filename=task-completion-report.pdf\")\n      return res.send(pdfBuffer)\n    }\n\n    if (format === \"csv\") {\n      const csvData = await generateCSV(chartData)\n\n      res.setHeader(\"Content-Type\", \"text/csv\")\n      res.setHeader(\"Content-Disposition\", \"attachment; filename=task-completion-report.csv\")\n      return res.send(csvData)\n    }\n\n    res.status(200).json({\n      success: true,\n      data: chartData,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Get team performance report\nrouter.get(\"/team-performance\", verifyToken, verifyAdminOrEditor, async (req, res, next) =\u003e {\n  try {\n    const { startDate, endDate, format } = req.query\n\n    // Parse dates\n    const start = startDate ? new Date(startDate) : new Date(Date.now() - 30 * 24 * 60 * 60 * 1000) // Default to last 30 days\n    const end = endDate ? new Date(endDate) : new Date()\n\n    // Set end date to end of day\n    end.setHours(23, 59, 59, 999)\n\n    // Aggregate tasks by assignee\n    const tasksByAssignee = await Task.aggregate([\n      {\n        $match: {\n          assignee: { $exists: true, $ne: null },\n          updatedAt: { $gte: start, $lte: end },\n        },\n      },\n      {\n        $group: {\n          _id: {\n            assignee: \"$assignee\",\n            status: \"$status\",\n          },\n          count: { $sum: 1 },\n        },\n      },\n    ])\n\n    // Get user details\n    const userIds = [...new Set(tasksByAssignee.map((item) =\u003e item._id.assignee))]\n    const users = await User.find({ _id: { $in: userIds } }, \"name email avatar\")\n\n    // Transform data for chart\n    const chartData = users.map((user) =\u003e {\n      const userData = {\n        name: user.name,\n        email: user.email,\n        avatar: user.avatar,\n      }\n      ;[\"to-do\", \"in-progress\", \"in-review\", \"completed\"].forEach((status) =\u003e {\n        const statusData = tasksByAssignee.find(\n          (item) =\u003e item._id.assignee.toString() === user._id.toString() \u0026\u0026 item._id.status === status,\n        )\n        userData[status] = statusData ? statusData.count : 0\n      })\n\n      // Calculate total tasks\n      userData.total = Object.values(userData)\n        .filter((value) =\u003e typeof value === \"number\")\n        .reduce((sum, value) =\u003e sum + value, 0)\n\n      // Calculate completion rate\n      userData.completionRate = userData.total \u003e 0 ? Math.round((userData.completed / userData.total) * 100) : 0\n\n      return userData\n    })\n\n    // Sort by completion rate\n    chartData.sort((a, b) =\u003e b.completionRate - a.completionRate)\n\n    // If format is specified, export data\n    if (format === \"pdf\") {\n      const pdfBuffer = await generatePDF(\"Team Performance Report\", chartData)\n\n      res.setHeader(\"Content-Type\", \"application/pdf\")\n      res.setHeader(\"Content-Disposition\", \"attachment; filename=team-performance-report.pdf\")\n      return res.send(pdfBuffer)\n    }\n\n    if (format === \"csv\") {\n      const csvData = await generateCSV(chartData)\n\n      res.setHeader(\"Content-Type\", \"text/csv\")\n      res.setHeader(\"Content-Disposition\", \"attachment; filename=team-performance-report.csv\")\n      return res.send(csvData)\n    }\n\n    res.status(200).json({\n      success: true,\n      data: chartData,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Get priority distribution report\nrouter.get(\"/priority-distribution\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { format } = req.query\n\n    // Aggregate tasks by priority\n    const tasksByPriority = await Task.aggregate([\n      {\n        $group: {\n          _id: \"$priority\",\n          count: { $sum: 1 },\n        },\n      },\n    ])\n\n    // Transform data for chart\n    const chartData = tasksByPriority.map((item) =\u003e ({\n      priority: item._id,\n      count: item.count,\n    }))\n\n    // If format is specified, export data\n    if (format === \"pdf\") {\n      const pdfBuffer = await generatePDF(\"Priority Distribution Report\", chartData)\n\n      res.setHeader(\"Content-Type\", \"application/pdf\")\n      res.setHeader(\"Content-Disposition\", \"attachment; filename=priority-distribution-report.pdf\")\n      return res.send(pdfBuffer)\n    }\n\n    if (format === \"csv\") {\n      const csvData = await generateCSV(chartData)\n\n      res.setHeader(\"Content-Type\", \"text/csv\")\n      res.setHeader(\"Content-Disposition\", \"attachment; filename=priority-distribution-report.csv\")\n      return res.send(csvData)\n    }\n\n    res.status(200).json({\n      success: true,\n      data: chartData,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Get overdue tasks report\nrouter.get(\"/overdue-tasks\", verifyToken, verifyAdminOrEditor, async (req, res, next) =\u003e {\n  try {\n    const { format } = req.query\n\n    // Get current date\n    const today = new Date()\n    today.setHours(0, 0, 0, 0)\n\n    // Find overdue tasks\n    const overdueTasks = await Task.find({\n      dueDate: { $lt: today },\n      status: { $ne: \"completed\" },\n    })\n      .populate(\"assignee\", \"name email avatar\")\n      .populate(\"creator\", \"name email avatar\")\n      .sort({ dueDate: 1 })\n\n    // Transform data for export\n    const reportData = overdueTasks.map((task) =\u003e ({\n      id: task._id,\n      title: task.title,\n      priority: task.priority,\n      status: task.status,\n      dueDate: task.dueDate ? task.dueDate.toLocaleDateString() : \"Not set\",\n      assignee: task.assignee ? task.assignee.name : \"Unassigned\",\n      creator: task.creator ? task.creator.name : \"Unknown\",\n      daysOverdue: Math.ceil((today - new Date(task.dueDate)) / (1000 * 60 * 60 * 24)),\n    }))\n\n    // If format is specified, export data\n    if (format === \"pdf\") {\n      const pdfBuffer = await generatePDF(\"Overdue Tasks Report\", reportData)\n\n      res.setHeader(\"Content-Type\", \"application/pdf\")\n      res.setHeader(\"Content-Disposition\", \"attachment; filename=overdue-tasks-report.pdf\")\n      return res.send(pdfBuffer)\n    }\n\n    if (format === \"csv\") {\n      const csvData = await generateCSV(reportData)\n\n      res.setHeader(\"Content-Type\", \"text/csv\")\n      res.setHeader(\"Content-Disposition\", \"attachment; filename=overdue-tasks-report.csv\")\n      return res.send(csvData)\n    }\n\n    res.status(200).json({\n      success: true,\n      count: reportData.length,\n      data: reportData,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\nexport default router\n\n[V0_FILE]javascript:file=\"routes/notifications.js\"\nimport express from \"express\"\nimport Notification from \"../models/Notification.js\"\nimport { verifyToken } from \"../middleware/auth.js\"\nimport { createError } from \"../utils/error.js\"\n\nconst router = express.Router()\n\n// Get user notifications\nrouter.get(\"/\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { read, page = 1, limit = 10 } = req.query\n\n    // Build query\n    const query = { recipient: req.user._id }\n\n    // Filter by read status\n    if (read === \"true\") {\n      query.read = true\n    } else if (read === \"false\") {\n      query.read = false\n    }\n\n    // Count total notifications\n    const total = await Notification.countDocuments(query)\n\n    // Fetch notifications with pagination\n    const notifications = await Notification.find(query)\n      .populate(\"sender\", \"name email avatar\")\n      .populate(\"relatedTask\", \"title\")\n      .sort({ createdAt: -1 })\n      .skip((page - 1) * limit)\n      .limit(Number.parseInt(limit))\n\n    res.status(200).json({\n      success: true,\n      count: notifications.length,\n      total,\n      totalPages: Math.ceil(total / limit),\n      currentPage: Number.parseInt(page),\n      unreadCount: await Notification.countDocuments({ recipient: req.user._id, read: false }),\n      notifications,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Mark notification as read\nrouter.put(\"/:id/read\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Find notification\n    const notification = await Notification.findById(req.params.id)\n    if (!notification) {\n      return next(createError(404, \"Notification not found\"))\n    }\n\n    // Check if user is the recipient\n    if (notification.recipient.toString() !== req.user._id.toString()) {\n      return next(createError(403, \"You are not authorized to update this notification\"))\n    }\n\n    // Mark as read\n    notification.read = true\n\n    // Save notification\n    await notification.save()\n\n    res.status(200).json({\n      success: true,\n      message: \"Notification marked as read\",\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Mark all notifications as read\nrouter.put(\"/read-all\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Update all unread notifications for the user\n    await Notification.updateMany({ recipient: req.user._id, read: false }, { $set: { read: true } })\n\n    res.status(200).json({\n      success: true,\n      message: \"All notifications marked as read\",\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Delete notification\nrouter.delete(\"/:id\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Find notification\n    const notification = await Notification.findById(req.params.id)\n    if (!notification) {\n      return next(createError(404, \"Notification not found\"))\n    }\n\n    // Check if user is the recipient\n    if (notification.recipient.toString() !== req.user._id.toString()) {\n      return next(createError(403, \"You are not authorized to delete this notification\"))\n    }\n\n    // Delete notification\n    await Notification.findByIdAndDelete(req.params.id)\n\n    res.status(200).json({\n      success: true,\n      message: \"Notification deleted successfully\",\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Delete all notifications\nrouter.delete(\"/\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Delete all notifications for the user\n    await Notification.deleteMany({ recipient: req.user._id })\n\n    res.status(200).json({\n      success: true,\n      message: \"All notifications deleted successfully\",\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\nexport default router\n\n[V0_FILE]javascript:file=\"socket/socketHandlers.js\"\nimport jwt from \"jsonwebtoken\"\nimport User from \"../models/User.js\"\n\nconst setupSocketHandlers = (io) =\u003e {\n  // Middleware for authentication\n  io.use(async (socket, next) =\u003e {\n    try {\n      const token =\n        socket.handshake.auth.token ||\n        (socket.handshake.headers.authorization \u0026\u0026 socket.handshake.headers.authorization.startsWith(\"Bearer\")\n          ? socket.handshake.headers.authorization.split(\" \")[1]\n          : null)\n\n      if (!token) {\n        return next(new Error(\"Authentication error\"))\n      }\n\n      // Verify token\n      const decoded = jwt.verify(token, process.env.JWT_SECRET)\n\n      // Find user\n      const user = await User.findById(decoded.id)\n      if (!user || user.status !== \"active\") {\n        return next(new Error(\"Authentication error\"))\n      }\n\n      // Attach user to socket\n      socket.user = user\n      next()\n    } catch (err) {\n      next(new Error(\"Authentication error\"))\n    }\n  })\n\n  io.on(\"connection\", (socket) =\u003e {\n    console.log(`User connected: ${socket.user._id}`)\n\n    // Join user's room for private notifications\n    socket.join(socket.user._id.toString())\n\n    // Handle task updates\n    socket.on(\"task:update\", (taskId) =\u003e {\n      // Broadcast to all clients except sender\n      socket.broadcast.emit(\"task:updated\", taskId)\n    })\n\n    // Handle new comments\n    socket.on(\"comment:new\", (taskId) =\u003e {\n      // Broadcast to all clients except sender\n      socket.broadcast.emit(\"comment:added\", taskId)\n    })\n\n    // Handle user typing in comments\n    socket.on(\"typing\", (data) =\u003e {\n      // Broadcast to all clients except sender\n      socket.broadcast.emit(\"user:typing\", {\n        taskId: data.taskId,\n        user: {\n          id: socket.user._id,\n          name: socket.user.name,\n        },\n      })\n    })\n\n    // Handle disconnection\n    socket.on(\"disconnect\", () =\u003e {\n      console.log(`User disconnected: ${socket.user._id}`)\n    })\n  })\n}\n\nexport default setupSocketHandlers\n\n[V0_FILE]javascript:file=\"utils/error.js\"\n// Create custom error with status code\nexport const createError = (statusCode, message) =\u003e {\n  const error = new Error(message)\n  error.statusCode = statusCode\n  return error\n}\n\n[V0_FILE]javascript:file=\"utils/email.js\"\nimport nodemailer from \"nodemailer\"\n\n// Configure email transporter\nconst transporter = nodemailer.createTransport({\n  host: process.env.EMAIL_HOST || \"smtp.example.com\",\n  port: process.env.EMAIL_PORT || 587,\n  secure: process.env.EMAIL_SECURE === \"true\",\n  auth: {\n    user: process.env.EMAIL_USER || \"user@example.com\",\n    pass: process.env.EMAIL_PASS || \"password\",\n  },\n})\n\n// Send email\nexport const sendEmail = async ({ to, subject, text, html }) =\u003e {\n  try {\n    // Skip sending emails in development mode if no email config\n    if (process.env.NODE_ENV === \"development\" \u0026\u0026 !process.env.EMAIL_HOST) {\n      console.log(\"Email sending skipped in development mode\")\n      console.log({ to, subject, text })\n      return\n    }\n\n    const mailOptions = {\n      from: process.env.EMAIL_FROM || \"Task Management \u003cnoreply@taskmanagement.com\u003e\",\n      to,\n      subject,\n      text,\n      html,\n    }\n\n    const info = await transporter.sendMail(mailOptions)\n    console.log(\"Email sent:\", info.messageId)\n    return info\n  } catch (error) {\n    console.error(\"Error sending email:\", error)\n    throw error\n  }\n}\n\n// Send deadline reminder emails\nexport const sendDeadlineReminders = async (tasks, users) =\u003e {\n  for (const task of tasks) {\n    // Get assignee\n    const assignee = users.find(\n      (user) =\u003e\n        user._id.toString() === task.assignee.toString() \u0026\u0026\n        user.notificationPreferences.emailNotifications \u0026\u0026\n        user.notificationPreferences.deadlineReminder,\n    )\n\n    if (assignee) {\n      await sendEmail({\n        to: assignee.email,\n        subject: \"Task Deadline Reminder\",\n        text: `Hello ${assignee.name},\\n\\nThis is a reminder that the task \"${task.title}\" is due soon (${new Date(task.dueDate).toLocaleDateString()}).\\n\\nBest regards,\\nThe Task Management Team`,\n      })\n    }\n  }\n}\n\n[V0_FILE]javascript:file=\"utils/export.js\"\nimport PDFDocument from \"pdfkit\"\nimport { Parser } from \"json2csv\"\n\n// Generate PDF report\nexport const generatePDF = (title, data) =\u003e {\n  return new Promise((resolve, reject) =\u003e {\n    try {\n      // Create PDF document\n      const doc = new PDFDocument()\n      const buffers = []\n\n      // Collect PDF data chunks\n      doc.on(\"data\", (buffer) =\u003e buffers.push(buffer))\n      doc.on(\"end\", () =\u003e resolve(Buffer.concat(buffers)))\n\n      // Add title\n      doc.fontSize(20).text(title, { align: \"center\" })\n      doc.moveDown()\n\n      // Add date\n      doc.fontSize(12).text(`Generated on: ${new Date().toLocaleDateString()}`, { align: \"center\" })\n      doc.moveDown(2)\n\n      // Add data table\n      if (data.length \u003e 0) {\n        // Get column headers\n        const headers = Object.keys(data[0])\n\n        // Calculate column widths\n        const columnWidth = 500 / headers.length\n\n        // Draw header row\n        doc.fontSize(10).font(\"Helvetica-Bold\")\n        headers.forEach((header, i) =\u003e {\n          const x = 50 + i * columnWidth\n          doc.text(header.charAt(0).toUpperCase() + header.slice(1).replace(/([A-Z])/g, \" $1\"), x, doc.y, {\n            width: columnWidth,\n            align: \"left\",\n          })\n        })\n\n        doc.moveDown()\n        doc.font(\"Helvetica\")\n\n        // Draw data rows\n        data.forEach((row) =\u003e {\n          const y = doc.y\n\n          headers.forEach((header, i) =\u003e {\n            const x = 50 + i * columnWidth\n            doc.text(row[header] !== undefined ? row[header].toString() : \"\", x, y, {\n              width: columnWidth,\n              align: \"left\",\n            })\n          })\n\n          doc.moveDown()\n        })\n      } else {\n        doc.text(\"No data available\", { align: \"center\" })\n      }\n\n      // Finalize PDF\n      doc.end()\n    } catch (err) {\n      reject(err)\n    }\n  })\n}\n\n// Generate CSV report\nexport const generateCSV = (data) =\u003e {\n  return new Promise((resolve, reject) =\u003e {\n    try {\n      if (data.length === 0) {\n        return resolve(\"No data available\")\n      }\n\n      // Configure CSV parser\n      const json2csvParser = new Parser()\n\n      // Convert JSON to CSV\n      const csv = json2csvParser.parse(data)\n\n      resolve(csv)\n    } catch (err) {\n      reject(err)\n    }\n  })\n}\n\n[V0_FILE]javascript:file=\"utils/scheduler.js\" isFixed=\"true\" isQuickEdit=\"true\"\nimport cron from \"node-cron\"\nimport Task from \"../models/Task.js\"\nimport User from \"../models/User.js\"\nimport Notification from \"../models/Notification.js\"\nimport { sendDeadlineReminders } from \"./email.js\"\nimport { sendEmail } from \"./email.js\" // Import sendEmail\n\n// Schedule deadline reminders\nexport const scheduleDeadlineReminders = () =\u003e {\n  // Run every day at 9:00 AM\n  cron.schedule(\"0 9 * * *\", async () =\u003e {\n    try {\n      console.log(\"Running deadline reminder scheduler...\")\n\n      // Get current date\n      const today = new Date()\n      today.setHours(0, 0, 0, 0)\n\n      // Get tomorrow's date\n      const tomorrow = new Date(today)\n      tomorrow.setDate(tomorrow.getDate() + 1)\n\n      // Get tasks due tomorrow\n      const tasks = await Task.find({\n        dueDate: {\n          $gte: tomorrow,\n          $lt: new Date(tomorrow.getTime() + 24 * 60 * 60 * 1000),\n        },\n        status: { $ne: \"completed\" },\n      }).populate(\"assignee\")\n\n      if (tasks.length === 0) {\n        console.log(\"No tasks due tomorrow\")\n        return\n      }\n\n      console.log(`Found ${tasks.length} tasks due tomorrow`)\n\n      // Get all users\n      const users = await User.find({\n        _id: { $in: tasks.map((task) =\u003e task.assignee) },\n      })\n\n      // Create notifications\n      const notifications = tasks.map((task) =\u003e ({\n        recipient: task.assignee,\n        type: \"deadline_reminder\",\n        title: \"Task Due Tomorrow\",\n        message: `The task \"${task.title}\" is due tomorrow`,\n        relatedTask: task._id,\n      }))\n\n      // Save notifications\n      await Notification.insertMany(notifications)\n\n      // Send email reminders\n      await sendDeadlineReminders(tasks, users)\n\n      console.log(\"Deadline reminders sent successfully\")\n    } catch (err) {\n      console.error(\"Error sending deadline reminders:\", err)\n    }\n  })\n}\n\n// Schedule weekly digest emails\nexport const scheduleWeeklyDigest = () =\u003e {\n  // Run every Monday at 8:00 AM\n  cron.schedule(\"0 8 * * 1\", async () =\u003e {\n    try {\n      console.log(\"Running weekly digest scheduler...\")\n\n      // Get users who have enabled weekly digest\n      const users = await User.find({\n        \"notificationPreferences.weeklyDigest\": true,\n        \"notificationPreferences.emailNotifications\": true,\n      })\n\n      if (users.length === 0) {\n        console.log(\"No users have enabled weekly digest\")\n        return\n      }\n\n      console.log(`Sending weekly digest to ${users.length} users`)\n\n      // Get date range for the past week\n      const endDate = new Date()\n      const startDate = new Date()\n      startDate.setDate(startDate.getDate() - 7)\n\n      // Process each user\n      for (const user of users) {\n        // Get tasks assigned to user\n        const assignedTasks = await Task.find({\n          assignee: user._id,\n          updatedAt: { $gte: startDate, $lte: endDate },\n        })\n\n        // Get tasks created by user\n        const createdTasks = await Task.find({\n          creator: user._id,\n          updatedAt: { $gte: startDate, $lte: endDate },\n        })\n\n        // Count tasks by status\n        const tasksByStatus = {\n          completed: assignedTasks.filter((task) =\u003e task.status === \"completed\").length,\n          inProgress: assignedTasks.filter((task) =\u003e task.status === \"in-progress\").length,\n          inReview: assignedTasks.filter((task) =\u003e task.status === \"in-review\").length,\n          toDo: assignedTasks.filter((task) =\u003e task.status === \"to-do\").length,\n        }\n\n        // Get overdue tasks\n        const today = new Date()\n        today.setHours(0, 0, 0, 0)\n\n        const overdueTasks = await Task.find({\n          assignee: user._id,\n          dueDate: { $lt: today },\n          status: { $ne: \"completed\" },\n        })\n\n        // Send digest email\n        await sendEmail({\n          to: user.email,\n          subject: \"Your Weekly Task Digest\",\n          text: `Hello ${user.name},\\n\\nHere's your weekly task summary:\\n\\nTasks Assigned to You: ${assignedTasks.length}\\n- Completed: ${tasksByStatus.completed}\\n- In Progress: ${tasksByStatus.inProgress}\\n- In Review: ${tasksByStatus.inReview}\\n- To Do: ${tasksByStatus.toDo}\\n\\nTasks Created by You: ${createdTasks.length}\\n\\nOverdue Tasks: ${overdueTasks.length}\\n\\nBest regards,\\nThe Task Management Team`,\n        })\n      }\n\n      console.log(\"Weekly digest emails sent successfully\")\n    } catch (err) {\n      console.error(\"Error sending weekly digest emails:\", err)\n    }\n  })\n}\n\n[V0_FILE]javascript:file=\"package.json\" isFixed=\"true\" isQuickEdit=\"true\"\n{\n  \"name\": \"task-management-backend\",\n  \"version\": \"1.0.0\",\n  \"description\": \"Backend for Task Management Application\",\n  \"main\": \"server.js\",\n  \"type\": \"module\",\n  \"private\": true,\n  \"scripts\": {\n    \"start\": \"node server.js\",\n    \"dev\": \"nodemon server.js\",\n    \"test\": \"jest\"\n  },\n  \"dependencies\": {\n    \"bcrypt\": \"^5.1.1\",\n    \"cookie-parser\": \"^1.4.6\",\n    \"cors\": \"^2.8.5\",\n    \"dotenv\": \"^16.3.1\",\n    \"express\": \"^4.18.2\",\n    \"jose\": \"^5.1.1\",\n    \"json2csv\": \"^6.0.0-alpha.2\",\n    \"jsonwebtoken\": \"^9.0.2\",\n    \"mongoose\": \"^8.0.1\",\n    \"multer\": \"^1.4.5-lts.1\",\n    \"node-cron\": \"^3.0.3\",\n    \"nodemailer\": \"^6.9.7\",\n    \"pdfkit\": \"^0.14.0\",\n    \"socket.io\": \"^4.7.2\",\n    \"@hookform/resolvers\": \"^3.9.1\",\n    \"@radix-ui/react-accordion\": \"^1.2.2\",\n    \"@radix-ui/react-alert-dialog\": \"^1.1.4\",\n    \"@radix-ui/react-aspect-ratio\": \"^1.1.1\",\n    \"@radix-ui/react-avatar\": \"^1.1.2\",\n    \"@radix-ui/react-checkbox\": \"^1.1.3\",\n    \"@radix-ui/react-collapsible\": \"^1.1.2\",\n    \"@radix-ui/react-context-menu\": \"^2.2.4\",\n    \"@radix-ui/react-dialog\": \"^1.1.4\",\n    \"@radix-ui/react-dropdown-menu\": \"^2.1.4\",\n    \"@radix-ui/react-hover-card\": \"^1.1.4\",\n    \"@radix-ui/react-label\": \"^2.1.1\",\n    \"@radix-ui/react-menubar\": \"^1.1.4\",\n    \"@radix-ui/react-navigation-menu\": \"^1.2.3\",\n    \"@radix-ui/react-popover\": \"^1.1.4\",\n    \"@radix-ui/react-progress\": \"^1.1.1\",\n    \"@radix-ui/react-radio-group\": \"^1.2.2\",\n    \"@radix-ui/react-scroll-area\": \"^1.2.2\",\n    \"@radix-ui/react-select\": \"^2.1.4\",\n    \"@radix-ui/react-separator\": \"^1.1.1\",\n    \"@radix-ui/react-slider\": \"^1.2.2\",\n    \"@radix-ui/react-slot\": \"^1.1.1\",\n    \"@radix-ui/react-switch\": \"^1.1.2\",\n    \"@radix-ui/react-tabs\": \"^1.1.2\",\n    \"@radix-ui/react-toast\": \"^1.2.4\",\n    \"@radix-ui/react-toggle\": \"^1.1.1\",\n    \"@radix-ui/react-toggle-group\": \"^1.1.1\",\n    \"@radix-ui/react-tooltip\": \"^1.1.6\",\n    \"autoprefixer\": \"^10.4.20\",\n    \"class-variance-authority\": \"^0.7.1\",\n    \"clsx\": \"^2.1.1\",\n    \"cmdk\": \"1.0.4\",\n    \"date-fns\": \"4.1.0\",\n    \"embla-carousel-react\": \"8.5.1\",\n    \"input-otp\": \"1.4.1\",\n    \"lucide-react\": \"^0.454.0\",\n    \"next\": \"14.2.16\",\n    \"next-themes\": \"^0.4.4\",\n    \"react\": \"^19\",\n    \"react-day-picker\": \"8.10.1\",\n    \"react-dom\": \"^19\",\n    \"react-hook-form\": \"^7.54.1\",\n    \"react-resizable-panels\": \"^2.1.7\",\n    \"recharts\": \"2.15.0\",\n    \"sonner\": \"^1.7.1\",\n    \"tailwind-merge\": \"^2.5.5\",\n    \"tailwindcss-animate\": \"^1.0.7\",\n    \"vaul\": \"^0.9.6\",\n    \"zod\": \"^3.24.1\"\n  },\n  \"devDependencies\": {\n    \"jest\": \"^29.7.0\",\n    \"nodemon\": \"^3.0.1\",\n    \"supertest\": \"^6.3.3\",\n    \"@types/node\": \"^22\",\n    \"@types/react\": \"^18\",\n    \"@types/react-dom\": \"^18\",\n    \"postcss\": \"^8\",\n    \"tailwindcss\": \"^3.4.17\",\n    \"typescript\": \"^5\"\n  },\n  \"engines\": {\n    \"node\": \"\u003e=18.0.0\"\n  }\n}\n\n[V0_FILE]javascript:file=\".env.example\"\n# Server Configuration\nPORT=5000\nNODE_ENV=development\nFRONTEND_URL=http://localhost:3000\n\n# MongoDB Configuration\nMONGODB_URI=mongodb://localhost:27017/task-management\n\n# JWT Configuration\nJWT_SECRET=your_jwt_secret_key\n\n# Email Configuration\nEMAIL_HOST=smtp.example.com\nEMAIL_PORT=587\nEMAIL_SECURE=false\nEMAIL_USER=user@example.com\nEMAIL_PASS=password\nEMAIL_FROM=Task Management \u003cnoreply@taskmanagement.com\u003e\n\n# File Upload Configuration\nUPLOAD_PATH=uploads\n"])</script><script>self.__next_f.push([1,"2b:[\"$\",\"$L4e\",null,{\"params\":{\"chatId\":\"xwMbPfe8hWt\"},\"promises\":{\"data\":\"$@4f\",\"permissions\":\"$@50\",\"project\":\"$@51\",\"deploymentStatus\":\"$@52\"},\"children\":[\"$\",\"$L35\",null,{\"data\":{\"chat:id\":\"xwMbPfe8hWt\",\"block:output:initial\":{\"id\":\"b_DsBjUrm49AS\",\"file\":\"$undefined\",\"result\":\"$@53\"},\"@\\\"chat:sql-exec-provider\\\",\\\"xwMbPfe8hWt\\\",\":\"$@54\",\"@\\\"blocks-execution-states\\\",\\\"xwMbPfe8hWt\\\",\":\"$Q55\",\"@\\\"block:forked-from\\\",\\\"xwMbPfe8hWt\\\",\":\"$Q56\",\"@\\\"block:template-ids\\\",\\\"xwMbPfe8hWt\\\",\":\"$Q57\",\"@\\\"block:createdAt\\\",\\\"xwMbPfe8hWt\\\",\":\"$Q58\",\"@\\\"chat:drafts\\\",\\\"xwMbPfe8hWt\\\",\":null,\"@\\\"chat:state\\\",\\\"xwMbPfe8hWt\\\",\":{\"messages\":[{\"content\":\"$59\",\"role\":\"user\",\"id\":\"ZB59YFvULEYvdfpLugnBt9bfWL64vdig\",\"attachments\":[],\"parentId\":\"$undefined\",\"type\":\"message\",\"authorId\":\"3TrnvW3giHw6Nukv5CZNo7x6\",\"createdAt\":\"$D2025-03-12T07:42:28.941Z\"},{\"content\":[[0,[[\"p\",{},[\"text\",{},\"I'll help you build a task management web app with React for the frontend. Let's start by creating a structured, scalable frontend application that implements the features you've requested.\"]],[\"Thinking\",{\"closed\":true,\"chars\":1140},[\"p\",{},[\"text\",{},\"Let's plan out the frontend architecture for this task management app:\"]],[\"ol\",{\"start\":1},[\"li\",{\"index\":1},[\"p\",{},[\"text\",{},\"Project Structure:\"]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"text\",{},\"Next.js App Router for routing and organization\"]],[\"li\",{\"index\":2},[\"text\",{},\"Components organized by feature/functionality\"]],[\"li\",{\"index\":3},[\"text\",{},\"Proper state management\"]],[\"li\",{\"index\":4},[\"text\",{},\"Authentication flow\"]],[\"li\",{\"index\":5},[\"text\",{},\"API integration\"]]]],[\"li\",{\"index\":2},[\"p\",{},[\"text\",{},\"Features to implement:\"]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"text\",{},\"Task assignment and prioritization with Kanban board\"]],[\"li\",{\"index\":2},[\"text\",{},\"Deadline tracking\"]],[\"li\",{\"index\":3},[\"text\",{},\"Progress reporting with charts\"]],[\"li\",{\"index\":4},[\"text\",{},\"Role-based permissions\"]],[\"li\",{\"index\":5},[\"text\",{},\"Real-time collaboration\"]],[\"li\",{\"index\":6},[\"text\",{},\"Authentication\"]]]],[\"li\",{\"index\":3},[\"p\",{},[\"text\",{},\"UI Components:\"]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"text\",{},\"Dashboard layout\"]],[\"li\",{\"index\":2},[\"text\",{},\"Kanban board\"]],[\"li\",{\"index\":3},[\"text\",{},\"Task cards\"]],[\"li\",{\"index\":4},[\"text\",{},\"Forms for task creation/editing\"]],[\"li\",{\"index\":5},[\"text\",{},\"User management\"]],[\"li\",{\"index\":6},[\"text\",{},\"Charts for reporting\"]],[\"li\",{\"index\":7},[\"text\",{},\"Authentication forms\"]]]],[\"li\",{\"index\":4},[\"p\",{},[\"text\",{},\"Libraries to use:\"]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"text\",{},\"shadcn/ui for UI components\"]],[\"li\",{\"index\":2},[\"text\",{},\"Tailwind CSS for styling\"]],[\"li\",{\"index\":3},[\"text\",{},\"Recharts for charts\"]],[\"li\",{\"index\":4},[\"text\",{},\"React DnD or similar for Kanban functionality\"]],[\"li\",{\"index\":5},[\"text\",{},\"JWT handling for auth\"]]]]],[\"p\",{},[\"text\",{},\"Let's start with the core structure and implement the main features one by one.\"]]],[\"h3\",{},[\"text\",{},\"Task Management Web App - Frontend Implementation\"]],[\"p\",{},[\"text\",{},\"I'll create a comprehensive React frontend for your task management application using Next.js with the App Router. This implementation will include all the features you requested while following best practices for scalability and security.\"]],[\"Codeblock\",{\"lang\":\"typescriptreact\",\"meta\":{\"type\":\"code-project\",\"id\":\"task-management-app\",\"project\":\"task-management-app\"},\"closed\":true,\"blockId\":\"b_ziXtDRY6T4u\",\"resultId\":\"$undefined\",\"source\":\"$5a\",\"remoteInfo\":\"$undefined\",\"latestDeploymentInfo\":\"$undefined\",\"lastDeployedAt\":\"$undefined\",\"lastEditedAt\":\"$undefined\"},\"$5b\"],[\"p\",{},[\"text\",{},\"This completes the frontend implementation for your task management web app. I've created a comprehensive React application using Next.js with the App Router that includes all the features you requested:\"]],[\"h3\",{},[\"text\",{},\"Key Features Implemented:\"]],[\"ol\",{\"start\":1},[\"li\",{\"index\":1},[\"p\",{},[\"strong\",{},[\"text\",{},\"Task Assignment and Prioritization\"]]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"text\",{},\"Kanban board with drag-and-drop functionality\"]],[\"li\",{\"index\":2},[\"text\",{},\"Priority levels (High, Medium, Low) with visual indicators\"]],[\"li\",{\"index\":3},[\"text\",{},\"Task assignment to team members\"]]]],[\"li\",{\"index\":2},[\"p\",{},[\"strong\",{},[\"text\",{},\"Deadline Tracking and Notifications\"]]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"text\",{},\"Due date selection and display\"]],[\"li\",{\"index\":2},[\"text\",{},\"Deadline reminders and overdue task indicators\"]],[\"li\",{\"index\":3},[\"text\",{},\"Notification preferences management\"]]]],[\"li\",{\"index\":3},[\"p\",{},[\"strong\",{},[\"text\",{},\"Progress Reporting\"]]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"text\",{},\"Visual charts for task completion rates\"]],[\"li\",{\"index\":2},[\"text\",{},\"Team performance metrics\"]],[\"li\",{\"index\":3},[\"text\",{},\"Task priority distribution visualization\"]]]],[\"li\",{\"index\":4},[\"p\",{},[\"strong\",{},[\"text\",{},\"Role-Based Permissions\"]]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"text\",{},\"Admin, Editor, and Viewer roles\"]],[\"li\",{\"index\":2},[\"text\",{},\"Permission-based access control\"]],[\"li\",{\"index\":3},[\"text\",{},\"User management interface for admins\"]]]],[\"li\",{\"index\":5},[\"p\",{},[\"strong\",{},[\"text\",{},\"Real-Time Collaboration\"]]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"text\",{},\"Task comments system\"]],[\"li\",{\"index\":2},[\"text\",{},\"File attachment capabilities\"]],[\"li\",{\"index\":3},[\"text\",{},\"Team member visibility\"]]]],[\"li\",{\"index\":6},[\"p\",{},[\"strong\",{},[\"text\",{},\"Secure Authentication and Authorization\"]]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"text\",{},\"JWT-based authentication\"]],[\"li\",{\"index\":2},[\"text\",{},\"Login/registration forms\"]],[\"li\",{\"index\":3},[\"text\",{},\"Password management and security settings\"]]]]],[\"h3\",{},[\"text\",{},\"Technical Implementation:\"]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"strong\",{},[\"text\",{},\"Component Structure\"]],[\"text\",{},\": Organized by feature for better maintainability\"]],[\"li\",{\"index\":2},[\"strong\",{},[\"text\",{},\"State Management\"]],[\"text\",{},\": Using React hooks for local state\"]],[\"li\",{\"index\":3},[\"strong\",{},[\"text\",{},\"UI Components\"]],[\"text\",{},\": Built with shadcn/ui and Tailwind CSS\"]],[\"li\",{\"index\":4},[\"strong\",{},[\"text\",{},\"Data Visualization\"]],[\"text\",{},\": Charts for reporting using Recharts\"]],[\"li\",{\"index\":5},[\"strong\",{},[\"text\",{},\"Form Handling\"]],[\"text\",{},\": Form validation and submission handling\"]],[\"li\",{\"index\":6},[\"strong\",{},[\"text\",{},\"Responsive Design\"]],[\"text\",{},\": Mobile-friendly layouts throughout\"]]],[\"p\",{},[\"text\",{},\"To complete the application, you'll need to implement the backend with Node.js and MongoDB. Would you like me to continue with the backend implementation next?\"]],[\"p\",{},[\"text\",{},\"Please make sure to add the following environment variable to your project:\"]],[\"AddEnvironmentVariables\",{\"names\":[\"JWT_SECRET\"]}]]],[1,{\"title\":\"React frontend code\"}]],\"context\":[],\"isContentLoading\":false,\"role\":\"assistant\",\"id\":\"za1cMufE0uQvKgohFeMkNcIgXmMZpLMG\",\"streaming\":false,\"relevantFiles\":\"$undefined\",\"grepQueries\":\"$undefined\",\"finishReason\":\"stop\",\"vote\":\"$undefined\",\"parentId\":\"ZB59YFvULEYvdfpLugnBt9bfWL64vdig\",\"loadingBlocks\":\"$undefined\",\"type\":\"message\",\"createdAt\":\"$D2025-03-12T07:42:28.942Z\"},{\"content\":\"The environment variable JWT_SECRET has been added to the [Vercel Project]().\",\"role\":\"user\",\"id\":\"rIRPt1rBVHqEKYHvJU3kfE7zHkjvL6v5\",\"attachments\":[],\"parentId\":\"za1cMufE0uQvKgohFeMkNcIgXmMZpLMG\",\"type\":\"added-environment-variables\",\"authorId\":\"3TrnvW3giHw6Nukv5CZNo7x6\",\"createdAt\":\"$D2025-03-12T07:50:26.072Z\"},{\"content\":[[0,[[\"Thinking\",{\"closed\":true,\"chars\":693},[\"p\",{},[\"text\",{},\"Great! The user has confirmed that the JWT_SECRET environment variable has been added to their Vercel project. Now I can proceed with creating the backend implementation for the task management app. I'll focus on building a Node.js backend with MongoDB integration that will support all the features we implemented in the frontend.\"]],[\"p\",{},[\"text\",{},\"For the backend, I'll need to create:\"]],[\"ol\",{\"start\":1},[\"li\",{\"index\":1},[\"text\",{},\"Server setup with Express.js\"]],[\"li\",{\"index\":2},[\"text\",{},\"MongoDB connection and schemas\"]],[\"li\",{\"index\":3},[\"text\",{},\"Authentication middleware with JWT\"]],[\"li\",{\"index\":4},[\"text\",{},\"API routes for tasks, users, comments, etc.\"]],[\"li\",{\"index\":5},[\"text\",{},\"Real-time functionality with Socket.io\"]],[\"li\",{\"index\":6},[\"text\",{},\"File upload handling\"]],[\"li\",{\"index\":7},[\"text\",{},\"Email notification system\"]]],[\"p\",{},[\"text\",{},\"I'll structure the code in a clean, modular way following best practices.\"]]],[\"p\",{},[\"text\",{},\"Great! Now that you have the JWT_SECRET environment variable set up, let's implement the backend for your task management application using Node.js and MongoDB.\"]],[\"Codeblock\",{\"lang\":\"typescriptreact\",\"meta\":{\"type\":\"code-project\",\"id\":\"task-management-app\",\"project\":\"task-management-app\"},\"closed\":true,\"blockId\":\"b_DsBjUrm49AS\",\"resultId\":\"$undefined\",\"source\":\"$5c\",\"remoteInfo\":\"$undefined\",\"latestDeploymentInfo\":\"$undefined\",\"lastDeployedAt\":\"$undefined\",\"lastEditedAt\":\"$undefined\"},\"$5d\"],[\"h2\",{},[\"text\",{},\"Backend Implementation for Task Management App\"]],[\"p\",{},[\"text\",{},\"I've completed the backend implementation for your task management application using Node.js and MongoDB. This backend provides all the necessary APIs and functionality to support the frontend we created earlier. Let me explain the key components of the backend implementation:\"]],[\"h3\",{},[\"text\",{},\"Key Features Implemented:\"]],[\"ol\",{\"start\":1},[\"li\",{\"index\":1},[\"p\",{},[\"strong\",{},[\"text\",{},\"RESTful API Architecture\"]]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"text\",{},\"Complete set of CRUD operations for tasks, users, comments, and notifications\"]],[\"li\",{\"index\":2},[\"text\",{},\"Well-structured routes with proper middleware for authentication and authorization\"]],[\"li\",{\"index\":3},[\"text\",{},\"Error handling middleware for consistent error responses\"]]]],[\"li\",{\"index\":2},[\"p\",{},[\"strong\",{},[\"text\",{},\"Authentication \u0026 Authorization\"]]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"text\",{},\"JWT-based authentication with secure token handling\"]],[\"li\",{\"index\":2},[\"text\",{},\"Role-based access control (admin, editor, viewer)\"]],[\"li\",{\"index\":3},[\"text\",{},\"Password hashing with bcrypt for security\"]],[\"li\",{\"index\":4},[\"text\",{},\"OAuth integration for Google and GitHub login\"]]]],[\"li\",{\"index\":3},[\"p\",{},[\"strong\",{},[\"text\",{},\"Database Models\"]]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"text\",{},\"Mongoose schemas with validation for all entities\"]],[\"li\",{\"index\":2},[\"text\",{},\"Proper relationships between models (tasks, users, comments, notifications)\"]],[\"li\",{\"index\":3},[\"text\",{},\"Indexing for optimized query performance\"]]]],[\"li\",{\"index\":4},[\"p\",{},[\"strong\",{},[\"text\",{},\"Real-time Functionality\"]]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"text\",{},\"Socket.io integration for real-time updates\"]],[\"li\",{\"index\":2},[\"text\",{},\"Live notifications for task assignments, comments, and mentions\"]],[\"li\",{\"index\":3},[\"text\",{},\"Real-time collaboration features\"]]]],[\"li\",{\"index\":5},[\"p\",{},[\"strong\",{},[\"text\",{},\"File Upload \u0026 Management\"]]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"text\",{},\"Secure file upload with Multer\"]],[\"li\",{\"index\":2},[\"text\",{},\"Support for various file types (images, documents, etc.)\"]],[\"li\",{\"index\":3},[\"text\",{},\"Organized file storage structure\"]]]],[\"li\",{\"index\":6},[\"p\",{},[\"strong\",{},[\"text\",{},\"Reporting \u0026 Data Export\"]]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"text\",{},\"Comprehensive reporting APIs for task completion, team performance, etc.\"]],[\"li\",{\"index\":2},[\"text\",{},\"Export functionality to PDF and CSV formats\"]],[\"li\",{\"index\":3},[\"text\",{},\"Aggregation pipelines for data analysis\"]]]],[\"li\",{\"index\":7},[\"p\",{},[\"strong\",{},[\"text\",{},\"Notification System\"]]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"text\",{},\"In-app notifications\"]],[\"li\",{\"index\":2},[\"text\",{},\"Email notifications with Nodemailer\"]],[\"li\",{\"index\":3},[\"text\",{},\"Scheduled reminders for upcoming deadlines\"]]]],[\"li\",{\"index\":8},[\"p\",{},[\"strong\",{},[\"text\",{},\"Scheduled Jobs\"]]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"text\",{},\"Automated deadline reminders\"]],[\"li\",{\"index\":2},[\"text\",{},\"Weekly digest emails\"]],[\"li\",{\"index\":3},[\"text\",{},\"Task status updates\"]]]]],[\"h3\",{},[\"text\",{},\"Integration with Frontend:\"]],[\"p\",{},[\"text\",{},\"To connect the frontend with this backend:\"]],[\"ol\",{\"start\":1},[\"li\",{\"index\":1},[\"p\",{},[\"strong\",{},[\"text\",{},\"Environment Setup\"]],[\"text\",{},\":\"]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"text\",{},\"Create a \"],[\"code\",{},\".env\"],[\"text\",{},\" file based on the \"],[\"code\",{},\".env.example\"],[\"text\",{},\" template\"]],[\"li\",{\"index\":2},[\"text\",{},\"Set your MongoDB connection string, JWT secret, and other configuration\"]]]],[\"li\",{\"index\":2},[\"p\",{},[\"strong\",{},[\"text\",{},\"Running the Backend\"]],[\"text\",{},\":\"]],[\"Codeblock\",{\"lang\":\"shellscript\",\"meta\":{},\"closed\":true},\"npm install\\nnpm run dev\"]],[\"li\",{\"index\":3},[\"p\",{},[\"strong\",{},[\"text\",{},\"API Configuration in Frontend\"]],[\"text\",{},\":\"]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"text\",{},\"Update the API base URL in your frontend to point to your backend server\"]],[\"li\",{\"index\":2},[\"text\",{},\"Ensure the JWT token is properly passed in requests\"]]]],[\"li\",{\"index\":4},[\"p\",{},[\"strong\",{},[\"text\",{},\"Socket.io Connection\"]],[\"text\",{},\":\"]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"text\",{},\"Connect to the WebSocket server from your frontend for real-time updates\"]],[\"li\",{\"index\":2},[\"text\",{},\"Implement event listeners for notifications and updates\"]]]]],[\"h3\",{},[\"text\",{},\"Security Considerations:\"]],[\"p\",{},[\"text\",{},\"The backend implements several security best practices:\"]],[\"ol\",{\"start\":1},[\"li\",{\"index\":1},[\"text\",{},\"Password hashing with bcrypt\"]],[\"li\",{\"index\":2},[\"text\",{},\"JWT for secure authentication\"]],[\"li\",{\"index\":3},[\"text\",{},\"CORS configuration to prevent unauthorized access\"]],[\"li\",{\"index\":4},[\"text\",{},\"Input validation to prevent injection attacks\"]],[\"li\",{\"index\":5},[\"text\",{},\"Role-based access control for authorization\"]],[\"li\",{\"index\":6},[\"text\",{},\"Secure file upload handling\"]]],[\"h3\",{},[\"text\",{},\"Deployment Recommendations:\"]],[\"p\",{},[\"text\",{},\"For deploying this full-stack application:\"]],[\"ol\",{\"start\":1},[\"li\",{\"index\":1},[\"strong\",{},[\"text\",{},\"Backend\"]],[\"text\",{},\": Deploy to a Node.js-friendly platform like Vercel, Heroku, or AWS\"]],[\"li\",{\"index\":2},[\"strong\",{},[\"text\",{},\"Database\"]],[\"text\",{},\": Use MongoDB Atlas for a managed MongoDB solution\"]],[\"li\",{\"index\":3},[\"strong\",{},[\"text\",{},\"Frontend\"]],[\"text\",{},\": Deploy to Vercel or Netlify for optimal performance\"]],[\"li\",{\"index\":4},[\"strong\",{},[\"text\",{},\"Environment Variables\"]],[\"text\",{},\": Securely configure all environment variables in your hosting platform\"]],[\"li\",{\"index\":5},[\"strong\",{},[\"text\",{},\"HTTPS\"]],[\"text\",{},\": Ensure all communication uses HTTPS for security\"]]],[\"p\",{},[\"text\",{},\"This complete implementation provides a solid foundation for your task management application with all the requested features. The modular architecture allows for easy extension and customization as your requirements evolve.\"]],[\"p\",{},[\"text\",{},\"Please make sure to add the following environment variables to your project:\"]],[\"AddEnvironmentVariables\",{\"names\":[\"PORT\",\"FRONTEND_URL\",\"MONGODB_URI\",\"EMAIL_HOST\",\"EMAIL_PORT\",\"EMAIL_SECURE\",\"EMAIL_USER\",\"EMAIL_PASS\",\"EMAIL_FROM\"]}]]],[1,{}]],\"context\":[],\"isContentLoading\":false,\"role\":\"assistant\",\"id\":\"hbkpp78Xpw6UJXoj8p2hrM6olNHHjBnN\",\"streaming\":false,\"relevantFiles\":\"$undefined\",\"grepQueries\":\"$undefined\",\"finishReason\":\"stop\",\"vote\":\"$undefined\",\"parentId\":\"rIRPt1rBVHqEKYHvJU3kfE7zHkjvL6v5\",\"loadingBlocks\":\"$undefined\",\"type\":\"message\",\"createdAt\":\"$D2025-03-12T07:50:26.073Z\"},{\"content\":\"do you support the preview for the code written in nodejs\",\"role\":\"user\",\"id\":\"cBYV9J5punHvaVOangVHCJ68hg05XyaT\",\"attachments\":[],\"parentId\":\"hbkpp78Xpw6UJXoj8p2hrM6olNHHjBnN\",\"type\":\"message\",\"authorId\":\"3TrnvW3giHw6Nukv5CZNo7x6\",\"createdAt\":\"$D2025-03-16T04:50:39.912Z\"},{\"content\":[[0,[[\"Thinking\",{\"closed\":true,\"chars\":236},[\"p\",{},[\"text\",{},\"The user is asking if I support previewing Node.js code. They're likely wondering if they can execute or preview the Node.js backend code I've provided directly in this chat interface, similar to how React components can be previewed.\"]]],[\"p\",{},[\"text\",{},\"Yes, I do support previewing and executing Node.js code! You can run Node.js code directly in our conversation using the Node.js executable block. This allows you to test and see the output of backend code snippets without having to set up a local environment.\"]],[\"p\",{},[\"text\",{},\"Let me demonstrate with a simple example that shows some of the task management backend functionality:\"]],[\"Codeblock\",{\"lang\":\"javascript\",\"meta\":{\"project\":\"Task Management Demo\",\"file\":\"task-demo.js\",\"type\":\"nodejs\"},\"closed\":true,\"blockId\":\"b_licofAqb22B\",\"resultId\":\"$undefined\",\"source\":\"$5e\",\"latestDeploymentInfo\":\"$undefined\",\"lastDeployedAt\":\"$undefined\",\"lastEditedAt\":\"$undefined\"},\"$5f\"],[\"p\",{},[\"text\",{},\"You can click the \\\"Run\\\" button to execute this code and see the output. This is a simplified demonstration, but you can use this feature to test more complex parts of the backend code I provided earlier.\"]],[\"p\",{},[\"text\",{},\"If you'd like to test specific parts of the backend implementation, let me know, and I can create more focused Node.js executable examples for you.\"]]]],[1,{}]],\"context\":[],\"isContentLoading\":false,\"role\":\"assistant\",\"id\":\"GjNQutkUo1US1FQk43pp591fHyTltCRW\",\"streaming\":false,\"relevantFiles\":\"$undefined\",\"grepQueries\":\"$undefined\",\"finishReason\":\"stop\",\"vote\":\"$undefined\",\"parentId\":\"cBYV9J5punHvaVOangVHCJ68hg05XyaT\",\"loadingBlocks\":\"$undefined\",\"type\":\"message\",\"createdAt\":\"$D2025-03-16T04:50:39.913Z\"},{\"content\":\"write the backend of the task managment website in Nodejs completely\",\"role\":\"user\",\"id\":\"LELA1r2uHrlG4glozIzfHZBuAJWNemQV\",\"attachments\":[],\"parentId\":\"GjNQutkUo1US1FQk43pp591fHyTltCRW\",\"type\":\"message\",\"authorId\":\"3TrnvW3giHw6Nukv5CZNo7x6\",\"createdAt\":\"$D2025-03-16T04:51:56.873Z\"},{\"content\":[[0,[[\"Thinking\",{\"closed\":true,\"chars\":591},[\"p\",{},[\"text\",{},\"The user is asking for a complete Node.js backend implementation for the task management website. I'll create a comprehensive backend that includes all the necessary components:\"]],[\"ol\",{\"start\":1},[\"li\",{\"index\":1},[\"text\",{},\"Server setup with Express\"]],[\"li\",{\"index\":2},[\"text\",{},\"MongoDB connection with Mongoose\"]],[\"li\",{\"index\":3},[\"text\",{},\"Authentication with JWT\"]],[\"li\",{\"index\":4},[\"text\",{},\"User management\"]],[\"li\",{\"index\":5},[\"text\",{},\"Task management\"]],[\"li\",{\"index\":6},[\"text\",{},\"Comments and notifications\"]],[\"li\",{\"index\":7},[\"text\",{},\"File uploads\"]],[\"li\",{\"index\":8},[\"text\",{},\"Socket.io for real-time updates\"]]],[\"p\",{},[\"text\",{},\"I'll organize this into a structured project with proper separation of concerns. Since this is a large codebase, I'll focus on creating the most important files and explaining the structure clearly.\"]]],[\"h3\",{},[\"text\",{},\"Complete Node.js Backend for Task Management Website\"]],[\"p\",{},[\"text\",{},\"I'll create a comprehensive backend implementation for your task management application. This will include all the necessary components for a production-ready backend.\"]],[\"p\",{},[\"text\",{},\"Let's start with the main server file and then build out the rest of the application:\"]],[\"Codeblock\",{\"lang\":\"javascript\",\"meta\":{\"project\":\"Task Management Backend\",\"file\":\"server.js\",\"type\":\"code\"},\"closed\":true,\"blockId\":\"b_dQFv16063iB\",\"resultId\":\"$undefined\",\"source\":\"$60\",\"latestDeploymentInfo\":\"$undefined\",\"lastDeployedAt\":\"$undefined\",\"lastEditedAt\":\"$undefined\"},\"$61\"],[\"p\",{},[\"text\",{},\"Now, let's create the models for our database:\"]],[\"Codeblock\",{\"lang\":\"javascript\",\"meta\":{\"project\":\"Task Management Backend\",\"file\":\"models/User.js\",\"type\":\"code\"},\"closed\":true,\"blockId\":\"b_aWSIXSqhU7z\",\"resultId\":\"$undefined\",\"source\":\"$62\",\"latestDeploymentInfo\":\"$undefined\",\"lastDeployedAt\":\"$undefined\",\"lastEditedAt\":\"$undefined\"},\"$63\"],[\"Codeblock\",{\"lang\":\"javascript\",\"meta\":{\"project\":\"Task Management Backend\",\"file\":\"models/Task.js\",\"type\":\"code\"},\"closed\":true,\"blockId\":\"b_dw1WvYsMPad\",\"resultId\":\"$undefined\",\"source\":\"$64\",\"latestDeploymentInfo\":\"$undefined\",\"lastDeployedAt\":\"$undefined\",\"lastEditedAt\":\"$undefined\"},\"$65\"],[\"Codeblock\",{\"lang\":\"javascript\",\"meta\":{\"project\":\"Task Management Backend\",\"file\":\"models/Comment.js\",\"type\":\"code\"},\"closed\":true,\"blockId\":\"b_TaCaAzHRcKS\",\"resultId\":\"$undefined\",\"source\":\"import mongoose from \\\"mongoose\\\";\\n\\nconst commentSchema = new mongoose.Schema(\\n  {\\n    task: {\\n      type: mongoose.Schema.Types.ObjectId,\\n      ref: \\\"Task\\\",\\n      required: true,\\n    },\\n    user: {\\n      type: mongoose.Schema.Types.ObjectId,\\n      ref: \\\"User\\\",\\n      required: true,\\n    },\\n    content: {\\n      type: String,\\n      required: [true, \\\"Comment content is required\\\"],\\n      trim: true,\\n    },\\n    mentions: [\\n      {\\n        type: mongoose.Schema.Types.ObjectId,\\n        ref: \\\"User\\\",\\n      },\\n    ],\\n    attachments: [\\n      {\\n        name: String,\\n        path: String,\\n        type: String,\\n        size: Number,\\n        uploadedAt: {\\n          type: Date,\\n          default: Date.now,\\n        },\\n      },\\n    ],\\n  },\\n  {\\n    timestamps: true,\\n  },\\n);\\n\\n// Create indexes for better query performance\\ncommentSchema.index({ task: 1 });\\ncommentSchema.index({ user: 1 });\\ncommentSchema.index({ createdAt: -1 });\\n\\nconst Comment = mongoose.model(\\\"Comment\\\", commentSchema);\\n\\nexport default Comment;\",\"latestDeploymentInfo\":\"$undefined\",\"lastDeployedAt\":\"$undefined\",\"lastEditedAt\":\"$undefined\"},\"import mongoose from \\\"mongoose\\\";\\n\\nconst commentSchema = new mongoose.Schema(\\n  {\\n    task: {\\n      type: mongoose.Schema.Types.ObjectId,\\n      ref: \\\"Task\\\",\\n      required: true,\\n    },\\n    user: {\\n      type: mongoose.Schema.Types.ObjectId,\\n      ref: \\\"User\\\",\\n      required: true,\\n    },\\n    content: {\\n      type: String,\\n      required: [true, \\\"Comment content is required\\\"],\\n      trim: true,\\n    },\\n    mentions: [\\n      {\\n        type: mongoose.Schema.Types.ObjectId,\\n        ref: \\\"User\\\",\\n      },\\n    ],\\n    attachments: [\\n      {\\n        name: String,\\n        path: String,\\n        type: String,\\n        size: Number,\\n        uploadedAt: {\\n          type: Date,\\n          default: Date.now,\\n        },\\n      },\\n    ],\\n  },\\n  {\\n    timestamps: true,\\n  },\\n);\\n\\n// Create indexes for better query performance\\ncommentSchema.index({ task: 1 });\\ncommentSchema.index({ user: 1 });\\ncommentSchema.index({ createdAt: -1 });\\n\\nconst Comment = mongoose.model(\\\"Comment\\\", commentSchema);\\n\\nexport default Comment;\"],[\"Codeblock\",{\"lang\":\"javascript\",\"meta\":{\"project\":\"Task Management Backend\",\"file\":\"models/Notification.js\",\"type\":\"code\"},\"closed\":true,\"blockId\":\"b_Fe77xFVKTs4\",\"resultId\":\"$undefined\",\"source\":\"$66\",\"latestDeploymentInfo\":\"$undefined\",\"lastDeployedAt\":\"$undefined\",\"lastEditedAt\":\"$undefined\"},\"$67\"],[\"p\",{},[\"text\",{},\"Now, let's create the middleware for authentication and error handling:\"]],[\"Codeblock\",{\"lang\":\"javascript\",\"meta\":{\"project\":\"Task Management Backend\",\"file\":\"middleware/auth.js\",\"type\":\"code\"},\"closed\":true,\"blockId\":\"b_4IaEDoUN54E\",\"resultId\":\"$undefined\",\"source\":\"$68\",\"latestDeploymentInfo\":\"$undefined\",\"lastDeployedAt\":\"$undefined\",\"lastEditedAt\":\"$undefined\"},\"$69\"],[\"Codeblock\",{\"lang\":\"javascript\",\"meta\":{\"project\":\"Task Management Backend\",\"file\":\"middleware/errorHandler.js\",\"type\":\"code\"},\"closed\":true,\"blockId\":\"b_vgL82lhdt0R\",\"resultId\":\"$undefined\",\"source\":\"// Error handling middleware\\nexport const errorHandler = (err, req, res, next) =\u003e {\\n  const statusCode = err.statusCode || 500;\\n  const message = err.message || \\\"Internal Server Error\\\";\\n\\n  console.error(`[ERROR] ${statusCode} - ${message}`);\\n  if (process.env.NODE_ENV === \\\"development\\\") {\\n    console.error(err.stack);\\n  }\\n\\n  res.status(statusCode).json({\\n    success: false,\\n    status: statusCode,\\n    message,\\n    stack: process.env.NODE_ENV === \\\"development\\\" ? err.stack : {},\\n  });\\n};\",\"latestDeploymentInfo\":\"$undefined\",\"lastDeployedAt\":\"$undefined\",\"lastEditedAt\":\"$undefined\"},\"// Error handling middleware\\nexport const errorHandler = (err, req, res, next) =\u003e {\\n  const statusCode = err.statusCode || 500;\\n  const message = err.message || \\\"Internal Server Error\\\";\\n\\n  console.error(`[ERROR] ${statusCode} - ${message}`);\\n  if (process.env.NODE_ENV === \\\"development\\\") {\\n    console.error(err.stack);\\n  }\\n\\n  res.status(statusCode).json({\\n    success: false,\\n    status: statusCode,\\n    message,\\n    stack: process.env.NODE_ENV === \\\"development\\\" ? err.stack : {},\\n  });\\n};\"],[\"Codeblock\",{\"lang\":\"javascript\",\"meta\":{\"project\":\"Task Management Backend\",\"file\":\"middleware/upload.js\",\"type\":\"code\"},\"closed\":true,\"blockId\":\"b_r7kaWysF38W\",\"resultId\":\"$undefined\",\"source\":\"$6a\",\"latestDeploymentInfo\":\"$undefined\",\"lastDeployedAt\":\"$undefined\",\"lastEditedAt\":\"$undefined\"},\"$6b\"],[\"p\",{},[\"text\",{},\"Now, let's create the route handlers:\"]],[\"Codeblock\",{\"lang\":\"javascript\",\"meta\":{\"project\":\"Task Management Backend\",\"file\":\"routes/auth.js\",\"type\":\"code\"},\"closed\":true,\"blockId\":\"b_LVFWZIx1NAn\",\"resultId\":\"$undefined\",\"source\":\"$6c\",\"latestDeploymentInfo\":\"$undefined\",\"lastDeployedAt\":\"$undefined\",\"lastEditedAt\":\"$undefined\"},\"$6d\"],[\"Codeblock\",{\"lang\":\"javascript\",\"meta\":{\"project\":\"Task Management Backend\",\"file\":\"routes/users.js\",\"type\":\"code\"},\"closed\":true,\"blockId\":\"b_Yz55zBYhKP2\",\"resultId\":\"$undefined\",\"source\":\"$6e\",\"latestDeploymentInfo\":\"$undefined\",\"lastDeployedAt\":\"$undefined\",\"lastEditedAt\":\"$undefined\"},\"$6f\"],[\"p\",{},[\"text\",{},\"I found some issues in the code block.\"]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"text\",{},\"expected \"],[\"code\",{},\")\"],[\"text\",{},\" but instead found \"],[\"code\",{},\"next\"]]],[\"p\",{},[\"text\",{},\"I will fix them.\"]],[\"Codeblock\",{\"lang\":\"javascript\",\"meta\":{\"project\":\"Task Management Backend\",\"file\":\"routes/users.js\",\"type\":\"code\",\"isFixed\":\"true\"},\"closed\":true,\"blockId\":\"b_EhgUWUE9ELV\",\"resultId\":\"$undefined\",\"source\":\"$70\",\"latestDeploymentInfo\":\"$undefined\",\"lastDeployedAt\":\"$undefined\",\"lastEditedAt\":\"$undefined\"},\"$71\"],[\"Codeblock\",{\"lang\":\"javascript\",\"meta\":{\"project\":\"Task Management Backend\",\"file\":\"routes/tasks.js\",\"type\":\"code\"},\"closed\":true,\"blockId\":\"b_56bCXte5aZW\",\"resultId\":\"$undefined\",\"source\":\"$72\",\"latestDeploymentInfo\":\"$undefined\",\"lastDeployedAt\":\"$undefined\",\"lastEditedAt\":\"$undefined\"},\"$73\"],[\"Codeblock\",{\"lang\":\"javascript\",\"meta\":{\"project\":\"Task Management Backend\",\"file\":\"routes/comments.js\",\"type\":\"code\"},\"closed\":true,\"blockId\":\"b_JDRupuXoNDJ\",\"resultId\":\"$undefined\",\"source\":\"$74\",\"latestDeploymentInfo\":\"$undefined\",\"lastDeployedAt\":\"$undefined\",\"lastEditedAt\":\"$undefined\"},\"$75\"],[\"Codeblock\",{\"lang\":\"javascript\",\"meta\":{\"project\":\"Task Management Backend\",\"file\":\"routes/notifications.js\",\"type\":\"code\"},\"closed\":true,\"blockId\":\"b_HvByXziVBAQ\",\"resultId\":\"$undefined\",\"source\":\"$76\",\"latestDeploymentInfo\":\"$undefined\",\"lastDeployedAt\":\"$undefined\",\"lastEditedAt\":\"$undefined\"},\"$77\"],[\"Codeblock\",{\"lang\":\"javascript\",\"meta\":{\"project\":\"Task Management Backend\",\"file\":\"routes/reports.js\",\"type\":\"code\"},\"closed\":true,\"blockId\":\"b_EiyqaDkSPt5\",\"resultId\":\"$undefined\",\"source\":\"$78\",\"latestDeploymentInfo\":\"$undefined\",\"lastDeployedAt\":\"$undefined\",\"lastEditedAt\":\"$undefined\"},\"$79\"],[\"p\",{},[\"text\",{},\"Now, let's create the utility files:\"]],[\"Codeblock\",{\"lang\":\"javascript\",\"meta\":{\"project\":\"Task Management Backend\",\"file\":\"utils/error.js\",\"type\":\"code\"},\"closed\":true,\"blockId\":\"b_wa7sA2Uqpfy\",\"resultId\":\"$undefined\",\"source\":\"// Create custom error with status code\\nexport const createError = (statusCode, message) =\u003e {\\n  const error = new Error(message);\\n  error.statusCode = statusCode;\\n  return error;\\n};\",\"latestDeploymentInfo\":\"$undefined\",\"lastDeployedAt\":\"$undefined\",\"lastEditedAt\":\"$undefined\"},\"// Create custom error with status code\\nexport const createError = (statusCode, message) =\u003e {\\n  const error = new Error(message);\\n  error.statusCode = statusCode;\\n  return error;\\n};\"],[\"Codeblock\",{\"lang\":\"javascript\",\"meta\":{\"project\":\"Task Management Backend\",\"file\":\"utils/email.js\",\"type\":\"code\"},\"closed\":true,\"blockId\":\"b_4Ip545uDOCJ\",\"resultId\":\"$undefined\",\"source\":\"$7a\",\"latestDeploymentInfo\":\"$undefined\",\"lastDeployedAt\":\"$undefined\",\"lastEditedAt\":\"$undefined\"},\"$7b\"],[\"Codeblock\",{\"lang\":\"javascript\",\"meta\":{\"project\":\"Task Management Backend\",\"file\":\"utils/export.js\",\"type\":\"code\"},\"closed\":true,\"blockId\":\"b_tkUnrsg5LdA\",\"resultId\":\"$undefined\",\"source\":\"$7c\",\"latestDeploymentInfo\":\"$undefined\",\"lastDeployedAt\":\"$undefined\",\"lastEditedAt\":\"$undefined\"},\"$7d\"],[\"Codeblock\",{\"lang\":\"javascript\",\"meta\":{\"project\":\"Task Management Backend\",\"file\":\"utils/scheduler.js\",\"type\":\"code\"},\"closed\":true,\"blockId\":\"b_RMVpqoDSbDW\",\"resultId\":\"$undefined\",\"source\":\"$7e\",\"latestDeploymentInfo\":\"$undefined\",\"lastDeployedAt\":\"$undefined\",\"lastEditedAt\":\"$undefined\"},\"$7f\"],[\"Codeblock\",{\"lang\":\"javascript\",\"meta\":{\"project\":\"Task Management Backend\",\"file\":\"socket/socketHandlers.js\",\"type\":\"code\"},\"closed\":true,\"blockId\":\"b_ZjGn6OWeTM5\",\"resultId\":\"$undefined\",\"source\":\"$80\",\"latestDeploymentInfo\":\"$undefined\",\"lastDeployedAt\":\"$undefined\",\"lastEditedAt\":\"$undefined\"},\"$81\"],[\"p\",{},[\"text\",{},\"Finally, let's create the environment variables file:\"]],[\"Codeblock\",{\"lang\":\"plaintext\",\"meta\":{\"project\":\"Task Management Backend\",\"file\":\".env.example\",\"type\":\"code\"},\"closed\":true,\"blockId\":\"b_xuNsm3mxjhy\",\"resultId\":\"$undefined\",\"source\":\"# Server Configuration\\nPORT=5000\\nNODE_ENV=development\\nFRONTEND_URL=http://localhost:3000\\n\\n# MongoDB Configuration\\nMONGODB_URI=mongodb://localhost:27017/task-management\\n\\n# JWT Configuration\\nJWT_SECRET=your_jwt_secret_key\\n\\n# Email Configuration\\nEMAIL_HOST=smtp.example.com\\nEMAIL_PORT=587\\nEMAIL_SECURE=false\\nEMAIL_USER=user@example.com\\nEMAIL_PASS=password\\nEMAIL_FROM=Task Management \u003cnoreply@taskmanagement.com\u003e\\n\\n# File Upload Configuration\\nUPLOAD_PATH=uploads\",\"latestDeploymentInfo\":\"$undefined\",\"lastDeployedAt\":\"$undefined\",\"lastEditedAt\":\"$undefined\"},\"# Server Configuration\\nPORT=5000\\nNODE_ENV=development\\nFRONTEND_URL=http://localhost:3000\\n\\n# MongoDB Configuration\\nMONGODB_URI=mongodb://localhost:27017/task-management\\n\\n# JWT Configuration\\nJWT_SECRET=your_jwt_secret_key\\n\\n# Email Configuration\\nEMAIL_HOST=smtp.example.com\\nEMAIL_PORT=587\\nEMAIL_SECURE=false\\nEMAIL_USER=user@example.com\\nEMAIL_PASS=password\\nEMAIL_FROM=Task Management \u003cnoreply@taskmanagement.com\u003e\\n\\n# File Upload Configuration\\nUPLOAD_PATH=uploads\"],[\"p\",{},[\"text\",{},\"And the package.json file:\"]],[\"Codeblock\",{\"lang\":\"json\",\"meta\":{\"project\":\"Task Management Backend\",\"file\":\"package.json\",\"type\":\"code\"},\"closed\":true,\"blockId\":\"b_r20rrt0by07\",\"resultId\":\"$undefined\",\"source\":\"{\\n  \\\"name\\\": \\\"task-management-backend\\\",\\n  \\\"version\\\": \\\"1.0.0\\\",\\n  \\\"description\\\": \\\"Backend for Task Management Application\\\",\\n  \\\"main\\\": \\\"server.js\\\",\\n  \\\"type\\\": \\\"module\\\",\\n  \\\"private\\\": true,\\n  \\\"scripts\\\": {\\n    \\\"start\\\": \\\"node server.js\\\",\\n    \\\"dev\\\": \\\"nodemon server.js\\\",\\n    \\\"test\\\": \\\"jest\\\"\\n  },\\n  \\\"dependencies\\\": {\\n    \\\"bcrypt\\\": \\\"^5.1.1\\\",\\n    \\\"cookie-parser\\\": \\\"^1.4.6\\\",\\n    \\\"cors\\\": \\\"^2.8.5\\\",\\n    \\\"dotenv\\\": \\\"^16.3.1\\\",\\n    \\\"express\\\": \\\"^4.18.2\\\",\\n    \\\"jose\\\": \\\"^5.1.1\\\",\\n    \\\"json2csv\\\": \\\"^6.0.0-alpha.2\\\",\\n    \\\"jsonwebtoken\\\": \\\"^9.0.2\\\",\\n    \\\"mongoose\\\": \\\"^8.0.1\\\",\\n    \\\"multer\\\": \\\"^1.4.5-lts.1\\\",\\n    \\\"node-cron\\\": \\\"^3.0.3\\\",\\n    \\\"nodemailer\\\": \\\"^6.9.7\\\",\\n    \\\"pdfkit\\\": \\\"^0.14.0\\\",\\n    \\\"socket.io\\\": \\\"^4.7.2\\\"\\n  },\\n  \\\"devDependencies\\\": {\\n    \\\"jest\\\": \\\"^29.7.0\\\",\\n    \\\"nodemon\\\": \\\"^3.0.1\\\",\\n    \\\"supertest\\\": \\\"^6.3.3\\\"\\n  },\\n  \\\"engines\\\": {\\n    \\\"node\\\": \\\"\u003e=18.0.0\\\"\\n  }\\n}\",\"latestDeploymentInfo\":\"$undefined\",\"lastDeployedAt\":\"$undefined\",\"lastEditedAt\":\"$undefined\"},\"{\\n  \\\"name\\\": \\\"task-management-backend\\\",\\n  \\\"version\\\": \\\"1.0.0\\\",\\n  \\\"description\\\": \\\"Backend for Task Management Application\\\",\\n  \\\"main\\\": \\\"server.js\\\",\\n  \\\"type\\\": \\\"module\\\",\\n  \\\"private\\\": true,\\n  \\\"scripts\\\": {\\n    \\\"start\\\": \\\"node server.js\\\",\\n    \\\"dev\\\": \\\"nodemon server.js\\\",\\n    \\\"test\\\": \\\"jest\\\"\\n  },\\n  \\\"dependencies\\\": {\\n    \\\"bcrypt\\\": \\\"^5.1.1\\\",\\n    \\\"cookie-parser\\\": \\\"^1.4.6\\\",\\n    \\\"cors\\\": \\\"^2.8.5\\\",\\n    \\\"dotenv\\\": \\\"^16.3.1\\\",\\n    \\\"express\\\": \\\"^4.18.2\\\",\\n    \\\"jose\\\": \\\"^5.1.1\\\",\\n    \\\"json2csv\\\": \\\"^6.0.0-alpha.2\\\",\\n    \\\"jsonwebtoken\\\": \\\"^9.0.2\\\",\\n    \\\"mongoose\\\": \\\"^8.0.1\\\",\\n    \\\"multer\\\": \\\"^1.4.5-lts.1\\\",\\n    \\\"node-cron\\\": \\\"^3.0.3\\\",\\n    \\\"nodemailer\\\": \\\"^6.9.7\\\",\\n    \\\"pdfkit\\\": \\\"^0.14.0\\\",\\n    \\\"socket.io\\\": \\\"^4.7.2\\\"\\n  },\\n  \\\"devDependencies\\\": {\\n    \\\"jest\\\": \\\"^29.7.0\\\",\\n    \\\"nodemon\\\": \\\"^3.0.1\\\",\\n    \\\"supertest\\\": \\\"^6.3.3\\\"\\n  },\\n  \\\"engines\\\": {\\n    \\\"node\\\": \\\"\u003e=18.0.0\\\"\\n  }\\n}\"],[\"p\",{},[\"text\",{},\"I did not output the full code. I will fix this.\"]],[\"Codeblock\",{\"lang\":\"json\",\"meta\":{\"project\":\"Task Management Backend\",\"file\":\"package.json\",\"type\":\"code\",\"isFixed\":\"true\"},\"closed\":true,\"blockId\":\"b_TR4z7KynM4h\",\"resultId\":\"$undefined\",\"source\":\"{\\n  \\\"name\\\": \\\"task-management-backend\\\",\\n  \\\"version\\\": \\\"1.0.0\\\",\\n  \\\"description\\\": \\\"Backend for Task Management Application\\\",\\n  \\\"main\\\": \\\"server.js\\\",\\n  \\\"type\\\": \\\"module\\\",\\n  \\\"private\\\": true,\\n  \\\"scripts\\\": {\\n    \\\"start\\\": \\\"node server.js\\\",\\n    \\\"dev\\\": \\\"nodemon server.js\\\",\\n    \\\"test\\\": \\\"jest\\\"\\n  },\\n  \\\"dependencies\\\": {\\n    \\\"bcrypt\\\": \\\"^5.1.1\\\",\\n    \\\"cookie-parser\\\": \\\"^1.4.6\\\",\\n    \\\"cors\\\": \\\"^2.8.5\\\",\\n    \\\"dotenv\\\": \\\"^16.3.1\\\",\\n    \\\"express\\\": \\\"^4.18.2\\\",\\n    \\\"jose\\\": \\\"^5.1.1\\\",\\n    \\\"json2csv\\\": \\\"^6.0.0-alpha.2\\\",\\n    \\\"jsonwebtoken\\\": \\\"^9.0.2\\\",\\n    \\\"mongoose\\\": \\\"^8.0.1\\\",\\n    \\\"multer\\\": \\\"^1.4.5-lts.1\\\",\\n    \\\"node-cron\\\": \\\"^3.0.3\\\",\\n    \\\"nodemailer\\\": \\\"^6.9.7\\\",\\n    \\\"pdfkit\\\": \\\"^0.14.0\\\",\\n    \\\"socket.io\\\": \\\"^4.7.2\\\"\\n  },\\n  \\\"devDependencies\\\": {\\n    \\\"jest\\\": \\\"^29.7.0\\\",\\n    \\\"nodemon\\\": \\\"^3.0.1\\\",\\n    \\\"supertest\\\": \\\"^6.3.3\\\"\\n  },\\n  \\\"engines\\\": {\\n    \\\"node\\\": \\\"\u003e=18.0.0\\\"\\n  }\\n}\",\"latestDeploymentInfo\":\"$undefined\",\"lastDeployedAt\":\"$undefined\",\"lastEditedAt\":\"$undefined\"},\"{\\n  \\\"name\\\": \\\"task-management-backend\\\",\\n  \\\"version\\\": \\\"1.0.0\\\",\\n  \\\"description\\\": \\\"Backend for Task Management Application\\\",\\n  \\\"main\\\": \\\"server.js\\\",\\n  \\\"type\\\": \\\"module\\\",\\n  \\\"private\\\": true,\\n  \\\"scripts\\\": {\\n    \\\"start\\\": \\\"node server.js\\\",\\n    \\\"dev\\\": \\\"nodemon server.js\\\",\\n    \\\"test\\\": \\\"jest\\\"\\n  },\\n  \\\"dependencies\\\": {\\n    \\\"bcrypt\\\": \\\"^5.1.1\\\",\\n    \\\"cookie-parser\\\": \\\"^1.4.6\\\",\\n    \\\"cors\\\": \\\"^2.8.5\\\",\\n    \\\"dotenv\\\": \\\"^16.3.1\\\",\\n    \\\"express\\\": \\\"^4.18.2\\\",\\n    \\\"jose\\\": \\\"^5.1.1\\\",\\n    \\\"json2csv\\\": \\\"^6.0.0-alpha.2\\\",\\n    \\\"jsonwebtoken\\\": \\\"^9.0.2\\\",\\n    \\\"mongoose\\\": \\\"^8.0.1\\\",\\n    \\\"multer\\\": \\\"^1.4.5-lts.1\\\",\\n    \\\"node-cron\\\": \\\"^3.0.3\\\",\\n    \\\"nodemailer\\\": \\\"^6.9.7\\\",\\n    \\\"pdfkit\\\": \\\"^0.14.0\\\",\\n    \\\"socket.io\\\": \\\"^4.7.2\\\"\\n  },\\n  \\\"devDependencies\\\": {\\n    \\\"jest\\\": \\\"^29.7.0\\\",\\n    \\\"nodemon\\\": \\\"^3.0.1\\\",\\n    \\\"supertest\\\": \\\"^6.3.3\\\"\\n  },\\n  \\\"engines\\\": {\\n    \\\"node\\\": \\\"\u003e=18.0.0\\\"\\n  }\\n}\"],[\"h2\",{},[\"text\",{},\"How to Run the Backend\"]],[\"ol\",{\"start\":1},[\"li\",{\"index\":1},[\"text\",{},\"Clone the repository\"]],[\"li\",{\"index\":2},[\"text\",{},\"Install dependencies: \"],[\"code\",{},\"npm install\"]],[\"li\",{\"index\":3},[\"text\",{},\"Create a \"],[\"code\",{},\".env\"],[\"text\",{},\" file based on \"],[\"code\",{},\".env.example\"]],[\"li\",{\"index\":4},[\"text\",{},\"Start the development server: \"],[\"code\",{},\"npm run dev\"]]],[\"h2\",{},[\"text\",{},\"API Documentation\"]],[\"p\",{},[\"text\",{},\"The backend provides the following API endpoints:\"]],[\"h3\",{},[\"text\",{},\"Authentication\"]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"code\",{},\"POST /api/auth/register\"],[\"text\",{},\" - Register a new user\"]],[\"li\",{\"index\":2},[\"code\",{},\"POST /api/auth/login\"],[\"text\",{},\" - Login user\"]],[\"li\",{\"index\":3},[\"code\",{},\"POST /api/auth/logout\"],[\"text\",{},\" - Logout user\"]],[\"li\",{\"index\":4},[\"code\",{},\"GET /api/auth/me\"],[\"text\",{},\" - Get current user\"]],[\"li\",{\"index\":5},[\"code\",{},\"POST /api/auth/forgot-password\"],[\"text\",{},\" - Request password reset\"]],[\"li\",{\"index\":6},[\"code\",{},\"POST /api/auth/reset-password/:token\"],[\"text\",{},\" - Reset password\"]]],[\"h3\",{},[\"text\",{},\"Users\"]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"code\",{},\"GET /api/users\"],[\"text\",{},\" - Get all users (admin only)\"]],[\"li\",{\"index\":2},[\"code\",{},\"GET /api/users/:id\"],[\"text\",{},\" - Get user by ID\"]],[\"li\",{\"index\":3},[\"code\",{},\"PUT /api/users/:id\"],[\"text\",{},\" - Update user\"]],[\"li\",{\"index\":4},[\"code\",{},\"PUT /api/users/:id/avatar\"],[\"text\",{},\" - Update user avatar\"]],[\"li\",{\"index\":5},[\"code\",{},\"PUT /api/users/:id/password\"],[\"text\",{},\" - Change password\"]],[\"li\",{\"index\":6},[\"code\",{},\"PUT /api/users/:id/two-factor\"],[\"text\",{},\" - Toggle two-factor authentication\"]],[\"li\",{\"index\":7},[\"code\",{},\"DELETE /api/users/:id\"],[\"text\",{},\" - Delete user (admin only)\"]],[\"li\",{\"index\":8},[\"code\",{},\"GET /api/users/:id/tasks\"],[\"text\",{},\" - Get user tasks\"]]],[\"h3\",{},[\"text\",{},\"Tasks\"]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"code\",{},\"POST /api/tasks\"],[\"text\",{},\" - Create a new task\"]],[\"li\",{\"index\":2},[\"code\",{},\"GET /api/tasks\"],[\"text\",{},\" - Get all tasks\"]],[\"li\",{\"index\":3},[\"code\",{},\"GET /api/tasks/:id\"],[\"text\",{},\" - Get task by ID\"]],[\"li\",{\"index\":4},[\"code\",{},\"PUT /api/tasks/:id\"],[\"text\",{},\" - Update task\"]],[\"li\",{\"index\":5},[\"code\",{},\"DELETE /api/tasks/:id\"],[\"text\",{},\" - Delete task\"]],[\"li\",{\"index\":6},[\"code\",{},\"POST /api/tasks/:id/attachments\"],[\"text\",{},\" - Add attachment to task\"]],[\"li\",{\"index\":7},[\"code\",{},\"DELETE /api/tasks/:id/attachments/:attachmentId\"],[\"text\",{},\" - Delete attachment from task\"]],[\"li\",{\"index\":8},[\"code\",{},\"POST /api/tasks/:id/watchers\"],[\"text\",{},\" - Add watcher to task\"]],[\"li\",{\"index\":9},[\"code\",{},\"DELETE /api/tasks/:id/watchers\"],[\"text\",{},\" - Remove watcher from task\"]]],[\"h3\",{},[\"text\",{},\"Comments\"]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"code\",{},\"POST /api/comments\"],[\"text\",{},\" - Create a new comment\"]],[\"li\",{\"index\":2},[\"code\",{},\"GET /api/comments/task/:taskId\"],[\"text\",{},\" - Get comments for a task\"]],[\"li\",{\"index\":3},[\"code\",{},\"PUT /api/comments/:id\"],[\"text\",{},\" - Update comment\"]],[\"li\",{\"index\":4},[\"code\",{},\"DELETE /api/comments/:id\"],[\"text\",{},\" - Delete comment\"]],[\"li\",{\"index\":5},[\"code\",{},\"POST /api/comments/:id/attachments\"],[\"text\",{},\" - Add attachment to comment\"]]],[\"h3\",{},[\"text\",{},\"Notifications\"]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"code\",{},\"GET /api/notifications\"],[\"text\",{},\" - Get user notifications\"]],[\"li\",{\"index\":2},[\"code\",{},\"PUT /api/notifications/:id/read\"],[\"text\",{},\" - Mark notification as read\"]],[\"li\",{\"index\":3},[\"code\",{},\"PUT /api/notifications/read-all\"],[\"text\",{},\" - Mark all notifications as read\"]],[\"li\",{\"index\":4},[\"code\",{},\"DELETE /api/notifications/:id\"],[\"text\",{},\" - Delete notification\"]],[\"li\",{\"index\":5},[\"code\",{},\"DELETE /api/notifications\"],[\"text\",{},\" - Delete all notifications\"]]],[\"h3\",{},[\"text\",{},\"Reports\"]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"code\",{},\"GET /api/reports/task-completion\"],[\"text\",{},\" - Get task completion report\"]],[\"li\",{\"index\":2},[\"code\",{},\"GET /api/reports/team-performance\"],[\"text\",{},\" - Get team performance report\"]],[\"li\",{\"index\":3},[\"code\",{},\"GET /api/reports/priority-distribution\"],[\"text\",{},\" - Get priority distribution report\"]],[\"li\",{\"index\":4},[\"code\",{},\"GET /api/reports/overdue-tasks\"],[\"text\",{},\" - Get overdue tasks report\"]]],[\"p\",{},[\"text\",{},\"This backend implementation provides a complete solution for your task management application with all the necessary features including authentication, task management, comments, notifications, file uploads, and reporting.\"]],[\"p\",{},[\"text\",{},\"Please make sure to add the following environment variables to your project:\"]],[\"AddEnvironmentVariables\",{\"names\":[\"PORT\",\"FRONTEND_URL\",\"MONGODB_URI\",\"EMAIL_HOST\",\"EMAIL_PORT\",\"EMAIL_SECURE\",\"EMAIL_USER\",\"EMAIL_PASS\",\"EMAIL_FROM\"]}]]],[1,{}]],\"context\":[],\"isContentLoading\":false,\"role\":\"assistant\",\"id\":\"YsHs1I6nndFyLiFBj38VEhFASipiPVCU\",\"streaming\":false,\"relevantFiles\":\"$undefined\",\"grepQueries\":\"$undefined\",\"finishReason\":\"stop\",\"vote\":\"$undefined\",\"parentId\":\"LELA1r2uHrlG4glozIzfHZBuAJWNemQV\",\"loadingBlocks\":\"$undefined\",\"type\":\"message\",\"createdAt\":\"$D2025-03-16T04:51:56.874Z\"},{\"content\":\"how can i get the frontend and backend code on my VS Code\",\"role\":\"user\",\"id\":\"npRSw6ptcTAjSWyDGwuozrxTQoPNF30w\",\"attachments\":[],\"parentId\":\"YsHs1I6nndFyLiFBj38VEhFASipiPVCU\",\"type\":\"message\",\"authorId\":\"3TrnvW3giHw6Nukv5CZNo7x6\",\"createdAt\":\"$D2025-03-16T05:05:45.549Z\"},{\"content\":[[0,[[\"Thinking\",{\"closed\":true,\"chars\":399},[\"p\",{},[\"text\",{},\"The user wants to know how to get the frontend and backend code into their VS Code environment. I'll provide clear instructions on how to:\"]],[\"ol\",{\"start\":1},[\"li\",{\"index\":1},[\"text\",{},\"Clone or download the code\"]],[\"li\",{\"index\":2},[\"text\",{},\"Set up the project structure\"]],[\"li\",{\"index\":3},[\"text\",{},\"Open it in VS Code\"]],[\"li\",{\"index\":4},[\"text\",{},\"Install dependencies\"]],[\"li\",{\"index\":5},[\"text\",{},\"Configure environment variables\"]],[\"li\",{\"index\":6},[\"text\",{},\"Run both the frontend and backend\"]]],[\"p\",{},[\"text\",{},\"I'll make sure to provide step-by-step instructions that are easy to follow.\"]]],[\"h3\",{},[\"text\",{},\"Setting Up the Task Management Project in VS Code\"]],[\"p\",{},[\"text\",{},\"Here's a step-by-step guide to get both the frontend and backend code working in VS Code:\"]],[\"h2\",{},[\"text\",{},\"Step 1: Create Project Folders\"]],[\"p\",{},[\"text\",{},\"First, create a main project folder with separate directories for frontend and backend:\"]],[\"Codeblock\",{\"lang\":\"shellscript\",\"meta\":{},\"closed\":true},\"mkdir task-management-app\\ncd task-management-app\\nmkdir frontend backend\"],[\"h2\",{},[\"text\",{},\"Step 2: Set Up the Backend\"]],[\"ol\",{\"start\":1},[\"li\",{\"index\":1},[\"p\",{},[\"strong\",{},[\"text\",{},\"Navigate to the backend folder\"]],[\"text\",{},\":\"]],[\"Codeblock\",{\"lang\":\"shellscript\",\"meta\":{},\"closed\":true},\"cd backend\"]],[\"li\",{\"index\":2},[\"p\",{},[\"strong\",{},[\"text\",{},\"Initialize a new Node.js project\"]],[\"text\",{},\":\"]],[\"Codeblock\",{\"lang\":\"shellscript\",\"meta\":{},\"closed\":true},\"npm init -y\"]],[\"li\",{\"index\":3},[\"p\",{},[\"strong\",{},[\"text\",{},\"Create the necessary files and folders\"]],[\"text\",{},\" based on our backend code:\"]],[\"Codeblock\",{\"lang\":\"shellscript\",\"meta\":{},\"closed\":true},\"mkdir models routes middleware utils socket uploads\\ntouch server.js .env .gitignore\"]],[\"li\",{\"index\":4},[\"p\",{},[\"strong\",{},[\"text\",{},\"Copy the backend code\"]],[\"text\",{},\" from our conversation into the appropriate files. For example:\"]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"code\",{},\"server.js\"],[\"text\",{},\" in the root directory\"]],[\"li\",{\"index\":2},[\"text\",{},\"Model files in the \"],[\"code\",{},\"models\"],[\"text\",{},\" folder\"]],[\"li\",{\"index\":3},[\"text\",{},\"Route files in the \"],[\"code\",{},\"routes\"],[\"text\",{},\" folder\"]],[\"li\",{\"index\":4},[\"text\",{},\"And so on...\"]]]],[\"li\",{\"index\":5},[\"strong\",{},[\"text\",{},\"Create a package.json file\"]],[\"text\",{},\" with the dependencies we discussed or copy the one from our conversation.\"]],[\"li\",{\"index\":6},[\"p\",{},[\"strong\",{},[\"text\",{},\"Install dependencies\"]],[\"text\",{},\":\"]],[\"Codeblock\",{\"lang\":\"shellscript\",\"meta\":{},\"closed\":true},\"npm install\"]],[\"li\",{\"index\":7},[\"strong\",{},[\"text\",{},\"Set up environment variables\"]],[\"text\",{},\" by creating a \"],[\"code\",{},\".env\"],[\"text\",{},\" file based on the \"],[\"code\",{},\".env.example\"],[\"text\",{},\" we provided.\"]]],[\"h2\",{},[\"text\",{},\"Step 3: Set Up the Frontend\"]],[\"ol\",{\"start\":1},[\"li\",{\"index\":1},[\"p\",{},[\"strong\",{},[\"text\",{},\"Navigate to the frontend folder\"]],[\"text\",{},\":\"]],[\"Codeblock\",{\"lang\":\"shellscript\",\"meta\":{},\"closed\":true},\"cd ../frontend\"]],[\"li\",{\"index\":2},[\"p\",{},[\"strong\",{},[\"text\",{},\"Create a Next.js app\"]],[\"text\",{},\":\"]],[\"Codeblock\",{\"lang\":\"shellscript\",\"meta\":{},\"closed\":true},\"npx create-next-app@latest .\"],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"p\",{},[\"text\",{},\"When prompted, select:\"]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"text\",{},\"Yes to TypeScript\"]],[\"li\",{\"index\":2},[\"text\",{},\"Yes to ESLint\"]],[\"li\",{\"index\":3},[\"text\",{},\"Yes to Tailwind CSS\"]],[\"li\",{\"index\":4},[\"text\",{},\"Yes to \"],[\"code\",{},\"src/\"],[\"text\",{},\" directory (optional)\"]],[\"li\",{\"index\":5},[\"text\",{},\"Yes to App Router\"]]]]]],[\"li\",{\"index\":3},[\"strong\",{},[\"text\",{},\"Copy the frontend code\"]],[\"text\",{},\" from our previous conversation into the appropriate files and folders.\"]],[\"li\",{\"index\":4},[\"p\",{},[\"strong\",{},[\"text\",{},\"Install additional dependencies\"]],[\"text\",{},\" needed for the frontend:\"]],[\"Codeblock\",{\"lang\":\"shellscript\",\"meta\":{},\"closed\":true},\"npm install @radix-ui/react-icons @radix-ui/react-slot class-variance-authority clsx lucide-react tailwind-merge tailwindcss-animate react-hook-form zod @hookform/resolvers recharts date-fns\"]],[\"li\",{\"index\":5},[\"p\",{},[\"strong\",{},[\"text\",{},\"Create a \"],[\"code\",{},\".env.local\"],[\"text\",{},\" file\"]],[\"text\",{},\" in the frontend directory with the backend URL:\"]],[\"Codeblock\",{\"lang\":\"plaintext\",\"meta\":{},\"closed\":true},\"NEXT_PUBLIC_API_URL=http://localhost:5000/api\"]]],[\"h2\",{},[\"text\",{},\"Step 4: Open the Project in VS Code\"]],[\"ol\",{\"start\":1},[\"li\",{\"index\":1},[\"p\",{},[\"strong\",{},[\"text\",{},\"Open VS Code\"]],[\"text\",{},\":\"]],[\"Codeblock\",{\"lang\":\"shellscript\",\"meta\":{},\"closed\":true},\"code .\"],[\"p\",{},[\"text\",{},\"This will open the entire project in VS Code.\"]]],[\"li\",{\"index\":2},[\"strong\",{},[\"text\",{},\"Use VS Code's Explorer\"]],[\"text\",{},\" to navigate through the project structure and edit files as needed.\"]]],[\"h2\",{},[\"text\",{},\"Step 5: Run the Project\"]],[\"ol\",{\"start\":1},[\"li\",{\"index\":1},[\"p\",{},[\"strong\",{},[\"text\",{},\"Start the backend server\"]],[\"text\",{},\":\"]],[\"Codeblock\",{\"lang\":\"shellscript\",\"meta\":{},\"closed\":true},\"cd backend\\nnpm run dev\"],[\"p\",{},[\"text\",{},\"This will start the backend server on port 5000 (or whatever port you specified in your \"],[\"code\",{},\".env\"],[\"text\",{},\" file).\"]]],[\"li\",{\"index\":2},[\"p\",{},[\"strong\",{},[\"text\",{},\"In a new terminal, start the frontend development server\"]],[\"text\",{},\":\"]],[\"Codeblock\",{\"lang\":\"shellscript\",\"meta\":{},\"closed\":true},\"cd frontend\\nnpm run dev\"],[\"p\",{},[\"text\",{},\"This will start the Next.js development server on port 3000.\"]]],[\"li\",{\"index\":3},[\"strong\",{},[\"text\",{},\"Access your application\"]],[\"text\",{},\" at \"],[\"code\",{},\"http://localhost:3000\"],[\"text\",{},\" in your web browser.\"]]],[\"h2\",{},[\"text\",{},\"Alternative: Clone from GitHub\"]],[\"p\",{},[\"text\",{},\"If you've pushed the code to GitHub, you can simply clone it:\"]],[\"ol\",{\"start\":1},[\"li\",{\"index\":1},[\"p\",{},[\"strong\",{},[\"text\",{},\"Clone the repository\"]],[\"text\",{},\":\"]],[\"Codeblock\",{\"lang\":\"shellscript\",\"meta\":{},\"closed\":true},\"git clone https://github.com/yourusername/task-management-app.git\\ncd task-management-app\"]],[\"li\",{\"index\":2},[\"p\",{},[\"strong\",{},[\"text\",{},\"Install dependencies for both frontend and backend\"]],[\"text\",{},\":\"]],[\"Codeblock\",{\"lang\":\"shellscript\",\"meta\":{},\"closed\":true},\"cd backend\\nnpm install\\ncd ../frontend\\nnpm install\"]],[\"li\",{\"index\":3},[\"strong\",{},[\"text\",{},\"Set up environment variables\"]],[\"text\",{},\" for both projects.\"]],[\"li\",{\"index\":4},[\"strong\",{},[\"text\",{},\"Run both servers\"]],[\"text\",{},\" as described in Step 5.\"]]],[\"h2\",{},[\"text\",{},\"Tips for VS Code\"]],[\"ol\",{\"start\":1},[\"li\",{\"index\":1},[\"strong\",{},[\"text\",{},\"Use the integrated terminal\"]],[\"text\",{},\" in VS Code (Terminal \u003e New Terminal) to run commands without leaving the editor.\"]],[\"li\",{\"index\":2},[\"p\",{},[\"strong\",{},[\"text\",{},\"Install helpful extensions\"]],[\"text\",{},\" for your project:\"]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"text\",{},\"ESLint\"]],[\"li\",{\"index\":2},[\"text\",{},\"Prettier\"]],[\"li\",{\"index\":3},[\"text\",{},\"MongoDB for VS Code\"]],[\"li\",{\"index\":4},[\"text\",{},\"Thunder Client (for API testing)\"]],[\"li\",{\"index\":5},[\"text\",{},\"GitLens\"]],[\"li\",{\"index\":6},[\"text\",{},\"Tailwind CSS IntelliSense\"]]]],[\"li\",{\"index\":3},[\"p\",{},[\"strong\",{},[\"text\",{},\"Set up a workspace\"]],[\"text\",{},\" to easily switch between frontend and backend:\"]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"text\",{},\"File \u003e Save Workspace As... \u003e task-management.code-workspace\"]]]],[\"li\",{\"index\":4},[\"p\",{},[\"strong\",{},[\"text\",{},\"Configure launch.json\"]],[\"text\",{},\" for debugging both frontend and backend:\"]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"text\",{},\"Run \u003e Add Configuration \u003e Node.js\"]]]]],[\"h2\",{},[\"text\",{},\"Troubleshooting Common Issues\"]],[\"ol\",{\"start\":1},[\"li\",{\"index\":1},[\"strong\",{},[\"text\",{},\"CORS errors\"]],[\"text\",{},\": Ensure your backend CORS configuration matches your frontend URL.\"]],[\"li\",{\"index\":2},[\"strong\",{},[\"text\",{},\"MongoDB connection issues\"]],[\"text\",{},\": Check that MongoDB is running and your connection string is correct.\"]],[\"li\",{\"index\":3},[\"strong\",{},[\"text\",{},\"Environment variables not loading\"]],[\"text\",{},\": Make sure you've created the \"],[\"code\",{},\".env\"],[\"text\",{},\" files in both frontend and backend directories.\"]],[\"li\",{\"index\":4},[\"strong\",{},[\"text\",{},\"Port conflicts\"]],[\"text\",{},\": If ports are already in use, change them in your configuration files.\"]]],[\"p\",{},[\"text\",{},\"Would you like me to provide more detailed instructions for any specific part of this setup process?\"]]]],[1,{}]],\"context\":[],\"isContentLoading\":false,\"role\":\"assistant\",\"id\":\"fPRkUBBQ0Wr8b1tsLA9OWuAIiz4q76Hx\",\"streaming\":false,\"relevantFiles\":\"$undefined\",\"grepQueries\":\"$undefined\",\"finishReason\":\"stop\",\"vote\":\"$undefined\",\"parentId\":\"npRSw6ptcTAjSWyDGwuozrxTQoPNF30w\",\"loadingBlocks\":\"$undefined\",\"type\":\"message\",\"createdAt\":\"$D2025-03-16T05:05:45.550Z\"}],\"isLoading\":false,\"activeForkKey\":[\"ZB59YFvULEYvdfpLugnBt9bfWL64vdig\",\"za1cMufE0uQvKgohFeMkNcIgXmMZpLMG\",\"rIRPt1rBVHqEKYHvJU3kfE7zHkjvL6v5\",\"hbkpp78Xpw6UJXoj8p2hrM6olNHHjBnN\",\"cBYV9J5punHvaVOangVHCJ68hg05XyaT\",\"GjNQutkUo1US1FQk43pp591fHyTltCRW\",\"LELA1r2uHrlG4glozIzfHZBuAJWNemQV\",\"YsHs1I6nndFyLiFBj38VEhFASipiPVCU\",\"npRSw6ptcTAjSWyDGwuozrxTQoPNF30w\",\"fPRkUBBQ0Wr8b1tsLA9OWuAIiz4q76Hx\"],\"isContinuing\":false,\"isStreaming\":false,\"isAuthor\":false,\"isRestoring\":false,\"hashMessageId\":\"$undefined\"},\"@\\\"blocks-shared\\\",\\\"xwMbPfe8hWt\\\",\":\"$Q82\",\"@\\\"blocks-deployed\\\",\\\"xwMbPfe8hWt\\\",\":\"$Q83\",\"@\\\"blocks-subdomains\\\",\\\"xwMbPfe8hWt\\\",\":\"$Q84\",\"@\\\"blocks-with-branding\\\",\\\"xwMbPfe8hWt\\\",\":\"$Q85\",\"@\\\"unlisted-blocks\\\",\\\"xwMbPfe8hWt\\\",\":\"$Q86\",\"@\\\"active-block\\\",\\\"xwMbPfe8hWt\\\",\":{\"id\":\"b_DsBjUrm49AS\",\"meta\":{\"type\":\"code-project\",\"id\":\"task-management-app\",\"project\":\"task-management-app\"},\"type\":\"code-project\",\"messageId\":\"hbkpp78Xpw6UJXoj8p2hrM6olNHHjBnN\",\"remoteInfo\":\"$undefined\",\"language\":\"typescriptreact\",\"source\":\"$87\",\"resultId\":\"$undefined\",\"closed\":true,\"hasSourceBeenEdited\":false,\"latestDeploymentInfo\":\"$undefined\",\"templateVersionId\":\"$undefined\",\"templateCanonId\":\"$undefined\",\"diffInfo\":\"$undefined\",\"env\":[{\"key\":\"JWT_SECRET\"}],\"forkedFromBlockId\":\"$undefined\",\"isLoading\":false,\"initial\":true,\"fullscreenOnLoad\":true},\"@\\\"chat:meta\\\",\\\"xwMbPfe8hWt\\\",\":{\"title\":\"React frontend code\",\"isNew\":false,\"authorId\":\"3TrnvW3giHw6Nukv5CZNo7x6\",\"ownerId\":\"3TrnvW3giHw6Nukv5CZNo7x6\",\"project\":{\"name\":\"React frontend code\",\"settings\":{\"icon\":\"icon-wand-sparkles\",\"color\":null},\"projectId\":\"Ihr1BpW2BBP\",\"vercelProjectId\":\"prj_KlcSWf5lIHWcWJUI0KuZ0tkk2gkm\",\"isCreator\":false},\"remote\":false,\"canWriteToChat\":false,\"from\":\"$undefined\"},\"@\\\"chat:privacy\\\",\\\"xwMbPfe8hWt\\\",\":\"unlisted\",\"@\\\"project:sources\\\",\\\"Ihr1BpW2BBP\\\",\":[],\"@\\\"project:vercel-project\\\",\\\"Ihr1BpW2BBP\\\",\":\"$undefined\",\"@\\\"project:instructions\\\",\\\"Ihr1BpW2BBP\\\",\":\"$undefined\",\"@\\\"project:screenshot\\\",\\\"Ihr1BpW2BBP\\\",\":\"$undefined\",\"@\\\"project:template\\\",\\\"Ihr1BpW2BBP\\\",\":\"$@88\",\"projects:for-user\":\"$@89\",\"project:can-make-project-updates\":\"$undefined\",\"@\\\"block-view\\\",\\\"xwMbPfe8hWt\\\",\":true,\"result:full-screen\":{\"value\":false,\"source\":\"ssr\"},\"@\\\"block:activeTab\\\",\\\"b_DsBjUrm49AS\\\",\":\"code\",\"model-config\":\"$@8a\",\"suggestions\":\"$@8b\",\"integrations:figma\":\"$@8c\"},\"children\":[\"$L8d\",[\"$\",\"$L8e\",null,{\"chatOrBlock\":\"chat\",\"userDataPromise\":\"$@8f\"}],[\"$\",\"$L90\",null,{\"id\":\"xwMbPfe8hWt\",\"title\":\"React frontend code\"}]]}]}]\n"])</script><script>self.__next_f.push([1,"91:I[47651,[\"86365\",\"static/chunks/dd702a79-b6c7661c8a838128.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"38058\",\"static/chunks/b7a1a8c0-72ee0f814ed13c32.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"79660\",\"static/chunks/8d598023-196a80608fdd6eee.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"73535\",\"static/chunks/73535-103b6060cf97ab6d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"51679\",\"static/chunks/51679-08aafdbd5acc6aa3.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"8557\",\"static/chunks/8557-c2a5e618ccff242d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"3357\",\"static/chunks/3357-a437bd9e1280840c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"56497\",\"static/chunks/56497-9a15f5e7fc5e058e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69053\",\"static/chunks/69053-2a18fec337af0c69.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69790\",\"static/chunks/69790-06e2618fe911421e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69241\",\"static/chunks/69241-23922ef52da5b76b.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"19199\",\"static/chunks/19199-c732e5ac6f8e2141.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"43207\",\"static/chunks/43207-f2d4fa16ab44d090.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"13280\",\"static/chunks/13280-b6a1193602500b08.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"7921\",\"static/chunks/7921-73dfed29e8c02165.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40626\",\"static/chunks/40626-7aa1c4c6db827c91.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"42626\",\"static/chunks/42626-46c65f92250a4525.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"76442\",\"static/chunks/76442-21e0af1e9dcba237.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93590\",\"static/chunks/93590-52e31b4cbcf9e82d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93307\",\"static/chunks/93307-40c92ad52815d0a2.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"6905\",\"static/chunks/6905-cb9cabc11de7c1e0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"11139\",\"static/chunks/11139-f96710a45351a03f.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20514\",\"static/chunks/20514-f3407bf5b06a848a.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"47682\",\"static/chunks/47682-0d778b613e9847fb.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"53320\",\"static/chunks/53320-a7193a327838943e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"41599\",\"static/chunks/41599-7a7f7cf9c09e7ac7.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20144\",\"static/chunks/20144-63eeced46f10ea05.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"29753\",\"static/chunks/29753-628fdf7767ca547c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"68223\",\"static/chunks/68223-f371eb2e74f42a9c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"67343\",\"static/chunks/67343-0a8a43eba0b25445.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"32349\",\"static/chunks/32349-21720b7e60216f19.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"26877\",\"static/chunks/26877-7997e28f400c72fa.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"48223\",\"static/chunks/48223-7ea74e070987a567.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40390\",\"static/chunks/40390-c9bfaa0de0b72f67.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"17077\",\"static/chunks/17077-6a46ded038f54266.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"33871\",\"static/chunks/33871-ce5211be2bca40e6.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20897\",\"static/chunks/20897-32692800f1878a20.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"60114\",\"static/chunks/60114-1dd8b378f278c46d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"51742\",\"static/chunks/app/chat/%5Bvariants%5D/(dynamic-root)/(home)/(chat)/%40chat/id/page-6849e2289adc65f4.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\"],\"CombinedHeaderProvider\"]\n"])</script><script>self.__next_f.push([1,"92:I[27274,[\"86365\",\"static/chunks/dd702a79-b6c7661c8a838128.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"38058\",\"static/chunks/b7a1a8c0-72ee0f814ed13c32.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"79660\",\"static/chunks/8d598023-196a80608fdd6eee.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"73535\",\"static/chunks/73535-103b6060cf97ab6d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"51679\",\"static/chunks/51679-08aafdbd5acc6aa3.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"8557\",\"static/chunks/8557-c2a5e618ccff242d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"3357\",\"static/chunks/3357-a437bd9e1280840c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"56497\",\"static/chunks/56497-9a15f5e7fc5e058e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69053\",\"static/chunks/69053-2a18fec337af0c69.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69790\",\"static/chunks/69790-06e2618fe911421e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69241\",\"static/chunks/69241-23922ef52da5b76b.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"19199\",\"static/chunks/19199-c732e5ac6f8e2141.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"43207\",\"static/chunks/43207-f2d4fa16ab44d090.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"13280\",\"static/chunks/13280-b6a1193602500b08.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"7921\",\"static/chunks/7921-73dfed29e8c02165.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40626\",\"static/chunks/40626-7aa1c4c6db827c91.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"42626\",\"static/chunks/42626-46c65f92250a4525.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"76442\",\"static/chunks/76442-21e0af1e9dcba237.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93590\",\"static/chunks/93590-52e31b4cbcf9e82d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93307\",\"static/chunks/93307-40c92ad52815d0a2.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"6905\",\"static/chunks/6905-cb9cabc11de7c1e0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"11139\",\"static/chunks/11139-f96710a45351a03f.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20514\",\"static/chunks/20514-f3407bf5b06a848a.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"47682\",\"static/chunks/47682-0d778b613e9847fb.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"53320\",\"static/chunks/53320-a7193a327838943e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"41599\",\"static/chunks/41599-7a7f7cf9c09e7ac7.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20144\",\"static/chunks/20144-63eeced46f10ea05.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"29753\",\"static/chunks/29753-628fdf7767ca547c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"68223\",\"static/chunks/68223-f371eb2e74f42a9c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"67343\",\"static/chunks/67343-0a8a43eba0b25445.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"32349\",\"static/chunks/32349-21720b7e60216f19.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"26877\",\"static/chunks/26877-7997e28f400c72fa.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"48223\",\"static/chunks/48223-7ea74e070987a567.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40390\",\"static/chunks/40390-c9bfaa0de0b72f67.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"17077\",\"static/chunks/17077-6a46ded038f54266.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"33871\",\"static/chunks/33871-ce5211be2bca40e6.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20897\",\"static/chunks/20897-32692800f1878a20.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"60114\",\"static/chunks/60114-1dd8b378f278c46d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"51742\",\"static/chunks/app/chat/%5Bvariants%5D/(dynamic-root)/(home)/(chat)/%40chat/id/page-6849e2289adc65f4.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\"],\"FullChatOuter\"]\n"])</script><script>self.__next_f.push([1,"89:{\"projects\":[],\"selectedProjectId\":null}\n8a:{\"attachmentMaxSizeBytes\":5242880,\"image\":{\"maxSizeBytes\":3932160,\"maxDimensionsPixels\":{\"short\":8000,\"long\":8000},\"maxPerChat\":20},\"contextWindow\":199999}\n8b:[\"generateSaasPricingCalculator\",\"scheduleCronJobs\",\"calculateFactorial\"]\n8c:{\"isSignedIn\":false,\"figmaOauthUrl\":null}\n51:{\"error\":\"3\",\"status\":401}\n52:{\"error\":\"3\"}\n8d:[\"$\",\"$L91\",null,{\"value\":true,\"children\":[\"$\",\"$L92\",null,{\"initialFileTreeSize\":25,\"hasSignedIn\":false,\"blockSize\":75,\"consoleSize\":0,\"consoleExpanded\":false,\"isAuthor\":false,\"isMobile\":false,\"isRemote\":false,\"templates\":\"$L93\",\"delayedMessages\":\"$undefined\"}]}]\n54:null\n"])</script><script>self.__next_f.push([1,"94:I[54398,[\"86365\",\"static/chunks/dd702a79-b6c7661c8a838128.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"38058\",\"static/chunks/b7a1a8c0-72ee0f814ed13c32.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"79660\",\"static/chunks/8d598023-196a80608fdd6eee.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"73535\",\"static/chunks/73535-103b6060cf97ab6d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"51679\",\"static/chunks/51679-08aafdbd5acc6aa3.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"8557\",\"static/chunks/8557-c2a5e618ccff242d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"3357\",\"static/chunks/3357-a437bd9e1280840c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"56497\",\"static/chunks/56497-9a15f5e7fc5e058e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69053\",\"static/chunks/69053-2a18fec337af0c69.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69790\",\"static/chunks/69790-06e2618fe911421e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69241\",\"static/chunks/69241-23922ef52da5b76b.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"19199\",\"static/chunks/19199-c732e5ac6f8e2141.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"43207\",\"static/chunks/43207-f2d4fa16ab44d090.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"13280\",\"static/chunks/13280-b6a1193602500b08.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"7921\",\"static/chunks/7921-73dfed29e8c02165.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40626\",\"static/chunks/40626-7aa1c4c6db827c91.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"42626\",\"static/chunks/42626-46c65f92250a4525.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"76442\",\"static/chunks/76442-21e0af1e9dcba237.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93590\",\"static/chunks/93590-52e31b4cbcf9e82d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93307\",\"static/chunks/93307-40c92ad52815d0a2.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"6905\",\"static/chunks/6905-cb9cabc11de7c1e0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"11139\",\"static/chunks/11139-f96710a45351a03f.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20514\",\"static/chunks/20514-f3407bf5b06a848a.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"47682\",\"static/chunks/47682-0d778b613e9847fb.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"53320\",\"static/chunks/53320-a7193a327838943e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"41599\",\"static/chunks/41599-7a7f7cf9c09e7ac7.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20144\",\"static/chunks/20144-63eeced46f10ea05.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"29753\",\"static/chunks/29753-628fdf7767ca547c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"68223\",\"static/chunks/68223-f371eb2e74f42a9c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"67343\",\"static/chunks/67343-0a8a43eba0b25445.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"32349\",\"static/chunks/32349-21720b7e60216f19.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"26877\",\"static/chunks/26877-7997e28f400c72fa.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"48223\",\"static/chunks/48223-7ea74e070987a567.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40390\",\"static/chunks/40390-c9bfaa0de0b72f67.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"17077\",\"static/chunks/17077-6a46ded038f54266.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"33871\",\"static/chunks/33871-ce5211be2bca40e6.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20897\",\"static/chunks/20897-32692800f1878a20.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"60114\",\"static/chunks/60114-1dd8b378f278c46d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"51742\",\"static/chunks/app/chat/%5Bvariants%5D/(dynamic-root)/(home)/(chat)/%40chat/id/page-6849e2289adc65f4.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\"],\"TemplateFeaturedHeading\"]\n"])</script><script>self.__next_f.push([1,"95:I[54398,[\"86365\",\"static/chunks/dd702a79-b6c7661c8a838128.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"38058\",\"static/chunks/b7a1a8c0-72ee0f814ed13c32.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"79660\",\"static/chunks/8d598023-196a80608fdd6eee.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"73535\",\"static/chunks/73535-103b6060cf97ab6d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"51679\",\"static/chunks/51679-08aafdbd5acc6aa3.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"8557\",\"static/chunks/8557-c2a5e618ccff242d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"3357\",\"static/chunks/3357-a437bd9e1280840c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"56497\",\"static/chunks/56497-9a15f5e7fc5e058e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69053\",\"static/chunks/69053-2a18fec337af0c69.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69790\",\"static/chunks/69790-06e2618fe911421e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69241\",\"static/chunks/69241-23922ef52da5b76b.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"19199\",\"static/chunks/19199-c732e5ac6f8e2141.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"43207\",\"static/chunks/43207-f2d4fa16ab44d090.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"13280\",\"static/chunks/13280-b6a1193602500b08.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"7921\",\"static/chunks/7921-73dfed29e8c02165.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40626\",\"static/chunks/40626-7aa1c4c6db827c91.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"42626\",\"static/chunks/42626-46c65f92250a4525.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"76442\",\"static/chunks/76442-21e0af1e9dcba237.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93590\",\"static/chunks/93590-52e31b4cbcf9e82d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93307\",\"static/chunks/93307-40c92ad52815d0a2.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"6905\",\"static/chunks/6905-cb9cabc11de7c1e0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"11139\",\"static/chunks/11139-f96710a45351a03f.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20514\",\"static/chunks/20514-f3407bf5b06a848a.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"47682\",\"static/chunks/47682-0d778b613e9847fb.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"53320\",\"static/chunks/53320-a7193a327838943e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"41599\",\"static/chunks/41599-7a7f7cf9c09e7ac7.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20144\",\"static/chunks/20144-63eeced46f10ea05.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"29753\",\"static/chunks/29753-628fdf7767ca547c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"68223\",\"static/chunks/68223-f371eb2e74f42a9c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"67343\",\"static/chunks/67343-0a8a43eba0b25445.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"32349\",\"static/chunks/32349-21720b7e60216f19.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"26877\",\"static/chunks/26877-7997e28f400c72fa.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"48223\",\"static/chunks/48223-7ea74e070987a567.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40390\",\"static/chunks/40390-c9bfaa0de0b72f67.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"17077\",\"static/chunks/17077-6a46ded038f54266.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"33871\",\"static/chunks/33871-ce5211be2bca40e6.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20897\",\"static/chunks/20897-32692800f1878a20.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"60114\",\"static/chunks/60114-1dd8b378f278c46d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"51742\",\"static/chunks/app/chat/%5Bvariants%5D/(dynamic-root)/(home)/(chat)/%40chat/id/page-6849e2289adc65f4.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\"],\"TemplateFeaturedBrowseLink\"]\n"])</script><script>self.__next_f.push([1,"96:I[54398,[\"86365\",\"static/chunks/dd702a79-b6c7661c8a838128.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"38058\",\"static/chunks/b7a1a8c0-72ee0f814ed13c32.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"79660\",\"static/chunks/8d598023-196a80608fdd6eee.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"73535\",\"static/chunks/73535-103b6060cf97ab6d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"51679\",\"static/chunks/51679-08aafdbd5acc6aa3.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"8557\",\"static/chunks/8557-c2a5e618ccff242d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"3357\",\"static/chunks/3357-a437bd9e1280840c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"56497\",\"static/chunks/56497-9a15f5e7fc5e058e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69053\",\"static/chunks/69053-2a18fec337af0c69.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69790\",\"static/chunks/69790-06e2618fe911421e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69241\",\"static/chunks/69241-23922ef52da5b76b.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"19199\",\"static/chunks/19199-c732e5ac6f8e2141.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"43207\",\"static/chunks/43207-f2d4fa16ab44d090.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"13280\",\"static/chunks/13280-b6a1193602500b08.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"7921\",\"static/chunks/7921-73dfed29e8c02165.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40626\",\"static/chunks/40626-7aa1c4c6db827c91.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"42626\",\"static/chunks/42626-46c65f92250a4525.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"76442\",\"static/chunks/76442-21e0af1e9dcba237.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93590\",\"static/chunks/93590-52e31b4cbcf9e82d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93307\",\"static/chunks/93307-40c92ad52815d0a2.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"6905\",\"static/chunks/6905-cb9cabc11de7c1e0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"11139\",\"static/chunks/11139-f96710a45351a03f.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20514\",\"static/chunks/20514-f3407bf5b06a848a.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"47682\",\"static/chunks/47682-0d778b613e9847fb.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"53320\",\"static/chunks/53320-a7193a327838943e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"41599\",\"static/chunks/41599-7a7f7cf9c09e7ac7.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20144\",\"static/chunks/20144-63eeced46f10ea05.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"29753\",\"static/chunks/29753-628fdf7767ca547c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"68223\",\"static/chunks/68223-f371eb2e74f42a9c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"67343\",\"static/chunks/67343-0a8a43eba0b25445.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"32349\",\"static/chunks/32349-21720b7e60216f19.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"26877\",\"static/chunks/26877-7997e28f400c72fa.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"48223\",\"static/chunks/48223-7ea74e070987a567.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40390\",\"static/chunks/40390-c9bfaa0de0b72f67.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"17077\",\"static/chunks/17077-6a46ded038f54266.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"33871\",\"static/chunks/33871-ce5211be2bca40e6.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20897\",\"static/chunks/20897-32692800f1878a20.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"60114\",\"static/chunks/60114-1dd8b378f278c46d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"51742\",\"static/chunks/app/chat/%5Bvariants%5D/(dynamic-root)/(home)/(chat)/%40chat/id/page-6849e2289adc65f4.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\"],\"TemplateFeaturedSubheading\"]\n"])</script><script>self.__next_f.push([1,"93:[\"$\",\"div\",null,{\"className\":\"flex flex-col gap-12\",\"children\":[false,[\"$\",\"div\",null,{\"className\":\"flex flex-col gap-4\",\"children\":[[\"$\",\"div\",null,{\"className\":\"flex flex-col gap-1 px-px\",\"children\":[[\"$\",\"div\",null,{\"className\":\"flex items-center justify-between\",\"children\":[[\"$\",\"$L94\",null,{\"children\":\"From the Community\"}],[\"$\",\"$L95\",null,{\"href\":\"/community\",\"children\":[[\"$\",\"span\",null,{\"children\":\"Browse All\"}],[[\"$\",\"svg\",\"165c0noll\",{\"className\":\"$undefined\",\"dangerouslySetInnerHTML\":{\"__html\":\"\u003cpath fill-rule=\\\"evenodd\\\" clip-rule=\\\"evenodd\\\" d=\\\"M6.74999 3.93933L7.28032 4.46966L10.1035 7.29288C10.4941 7.68341 10.4941 8.31657 10.1035 8.7071L7.28032 11.5303L6.74999 12.0607L5.68933 11L6.21966 10.4697L8.68933 7.99999L6.21966 5.53032L5.68933 4.99999L6.74999 3.93933Z\\\" fill=\\\"currentColor\\\"/\u003e\"},\"data-testid\":\"geist-icon\",\"height\":16,\"strokeLinejoin\":\"round\",\"style\":{\"verticalAlign\":\"$undefined\",\"width\":\"$undefined\",\"height\":\"$undefined\",\"color\":\"currentColor\"},\"viewBox\":\"0 0 16 16\",\"width\":16}]]]}]]}],[\"$\",\"$L96\",null,{\"children\":[[\"$\",\"span\",null,{\"className\":\"md:hidden\",\"children\":\"See what the community is building.\"}],[\"$\",\"span\",null,{\"className\":\"hidden md:inline\",\"children\":\"Explore what the community is building with v0.\"}]]}]]}],[\"$\",\"$7\",null,{\"fallback\":[\"$\",\"div\",null,{\"className\":\"flex h-full w-full flex-col gap-6\",\"children\":[[\"$\",\"div\",null,{\"className\":\"flex-1\",\"children\":[\"$\",\"div\",null,{\"className\":\"grid grid-cols-1 justify-center gap-6 sm:grid-cols-2 lg:grid-cols-3\",\"children\":[[\"$\",\"div\",\"0\",{\"className\":\"group/template has-[:focus-visible]:ring-offset-background relative flex w-full flex-col gap-2 text-sm sm:min-w-0\",\"children\":[[\"$\",\"div\",null,{\"className\":\"shadow-base bg-muted relative aspect-video w-full overflow-hidden rounded-lg text-sm has-[:focus-visible]:outline-none has-[:focus-visible]:ring-2 has-[:focus-visible]:ring-blue-600 has-[:focus-visible]:ring-offset-1\",\"children\":[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-full rounded-none\"}]}],[\"$\",\"div\",null,{\"className\":\"flex items-center gap-3 pr-1\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-9 rounded-full\"}],[\"$\",\"div\",null,{\"className\":\"flex flex-1 flex-col gap-1.5\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-32\"}],[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-16\"}]]}]]}]]}],[\"$\",\"div\",\"1\",{\"className\":\"group/template has-[:focus-visible]:ring-offset-background relative flex w-full flex-col gap-2 text-sm sm:min-w-0\",\"children\":[[\"$\",\"div\",null,{\"className\":\"shadow-base bg-muted relative aspect-video w-full overflow-hidden rounded-lg text-sm has-[:focus-visible]:outline-none has-[:focus-visible]:ring-2 has-[:focus-visible]:ring-blue-600 has-[:focus-visible]:ring-offset-1\",\"children\":[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-full rounded-none\"}]}],[\"$\",\"div\",null,{\"className\":\"flex items-center gap-3 pr-1\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-9 rounded-full\"}],[\"$\",\"div\",null,{\"className\":\"flex flex-1 flex-col gap-1.5\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-32\"}],[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-16\"}]]}]]}]]}],[\"$\",\"div\",\"2\",{\"className\":\"group/template has-[:focus-visible]:ring-offset-background relative flex w-full flex-col gap-2 text-sm sm:min-w-0\",\"children\":[[\"$\",\"div\",null,{\"className\":\"shadow-base bg-muted relative aspect-video w-full overflow-hidden rounded-lg text-sm has-[:focus-visible]:outline-none has-[:focus-visible]:ring-2 has-[:focus-visible]:ring-blue-600 has-[:focus-visible]:ring-offset-1\",\"children\":[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-full rounded-none\"}]}],[\"$\",\"div\",null,{\"className\":\"flex items-center gap-3 pr-1\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-9 rounded-full\"}],[\"$\",\"div\",null,{\"className\":\"flex flex-1 flex-col gap-1.5\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-32\"}],[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-16\"}]]}]]}]]}],[\"$\",\"div\",\"3\",{\"className\":\"group/template has-[:focus-visible]:ring-offset-background relative flex w-full flex-col gap-2 text-sm sm:min-w-0\",\"children\":[[\"$\",\"div\",null,{\"className\":\"shadow-base bg-muted relative aspect-video w-full overflow-hidden rounded-lg text-sm has-[:focus-visible]:outline-none has-[:focus-visible]:ring-2 has-[:focus-visible]:ring-blue-600 has-[:focus-visible]:ring-offset-1\",\"children\":[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-full rounded-none\"}]}],[\"$\",\"div\",null,{\"className\":\"flex items-center gap-3 pr-1\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-9 rounded-full\"}],[\"$\",\"div\",null,{\"className\":\"flex flex-1 flex-col gap-1.5\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-32\"}],[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-16\"}]]}]]}]]}],[\"$\",\"div\",\"4\",{\"className\":\"group/template has-[:focus-visible]:ring-offset-background relative flex w-full flex-col gap-2 text-sm sm:min-w-0\",\"children\":[[\"$\",\"div\",null,{\"className\":\"shadow-base bg-muted relative aspect-video w-full overflow-hidden rounded-lg text-sm has-[:focus-visible]:outline-none has-[:focus-visible]:ring-2 has-[:focus-visible]:ring-blue-600 has-[:focus-visible]:ring-offset-1\",\"children\":[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-full rounded-none\"}]}],[\"$\",\"div\",null,{\"className\":\"flex items-center gap-3 pr-1\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-9 rounded-full\"}],[\"$\",\"div\",null,{\"className\":\"flex flex-1 flex-col gap-1.5\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-32\"}],[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-16\"}]]}]]}]]}],[\"$\",\"div\",\"5\",{\"className\":\"group/template has-[:focus-visible]:ring-offset-background relative flex w-full flex-col gap-2 text-sm sm:min-w-0\",\"children\":[[\"$\",\"div\",null,{\"className\":\"shadow-base bg-muted relative aspect-video w-full overflow-hidden rounded-lg text-sm has-[:focus-visible]:outline-none has-[:focus-visible]:ring-2 has-[:focus-visible]:ring-blue-600 has-[:focus-visible]:ring-offset-1\",\"children\":[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-full rounded-none\"}]}],[\"$\",\"div\",null,{\"className\":\"flex items-center gap-3 pr-1\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-9 rounded-full\"}],[\"$\",\"div\",null,{\"className\":\"flex flex-1 flex-col gap-1.5\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-32\"}],[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-16\"}]]}]]}]]}],[\"$\",\"div\",\"6\",{\"className\":\"group/template has-[:focus-visible]:ring-offset-background relative flex w-full flex-col gap-2 text-sm sm:min-w-0\",\"children\":[[\"$\",\"div\",null,{\"className\":\"shadow-base bg-muted relative aspect-video w-full overflow-hidden rounded-lg text-sm has-[:focus-visible]:outline-none has-[:focus-visible]:ring-2 has-[:focus-visible]:ring-blue-600 has-[:focus-visible]:ring-offset-1\",\"children\":[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-full rounded-none\"}]}],[\"$\",\"div\",null,{\"className\":\"flex items-center gap-3 pr-1\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-9 rounded-full\"}],[\"$\",\"div\",null,{\"className\":\"flex flex-1 flex-col gap-1.5\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-32\"}],[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-16\"}]]}]]}]]}],[\"$\",\"div\",\"7\",{\"className\":\"group/template has-[:focus-visible]:ring-offset-background relative flex w-full flex-col gap-2 text-sm sm:min-w-0\",\"children\":[[\"$\",\"div\",null,{\"className\":\"shadow-base bg-muted relative aspect-video w-full overflow-hidden rounded-lg text-sm has-[:focus-visible]:outline-none has-[:focus-visible]:ring-2 has-[:focus-visible]:ring-blue-600 has-[:focus-visible]:ring-offset-1\",\"children\":[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-full rounded-none\"}]}],[\"$\",\"div\",null,{\"className\":\"flex items-center gap-3 pr-1\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-9 rounded-full\"}],[\"$\",\"div\",null,{\"className\":\"flex flex-1 flex-col gap-1.5\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-32\"}],[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-16\"}]]}]]}]]}],[\"$\",\"div\",\"8\",{\"className\":\"group/template has-[:focus-visible]:ring-offset-background relative flex w-full flex-col gap-2 text-sm sm:min-w-0\",\"children\":[[\"$\",\"div\",null,{\"className\":\"shadow-base bg-muted relative aspect-video w-full overflow-hidden rounded-lg text-sm has-[:focus-visible]:outline-none has-[:focus-visible]:ring-2 has-[:focus-visible]:ring-blue-600 has-[:focus-visible]:ring-offset-1\",\"children\":[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-full rounded-none\"}]}],[\"$\",\"div\",null,{\"className\":\"flex items-center gap-3 pr-1\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-9 rounded-full\"}],[\"$\",\"div\",null,{\"className\":\"flex flex-1 flex-col gap-1.5\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-32\"}],[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-16\"}]]}]]}]]}],[\"$\",\"div\",\"9\",{\"className\":\"group/template has-[:focus-visible]:ring-offset-background relative flex w-full flex-col gap-2 text-sm sm:min-w-0\",\"children\":[[\"$\",\"div\",null,{\"className\":\"shadow-base bg-muted relative aspect-video w-full overflow-hidden rounded-lg text-sm has-[:focus-visible]:outline-none has-[:focus-visible]:ring-2 has-[:focus-visible]:ring-blue-600 has-[:focus-visible]:ring-offset-1\",\"children\":[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-full rounded-none\"}]}],[\"$\",\"div\",null,{\"className\":\"flex items-center gap-3 pr-1\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-9 rounded-full\"}],[\"$\",\"div\",null,{\"className\":\"flex flex-1 flex-col gap-1.5\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-32\"}],[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-16\"}]]}]]}]]}],[\"$\",\"div\",\"10\",{\"className\":\"group/template has-[:focus-visible]:ring-offset-background relative flex w-full flex-col gap-2 text-sm sm:min-w-0\",\"children\":[[\"$\",\"div\",null,{\"className\":\"shadow-base bg-muted relative aspect-video w-full overflow-hidden rounded-lg text-sm has-[:focus-visible]:outline-none has-[:focus-visible]:ring-2 has-[:focus-visible]:ring-blue-600 has-[:focus-visible]:ring-offset-1\",\"children\":[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-full rounded-none\"}]}],[\"$\",\"div\",null,{\"className\":\"flex items-center gap-3 pr-1\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-9 rounded-full\"}],[\"$\",\"div\",null,{\"className\":\"flex flex-1 flex-col gap-1.5\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-32\"}],[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-16\"}]]}]]}]]}],[\"$\",\"div\",\"11\",{\"className\":\"group/template has-[:focus-visible]:ring-offset-background relative flex w-full flex-col gap-2 text-sm sm:min-w-0\",\"children\":[[\"$\",\"div\",null,{\"className\":\"shadow-base bg-muted relative aspect-video w-full overflow-hidden rounded-lg text-sm has-[:focus-visible]:outline-none has-[:focus-visible]:ring-2 has-[:focus-visible]:ring-blue-600 has-[:focus-visible]:ring-offset-1\",\"children\":[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-full rounded-none\"}]}],[\"$\",\"div\",null,{\"className\":\"flex items-center gap-3 pr-1\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-9 rounded-full\"}],[\"$\",\"div\",null,{\"className\":\"flex flex-1 flex-col gap-1.5\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-32\"}],[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-16\"}]]}]]}]]}],[\"$\",\"div\",\"12\",{\"className\":\"group/template has-[:focus-visible]:ring-offset-background relative flex w-full flex-col gap-2 text-sm sm:min-w-0\",\"children\":[[\"$\",\"div\",null,{\"className\":\"shadow-base bg-muted relative aspect-video w-full overflow-hidden rounded-lg text-sm has-[:focus-visible]:outline-none has-[:focus-visible]:ring-2 has-[:focus-visible]:ring-blue-600 has-[:focus-visible]:ring-offset-1\",\"children\":[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-full rounded-none\"}]}],[\"$\",\"div\",null,{\"className\":\"flex items-center gap-3 pr-1\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-9 rounded-full\"}],[\"$\",\"div\",null,{\"className\":\"flex flex-1 flex-col gap-1.5\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-32\"}],[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-16\"}]]}]]}]]}],[\"$\",\"div\",\"13\",{\"className\":\"group/template has-[:focus-visible]:ring-offset-background relative flex w-full flex-col gap-2 text-sm sm:min-w-0\",\"children\":[[\"$\",\"div\",null,{\"className\":\"shadow-base bg-muted relative aspect-video w-full overflow-hidden rounded-lg text-sm has-[:focus-visible]:outline-none has-[:focus-visible]:ring-2 has-[:focus-visible]:ring-blue-600 has-[:focus-visible]:ring-offset-1\",\"children\":[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-full rounded-none\"}]}],[\"$\",\"div\",null,{\"className\":\"flex items-center gap-3 pr-1\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-9 rounded-full\"}],[\"$\",\"div\",null,{\"className\":\"flex flex-1 flex-col gap-1.5\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-32\"}],[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-16\"}]]}]]}]]}],[\"$\",\"div\",\"14\",{\"className\":\"group/template has-[:focus-visible]:ring-offset-background relative flex w-full flex-col gap-2 text-sm sm:min-w-0\",\"children\":[[\"$\",\"div\",null,{\"className\":\"shadow-base bg-muted relative aspect-video w-full overflow-hidden rounded-lg text-sm has-[:focus-visible]:outline-none has-[:focus-visible]:ring-2 has-[:focus-visible]:ring-blue-600 has-[:focus-visible]:ring-offset-1\",\"children\":[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-full rounded-none\"}]}],[\"$\",\"div\",null,{\"className\":\"flex items-center gap-3 pr-1\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-9 rounded-full\"}],[\"$\",\"div\",null,{\"className\":\"flex flex-1 flex-col gap-1.5\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-32\"}],[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-16\"}]]}]]}]]}],[\"$\",\"div\",\"15\",{\"className\":\"group/template has-[:focus-visible]:ring-offset-background relative flex w-full flex-col gap-2 text-sm sm:min-w-0\",\"children\":[[\"$\",\"div\",null,{\"className\":\"shadow-base bg-muted relative aspect-video w-full overflow-hidden rounded-lg text-sm has-[:focus-visible]:outline-none has-[:focus-visible]:ring-2 has-[:focus-visible]:ring-blue-600 has-[:focus-visible]:ring-offset-1\",\"children\":[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-full rounded-none\"}]}],[\"$\",\"div\",null,{\"className\":\"flex items-center gap-3 pr-1\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-9 rounded-full\"}],[\"$\",\"div\",null,{\"className\":\"flex flex-1 flex-col gap-1.5\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-32\"}],[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-16\"}]]}]]}]]}],[\"$\",\"div\",\"16\",{\"className\":\"group/template has-[:focus-visible]:ring-offset-background relative flex w-full flex-col gap-2 text-sm sm:min-w-0\",\"children\":[[\"$\",\"div\",null,{\"className\":\"shadow-base bg-muted relative aspect-video w-full overflow-hidden rounded-lg text-sm has-[:focus-visible]:outline-none has-[:focus-visible]:ring-2 has-[:focus-visible]:ring-blue-600 has-[:focus-visible]:ring-offset-1\",\"children\":[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-full rounded-none\"}]}],[\"$\",\"div\",null,{\"className\":\"flex items-center gap-3 pr-1\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-9 rounded-full\"}],[\"$\",\"div\",null,{\"className\":\"flex flex-1 flex-col gap-1.5\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-32\"}],[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-16\"}]]}]]}]]}],[\"$\",\"div\",\"17\",{\"className\":\"group/template has-[:focus-visible]:ring-offset-background relative flex w-full flex-col gap-2 text-sm sm:min-w-0\",\"children\":[[\"$\",\"div\",null,{\"className\":\"shadow-base bg-muted relative aspect-video w-full overflow-hidden rounded-lg text-sm has-[:focus-visible]:outline-none has-[:focus-visible]:ring-2 has-[:focus-visible]:ring-blue-600 has-[:focus-visible]:ring-offset-1\",\"children\":[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-full rounded-none\"}]}],[\"$\",\"div\",null,{\"className\":\"flex items-center gap-3 pr-1\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-9 rounded-full\"}],[\"$\",\"div\",null,{\"className\":\"flex flex-1 flex-col gap-1.5\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-32\"}],[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-16\"}]]}]]}]]}],[\"$\",\"div\",\"18\",{\"className\":\"group/template has-[:focus-visible]:ring-offset-background relative flex w-full flex-col gap-2 text-sm sm:min-w-0\",\"children\":[[\"$\",\"div\",null,{\"className\":\"shadow-base bg-muted relative aspect-video w-full overflow-hidden rounded-lg text-sm has-[:focus-visible]:outline-none has-[:focus-visible]:ring-2 has-[:focus-visible]:ring-blue-600 has-[:focus-visible]:ring-offset-1\",\"children\":[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-full rounded-none\"}]}],[\"$\",\"div\",null,{\"className\":\"flex items-center gap-3 pr-1\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-9 rounded-full\"}],[\"$\",\"div\",null,{\"className\":\"flex flex-1 flex-col gap-1.5\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-32\"}],[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-16\"}]]}]]}]]}],[\"$\",\"div\",\"19\",{\"className\":\"group/template has-[:focus-visible]:ring-offset-background relative flex w-full flex-col gap-2 text-sm sm:min-w-0\",\"children\":[[\"$\",\"div\",null,{\"className\":\"shadow-base bg-muted relative aspect-video w-full overflow-hidden rounded-lg text-sm has-[:focus-visible]:outline-none has-[:focus-visible]:ring-2 has-[:focus-visible]:ring-blue-600 has-[:focus-visible]:ring-offset-1\",\"children\":[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-full rounded-none\"}]}],[\"$\",\"div\",null,{\"className\":\"flex items-center gap-3 pr-1\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-9 rounded-full\"}],[\"$\",\"div\",null,{\"className\":\"flex flex-1 flex-col gap-1.5\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-32\"}],[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-16\"}]]}]]}]]}],[\"$\",\"div\",\"20\",{\"className\":\"group/template has-[:focus-visible]:ring-offset-background relative flex w-full flex-col gap-2 text-sm sm:min-w-0\",\"children\":[[\"$\",\"div\",null,{\"className\":\"shadow-base bg-muted relative aspect-video w-full overflow-hidden rounded-lg text-sm has-[:focus-visible]:outline-none has-[:focus-visible]:ring-2 has-[:focus-visible]:ring-blue-600 has-[:focus-visible]:ring-offset-1\",\"children\":[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-full rounded-none\"}]}],[\"$\",\"div\",null,{\"className\":\"flex items-center gap-3 pr-1\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-9 rounded-full\"}],[\"$\",\"div\",null,{\"className\":\"flex flex-1 flex-col gap-1.5\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-32\"}],[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-16\"}]]}]]}]]}],[\"$\",\"div\",\"21\",{\"className\":\"group/template has-[:focus-visible]:ring-offset-background relative flex w-full flex-col gap-2 text-sm sm:min-w-0\",\"children\":[[\"$\",\"div\",null,{\"className\":\"shadow-base bg-muted relative aspect-video w-full overflow-hidden rounded-lg text-sm has-[:focus-visible]:outline-none has-[:focus-visible]:ring-2 has-[:focus-visible]:ring-blue-600 has-[:focus-visible]:ring-offset-1\",\"children\":[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-full rounded-none\"}]}],[\"$\",\"div\",null,{\"className\":\"flex items-center gap-3 pr-1\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-9 rounded-full\"}],[\"$\",\"div\",null,{\"className\":\"flex flex-1 flex-col gap-1.5\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-32\"}],[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-16\"}]]}]]}]]}],[\"$\",\"div\",\"22\",{\"className\":\"group/template has-[:focus-visible]:ring-offset-background relative flex w-full flex-col gap-2 text-sm sm:min-w-0\",\"children\":[[\"$\",\"div\",null,{\"className\":\"shadow-base bg-muted relative aspect-video w-full overflow-hidden rounded-lg text-sm has-[:focus-visible]:outline-none has-[:focus-visible]:ring-2 has-[:focus-visible]:ring-blue-600 has-[:focus-visible]:ring-offset-1\",\"children\":[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-full rounded-none\"}]}],[\"$\",\"div\",null,{\"className\":\"flex items-center gap-3 pr-1\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-9 rounded-full\"}],[\"$\",\"div\",null,{\"className\":\"flex flex-1 flex-col gap-1.5\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-32\"}],[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-16\"}]]}]]}]]}],[\"$\",\"div\",\"23\",{\"className\":\"group/template has-[:focus-visible]:ring-offset-background relative flex w-full flex-col gap-2 text-sm sm:min-w-0\",\"children\":[[\"$\",\"div\",null,{\"className\":\"shadow-base bg-muted relative aspect-video w-full overflow-hidden rounded-lg text-sm has-[:focus-visible]:outline-none has-[:focus-visible]:ring-2 has-[:focus-visible]:ring-blue-600 has-[:focus-visible]:ring-offset-1\",\"children\":[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-full rounded-none\"}]}],[\"$\",\"div\",null,{\"className\":\"flex items-center gap-3 pr-1\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-9 rounded-full\"}],[\"$\",\"div\",null,{\"className\":\"flex flex-1 flex-col gap-1.5\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-32\"}],[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-16\"}]]}]]}]]}],[\"$\",\"div\",\"24\",{\"className\":\"group/template has-[:focus-visible]:ring-offset-background relative flex w-full flex-col gap-2 text-sm sm:min-w-0\",\"children\":[[\"$\",\"div\",null,{\"className\":\"shadow-base bg-muted relative aspect-video w-full overflow-hidden rounded-lg text-sm has-[:focus-visible]:outline-none has-[:focus-visible]:ring-2 has-[:focus-visible]:ring-blue-600 has-[:focus-visible]:ring-offset-1\",\"children\":[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-full rounded-none\"}]}],[\"$\",\"div\",null,{\"className\":\"flex items-center gap-3 pr-1\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-9 rounded-full\"}],[\"$\",\"div\",null,{\"className\":\"flex flex-1 flex-col gap-1.5\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-32\"}],[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-16\"}]]}]]}]]}],[\"$\",\"div\",\"25\",{\"className\":\"group/template has-[:focus-visible]:ring-offset-background relative flex w-full flex-col gap-2 text-sm sm:min-w-0\",\"children\":[[\"$\",\"div\",null,{\"className\":\"shadow-base bg-muted relative aspect-video w-full overflow-hidden rounded-lg text-sm has-[:focus-visible]:outline-none has-[:focus-visible]:ring-2 has-[:focus-visible]:ring-blue-600 has-[:focus-visible]:ring-offset-1\",\"children\":[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-full rounded-none\"}]}],[\"$\",\"div\",null,{\"className\":\"flex items-center gap-3 pr-1\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-9 rounded-full\"}],[\"$\",\"div\",null,{\"className\":\"flex flex-1 flex-col gap-1.5\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-32\"}],[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-16\"}]]}]]}]]}],[\"$\",\"div\",\"26\",{\"className\":\"group/template has-[:focus-visible]:ring-offset-background relative flex w-full flex-col gap-2 text-sm sm:min-w-0\",\"children\":[[\"$\",\"div\",null,{\"className\":\"shadow-base bg-muted relative aspect-video w-full overflow-hidden rounded-lg text-sm has-[:focus-visible]:outline-none has-[:focus-visible]:ring-2 has-[:focus-visible]:ring-blue-600 has-[:focus-visible]:ring-offset-1\",\"children\":[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-full rounded-none\"}]}],[\"$\",\"div\",null,{\"className\":\"flex items-center gap-3 pr-1\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-9 rounded-full\"}],[\"$\",\"div\",null,{\"className\":\"flex flex-1 flex-col gap-1.5\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-32\"}],[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-16\"}]]}]]}]]}],[\"$\",\"div\",\"27\",{\"className\":\"group/template has-[:focus-visible]:ring-offset-background relative flex w-full flex-col gap-2 text-sm sm:min-w-0\",\"children\":[[\"$\",\"div\",null,{\"className\":\"shadow-base bg-muted relative aspect-video w-full overflow-hidden rounded-lg text-sm has-[:focus-visible]:outline-none has-[:focus-visible]:ring-2 has-[:focus-visible]:ring-blue-600 has-[:focus-visible]:ring-offset-1\",\"children\":[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-full rounded-none\"}]}],[\"$\",\"div\",null,{\"className\":\"flex items-center gap-3 pr-1\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-9 rounded-full\"}],[\"$\",\"div\",null,{\"className\":\"flex flex-1 flex-col gap-1.5\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-32\"}],[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-16\"}]]}]]}]]}],[\"$\",\"div\",\"28\",{\"className\":\"group/template has-[:focus-visible]:ring-offset-background relative flex w-full flex-col gap-2 text-sm sm:min-w-0\",\"children\":[[\"$\",\"div\",null,{\"className\":\"shadow-base bg-muted relative aspect-video w-full overflow-hidden rounded-lg text-sm has-[:focus-visible]:outline-none has-[:focus-visible]:ring-2 has-[:focus-visible]:ring-blue-600 has-[:focus-visible]:ring-offset-1\",\"children\":[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-full rounded-none\"}]}],[\"$\",\"div\",null,{\"className\":\"flex items-center gap-3 pr-1\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-9 rounded-full\"}],[\"$\",\"div\",null,{\"className\":\"flex flex-1 flex-col gap-1.5\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-32\"}],[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-16\"}]]}]]}]]}],[\"$\",\"div\",\"29\",{\"className\":\"group/template has-[:focus-visible]:ring-offset-background relative flex w-full flex-col gap-2 text-sm sm:min-w-0\",\"children\":[[\"$\",\"div\",null,{\"className\":\"shadow-base bg-muted relative aspect-video w-full overflow-hidden rounded-lg text-sm has-[:focus-visible]:outline-none has-[:focus-visible]:ring-2 has-[:focus-visible]:ring-blue-600 has-[:focus-visible]:ring-offset-1\",\"children\":[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-full rounded-none\"}]}],[\"$\",\"div\",null,{\"className\":\"flex items-center gap-3 pr-1\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-9 rounded-full\"}],[\"$\",\"div\",null,{\"className\":\"flex flex-1 flex-col gap-1.5\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-32\"}],[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-16\"}]]}]]}]]}],[\"$\",\"div\",\"30\",{\"className\":\"group/template has-[:focus-visible]:ring-offset-background relative flex w-full flex-col gap-2 text-sm sm:min-w-0\",\"children\":[[\"$\",\"div\",null,{\"className\":\"shadow-base bg-muted relative aspect-video w-full overflow-hidden rounded-lg text-sm has-[:focus-visible]:outline-none has-[:focus-visible]:ring-2 has-[:focus-visible]:ring-blue-600 has-[:focus-visible]:ring-offset-1\",\"children\":[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-full rounded-none\"}]}],[\"$\",\"div\",null,{\"className\":\"flex items-center gap-3 pr-1\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-9 rounded-full\"}],[\"$\",\"div\",null,{\"className\":\"flex flex-1 flex-col gap-1.5\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-32\"}],[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-16\"}]]}]]}]]}],[\"$\",\"div\",\"31\",{\"className\":\"group/template has-[:focus-visible]:ring-offset-background relative flex w-full flex-col gap-2 text-sm sm:min-w-0\",\"children\":[[\"$\",\"div\",null,{\"className\":\"shadow-base bg-muted relative aspect-video w-full overflow-hidden rounded-lg text-sm has-[:focus-visible]:outline-none has-[:focus-visible]:ring-2 has-[:focus-visible]:ring-blue-600 has-[:focus-visible]:ring-offset-1\",\"children\":[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-full rounded-none\"}]}],[\"$\",\"div\",null,{\"className\":\"flex items-center gap-3 pr-1\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-9 rounded-full\"}],[\"$\",\"div\",null,{\"className\":\"flex flex-1 flex-col gap-1.5\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-32\"}],[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-16\"}]]}]]}]]}],[\"$\",\"div\",\"32\",{\"className\":\"group/template has-[:focus-visible]:ring-offset-background relative flex w-full flex-col gap-2 text-sm sm:min-w-0\",\"children\":[[\"$\",\"div\",null,{\"className\":\"shadow-base bg-muted relative aspect-video w-full overflow-hidden rounded-lg text-sm has-[:focus-visible]:outline-none has-[:focus-visible]:ring-2 has-[:focus-visible]:ring-blue-600 has-[:focus-visible]:ring-offset-1\",\"children\":[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-full rounded-none\"}]}],[\"$\",\"div\",null,{\"className\":\"flex items-center gap-3 pr-1\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-9 rounded-full\"}],[\"$\",\"div\",null,{\"className\":\"flex flex-1 flex-col gap-1.5\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-32\"}],[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-16\"}]]}]]}]]}],[\"$\",\"div\",\"33\",{\"className\":\"group/template has-[:focus-visible]:ring-offset-background relative flex w-full flex-col gap-2 text-sm sm:min-w-0\",\"children\":[[\"$\",\"div\",null,{\"className\":\"shadow-base bg-muted relative aspect-video w-full overflow-hidden rounded-lg text-sm has-[:focus-visible]:outline-none has-[:focus-visible]:ring-2 has-[:focus-visible]:ring-blue-600 has-[:focus-visible]:ring-offset-1\",\"children\":[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-full rounded-none\"}]}],[\"$\",\"div\",null,{\"className\":\"flex items-center gap-3 pr-1\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-9 rounded-full\"}],[\"$\",\"div\",null,{\"className\":\"flex flex-1 flex-col gap-1.5\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-32\"}],[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-16\"}]]}]]}]]}],[\"$\",\"div\",\"34\",{\"className\":\"group/template has-[:focus-visible]:ring-offset-background relative flex w-full flex-col gap-2 text-sm sm:min-w-0\",\"children\":[[\"$\",\"div\",null,{\"className\":\"shadow-base bg-muted relative aspect-video w-full overflow-hidden rounded-lg text-sm has-[:focus-visible]:outline-none has-[:focus-visible]:ring-2 has-[:focus-visible]:ring-blue-600 has-[:focus-visible]:ring-offset-1\",\"children\":[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-full rounded-none\"}]}],[\"$\",\"div\",null,{\"className\":\"flex items-center gap-3 pr-1\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-9 rounded-full\"}],[\"$\",\"div\",null,{\"className\":\"flex flex-1 flex-col gap-1.5\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-32\"}],[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-16\"}]]}]]}]]}],[\"$\",\"div\",\"35\",{\"className\":\"group/template has-[:focus-visible]:ring-offset-background relative flex w-full flex-col gap-2 text-sm sm:min-w-0\",\"children\":[[\"$\",\"div\",null,{\"className\":\"shadow-base bg-muted relative aspect-video w-full overflow-hidden rounded-lg text-sm has-[:focus-visible]:outline-none has-[:focus-visible]:ring-2 has-[:focus-visible]:ring-blue-600 has-[:focus-visible]:ring-offset-1\",\"children\":[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-full rounded-none\"}]}],[\"$\",\"div\",null,{\"className\":\"flex items-center gap-3 pr-1\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-9 rounded-full\"}],[\"$\",\"div\",null,{\"className\":\"flex flex-1 flex-col gap-1.5\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-32\"}],[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-16\"}]]}]]}]]}],[\"$\",\"div\",\"36\",{\"className\":\"group/template has-[:focus-visible]:ring-offset-background relative flex w-full flex-col gap-2 text-sm sm:min-w-0\",\"children\":[[\"$\",\"div\",null,{\"className\":\"shadow-base bg-muted relative aspect-video w-full overflow-hidden rounded-lg text-sm has-[:focus-visible]:outline-none has-[:focus-visible]:ring-2 has-[:focus-visible]:ring-blue-600 has-[:focus-visible]:ring-offset-1\",\"children\":[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-full rounded-none\"}]}],[\"$\",\"div\",null,{\"className\":\"flex items-center gap-3 pr-1\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-9 rounded-full\"}],[\"$\",\"div\",null,{\"className\":\"flex flex-1 flex-col gap-1.5\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-32\"}],[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-16\"}]]}]]}]]}],[\"$\",\"div\",\"37\",{\"className\":\"group/template has-[:focus-visible]:ring-offset-background relative flex w-full flex-col gap-2 text-sm sm:min-w-0\",\"children\":[[\"$\",\"div\",null,{\"className\":\"shadow-base bg-muted relative aspect-video w-full overflow-hidden rounded-lg text-sm has-[:focus-visible]:outline-none has-[:focus-visible]:ring-2 has-[:focus-visible]:ring-blue-600 has-[:focus-visible]:ring-offset-1\",\"children\":[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-full rounded-none\"}]}],[\"$\",\"div\",null,{\"className\":\"flex items-center gap-3 pr-1\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-9 rounded-full\"}],[\"$\",\"div\",null,{\"className\":\"flex flex-1 flex-col gap-1.5\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-32\"}],[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-16\"}]]}]]}]]}],[\"$\",\"div\",\"38\",{\"className\":\"group/template has-[:focus-visible]:ring-offset-background relative flex w-full flex-col gap-2 text-sm sm:min-w-0\",\"children\":[[\"$\",\"div\",null,{\"className\":\"shadow-base bg-muted relative aspect-video w-full overflow-hidden rounded-lg text-sm has-[:focus-visible]:outline-none has-[:focus-visible]:ring-2 has-[:focus-visible]:ring-blue-600 has-[:focus-visible]:ring-offset-1\",\"children\":[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-full rounded-none\"}]}],[\"$\",\"div\",null,{\"className\":\"flex items-center gap-3 pr-1\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-9 rounded-full\"}],[\"$\",\"div\",null,{\"className\":\"flex flex-1 flex-col gap-1.5\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-32\"}],[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-16\"}]]}]]}]]}],[\"$\",\"div\",\"39\",{\"className\":\"group/template has-[:focus-visible]:ring-offset-background relative flex w-full flex-col gap-2 text-sm sm:min-w-0\",\"children\":[[\"$\",\"div\",null,{\"className\":\"shadow-base bg-muted relative aspect-video w-full overflow-hidden rounded-lg text-sm has-[:focus-visible]:outline-none has-[:focus-visible]:ring-2 has-[:focus-visible]:ring-blue-600 has-[:focus-visible]:ring-offset-1\",\"children\":[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-full rounded-none\"}]}],[\"$\",\"div\",null,{\"className\":\"flex items-center gap-3 pr-1\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-9 rounded-full\"}],[\"$\",\"div\",null,{\"className\":\"flex flex-1 flex-col gap-1.5\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-32\"}],[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-16\"}]]}]]}]]}],[\"$\",\"div\",\"40\",{\"className\":\"group/template has-[:focus-visible]:ring-offset-background relative flex w-full flex-col gap-2 text-sm sm:min-w-0\",\"children\":[[\"$\",\"div\",null,{\"className\":\"shadow-base bg-muted relative aspect-video w-full overflow-hidden rounded-lg text-sm has-[:focus-visible]:outline-none has-[:focus-visible]:ring-2 has-[:focus-visible]:ring-blue-600 has-[:focus-visible]:ring-offset-1\",\"children\":[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-full rounded-none\"}]}],[\"$\",\"div\",null,{\"className\":\"flex items-center gap-3 pr-1\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-9 rounded-full\"}],[\"$\",\"div\",null,{\"className\":\"flex flex-1 flex-col gap-1.5\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-32\"}],[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-16\"}]]}]]}]]}],[\"$\",\"div\",\"41\",{\"className\":\"group/template has-[:focus-visible]:ring-offset-background relative flex w-full flex-col gap-2 text-sm sm:min-w-0\",\"children\":[[\"$\",\"div\",null,{\"className\":\"shadow-base bg-muted relative aspect-video w-full overflow-hidden rounded-lg text-sm has-[:focus-visible]:outline-none has-[:focus-visible]:ring-2 has-[:focus-visible]:ring-blue-600 has-[:focus-visible]:ring-offset-1\",\"children\":[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-full rounded-none\"}]}],[\"$\",\"div\",null,{\"className\":\"flex items-center gap-3 pr-1\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-9 rounded-full\"}],[\"$\",\"div\",null,{\"className\":\"flex flex-1 flex-col gap-1.5\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-32\"}],[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-16\"}]]}]]}]]}],[\"$\",\"div\",\"42\",{\"className\":\"group/template has-[:focus-visible]:ring-offset-background relative flex w-full flex-col gap-2 text-sm sm:min-w-0\",\"children\":[[\"$\",\"div\",null,{\"className\":\"shadow-base bg-muted relative aspect-video w-full overflow-hidden rounded-lg text-sm has-[:focus-visible]:outline-none has-[:focus-visible]:ring-2 has-[:focus-visible]:ring-blue-600 has-[:focus-visible]:ring-offset-1\",\"children\":[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-full rounded-none\"}]}],[\"$\",\"div\",null,{\"className\":\"flex items-center gap-3 pr-1\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-9 rounded-full\"}],[\"$\",\"div\",null,{\"className\":\"flex flex-1 flex-col gap-1.5\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-32\"}],[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-16\"}]]}]]}]]}],[\"$\",\"div\",\"43\",{\"className\":\"group/template has-[:focus-visible]:ring-offset-background relative flex w-full flex-col gap-2 text-sm sm:min-w-0\",\"children\":[[\"$\",\"div\",null,{\"className\":\"shadow-base bg-muted relative aspect-video w-full overflow-hidden rounded-lg text-sm has-[:focus-visible]:outline-none has-[:focus-visible]:ring-2 has-[:focus-visible]:ring-blue-600 has-[:focus-visible]:ring-offset-1\",\"children\":[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-full rounded-none\"}]}],[\"$\",\"div\",null,{\"className\":\"flex items-center gap-3 pr-1\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-9 rounded-full\"}],[\"$\",\"div\",null,{\"className\":\"flex flex-1 flex-col gap-1.5\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-32\"}],[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-16\"}]]}]]}]]}],[\"$\",\"div\",\"44\",{\"className\":\"group/template has-[:focus-visible]:ring-offset-background relative flex w-full flex-col gap-2 text-sm sm:min-w-0\",\"children\":[[\"$\",\"div\",null,{\"className\":\"shadow-base bg-muted relative aspect-video w-full overflow-hidden rounded-lg text-sm has-[:focus-visible]:outline-none has-[:focus-visible]:ring-2 has-[:focus-visible]:ring-blue-600 has-[:focus-visible]:ring-offset-1\",\"children\":[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-full rounded-none\"}]}],[\"$\",\"div\",null,{\"className\":\"flex items-center gap-3 pr-1\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-9 rounded-full\"}],[\"$\",\"div\",null,{\"className\":\"flex flex-1 flex-col gap-1.5\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-32\"}],[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-16\"}]]}]]}]]}],[\"$\",\"div\",\"45\",{\"className\":\"group/template has-[:focus-visible]:ring-offset-background relative flex w-full flex-col gap-2 text-sm sm:min-w-0\",\"children\":[[\"$\",\"div\",null,{\"className\":\"shadow-base bg-muted relative aspect-video w-full overflow-hidden rounded-lg text-sm has-[:focus-visible]:outline-none has-[:focus-visible]:ring-2 has-[:focus-visible]:ring-blue-600 has-[:focus-visible]:ring-offset-1\",\"children\":[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-full rounded-none\"}]}],[\"$\",\"div\",null,{\"className\":\"flex items-center gap-3 pr-1\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-9 rounded-full\"}],[\"$\",\"div\",null,{\"className\":\"flex flex-1 flex-col gap-1.5\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-32\"}],[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-16\"}]]}]]}]]}],[\"$\",\"div\",\"46\",{\"className\":\"group/template has-[:focus-visible]:ring-offset-background relative flex w-full flex-col gap-2 text-sm sm:min-w-0\",\"children\":[[\"$\",\"div\",null,{\"className\":\"shadow-base bg-muted relative aspect-video w-full overflow-hidden rounded-lg text-sm has-[:focus-visible]:outline-none has-[:focus-visible]:ring-2 has-[:focus-visible]:ring-blue-600 has-[:focus-visible]:ring-offset-1\",\"children\":[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-full rounded-none\"}]}],[\"$\",\"div\",null,{\"className\":\"flex items-center gap-3 pr-1\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-9 rounded-full\"}],[\"$\",\"div\",null,{\"className\":\"flex flex-1 flex-col gap-1.5\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-32\"}],[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-16\"}]]}]]}]]}],[\"$\",\"div\",\"47\",{\"className\":\"group/template has-[:focus-visible]:ring-offset-background relative flex w-full flex-col gap-2 text-sm sm:min-w-0\",\"children\":[[\"$\",\"div\",null,{\"className\":\"shadow-base bg-muted relative aspect-video w-full overflow-hidden rounded-lg text-sm has-[:focus-visible]:outline-none has-[:focus-visible]:ring-2 has-[:focus-visible]:ring-blue-600 has-[:focus-visible]:ring-offset-1\",\"children\":[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-full rounded-none\"}]}],[\"$\",\"div\",null,{\"className\":\"flex items-center gap-3 pr-1\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse bg-primary/10 size-9 rounded-full\"}],[\"$\",\"div\",null,{\"className\":\"flex flex-1 flex-col gap-1.5\",\"children\":[[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-32\"}],[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-3 w-16\"}]]}]]}]]}]]}]}],[\"$\",\"div\",null,{\"className\":\"flex items-center justify-center py-6 sm:py-7\",\"children\":[\"$\",\"div\",null,{\"className\":\"animate-pulse rounded-md bg-primary/10 h-8 w-24\"}]}]]}],\"children\":\"$L97\"}]]}]]}]\n"])</script><script>self.__next_f.push([1,"50:{\"access\":1,\"session\":\"$undefined\",\"team\":\"$undefined\",\"isAdmin\":false,\"isAuthor\":false,\"ownerId\":\"$undefined\",\"authorId\":\"$undefined\",\"canWriteToChat\":false}\n88:\"$undefined\"\n"])</script><title>React frontend code - v0 by Vercel</title><div hidden id="S:3"><!--$--><!--/$--><div class="bg-background flex justify-center h-screen-patched"><div class="flex h-full min-w-0 flex-1 flex-col"><header class="bg-background @container/chat-header relative z-20 flex shrink-0 items-center justify-between gap-4 mr-4 h-16 px-0 sm:mx-0 sm:h-11 sm:w-full sm:pl-4 sm:pr-2 ml-4 w-auto"><nav class="flex w-full min-w-0 flex-1 items-center"><a data-testid="header-logo" class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center justify-center gap-1.5 whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;_svg]:shrink-0 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-4 text-sm has-[&gt;kbd]:gap-3 has-[&gt;kbd]:pr-[6px] rounded-lg border-none hover:bg-transparent focus:bg-transparent focus-visible:bg-transparent has-[&gt;svg]:p-0 [&amp;&gt;svg]:size-8 size-8 mr-2" href="/"><svg fill="currentColor" viewBox="0 0 40 20" xmlns="http://www.w3.org/2000/svg" aria-hidden="true"><path d="M23.3919 0H32.9188C36.7819 0 39.9136 3.13165 39.9136 6.99475V16.0805H36.0006V6.99475C36.0006 6.90167 35.9969 6.80925 35.9898 6.71766L26.4628 16.079C26.4949 16.08 26.5272 16.0805 26.5595 16.0805H36.0006V19.7762H26.5595C22.6964 19.7762 19.4788 16.6139 19.4788 12.7508V3.68923H23.3919V12.7508C23.3919 12.9253 23.4054 13.0977 23.4316 13.2668L33.1682 3.6995C33.0861 3.6927 33.003 3.68923 32.9188 3.68923H23.3919V0Z"></path><path d="M13.7688 19.0956L0 3.68759H5.53933L13.6231 12.7337V3.68759H17.7535V17.5746C17.7535 19.6705 15.1654 20.6584 13.7688 19.0956Z"></path></svg><span class="sr-only">New Chat</span></a><span aria-hidden="true" class="text-alpha-400 min-w-4 select-none text-center text-lg">/</span><h1 class="flex min-w-0 items-center gap-1.5 text-sm text-gray-900 ml-1"><div class="flex min-w-0 items-center gap-2 truncate" data-testid="chat-title"><span class="font-medium truncate max-w-96">React frontend code</span><span class="text-gray-500">View Only</span></div></h1></nav><div class="flex gap-2"><a href="https://v0.dev/api/auth/login?next=%2Fchat%2Freact-frontend-code-xwMbPfe8hWt&amp;qs=" class="focus:border-alpha-400 focus-visible:border-alpha-400 disabled:border-alpha-300 border-alpha-400 hover:border-alpha-400 focus-visible:ring-offset-background aria-disabled:border-alpha-300 inline-flex shrink-0 cursor-pointer select-none items-center justify-center gap-1.5 whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:bg-gray-100 disabled:text-gray-400 disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:bg-gray-100 aria-disabled:text-gray-400 aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 bg-background-subtle text-gray-900 hover:bg-gray-100 focus:bg-gray-100 focus-visible:bg-gray-100 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] h-7 rounded-md">Sign In</a><a href="https://v0.dev/api/auth/login?next=%2Fchat%2Freact-frontend-code-xwMbPfe8hWt&amp;qs=&amp;action=signup" class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center justify-center gap-1.5 whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:bg-gray-100 disabled:text-gray-400 disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:bg-gray-100 aria-disabled:text-gray-400 aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 disabled:border-alpha-400 text-background aria-disabled:border-alpha-400 border-gray-900 bg-gray-900 hover:border-gray-700 hover:bg-gray-700 focus:border-gray-700 focus:bg-gray-700 focus-visible:border-gray-700 focus-visible:bg-gray-700 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] h-7 rounded-md">Sign Up</a></div></header><div class="w-screen h-screen-patched" id="block-panel-group" style="display:flex;flex-direction:row;height:100%;overflow:hidden;width:100%" data-panel-group="" data-panel-group-direction="horizontal" data-panel-group-id="block-panel-group"><div class="h-full min-w-[18.5rem]" id="block-panel-left" style="flex-basis:0;flex-grow:25.0;flex-shrink:1;overflow:hidden" data-panel="" data-panel-group-id="block-panel-group" data-panel-id="block-panel-left" data-panel-size="25.0"><div class="relative flex h-full min-w-0 flex-1 flex-col [&amp;_.author-action]:hidden" data-testid="full-chat"><div aria-roledescription="chat messages" class="relative size-full" data-testid="chat-messages-container" id="scroll-container" role="list" style="contain:strict"><div class="from-background via-background/75 pointer-events-none absolute left-0 right-4 top-0 z-10 h-8 bg-gradient-to-b to-transparent transition-opacity opacity-100"></div><div class="relative h-full w-full overflow-y-auto border-t border-transparent transition-opacity duration-150 ease-in" style="overflow-anchor:none" id="scroll-inner-container"><div class="absolute inset-x-0 top-0 h-1.5 w-full"></div><div class="group/message-list mx-auto w-full max-w-3xl [&amp;_div[data-is-first=true]]:pt-2 [&amp;_div[data-is-last=true]]:pb-7"><div style="overflow-anchor:none;flex:none;position:relative;visibility:hidden;width:100%;height:400px"><div style="position:absolute;width:100%;left:0;top:0;visibility:hidden"><div class="flex w-full px-4 py-3 empty:hidden [&amp;&gt;div]:w-full" data-is-first="true" data-is-last="false"><div class="group w-full gap-2" data-touch-active="false" data-testid="message" role="listitem" id="ZB59YFvULEYvdfpLugnBt9bfWL64vdig"><div class="relative flex items-start gap-2"><a class="flex items-center" href="#ZB59YFvULEYvdfpLugnBt9bfWL64vdig"><span class="bg-alpha-400 relative flex shrink-0 select-none items-center justify-center overflow-hidden after:absolute after:inset-0 after:border after:mix-blend-darken dark:after:mix-blend-lighten size-6 rounded-lg text-xs after:rounded-lg [&amp;_svg]:size-4"></span></a><div class="min-w-0 flex-1 translate-y-[0.5px]"><div class="flex flex-1 -translate-x-1 flex-col items-stretch gap-2"><div class="prose prose-sm prose-gray min-w-0 break-words w-full pl-1"><p>I am building a task management web app using React.js (frontend), Node.js (backend), and MongoDB (database). I want you to generate optimized, scalable, and secure code for the following feature: [1. Task Assignment and Prioritization* Assign tasks to specific team members.* Set priority levels (High, Medium, Low) for better task management.* Display tasks in a structured Kanban board or list view.2. Deadline Tracking and Notifications* Set deadlines for tasks and receive automated reminders.* Send email or push notifications when a deadline is near.* Display overdue tasks in a separate section for better visibility.3. Progress Reporting* Track task completion rates and pending tasks.* Generate visual reports (bar charts, pie charts) for team performance.* Export reports in CSV or PDF format for analysis.4. Role-Based Permissions* Control user access levels by assigning roles:   * Admin: Full control over tasks and user management.   * Editor: Can create and edit tasks but not manage users.   * Viewer: Can only view tasks without making changes.* Secure role management using JWT authentication.5. Real-Time Collaboration* Allow users to comment on tasks and tag teammates.* Enable file sharing for better document collaboration.* Use WebSockets (Socket.io) for real-time updates and notifications.6. Secure Authentication and Authorization* Use JWT-based authentication to verify users securely.* Implement OAuth login (Google, GitHub) for easy access.* Encrypt sensitive user data using bcrypt.]. The code should follow best practices and include necessary comments for better understanding.&quot; Give me the frontend first in react</p></div><div class="pointer-events-none absolute inset-y-0 right-0 z-10"><div class="bg-background w-fit items-center gap-1 rounded-[10px] p-1 shadow-sm pointer-events-auto sticky top-3 flex -translate-y-1.5 opacity-0 group-hover:opacity-100 has-[[data-state=&#x27;delayed-open&#x27;]]:opacity-100 has-[[data-state=&#x27;instant-open&#x27;]]:opacity-100 has-[[data-state=open]]:opacity-100 md:top-5 [[data-touch-active=true]_&amp;]:opacity-100"><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center justify-center gap-1.5 whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 border-transparent bg-transparent hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 has-[&gt;kbd]:pr-1 hover:bg-alpha-200 focus:bg-alpha-200 focus-visible:bg-alpha-200 h-6 min-w-6 rounded-md px-1 text-sm text-gray-500 hover:text-gray-900 focus:text-gray-900 focus-visible:text-gray-900 has-[&gt;kbd]:gap-[6px] has-[&gt;svg]:px-1 author-action" aria-label="Edit Message" data-state="closed"><span aria-hidden="true"><svg class="pointer-events-none" data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M11.75 0.189331L12.2803 0.719661L15.2803 3.71966L15.8107 4.24999L15.2803 4.78032L5.15901 14.9016C4.45575 15.6049 3.50192 16 2.50736 16H0.75H0V15.25V13.4926C0 12.4981 0.395088 11.5442 1.09835 10.841L11.2197 0.719661L11.75 0.189331ZM11.75 2.31065L9.81066 4.24999L11.75 6.18933L13.6893 4.24999L11.75 2.31065ZM2.15901 11.9016L8.75 5.31065L10.6893 7.24999L4.09835 13.841C3.67639 14.2629 3.1041 14.5 2.50736 14.5H1.5V13.4926C1.5 12.8959 1.73705 12.3236 2.15901 11.9016ZM9 16H16V14.5H9V16Z" fill="currentColor"/></svg></span></button><div data-orientation="horizontal" role="none" class="shrink-0 bg-alpha-400 h-5 w-px author-action"></div><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center justify-center gap-1.5 whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 border-transparent bg-transparent hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 has-[&gt;kbd]:pr-1 hover:bg-alpha-200 focus:bg-alpha-200 focus-visible:bg-alpha-200 h-6 min-w-6 rounded-md px-1 text-sm text-gray-500 hover:text-gray-900 focus:text-gray-900 focus-visible:text-gray-900 has-[&gt;kbd]:gap-[6px] has-[&gt;svg]:px-1 author-action" aria-label="Delete Message" data-state="closed"><span aria-hidden="true"><svg class="pointer-events-none" data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M6.75 2.75C6.75 2.05964 7.30964 1.5 8 1.5C8.69036 1.5 9.25 2.05964 9.25 2.75V3H6.75V2.75ZM5.25 3V2.75C5.25 1.23122 6.48122 0 8 0C9.51878 0 10.75 1.23122 10.75 2.75V3H12.9201H14.25H15V4.5H14.25H13.8846L13.1776 13.6917C13.0774 14.9942 11.9913 16 10.6849 16H5.31508C4.00874 16 2.92263 14.9942 2.82244 13.6917L2.11538 4.5H1.75H1V3H1.75H3.07988H5.25ZM4.31802 13.5767L3.61982 4.5H12.3802L11.682 13.5767C11.6419 14.0977 11.2075 14.5 10.6849 14.5H5.31508C4.79254 14.5 4.3581 14.0977 4.31802 13.5767Z" fill="currentColor"/></svg></span></button><div data-orientation="horizontal" role="none" class="shrink-0 bg-alpha-400 h-5 w-px author-action"></div><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center justify-center gap-1.5 whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 border-transparent bg-transparent hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 has-[&gt;kbd]:pr-1 hover:bg-alpha-200 focus:bg-alpha-200 focus-visible:bg-alpha-200 h-6 min-w-6 rounded-md px-1 text-sm text-gray-500 hover:text-gray-900 focus:text-gray-900 focus-visible:text-gray-900 has-[&gt;kbd]:gap-[6px] has-[&gt;svg]:px-1" aria-label="Copy Message" data-state="closed"><span aria-hidden="true"><svg class="pointer-events-none" data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M2.75 0.5C1.7835 0.5 1 1.2835 1 2.25V9.75C1 10.7165 1.7835 11.5 2.75 11.5H3.75H4.5V10H3.75H2.75C2.61193 10 2.5 9.88807 2.5 9.75V2.25C2.5 2.11193 2.61193 2 2.75 2H8.25C8.38807 2 8.5 2.11193 8.5 2.25V3H10V2.25C10 1.2835 9.2165 0.5 8.25 0.5H2.75ZM7.75 4.5C6.7835 4.5 6 5.2835 6 6.25V13.75C6 14.7165 6.7835 15.5 7.75 15.5H13.25C14.2165 15.5 15 14.7165 15 13.75V6.25C15 5.2835 14.2165 4.5 13.25 4.5H7.75ZM7.5 6.25C7.5 6.11193 7.61193 6 7.75 6H13.25C13.3881 6 13.5 6.11193 13.5 6.25V13.75C13.5 13.8881 13.3881 14 13.25 14H7.75C7.61193 14 7.5 13.8881 7.5 13.75V6.25Z" fill="currentColor"/></svg></span></button></div></div></div></div></div></div></div></div><div style="position:absolute;width:100%;left:0;top:40px;visibility:hidden"><div class="flex w-full px-4 py-3 empty:hidden [&amp;&gt;div]:w-full" data-is-first="false" data-is-last="false"><div id="«R1adeivertbpeqdfffb»" class=""><div class="group w-full gap-2" data-touch-active="false" data-testid="message" role="listitem" id="za1cMufE0uQvKgohFeMkNcIgXmMZpLMG"><div class="relative flex items-start gap-2"><a class="flex items-center" href="#za1cMufE0uQvKgohFeMkNcIgXmMZpLMG"><span aria-hidden="true" class="relative size-6 items-center justify-center overflow-visible"><span class="absolute inset-0 flex items-center justify-center"><svg class="h-full min-w-[25px] -translate-x-px transition-all duration-500 darken opacity-0 v0-loader" fill="none" height="18" viewBox="15.5 41.5 100 41" width="40" xmlns="http://www.w3.org/2000/svg"><defs><clipPath id="v-clip-«R1dadeivertbpeqdfffb»"><rect height="98" width="128" x="0" y="46"></rect></clipPath></defs><g clip-path="url(#v-clip-«R1dadeivertbpeqdfffb»)"><path class="bg" d="M 15 38 C 18.011 41.4115 41.0275 67.4845 48.5 77.3 c 5.9 6.8 5.8 6.7 5.8 -1.6 C 54.3 69.651 54.3 42.8741 54.3 42.8741"></path><path class="fg" d="M 15 38 C 18.011 41.4115 41.0275 67.4845 48.5 77.3 c 5.9 6.8 5.8 6.7 5.8 -1.6 C 54.3 69.651 54.3 42.8741 54.3 42.8741" id="v" pathLength="1"></path></g><path class="bg" d="M 102.9 48.5 L 75.7 75.2"></path><path class="fg" d="M 102.9 48.5 L 75.7 75.2" id="o-slash" pathLength="1"></path><path class="bg" d="M73.4653 41.7309L97.3029 41.7309C101.815 41.7309 109.905 46.2887 109.905 54.1283V77.1615"></path><path class="fg" d="M73.4653 41.7309L97.3029 41.7309C101.815 41.7309 109.905 46.2887 109.905 54.1283V77.1615" id="o-top" pathLength="0.99"></path><path class="bg" d="M104.996 81.8855L81.0314 81.8855C75.5619 81.8855 68.5885 76.5073 68.5885 69.1236L68.5885 46.2209"></path><path class="fg" d="M104.996 81.8855L81.0314 81.8855C75.5619 81.8855 68.5885 76.5073 68.5885 69.1236L68.5885 46.2209" id="o-bottom" pathLength="0.99"></path></svg></span><span class="absolute inset-0 flex items-center justify-center"><svg fill="currentColor" viewBox="0 0 40 20" xmlns="http://www.w3.org/2000/svg" class="h-full min-w-[25px] -translate-x-px text-black transition-opacity duration-500 opacity-100"><path d="M23.3919 0H32.9188C36.7819 0 39.9136 3.13165 39.9136 6.99475V16.0805H36.0006V6.99475C36.0006 6.90167 35.9969 6.80925 35.9898 6.71766L26.4628 16.079C26.4949 16.08 26.5272 16.0805 26.5595 16.0805H36.0006V19.7762H26.5595C22.6964 19.7762 19.4788 16.6139 19.4788 12.7508V3.68923H23.3919V12.7508C23.3919 12.9253 23.4054 13.0977 23.4316 13.2668L33.1682 3.6995C33.0861 3.6927 33.003 3.68923 32.9188 3.68923H23.3919V0Z"></path><path d="M13.7688 19.0956L0 3.68759H5.53933L13.6231 12.7337V3.68759H17.7535V17.5746C17.7535 19.6705 15.1654 20.6584 13.7688 19.0956Z"></path></svg></span></span></a><div class="min-w-0 flex-1 translate-y-[0.5px]"><div class="flex min-w-0 flex-1 flex-col items-stretch gap-4"><div class="flex-1 text-sm"><div class="w-full"><div class="prose prose-sm prose-gray min-w-0 break-words" data-seg="root"><p data-seg="«Rmm6ladeivertbpeqdfffb»"><span data-seg="«Romm6ladeivertbpeqdfffb»">I&#x27;ll help you build a task management web app with React for the frontend. Let&#x27;s start by creating a structured, scalable frontend application that implements the features you&#x27;ve requested.</span></p><div class="text-gray-500 [&amp;:not(:first-child)]:-mt-1 [&amp;_+_.block-preview]:mt-4" data-seg="skip" data-orientation="vertical"><div data-state="closed" data-orientation="vertical"><button type="button" aria-controls="radix-«Rp6m6ladeivertbpeqdfffb»" aria-expanded="false" data-state="closed" data-orientation="vertical" id="radix-«R96m6ladeivertbpeqdfffb»" class="group/trigger w-full" data-radix-collection-item=""><div class="flex" style="opacity:0;will-change:opacity"><div class="group/thinking flex w-full min-w-0 flex-1 flex-row items-center gap-1 text-sm"><div class="transition-colors group-hover/thinking:text-gray-900">Thought for 6 seconds</div><div class="translate-y-[1px] transition-all group-[&amp;[data-state=open]]/trigger:rotate-180"><svg class="!text-gray-500 transition-colors group-hover/thinking:!text-gray-900" data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M12.0607 6.74999L11.5303 7.28032L8.7071 10.1035C8.31657 10.4941 7.68341 10.4941 7.29288 10.1035L4.46966 7.28032L3.93933 6.74999L4.99999 5.68933L5.53032 6.21966L7.99999 8.68933L10.4697 6.21966L11 5.68933L12.0607 6.74999Z" fill="currentColor"/></svg></div></div></div></button><div data-state="closed" id="radix-«Rp6m6ladeivertbpeqdfffb»" hidden="" role="region" aria-labelledby="radix-«R96m6ladeivertbpeqdfffb»" data-orientation="vertical" class="group/content data-[state=open]:animate-accordion-down data-[state=closed]:animate-accordion-up overflow-hidden pt-2" style="--radix-accordion-content-height:var(--radix-collapsible-content-height);--radix-accordion-content-width:var(--radix-collapsible-content-width)"></div></div></div><h3 data-seg="«R1mm6ladeivertbpeqdfffb»"><span data-seg="«Rpmm6ladeivertbpeqdfffb»">Task Management Web App - Frontend Implementation</span></h3><p data-seg="«R26m6ladeivertbpeqdfffb»"><span data-seg="«Rq6m6ladeivertbpeqdfffb»">I&#x27;ll create a comprehensive React frontend for your task management application using Next.js with the App Router. This implementation will include all the features you requested while following best practices for scalability and security.</span></p><div class="block-preview flex flex-col gap-3 [&amp;:not(:last-child)]:mb-4" data-seg="«R2mm6ladeivertbpeqdfffb»"><div data-testid="block-preview" class="not-prose group/block-preview bg-background flex w-full max-w-full cursor-pointer select-none flex-col justify-between overflow-hidden rounded-md border shadow-[0px_2px_3px_-1px_hsla(0,0%,0%,0.04)] transition-all ease-in-out md:w-[400px] hover:ring-alpha-400 border-alpha-400 hover:border-alpha-600"><div class="@container/block-preview-header flex h-9 w-full items-center justify-between gap-3 p-2"><div class="flex items-center gap-2 text-sm font-medium text-gray-900"><div class="flex items-center gap-1 whitespace-nowrap text-[13px] font-medium text-gray-800"><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center justify-center gap-1.5 whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 size-5 rounded-sm"><svg data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M6.74999 3.93933L7.28032 4.46966L10.1035 7.29288C10.4941 7.68341 10.4941 8.31657 10.1035 8.7071L7.28032 11.5303L6.74999 12.0607L5.68933 11L6.21966 10.4697L8.68933 7.99999L6.21966 5.53032L5.68933 4.99999L6.74999 3.93933Z" fill="currentColor"/></svg></button>Version <!-- -->1</div></div><div class="flex items-center gap-2"><button class="focus:border-alpha-400 focus-visible:border-alpha-400 disabled:border-alpha-300 border-alpha-400 hover:border-alpha-400 focus-visible:ring-offset-background aria-disabled:border-alpha-300 inline-flex shrink-0 cursor-pointer select-none items-center justify-center gap-1.5 whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:bg-gray-100 disabled:text-gray-400 disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:bg-gray-100 aria-disabled:text-gray-400 aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 bg-background-subtle text-gray-900 hover:bg-gray-100 focus:bg-gray-100 focus-visible:bg-gray-100 has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] h-5 rounded-sm px-1.5 text-xs">View</button></div></div></div></div><p data-seg="«R36m6ladeivertbpeqdfffb»"><span data-seg="«Rr6m6ladeivertbpeqdfffb»">This completes the frontend implementation for your task management web app. I&#x27;ve created a comprehensive React application using Next.js with the App Router that includes all the features you requested:</span></p><h3 data-seg="«R3mm6ladeivertbpeqdfffb»"><span data-seg="«Rrmm6ladeivertbpeqdfffb»">Key Features Implemented:</span></h3><ol data-seg="«R46m6ladeivertbpeqdfffb»" start="1"><li data-seg="«Rs6m6ladeivertbpeqdfffb»" index="1"><p data-seg="«Rcs6m6ladeivertbpeqdfffb»"><strong data-seg="«R3cs6m6ladeivertbpeqdfffb»"><span data-seg="«Rfcs6m6ladeivertbpeqdfffb»">Task Assignment and Prioritization</span></strong></p><ul data-seg="«Rks6m6ladeivertbpeqdfffb»" start="1"><li data-seg="«R3ks6m6ladeivertbpeqdfffb»" index="1"><span data-seg="«Rrks6m6ladeivertbpeqdfffb»">Kanban board with drag-and-drop functionality</span></li><li data-seg="«R5ks6m6ladeivertbpeqdfffb»" index="2"><span data-seg="«Rtks6m6ladeivertbpeqdfffb»">Priority levels (High, Medium, Low) with visual indicators</span></li><li data-seg="«R7ks6m6ladeivertbpeqdfffb»" index="3"><span data-seg="«Rvks6m6ladeivertbpeqdfffb»">Task assignment to team members</span></li></ul></li><li data-seg="«R1c6m6ladeivertbpeqdfffb»" index="2"><p data-seg="«Rdc6m6ladeivertbpeqdfffb»"><strong data-seg="«R3dc6m6ladeivertbpeqdfffb»"><span data-seg="«Rfdc6m6ladeivertbpeqdfffb»">Deadline Tracking and Notifications</span></strong></p><ul data-seg="«Rlc6m6ladeivertbpeqdfffb»" start="1"><li data-seg="«R3lc6m6ladeivertbpeqdfffb»" index="1"><span data-seg="«Rrlc6m6ladeivertbpeqdfffb»">Due date selection and display</span></li><li data-seg="«R5lc6m6ladeivertbpeqdfffb»" index="2"><span data-seg="«Rtlc6m6ladeivertbpeqdfffb»">Deadline reminders and overdue task indicators</span></li><li data-seg="«R7lc6m6ladeivertbpeqdfffb»" index="3"><span data-seg="«Rvlc6m6ladeivertbpeqdfffb»">Notification preferences management</span></li></ul></li><li data-seg="«R1s6m6ladeivertbpeqdfffb»" index="3"><p data-seg="«Rds6m6ladeivertbpeqdfffb»"><strong data-seg="«R3ds6m6ladeivertbpeqdfffb»"><span data-seg="«Rfds6m6ladeivertbpeqdfffb»">Progress Reporting</span></strong></p><ul data-seg="«Rls6m6ladeivertbpeqdfffb»" start="1"><li data-seg="«R3ls6m6ladeivertbpeqdfffb»" index="1"><span data-seg="«Rrls6m6ladeivertbpeqdfffb»">Visual charts for task completion rates</span></li><li data-seg="«R5ls6m6ladeivertbpeqdfffb»" index="2"><span data-seg="«Rtls6m6ladeivertbpeqdfffb»">Team performance metrics</span></li><li data-seg="«R7ls6m6ladeivertbpeqdfffb»" index="3"><span data-seg="«Rvls6m6ladeivertbpeqdfffb»">Task priority distribution visualization</span></li></ul></li><li data-seg="«R2c6m6ladeivertbpeqdfffb»" index="4"><p data-seg="«Rec6m6ladeivertbpeqdfffb»"><strong data-seg="«R3ec6m6ladeivertbpeqdfffb»"><span data-seg="«Rfec6m6ladeivertbpeqdfffb»">Role-Based Permissions</span></strong></p><ul data-seg="«Rmc6m6ladeivertbpeqdfffb»" start="1"><li data-seg="«R3mc6m6ladeivertbpeqdfffb»" index="1"><span data-seg="«Rrmc6m6ladeivertbpeqdfffb»">Admin, Editor, and Viewer roles</span></li><li data-seg="«R5mc6m6ladeivertbpeqdfffb»" index="2"><span data-seg="«Rtmc6m6ladeivertbpeqdfffb»">Permission-based access control</span></li><li data-seg="«R7mc6m6ladeivertbpeqdfffb»" index="3"><span data-seg="«Rvmc6m6ladeivertbpeqdfffb»">User management interface for admins</span></li></ul></li><li data-seg="«R2s6m6ladeivertbpeqdfffb»" index="5"><p data-seg="«Res6m6ladeivertbpeqdfffb»"><strong data-seg="«R3es6m6ladeivertbpeqdfffb»"><span data-seg="«Rfes6m6ladeivertbpeqdfffb»">Real-Time Collaboration</span></strong></p><ul data-seg="«Rms6m6ladeivertbpeqdfffb»" start="1"><li data-seg="«R3ms6m6ladeivertbpeqdfffb»" index="1"><span data-seg="«Rrms6m6ladeivertbpeqdfffb»">Task comments system</span></li><li data-seg="«R5ms6m6ladeivertbpeqdfffb»" index="2"><span data-seg="«Rtms6m6ladeivertbpeqdfffb»">File attachment capabilities</span></li><li data-seg="«R7ms6m6ladeivertbpeqdfffb»" index="3"><span data-seg="«Rvms6m6ladeivertbpeqdfffb»">Team member visibility</span></li></ul></li><li data-seg="«R3c6m6ladeivertbpeqdfffb»" index="6"><p data-seg="«Rfc6m6ladeivertbpeqdfffb»"><strong data-seg="«R3fc6m6ladeivertbpeqdfffb»"><span data-seg="«Rffc6m6ladeivertbpeqdfffb»">Secure Authentication and Authorization</span></strong></p><ul data-seg="«Rnc6m6ladeivertbpeqdfffb»" start="1"><li data-seg="«R3nc6m6ladeivertbpeqdfffb»" index="1"><span data-seg="«Rrnc6m6ladeivertbpeqdfffb»">JWT-based authentication</span></li><li data-seg="«R5nc6m6ladeivertbpeqdfffb»" index="2"><span data-seg="«Rtnc6m6ladeivertbpeqdfffb»">Login/registration forms</span></li><li data-seg="«R7nc6m6ladeivertbpeqdfffb»" index="3"><span data-seg="«Rvnc6m6ladeivertbpeqdfffb»">Password management and security settings</span></li></ul></li></ol><h3 data-seg="«R4mm6ladeivertbpeqdfffb»"><span data-seg="«Rsmm6ladeivertbpeqdfffb»">Technical Implementation:</span></h3><ul data-seg="«R56m6ladeivertbpeqdfffb»" start="1"><li data-seg="«Rt6m6ladeivertbpeqdfffb»" index="1"><strong data-seg="«Rct6m6ladeivertbpeqdfffb»"><span data-seg="«R3ct6m6ladeivertbpeqdfffb»">Component Structure</span></strong><span data-seg="«Rkt6m6ladeivertbpeqdfffb»">: Organized by feature for better maintainability</span></li><li data-seg="«R1d6m6ladeivertbpeqdfffb»" index="2"><strong data-seg="«Rdd6m6ladeivertbpeqdfffb»"><span data-seg="«R3dd6m6ladeivertbpeqdfffb»">State Management</span></strong><span data-seg="«Rld6m6ladeivertbpeqdfffb»">: Using React hooks for local state</span></li><li data-seg="«R1t6m6ladeivertbpeqdfffb»" index="3"><strong data-seg="«Rdt6m6ladeivertbpeqdfffb»"><span data-seg="«R3dt6m6ladeivertbpeqdfffb»">UI Components</span></strong><span data-seg="«Rlt6m6ladeivertbpeqdfffb»">: Built with shadcn/ui and Tailwind CSS</span></li><li data-seg="«R2d6m6ladeivertbpeqdfffb»" index="4"><strong data-seg="«Red6m6ladeivertbpeqdfffb»"><span data-seg="«R3ed6m6ladeivertbpeqdfffb»">Data Visualization</span></strong><span data-seg="«Rmd6m6ladeivertbpeqdfffb»">: Charts for reporting using Recharts</span></li><li data-seg="«R2t6m6ladeivertbpeqdfffb»" index="5"><strong data-seg="«Ret6m6ladeivertbpeqdfffb»"><span data-seg="«R3et6m6ladeivertbpeqdfffb»">Form Handling</span></strong><span data-seg="«Rmt6m6ladeivertbpeqdfffb»">: Form validation and submission handling</span></li><li data-seg="«R3d6m6ladeivertbpeqdfffb»" index="6"><strong data-seg="«Rfd6m6ladeivertbpeqdfffb»"><span data-seg="«R3fd6m6ladeivertbpeqdfffb»">Responsive Design</span></strong><span data-seg="«Rnd6m6ladeivertbpeqdfffb»">: Mobile-friendly layouts throughout</span></li></ul><p data-seg="«R5mm6ladeivertbpeqdfffb»"><span data-seg="«Rtmm6ladeivertbpeqdfffb»">To complete the application, you&#x27;ll need to implement the backend with Node.js and MongoDB. Would you like me to continue with the backend implementation next?</span></p><p data-seg="«R66m6ladeivertbpeqdfffb»"><span data-seg="«Ru6m6ladeivertbpeqdfffb»">Please make sure to add the following environment variable to your project:</span></p><div class="shadow-base rounded-lg text-muted-foreground bg-muted w-full max-w-[360px] overflow-hidden shadow-sm" data-seg="skip"><div class="my-0 p-2"><div class="animate-pulse rounded-md bg-primary/10 h-[130px] w-full"></div></div></div></div></div></div><div class="items-center gap-1 flex"><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center justify-center gap-1.5 whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-2 text-xs has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-1 has-[&gt;kbd]:pr-1 size-6 rounded-md text-gray-600 hover:text-gray-900 focus:text-gray-900" data-state="closed"><span aria-hidden="true"><span class="grid [&amp;&gt;*]:[grid-area:1/1] "><span style="opacity:1;will-change:opacity"><svg class="copy-icon overflow-visible" fill="currentColor" height="16" viewBox="0 0 16 16" width="16" xmlns="http://www.w3.org/2000/svg"><style>.copy-icon {
            * {
              transition: transform 0.35s cubic-bezier(0.35, 0.2, 0.14, 0.95), d 0.35s cubic-bezier(0.35, 0.2, 0.14, 0.95);
            }
          }
          button:has(.copy-icon):hover, button:has(.copy-icon):focus-visible {
            .left {
              d: path("M 2.75 0.5 C 1.7835 0.5 1 1.2835 1 2.25 V 9.75 C 1 10.7165 1.7835 11.5 2.75 11.5 H 3.75 H 6.5 V 10 H 3.75 H 2.75 C 2.6119 10 2.5 9.8881 2.5 9.75 V 2.25 C 2.5 2.1119 2.6119 2 2.75 2 H 8.25 C 8.3881 2 8.5 2.1119 8.5 2.25 V 5 H 10 V 2.25 C 10 1.2835 9.2165 0.5 8.25 0.5 H 2.75 Z");
              transform: translate(-1px, -1px);
            }
            .right {
              transform: translate(1px, 1px);
            }
          }</style><path class="left" clip-rule="evenodd" d="M2.75 0.5C1.7835 0.5 1 1.2835 1 2.25V9.75C1 10.7165 1.7835 11.5 2.75 11.5H3.75H4.5V10H3.75H2.75C2.61193 10 2.5 9.88807 2.5 9.75V2.25C2.5 2.11193 2.61193 2 2.75 2H8.25C8.38807 2 8.5 2.11193 8.5 2.25V3H10V2.25C10 1.2835 9.2165 0.5 8.25 0.5H2.75Z" fill="currentColor" fill-rule="evenodd"></path><path class="right" clip-rule="evenodd" d="M7.75 4.5C6.7835 4.5 6 5.2835 6 6.25V13.75C6 14.7165 6.7835 15.5 7.75 15.5H13.25C14.2165 15.5 15 14.7165 15 13.75V6.25C15 5.2835 14.2165 4.5 13.25 4.5H7.75ZM7.5 6.25C7.5 6.11193 7.61193 6 7.75 6H13.25C13.3881 6 13.5 6.11193 13.5 6.25V13.75C13.5 13.8881 13.3881 14 13.25 14H7.75C7.61193 14 7.5 13.8881 7.5 13.75V6.25Z" fill="currentColor" fill-rule="evenodd"></path></svg></span></span></span></button><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center justify-center gap-1.5 whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-2 text-xs has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-1 has-[&gt;kbd]:pr-1 size-6 rounded-md text-gray-600 hover:text-gray-900 focus:text-gray-900" aria-label="Retry Message" data-state="closed"><span class="transition-none" style="opacity:1;transform:none"><svg data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16" aria-hidden="true"><path fill-rule="evenodd" clip-rule="evenodd" d="M8.00002 1.25C5.33749 1.25 3.02334 2.73677 1.84047 4.92183L1.48342 5.58138L2.80253 6.29548L3.15958 5.63592C4.09084 3.91566 5.90986 2.75 8.00002 2.75C10.4897 2.75 12.5941 4.40488 13.2713 6.67462H11.8243H11.0743V8.17462H11.8243H15.2489C15.6631 8.17462 15.9989 7.83883 15.9989 7.42462V4V3.25H14.4989V4V5.64468C13.4653 3.06882 10.9456 1.25 8.00002 1.25ZM1.50122 10.8555V12.5V13.25H0.0012207V12.5V9.07538C0.0012207 8.66117 0.337007 8.32538 0.751221 8.32538H4.17584H4.92584V9.82538H4.17584H2.72876C3.40596 12.0951 5.51032 13.75 8.00002 13.75C10.0799 13.75 11.8912 12.5958 12.8266 10.8895L13.1871 10.2318L14.5025 10.9529L14.142 11.6105C12.9539 13.7779 10.6494 15.25 8.00002 15.25C5.05453 15.25 2.53485 13.4313 1.50122 10.8555Z" fill="currentColor"/></svg></span></button></div></div></div></div></div></div></div></div><div style="position:absolute;width:100%;left:0;top:80px;visibility:hidden"><div class="flex w-full px-4 py-3 empty:hidden [&amp;&gt;div]:w-full" data-is-first="false" data-is-last="false"></div></div><div style="position:absolute;width:100%;left:0;top:120px;visibility:hidden"><div class="flex w-full px-4 py-3 empty:hidden [&amp;&gt;div]:w-full" data-is-first="false" data-is-last="false"><div id="«R2adeivertbpeqdfffb»" class=""><div class="group w-full gap-2" data-touch-active="false" data-testid="message" role="listitem" id="hbkpp78Xpw6UJXoj8p2hrM6olNHHjBnN"><div class="relative flex items-start gap-2"><a class="flex items-center" href="#hbkpp78Xpw6UJXoj8p2hrM6olNHHjBnN"><span aria-hidden="true" class="relative size-6 items-center justify-center overflow-visible"><span class="absolute inset-0 flex items-center justify-center"><svg class="h-full min-w-[25px] -translate-x-px transition-all duration-500 darken opacity-0 v0-loader" fill="none" height="18" viewBox="15.5 41.5 100 41" width="40" xmlns="http://www.w3.org/2000/svg"><defs><clipPath id="v-clip-«R1eadeivertbpeqdfffb»"><rect height="98" width="128" x="0" y="46"></rect></clipPath></defs><g clip-path="url(#v-clip-«R1eadeivertbpeqdfffb»)"><path class="bg" d="M 15 38 C 18.011 41.4115 41.0275 67.4845 48.5 77.3 c 5.9 6.8 5.8 6.7 5.8 -1.6 C 54.3 69.651 54.3 42.8741 54.3 42.8741"></path><path class="fg" d="M 15 38 C 18.011 41.4115 41.0275 67.4845 48.5 77.3 c 5.9 6.8 5.8 6.7 5.8 -1.6 C 54.3 69.651 54.3 42.8741 54.3 42.8741" id="v" pathLength="1"></path></g><path class="bg" d="M 102.9 48.5 L 75.7 75.2"></path><path class="fg" d="M 102.9 48.5 L 75.7 75.2" id="o-slash" pathLength="1"></path><path class="bg" d="M73.4653 41.7309L97.3029 41.7309C101.815 41.7309 109.905 46.2887 109.905 54.1283V77.1615"></path><path class="fg" d="M73.4653 41.7309L97.3029 41.7309C101.815 41.7309 109.905 46.2887 109.905 54.1283V77.1615" id="o-top" pathLength="0.99"></path><path class="bg" d="M104.996 81.8855L81.0314 81.8855C75.5619 81.8855 68.5885 76.5073 68.5885 69.1236L68.5885 46.2209"></path><path class="fg" d="M104.996 81.8855L81.0314 81.8855C75.5619 81.8855 68.5885 76.5073 68.5885 69.1236L68.5885 46.2209" id="o-bottom" pathLength="0.99"></path></svg></span><span class="absolute inset-0 flex items-center justify-center"><svg fill="currentColor" viewBox="0 0 40 20" xmlns="http://www.w3.org/2000/svg" class="h-full min-w-[25px] -translate-x-px text-black transition-opacity duration-500 opacity-100"><path d="M23.3919 0H32.9188C36.7819 0 39.9136 3.13165 39.9136 6.99475V16.0805H36.0006V6.99475C36.0006 6.90167 35.9969 6.80925 35.9898 6.71766L26.4628 16.079C26.4949 16.08 26.5272 16.0805 26.5595 16.0805H36.0006V19.7762H26.5595C22.6964 19.7762 19.4788 16.6139 19.4788 12.7508V3.68923H23.3919V12.7508C23.3919 12.9253 23.4054 13.0977 23.4316 13.2668L33.1682 3.6995C33.0861 3.6927 33.003 3.68923 32.9188 3.68923H23.3919V0Z"></path><path d="M13.7688 19.0956L0 3.68759H5.53933L13.6231 12.7337V3.68759H17.7535V17.5746C17.7535 19.6705 15.1654 20.6584 13.7688 19.0956Z"></path></svg></span></span></a><div class="min-w-0 flex-1 translate-y-[0.5px]"><div class="flex min-w-0 flex-1 flex-col items-stretch gap-4"><div class="flex-1 text-sm"><div class="w-full"><div class="prose prose-sm prose-gray min-w-0 break-words" data-seg="root"><div class="text-gray-500 [&amp;:not(:first-child)]:-mt-1 [&amp;_+_.block-preview]:mt-4" data-seg="skip" data-orientation="vertical"><div data-state="closed" data-orientation="vertical"><button type="button" aria-controls="radix-«R1gmm6madeivertbpeqdfffb»" aria-expanded="false" data-state="closed" data-orientation="vertical" id="radix-«Rgmm6madeivertbpeqdfffb»" class="group/trigger w-full" data-radix-collection-item=""><div class="flex" style="opacity:0;will-change:opacity"><div class="group/thinking flex w-full min-w-0 flex-1 flex-row items-center gap-1 text-sm"><div class="transition-colors group-hover/thinking:text-gray-900">Thought for 4 seconds</div><div class="translate-y-[1px] transition-all group-[&amp;[data-state=open]]/trigger:rotate-180"><svg class="!text-gray-500 transition-colors group-hover/thinking:!text-gray-900" data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M12.0607 6.74999L11.5303 7.28032L8.7071 10.1035C8.31657 10.4941 7.68341 10.4941 7.29288 10.1035L4.46966 7.28032L3.93933 6.74999L4.99999 5.68933L5.53032 6.21966L7.99999 8.68933L10.4697 6.21966L11 5.68933L12.0607 6.74999Z" fill="currentColor"/></svg></div></div></div></button><div data-state="closed" id="radix-«R1gmm6madeivertbpeqdfffb»" hidden="" role="region" aria-labelledby="radix-«Rgmm6madeivertbpeqdfffb»" data-orientation="vertical" class="group/content data-[state=open]:animate-accordion-down data-[state=closed]:animate-accordion-up overflow-hidden pt-2" style="--radix-accordion-content-height:var(--radix-collapsible-content-height);--radix-accordion-content-width:var(--radix-collapsible-content-width)"></div></div></div><p data-seg="«R16m6madeivertbpeqdfffb»"><span data-seg="«R1h6m6madeivertbpeqdfffb»">Great! Now that you have the JWT_SECRET environment variable set up, let&#x27;s implement the backend for your task management application using Node.js and MongoDB.</span></p><div class="block-preview flex flex-col gap-3 [&amp;:not(:last-child)]:mb-4" data-seg="«R1mm6madeivertbpeqdfffb»"><div data-testid="block-preview" class="not-prose group/block-preview bg-background flex w-full max-w-full cursor-pointer select-none flex-col justify-between overflow-hidden rounded-md border shadow-[0px_2px_3px_-1px_hsla(0,0%,0%,0.04)] transition-all ease-in-out md:w-[400px] ring-alpha-400 border-gray-500 ring-2"><div class="@container/block-preview-header flex h-9 w-full items-center justify-between gap-3 p-2 border-alpha-200 border-b"><div class="flex items-center gap-2 text-sm font-medium text-gray-900"><div class="flex items-center gap-1 whitespace-nowrap text-[13px] font-medium text-gray-800"><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center justify-center gap-1.5 whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 size-5 rounded-sm"><svg data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M12.0607 6.74999L11.5303 7.28032L8.7071 10.1035C8.31657 10.4941 7.68341 10.4941 7.29288 10.1035L4.46966 7.28032L3.93933 6.74999L4.99999 5.68933L5.53032 6.21966L7.99999 8.68933L10.4697 6.21966L11 5.68933L12.0607 6.74999Z" fill="currentColor"/></svg></button>Version <!-- -->2</div></div><div class="flex items-center gap-2"><button class="focus:border-alpha-400 focus-visible:border-alpha-400 disabled:border-alpha-300 border-alpha-400 hover:border-alpha-400 focus-visible:ring-offset-background aria-disabled:border-alpha-300 inline-flex shrink-0 cursor-pointer select-none items-center justify-center gap-1.5 whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:bg-gray-100 disabled:text-gray-400 disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:bg-gray-100 aria-disabled:text-gray-400 aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 bg-background-subtle text-gray-900 hover:bg-gray-100 focus:bg-gray-100 focus-visible:bg-gray-100 has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] h-5 rounded-sm px-1.5 text-xs" disabled="">Viewing</button></div></div><div class="bg-muted overflow-hidden" style="opacity:1;height:auto"><div class="flex w-full flex-col overflow-hidden rounded-md py-1.5 pl-2 pr-2.5 text-left text-gray-500"><div class="flex h-5 w-full min-w-0 items-center gap-2 text-[13px]"><div class="flex size-5 shrink-0 items-center justify-center"><svg class="size-3 text-gray-400" data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M16 8C16 12.4183 12.4183 16 8 16C3.58172 16 0 12.4183 0 8C0 3.58172 3.58172 0 8 0C12.4183 0 16 3.58172 16 8ZM11.5303 6.53033L12.0607 6L11 4.93934L10.4697 5.46967L6.5 9.43934L5.53033 8.46967L5 7.93934L3.93934 9L4.46967 9.53033L5.96967 11.0303C6.26256 11.3232 6.73744 11.3232 7.03033 11.0303L11.5303 6.53033Z" fill="currentColor"/></svg></div><div class="group/file flex w-full min-w-0 items-center justify-between gap-2" role="button" tabindex="0"><div class="flex-1 cursor-pointer truncate text-left group-hover/file:underline">server.js</div><div class="font-mono text-xs text-gray-500">Generated</div></div></div><div class="flex h-3 w-5 items-center justify-center"><div class="h-full w-[1px] bg-gray-300"></div></div><div class="flex h-5 w-full min-w-0 items-center gap-2 text-[13px]"><div class="flex size-5 shrink-0 items-center justify-center"><svg class="size-3 text-gray-400" data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M16 8C16 12.4183 12.4183 16 8 16C3.58172 16 0 12.4183 0 8C0 3.58172 3.58172 0 8 0C12.4183 0 16 3.58172 16 8ZM11.5303 6.53033L12.0607 6L11 4.93934L10.4697 5.46967L6.5 9.43934L5.53033 8.46967L5 7.93934L3.93934 9L4.46967 9.53033L5.96967 11.0303C6.26256 11.3232 6.73744 11.3232 7.03033 11.0303L11.5303 6.53033Z" fill="currentColor"/></svg></div><div class="group/file flex w-full min-w-0 items-center justify-between gap-2" role="button" tabindex="0"><div class="flex-1 cursor-pointer truncate text-left group-hover/file:underline">models/User.js</div><div class="font-mono text-xs text-gray-500">Generated</div></div></div><div class="flex h-3 w-5 items-center justify-center"><div class="h-full w-[1px] bg-gray-300"></div></div><div class="flex h-5 w-full min-w-0 items-center gap-2 text-[13px]"><div class="flex size-5 shrink-0 items-center justify-center"><svg class="size-3 text-gray-400" data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M16 8C16 12.4183 12.4183 16 8 16C3.58172 16 0 12.4183 0 8C0 3.58172 3.58172 0 8 0C12.4183 0 16 3.58172 16 8ZM11.5303 6.53033L12.0607 6L11 4.93934L10.4697 5.46967L6.5 9.43934L5.53033 8.46967L5 7.93934L3.93934 9L4.46967 9.53033L5.96967 11.0303C6.26256 11.3232 6.73744 11.3232 7.03033 11.0303L11.5303 6.53033Z" fill="currentColor"/></svg></div><div class="group/file flex w-full min-w-0 items-center justify-between gap-2" role="button" tabindex="0"><div class="flex-1 cursor-pointer truncate text-left group-hover/file:underline">models/Task.js</div><div class="font-mono text-xs text-gray-500">Generated</div></div></div><div class="flex h-3 w-5 items-center justify-center"><div class="h-full w-[1px] bg-gray-300"></div></div><div class="flex h-5 w-full min-w-0 items-center gap-2 text-[13px]"><div class="flex size-5 shrink-0 items-center justify-center"><svg class="size-3 text-gray-400" data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M16 8C16 12.4183 12.4183 16 8 16C3.58172 16 0 12.4183 0 8C0 3.58172 3.58172 0 8 0C12.4183 0 16 3.58172 16 8ZM11.5303 6.53033L12.0607 6L11 4.93934L10.4697 5.46967L6.5 9.43934L5.53033 8.46967L5 7.93934L3.93934 9L4.46967 9.53033L5.96967 11.0303C6.26256 11.3232 6.73744 11.3232 7.03033 11.0303L11.5303 6.53033Z" fill="currentColor"/></svg></div><div class="group/file flex w-full min-w-0 items-center justify-between gap-2" role="button" tabindex="0"><div class="flex-1 cursor-pointer truncate text-left group-hover/file:underline">models/Comment.js</div><div class="font-mono text-xs text-gray-500">Generated</div></div></div><div class="flex h-3 w-5 items-center justify-center"><div class="h-full w-[1px] bg-gray-300"></div></div><div class="flex h-5 w-full min-w-0 items-center gap-2 text-[13px]"><div class="flex size-5 shrink-0 items-center justify-center"><svg class="size-3 text-gray-400" data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M16 8C16 12.4183 12.4183 16 8 16C3.58172 16 0 12.4183 0 8C0 3.58172 3.58172 0 8 0C12.4183 0 16 3.58172 16 8ZM11.5303 6.53033L12.0607 6L11 4.93934L10.4697 5.46967L6.5 9.43934L5.53033 8.46967L5 7.93934L3.93934 9L4.46967 9.53033L5.96967 11.0303C6.26256 11.3232 6.73744 11.3232 7.03033 11.0303L11.5303 6.53033Z" fill="currentColor"/></svg></div><div class="group/file flex w-full min-w-0 items-center justify-between gap-2" role="button" tabindex="0"><div class="flex-1 cursor-pointer truncate text-left group-hover/file:underline">models/Notification.js</div><div class="font-mono text-xs text-gray-500">Generated</div></div></div><div class="flex h-3 w-5 items-center justify-center"><div class="h-full w-[1px] bg-gray-300"></div></div><div class="flex h-5 w-full min-w-0 items-center gap-2 text-[13px]"><div class="flex size-5 shrink-0 items-center justify-center"><svg class="size-3 text-gray-400" data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M16 8C16 12.4183 12.4183 16 8 16C3.58172 16 0 12.4183 0 8C0 3.58172 3.58172 0 8 0C12.4183 0 16 3.58172 16 8ZM11.5303 6.53033L12.0607 6L11 4.93934L10.4697 5.46967L6.5 9.43934L5.53033 8.46967L5 7.93934L3.93934 9L4.46967 9.53033L5.96967 11.0303C6.26256 11.3232 6.73744 11.3232 7.03033 11.0303L11.5303 6.53033Z" fill="currentColor"/></svg></div><div class="group/file flex w-full min-w-0 items-center justify-between gap-2" role="button" tabindex="0"><div class="flex-1 cursor-pointer truncate text-left group-hover/file:underline">middleware/auth.js</div><div class="font-mono text-xs text-gray-500">Generated</div></div></div><div class="flex h-3 w-5 items-center justify-center"><div class="h-full w-[1px] bg-gray-300"></div></div><div class="flex h-5 w-full min-w-0 items-center gap-2 text-[13px]"><div class="flex size-5 shrink-0 items-center justify-center"><svg class="size-3 text-gray-400" data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M16 8C16 12.4183 12.4183 16 8 16C3.58172 16 0 12.4183 0 8C0 3.58172 3.58172 0 8 0C12.4183 0 16 3.58172 16 8ZM11.5303 6.53033L12.0607 6L11 4.93934L10.4697 5.46967L6.5 9.43934L5.53033 8.46967L5 7.93934L3.93934 9L4.46967 9.53033L5.96967 11.0303C6.26256 11.3232 6.73744 11.3232 7.03033 11.0303L11.5303 6.53033Z" fill="currentColor"/></svg></div><div class="group/file flex w-full min-w-0 items-center justify-between gap-2" role="button" tabindex="0"><div class="flex-1 cursor-pointer truncate text-left group-hover/file:underline">middleware/errorHandler.js</div><div class="font-mono text-xs text-gray-500">Generated</div></div></div><div class="flex h-3 w-5 items-center justify-center"><div class="h-full w-[1px] bg-gray-300"></div></div><div class="flex h-5 w-full min-w-0 items-center gap-2 text-[13px]"><div class="flex size-5 shrink-0 items-center justify-center"><svg class="size-3 text-gray-400" data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M16 8C16 12.4183 12.4183 16 8 16C3.58172 16 0 12.4183 0 8C0 3.58172 3.58172 0 8 0C12.4183 0 16 3.58172 16 8ZM11.5303 6.53033L12.0607 6L11 4.93934L10.4697 5.46967L6.5 9.43934L5.53033 8.46967L5 7.93934L3.93934 9L4.46967 9.53033L5.96967 11.0303C6.26256 11.3232 6.73744 11.3232 7.03033 11.0303L11.5303 6.53033Z" fill="currentColor"/></svg></div><div class="group/file flex w-full min-w-0 items-center justify-between gap-2" role="button" tabindex="0"><div class="flex-1 cursor-pointer truncate text-left group-hover/file:underline">middleware/upload.js</div><div class="font-mono text-xs text-gray-500">Generated</div></div></div><div class="flex h-3 w-5 items-center justify-center"><div class="h-full w-[1px] bg-gray-300"></div></div><div class="flex h-5 w-full min-w-0 items-center gap-2 text-[13px]"><div class="flex size-5 shrink-0 items-center justify-center"><svg class="size-3 text-gray-400" data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M16 8C16 12.4183 12.4183 16 8 16C3.58172 16 0 12.4183 0 8C0 3.58172 3.58172 0 8 0C12.4183 0 16 3.58172 16 8ZM11.5303 6.53033L12.0607 6L11 4.93934L10.4697 5.46967L6.5 9.43934L5.53033 8.46967L5 7.93934L3.93934 9L4.46967 9.53033L5.96967 11.0303C6.26256 11.3232 6.73744 11.3232 7.03033 11.0303L11.5303 6.53033Z" fill="currentColor"/></svg></div><div class="group/file flex w-full min-w-0 items-center justify-between gap-2" role="button" tabindex="0"><div class="flex-1 cursor-pointer truncate text-left group-hover/file:underline">routes/auth.js</div><div class="font-mono text-xs text-gray-500">Generated</div></div></div><div class="flex h-3 w-5 items-center justify-center"><div class="h-full w-[1px] bg-gray-300"></div></div><div class="flex h-5 w-full min-w-0 items-center gap-2 text-[13px]"><div class="flex size-5 shrink-0 items-center justify-center"><svg class="size-3 text-gray-400" data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M16 8C16 12.4183 12.4183 16 8 16C3.58172 16 0 12.4183 0 8C0 3.58172 3.58172 0 8 0C12.4183 0 16 3.58172 16 8ZM11.5303 6.53033L12.0607 6L11 4.93934L10.4697 5.46967L6.5 9.43934L5.53033 8.46967L5 7.93934L3.93934 9L4.46967 9.53033L5.96967 11.0303C6.26256 11.3232 6.73744 11.3232 7.03033 11.0303L11.5303 6.53033Z" fill="currentColor"/></svg></div><div class="group/file flex w-full min-w-0 items-center justify-between gap-2" role="button" tabindex="0"><div class="flex-1 cursor-pointer truncate text-left group-hover/file:underline">routes/users.js</div><div class="font-mono text-xs text-gray-500">Generated</div></div></div><div class="flex h-3 w-5 items-center justify-center"><div class="h-full w-[1px] bg-gray-300"></div></div><div class="flex h-5 w-full min-w-0 items-center gap-2 text-[13px]"><div class="flex size-5 shrink-0 items-center justify-center"><svg class="size-3 text-gray-400" data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M16 8C16 12.4183 12.4183 16 8 16C3.58172 16 0 12.4183 0 8C0 3.58172 3.58172 0 8 0C12.4183 0 16 3.58172 16 8ZM11.5303 6.53033L12.0607 6L11 4.93934L10.4697 5.46967L6.5 9.43934L5.53033 8.46967L5 7.93934L3.93934 9L4.46967 9.53033L5.96967 11.0303C6.26256 11.3232 6.73744 11.3232 7.03033 11.0303L11.5303 6.53033Z" fill="currentColor"/></svg></div><div class="group/file flex w-full min-w-0 items-center justify-between gap-2" role="button" tabindex="0"><div class="flex-1 cursor-pointer truncate text-left group-hover/file:underline">routes/tasks.js</div><div class="font-mono text-xs text-gray-500">Generated</div></div></div><div class="flex h-3 w-5 items-center justify-center"><div class="h-full w-[1px] bg-gray-300"></div></div><div class="flex h-5 w-full min-w-0 items-center gap-2 text-[13px]"><div class="flex size-5 shrink-0 items-center justify-center"><svg class="size-3 text-gray-400" data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M16 8C16 12.4183 12.4183 16 8 16C3.58172 16 0 12.4183 0 8C0 3.58172 3.58172 0 8 0C12.4183 0 16 3.58172 16 8ZM11.5303 6.53033L12.0607 6L11 4.93934L10.4697 5.46967L6.5 9.43934L5.53033 8.46967L5 7.93934L3.93934 9L4.46967 9.53033L5.96967 11.0303C6.26256 11.3232 6.73744 11.3232 7.03033 11.0303L11.5303 6.53033Z" fill="currentColor"/></svg></div><div class="group/file flex w-full min-w-0 items-center justify-between gap-2" role="button" tabindex="0"><div class="flex-1 cursor-pointer truncate text-left group-hover/file:underline">routes/comments.js</div><div class="font-mono text-xs text-gray-500">Generated</div></div></div><div class="flex h-3 w-5 items-center justify-center"><div class="h-full w-[1px] bg-gray-300"></div></div><div class="flex h-5 w-full min-w-0 items-center gap-2 text-[13px]"><div class="flex size-5 shrink-0 items-center justify-center"><svg class="size-3 text-gray-400" data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M16 8C16 12.4183 12.4183 16 8 16C3.58172 16 0 12.4183 0 8C0 3.58172 3.58172 0 8 0C12.4183 0 16 3.58172 16 8ZM11.5303 6.53033L12.0607 6L11 4.93934L10.4697 5.46967L6.5 9.43934L5.53033 8.46967L5 7.93934L3.93934 9L4.46967 9.53033L5.96967 11.0303C6.26256 11.3232 6.73744 11.3232 7.03033 11.0303L11.5303 6.53033Z" fill="currentColor"/></svg></div><div class="group/file flex w-full min-w-0 items-center justify-between gap-2" role="button" tabindex="0"><div class="flex-1 cursor-pointer truncate text-left group-hover/file:underline">routes/reports.js</div><div class="font-mono text-xs text-gray-500">Generated</div></div></div><div class="flex h-3 w-5 items-center justify-center"><div class="h-full w-[1px] bg-gray-300"></div></div><div class="flex h-5 w-full min-w-0 items-center gap-2 text-[13px]"><div class="flex size-5 shrink-0 items-center justify-center"><svg class="size-3 text-gray-400" data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M16 8C16 12.4183 12.4183 16 8 16C3.58172 16 0 12.4183 0 8C0 3.58172 3.58172 0 8 0C12.4183 0 16 3.58172 16 8ZM11.5303 6.53033L12.0607 6L11 4.93934L10.4697 5.46967L6.5 9.43934L5.53033 8.46967L5 7.93934L3.93934 9L4.46967 9.53033L5.96967 11.0303C6.26256 11.3232 6.73744 11.3232 7.03033 11.0303L11.5303 6.53033Z" fill="currentColor"/></svg></div><div class="group/file flex w-full min-w-0 items-center justify-between gap-2" role="button" tabindex="0"><div class="flex-1 cursor-pointer truncate text-left group-hover/file:underline">routes/notifications.js</div><div class="font-mono text-xs text-gray-500">Generated</div></div></div><div class="flex h-3 w-5 items-center justify-center"><div class="h-full w-[1px] bg-gray-300"></div></div><div class="flex h-5 w-full min-w-0 items-center gap-2 text-[13px]"><div class="flex size-5 shrink-0 items-center justify-center"><svg class="size-3 text-gray-400" data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M16 8C16 12.4183 12.4183 16 8 16C3.58172 16 0 12.4183 0 8C0 3.58172 3.58172 0 8 0C12.4183 0 16 3.58172 16 8ZM11.5303 6.53033L12.0607 6L11 4.93934L10.4697 5.46967L6.5 9.43934L5.53033 8.46967L5 7.93934L3.93934 9L4.46967 9.53033L5.96967 11.0303C6.26256 11.3232 6.73744 11.3232 7.03033 11.0303L11.5303 6.53033Z" fill="currentColor"/></svg></div><div class="group/file flex w-full min-w-0 items-center justify-between gap-2" role="button" tabindex="0"><div class="flex-1 cursor-pointer truncate text-left group-hover/file:underline">socket/socketHandlers.js</div><div class="font-mono text-xs text-gray-500">Generated</div></div></div><div class="flex h-3 w-5 items-center justify-center"><div class="h-full w-[1px] bg-gray-300"></div></div><div class="flex h-5 w-full min-w-0 items-center gap-2 text-[13px]"><div class="flex size-5 shrink-0 items-center justify-center"><svg class="size-3 text-gray-400" data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M16 8C16 12.4183 12.4183 16 8 16C3.58172 16 0 12.4183 0 8C0 3.58172 3.58172 0 8 0C12.4183 0 16 3.58172 16 8ZM11.5303 6.53033L12.0607 6L11 4.93934L10.4697 5.46967L6.5 9.43934L5.53033 8.46967L5 7.93934L3.93934 9L4.46967 9.53033L5.96967 11.0303C6.26256 11.3232 6.73744 11.3232 7.03033 11.0303L11.5303 6.53033Z" fill="currentColor"/></svg></div><div class="group/file flex w-full min-w-0 items-center justify-between gap-2" role="button" tabindex="0"><div class="flex-1 cursor-pointer truncate text-left group-hover/file:underline">utils/error.js</div><div class="font-mono text-xs text-gray-500">Generated</div></div></div><div class="flex h-3 w-5 items-center justify-center"><div class="h-full w-[1px] bg-gray-300"></div></div><div class="flex h-5 w-full min-w-0 items-center gap-2 text-[13px]"><div class="flex size-5 shrink-0 items-center justify-center"><svg class="size-3 text-gray-400" data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M16 8C16 12.4183 12.4183 16 8 16C3.58172 16 0 12.4183 0 8C0 3.58172 3.58172 0 8 0C12.4183 0 16 3.58172 16 8ZM11.5303 6.53033L12.0607 6L11 4.93934L10.4697 5.46967L6.5 9.43934L5.53033 8.46967L5 7.93934L3.93934 9L4.46967 9.53033L5.96967 11.0303C6.26256 11.3232 6.73744 11.3232 7.03033 11.0303L11.5303 6.53033Z" fill="currentColor"/></svg></div><div class="group/file flex w-full min-w-0 items-center justify-between gap-2" role="button" tabindex="0"><div class="flex-1 cursor-pointer truncate text-left group-hover/file:underline">utils/email.js</div><div class="font-mono text-xs text-gray-500">Generated</div></div></div><div class="flex h-3 w-5 items-center justify-center"><div class="h-full w-[1px] bg-gray-300"></div></div><div class="flex h-5 w-full min-w-0 items-center gap-2 text-[13px]"><div class="flex size-5 shrink-0 items-center justify-center"><svg class="size-3 text-gray-400" data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M16 8C16 12.4183 12.4183 16 8 16C3.58172 16 0 12.4183 0 8C0 3.58172 3.58172 0 8 0C12.4183 0 16 3.58172 16 8ZM11.5303 6.53033L12.0607 6L11 4.93934L10.4697 5.46967L6.5 9.43934L5.53033 8.46967L5 7.93934L3.93934 9L4.46967 9.53033L5.96967 11.0303C6.26256 11.3232 6.73744 11.3232 7.03033 11.0303L11.5303 6.53033Z" fill="currentColor"/></svg></div><div class="group/file flex w-full min-w-0 items-center justify-between gap-2" role="button" tabindex="0"><div class="flex-1 cursor-pointer truncate text-left group-hover/file:underline">utils/export.js</div><div class="font-mono text-xs text-gray-500">Generated</div></div></div><div class="flex h-3 w-5 items-center justify-center"><div class="h-full w-[1px] bg-gray-300"></div></div><div class="flex h-5 w-full min-w-0 items-center gap-2 text-[13px]"><div class="flex size-5 shrink-0 items-center justify-center"><svg class="size-3 text-gray-400" data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M16 8C16 12.4183 12.4183 16 8 16C3.58172 16 0 12.4183 0 8C0 3.58172 3.58172 0 8 0C12.4183 0 16 3.58172 16 8ZM11.5303 6.53033L12.0607 6L11 4.93934L10.4697 5.46967L6.5 9.43934L5.53033 8.46967L5 7.93934L3.93934 9L4.46967 9.53033L5.96967 11.0303C6.26256 11.3232 6.73744 11.3232 7.03033 11.0303L11.5303 6.53033Z" fill="currentColor"/></svg></div><div class="group/file flex w-full min-w-0 items-center justify-between gap-2" role="button" tabindex="0"><div class="flex-1 cursor-pointer truncate text-left group-hover/file:underline">utils/scheduler.js</div><div class="font-mono text-xs text-gray-500">Generated</div></div></div><div class="flex h-3 w-5 items-center justify-center"><div class="h-full w-[1px] bg-gray-300"></div></div><div class="flex h-5 w-full min-w-0 items-center gap-2 text-[13px]"><div class="flex size-5 shrink-0 items-center justify-center"><svg class="size-3 text-gray-400" data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M16 8C16 12.4183 12.4183 16 8 16C3.58172 16 0 12.4183 0 8C0 3.58172 3.58172 0 8 0C12.4183 0 16 3.58172 16 8ZM11.5303 6.53033L12.0607 6L11 4.93934L10.4697 5.46967L6.5 9.43934L5.53033 8.46967L5 7.93934L3.93934 9L4.46967 9.53033L5.96967 11.0303C6.26256 11.3232 6.73744 11.3232 7.03033 11.0303L11.5303 6.53033Z" fill="currentColor"/></svg></div><div class="group/file flex w-full min-w-0 items-center justify-between gap-2" role="button" tabindex="0"><div class="flex-1 cursor-pointer truncate text-left group-hover/file:underline">package.json</div><div class="font-mono text-xs text-gray-500">Generated</div></div></div><div class="flex h-3 w-5 items-center justify-center"><div class="h-full w-[1px] bg-gray-300"></div></div><div class="flex h-5 w-full min-w-0 items-center gap-2 text-[13px]"><div class="flex size-5 shrink-0 items-center justify-center"><svg class="size-3 text-gray-400" data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M16 8C16 12.4183 12.4183 16 8 16C3.58172 16 0 12.4183 0 8C0 3.58172 3.58172 0 8 0C12.4183 0 16 3.58172 16 8ZM11.5303 6.53033L12.0607 6L11 4.93934L10.4697 5.46967L6.5 9.43934L5.53033 8.46967L5 7.93934L3.93934 9L4.46967 9.53033L5.96967 11.0303C6.26256 11.3232 6.73744 11.3232 7.03033 11.0303L11.5303 6.53033Z" fill="currentColor"/></svg></div><div class="group/file flex w-full min-w-0 items-center justify-between gap-2" role="button" tabindex="0"><div class="flex-1 cursor-pointer truncate text-left group-hover/file:underline">.env.example</div><div class="font-mono text-xs text-gray-500">Generated</div></div></div></div></div></div></div><h2 data-seg="«R26m6madeivertbpeqdfffb»"><span data-seg="«R1i6m6madeivertbpeqdfffb»">Backend Implementation for Task Management App</span></h2><p data-seg="«R2mm6madeivertbpeqdfffb»"><span data-seg="«R1imm6madeivertbpeqdfffb»">I&#x27;ve completed the backend implementation for your task management application using Node.js and MongoDB. This backend provides all the necessary APIs and functionality to support the frontend we created earlier. Let me explain the key components of the backend implementation:</span></p><h3 data-seg="«R36m6madeivertbpeqdfffb»"><span data-seg="«R1j6m6madeivertbpeqdfffb»">Key Features Implemented:</span></h3><ol data-seg="«R3mm6madeivertbpeqdfffb»" start="1"><li data-seg="«R1jmm6madeivertbpeqdfffb»" index="1"><p data-seg="«R1hjmm6madeivertbpeqdfffb»"><strong data-seg="«Rdhjmm6madeivertbpeqdfffb»"><span data-seg="«R1thjmm6madeivertbpeqdfffb»">RESTful API Architecture</span></strong></p><ul data-seg="«R2hjmm6madeivertbpeqdfffb»" start="1"><li data-seg="«Rehjmm6madeivertbpeqdfffb»" index="1"><span data-seg="«R3ehjmm6madeivertbpeqdfffb»">Complete set of CRUD operations for tasks, users, comments, and notifications</span></li><li data-seg="«Rmhjmm6madeivertbpeqdfffb»" index="2"><span data-seg="«R3mhjmm6madeivertbpeqdfffb»">Well-structured routes with proper middleware for authentication and authorization</span></li><li data-seg="«Ruhjmm6madeivertbpeqdfffb»" index="3"><span data-seg="«R3uhjmm6madeivertbpeqdfffb»">Error handling middleware for consistent error responses</span></li></ul></li><li data-seg="«R2jmm6madeivertbpeqdfffb»" index="2"><p data-seg="«R1ijmm6madeivertbpeqdfffb»"><strong data-seg="«Rdijmm6madeivertbpeqdfffb»"><span data-seg="«R1tijmm6madeivertbpeqdfffb»">Authentication &amp; Authorization</span></strong></p><ul data-seg="«R2ijmm6madeivertbpeqdfffb»" start="1"><li data-seg="«Reijmm6madeivertbpeqdfffb»" index="1"><span data-seg="«R6eijmm6madeivertbpeqdfffb»">JWT-based authentication with secure token handling</span></li><li data-seg="«Rmijmm6madeivertbpeqdfffb»" index="2"><span data-seg="«R6mijmm6madeivertbpeqdfffb»">Role-based access control (admin, editor, viewer)</span></li><li data-seg="«Ruijmm6madeivertbpeqdfffb»" index="3"><span data-seg="«R6uijmm6madeivertbpeqdfffb»">Password hashing with bcrypt for security</span></li><li data-seg="«R16ijmm6madeivertbpeqdfffb»" index="4"><span data-seg="«R76ijmm6madeivertbpeqdfffb»">OAuth integration for Google and GitHub login</span></li></ul></li><li data-seg="«R3jmm6madeivertbpeqdfffb»" index="3"><p data-seg="«R1jjmm6madeivertbpeqdfffb»"><strong data-seg="«Rdjjmm6madeivertbpeqdfffb»"><span data-seg="«R1tjjmm6madeivertbpeqdfffb»">Database Models</span></strong></p><ul data-seg="«R2jjmm6madeivertbpeqdfffb»" start="1"><li data-seg="«Rejjmm6madeivertbpeqdfffb»" index="1"><span data-seg="«R3ejjmm6madeivertbpeqdfffb»">Mongoose schemas with validation for all entities</span></li><li data-seg="«Rmjjmm6madeivertbpeqdfffb»" index="2"><span data-seg="«R3mjjmm6madeivertbpeqdfffb»">Proper relationships between models (tasks, users, comments, notifications)</span></li><li data-seg="«Rujjmm6madeivertbpeqdfffb»" index="3"><span data-seg="«R3ujjmm6madeivertbpeqdfffb»">Indexing for optimized query performance</span></li></ul></li><li data-seg="«R4jmm6madeivertbpeqdfffb»" index="4"><p data-seg="«R1kjmm6madeivertbpeqdfffb»"><strong data-seg="«Rdkjmm6madeivertbpeqdfffb»"><span data-seg="«R1tkjmm6madeivertbpeqdfffb»">Real-time Functionality</span></strong></p><ul data-seg="«R2kjmm6madeivertbpeqdfffb»" start="1"><li data-seg="«Rekjmm6madeivertbpeqdfffb»" index="1"><span data-seg="«R3ekjmm6madeivertbpeqdfffb»">Socket.io integration for real-time updates</span></li><li data-seg="«Rmkjmm6madeivertbpeqdfffb»" index="2"><span data-seg="«R3mkjmm6madeivertbpeqdfffb»">Live notifications for task assignments, comments, and mentions</span></li><li data-seg="«Rukjmm6madeivertbpeqdfffb»" index="3"><span data-seg="«R3ukjmm6madeivertbpeqdfffb»">Real-time collaboration features</span></li></ul></li><li data-seg="«R5jmm6madeivertbpeqdfffb»" index="5"><p data-seg="«R1ljmm6madeivertbpeqdfffb»"><strong data-seg="«Rdljmm6madeivertbpeqdfffb»"><span data-seg="«R1tljmm6madeivertbpeqdfffb»">File Upload &amp; Management</span></strong></p><ul data-seg="«R2ljmm6madeivertbpeqdfffb»" start="1"><li data-seg="«Reljmm6madeivertbpeqdfffb»" index="1"><span data-seg="«R3eljmm6madeivertbpeqdfffb»">Secure file upload with Multer</span></li><li data-seg="«Rmljmm6madeivertbpeqdfffb»" index="2"><span data-seg="«R3mljmm6madeivertbpeqdfffb»">Support for various file types (images, documents, etc.)</span></li><li data-seg="«Ruljmm6madeivertbpeqdfffb»" index="3"><span data-seg="«R3uljmm6madeivertbpeqdfffb»">Organized file storage structure</span></li></ul></li><li data-seg="«R6jmm6madeivertbpeqdfffb»" index="6"><p data-seg="«R1mjmm6madeivertbpeqdfffb»"><strong data-seg="«Rdmjmm6madeivertbpeqdfffb»"><span data-seg="«R1tmjmm6madeivertbpeqdfffb»">Reporting &amp; Data Export</span></strong></p><ul data-seg="«R2mjmm6madeivertbpeqdfffb»" start="1"><li data-seg="«Remjmm6madeivertbpeqdfffb»" index="1"><span data-seg="«R3emjmm6madeivertbpeqdfffb»">Comprehensive reporting APIs for task completion, team performance, etc.</span></li><li data-seg="«Rmmjmm6madeivertbpeqdfffb»" index="2"><span data-seg="«R3mmjmm6madeivertbpeqdfffb»">Export functionality to PDF and CSV formats</span></li><li data-seg="«Rumjmm6madeivertbpeqdfffb»" index="3"><span data-seg="«R3umjmm6madeivertbpeqdfffb»">Aggregation pipelines for data analysis</span></li></ul></li><li data-seg="«R7jmm6madeivertbpeqdfffb»" index="7"><p data-seg="«R1njmm6madeivertbpeqdfffb»"><strong data-seg="«Rdnjmm6madeivertbpeqdfffb»"><span data-seg="«R1tnjmm6madeivertbpeqdfffb»">Notification System</span></strong></p><ul data-seg="«R2njmm6madeivertbpeqdfffb»" start="1"><li data-seg="«Renjmm6madeivertbpeqdfffb»" index="1"><span data-seg="«R3enjmm6madeivertbpeqdfffb»">In-app notifications</span></li><li data-seg="«Rmnjmm6madeivertbpeqdfffb»" index="2"><span data-seg="«R3mnjmm6madeivertbpeqdfffb»">Email notifications with Nodemailer</span></li><li data-seg="«Runjmm6madeivertbpeqdfffb»" index="3"><span data-seg="«R3unjmm6madeivertbpeqdfffb»">Scheduled reminders for upcoming deadlines</span></li></ul></li><li data-seg="«R8jmm6madeivertbpeqdfffb»" index="8"><p data-seg="«R1ojmm6madeivertbpeqdfffb»"><strong data-seg="«Rdojmm6madeivertbpeqdfffb»"><span data-seg="«R1tojmm6madeivertbpeqdfffb»">Scheduled Jobs</span></strong></p><ul data-seg="«R2ojmm6madeivertbpeqdfffb»" start="1"><li data-seg="«Reojmm6madeivertbpeqdfffb»" index="1"><span data-seg="«R3eojmm6madeivertbpeqdfffb»">Automated deadline reminders</span></li><li data-seg="«Rmojmm6madeivertbpeqdfffb»" index="2"><span data-seg="«R3mojmm6madeivertbpeqdfffb»">Weekly digest emails</span></li><li data-seg="«Ruojmm6madeivertbpeqdfffb»" index="3"><span data-seg="«R3uojmm6madeivertbpeqdfffb»">Task status updates</span></li></ul></li></ol><h3 data-seg="«R46m6madeivertbpeqdfffb»"><span data-seg="«R1k6m6madeivertbpeqdfffb»">Integration with Frontend:</span></h3><p data-seg="«R4mm6madeivertbpeqdfffb»"><span data-seg="«R1kmm6madeivertbpeqdfffb»">To connect the frontend with this backend:</span></p><ol data-seg="«R56m6madeivertbpeqdfffb»" start="1"><li data-seg="«R1l6m6madeivertbpeqdfffb»" index="1"><p data-seg="«Rpl6m6madeivertbpeqdfffb»"><strong data-seg="«R6pl6m6madeivertbpeqdfffb»"><span data-seg="«R1mpl6m6madeivertbpeqdfffb»">Environment Setup</span></strong><span data-seg="«Rapl6m6madeivertbpeqdfffb»">:</span></p><ul data-seg="«R19l6m6madeivertbpeqdfffb»" start="1"><li data-seg="«R79l6m6madeivertbpeqdfffb»" index="1"><span data-seg="«R1n9l6m6madeivertbpeqdfffb»">Create a </span><code data-seg="«R2n9l6m6madeivertbpeqdfffb»" class="rounded-[0.375rem] border bg-gray-100 px-[0.25rem] py-[0.15rem] font-mono text-xs font-normal before:hidden after:hidden">.env</code><span data-seg="«R3n9l6m6madeivertbpeqdfffb»"> file based on the </span><code data-seg="«R4n9l6m6madeivertbpeqdfffb»" class="rounded-[0.375rem] border bg-gray-100 px-[0.25rem] py-[0.15rem] font-mono text-xs font-normal before:hidden after:hidden">.env.example</code><span data-seg="«R5n9l6m6madeivertbpeqdfffb»"> template</span></li><li data-seg="«Rb9l6m6madeivertbpeqdfffb»" index="2"><span data-seg="«R1r9l6m6madeivertbpeqdfffb»">Set your MongoDB connection string, JWT secret, and other configuration</span></li></ul></li><li data-seg="«R2l6m6madeivertbpeqdfffb»" index="2"><p data-seg="«Rql6m6madeivertbpeqdfffb»"><strong data-seg="«R6ql6m6madeivertbpeqdfffb»"><span data-seg="«R1mql6m6madeivertbpeqdfffb»">Running the Backend</span></strong><span data-seg="«Raql6m6madeivertbpeqdfffb»">:</span></p><div data-seg="«R1al6m6madeivertbpeqdfffb»"><div class="codeblock border-alpha-400 relative flex size-full flex-col overflow-hidden rounded-lg border font-sans not-prose max-h-[500px] md:max-h-[700px]" data-seg="root"><div class="group/inline-code-block relative flex size-full flex-col overflow-hidden"><div class="flex h-10 w-full shrink-0 items-center justify-between rounded-t-lg border-b pl-2.5 pr-1.5 bg-muted" data-seg="skip"><span class="text-gray-500"><svg fill="none" height="16" viewBox="0 0 16 16" width="16" xmlns="http://www.w3.org/2000/svg" class="size-4"><g clip-path="url(#clip0_3211_43963)"><path d="M4 7L6 5.5L4 4" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path><path d="M7 9H10" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path><path d="M13.4444 1H2.55556C1.69645 1 1 1.69645 1 2.55556V13.4444C1 14.3036 1.69645 15 2.55556 15H13.4444C14.3036 15 15 14.3036 15 13.4444V2.55556C15 1.69645 14.3036 1 13.4444 1Z" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></g><defs><clipPath id="clip0_3211_43963"><rect fill="white" height="16" width="16"></rect></clipPath></defs></svg></span><div class="flex items-center space-x-1 text-gray-500"><button class="focus:border-alpha-400 focus-visible:border-alpha-400 disabled:border-alpha-300 border-alpha-400 hover:border-alpha-400 focus-visible:ring-offset-background aria-disabled:border-alpha-300 inline-flex shrink-0 cursor-pointer select-none items-center justify-center gap-1.5 whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:bg-gray-100 disabled:text-gray-400 disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:bg-gray-100 aria-disabled:text-gray-400 aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 bg-background-subtle text-gray-900 hover:bg-gray-100 focus:bg-gray-100 focus-visible:bg-gray-100 px-2 text-xs has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-1 has-[&gt;kbd]:pr-1 size-6 rounded-md" aria-label="Copy" data-state="closed"><span aria-hidden="true"><span class="grid [&amp;&gt;*]:[grid-area:1/1] "><span style="opacity:1;will-change:opacity"><svg class="copy-icon overflow-visible" fill="currentColor" height="14" viewBox="0 0 16 16" width="14" xmlns="http://www.w3.org/2000/svg"><style>.copy-icon {
            * {
              transition: transform 0.35s cubic-bezier(0.35, 0.2, 0.14, 0.95), d 0.35s cubic-bezier(0.35, 0.2, 0.14, 0.95);
            }
          }
          button:has(.copy-icon):hover, button:has(.copy-icon):focus-visible {
            .left {
              d: path("M 2.75 0.5 C 1.7835 0.5 1 1.2835 1 2.25 V 9.75 C 1 10.7165 1.7835 11.5 2.75 11.5 H 3.75 H 6.5 V 10 H 3.75 H 2.75 C 2.6119 10 2.5 9.8881 2.5 9.75 V 2.25 C 2.5 2.1119 2.6119 2 2.75 2 H 8.25 C 8.3881 2 8.5 2.1119 8.5 2.25 V 5 H 10 V 2.25 C 10 1.2835 9.2165 0.5 8.25 0.5 H 2.75 Z");
              transform: translate(-1px, -1px);
            }
            .right {
              transform: translate(1px, 1px);
            }
          }</style><path class="left" clip-rule="evenodd" d="M2.75 0.5C1.7835 0.5 1 1.2835 1 2.25V9.75C1 10.7165 1.7835 11.5 2.75 11.5H3.75H4.5V10H3.75H2.75C2.61193 10 2.5 9.88807 2.5 9.75V2.25C2.5 2.11193 2.61193 2 2.75 2H8.25C8.38807 2 8.5 2.11193 8.5 2.25V3H10V2.25C10 1.2835 9.2165 0.5 8.25 0.5H2.75Z" fill="currentColor" fill-rule="evenodd"></path><path class="right" clip-rule="evenodd" d="M7.75 4.5C6.7835 4.5 6 5.2835 6 6.25V13.75C6 14.7165 6.7835 15.5 7.75 15.5H13.25C14.2165 15.5 15 14.7165 15 13.75V6.25C15 5.2835 14.2165 4.5 13.25 4.5H7.75ZM7.5 6.25C7.5 6.11193 7.61193 6 7.75 6H13.25C13.3881 6 13.5 6.11193 13.5 6.25V13.75C13.5 13.8881 13.3881 14 13.25 14H7.75C7.61193 14 7.5 13.8881 7.5 13.75V6.25Z" fill="currentColor" fill-rule="evenodd"></path></svg></span></span></span></button></div></div><div class="group size-full overflow-scroll"><div class="size-full text-gray-500 group-has-[.language-text]:text-black group-has-[.token]:text-black"><div class="prismjs" style="display:flex;margin:0;width:max-content;height:min-content;padding:8px 10px;text-shadow:none;border-radius:0 0 calc(var(--radius) - 2px) calc(var(--radius) - 2px);-webkit-overflow-scrolling:touch;background-color:transparent;font-family:var(--font-geist-mono);line-height:1.55;font-size:0.8125rem"><code class="language-bash" style="white-space:pre">npm install
npm run dev</code></div></div></div></div></div></div></li><li data-seg="«R3l6m6madeivertbpeqdfffb»" index="3"><p data-seg="«Rrl6m6madeivertbpeqdfffb»"><strong data-seg="«R6rl6m6madeivertbpeqdfffb»"><span data-seg="«R1mrl6m6madeivertbpeqdfffb»">API Configuration in Frontend</span></strong><span data-seg="«Rarl6m6madeivertbpeqdfffb»">:</span></p><ul data-seg="«R1bl6m6madeivertbpeqdfffb»" start="1"><li data-seg="«R7bl6m6madeivertbpeqdfffb»" index="1"><span data-seg="«R1nbl6m6madeivertbpeqdfffb»">Update the API base URL in your frontend to point to your backend server</span></li><li data-seg="«Rbbl6m6madeivertbpeqdfffb»" index="2"><span data-seg="«R1rbl6m6madeivertbpeqdfffb»">Ensure the JWT token is properly passed in requests</span></li></ul></li><li data-seg="«R4l6m6madeivertbpeqdfffb»" index="4"><p data-seg="«Rsl6m6madeivertbpeqdfffb»"><strong data-seg="«R6sl6m6madeivertbpeqdfffb»"><span data-seg="«R1msl6m6madeivertbpeqdfffb»">Socket.io Connection</span></strong><span data-seg="«Rasl6m6madeivertbpeqdfffb»">:</span></p><ul data-seg="«R1cl6m6madeivertbpeqdfffb»" start="1"><li data-seg="«R7cl6m6madeivertbpeqdfffb»" index="1"><span data-seg="«R1ncl6m6madeivertbpeqdfffb»">Connect to the WebSocket server from your frontend for real-time updates</span></li><li data-seg="«Rbcl6m6madeivertbpeqdfffb»" index="2"><span data-seg="«R1rcl6m6madeivertbpeqdfffb»">Implement event listeners for notifications and updates</span></li></ul></li></ol><h3 data-seg="«R5mm6madeivertbpeqdfffb»"><span data-seg="«R1lmm6madeivertbpeqdfffb»">Security Considerations:</span></h3><p data-seg="«R66m6madeivertbpeqdfffb»"><span data-seg="«R1m6m6madeivertbpeqdfffb»">The backend implements several security best practices:</span></p><ol data-seg="«R6mm6madeivertbpeqdfffb»" start="1"><li data-seg="«R1mmm6madeivertbpeqdfffb»" index="1"><span data-seg="«Rpmmm6madeivertbpeqdfffb»">Password hashing with bcrypt</span></li><li data-seg="«R2mmm6madeivertbpeqdfffb»" index="2"><span data-seg="«Rqmmm6madeivertbpeqdfffb»">JWT for secure authentication</span></li><li data-seg="«R3mmm6madeivertbpeqdfffb»" index="3"><span data-seg="«Rrmmm6madeivertbpeqdfffb»">CORS configuration to prevent unauthorized access</span></li><li data-seg="«R4mmm6madeivertbpeqdfffb»" index="4"><span data-seg="«Rsmmm6madeivertbpeqdfffb»">Input validation to prevent injection attacks</span></li><li data-seg="«R5mmm6madeivertbpeqdfffb»" index="5"><span data-seg="«Rtmmm6madeivertbpeqdfffb»">Role-based access control for authorization</span></li><li data-seg="«R6mmm6madeivertbpeqdfffb»" index="6"><span data-seg="«Rummm6madeivertbpeqdfffb»">Secure file upload handling</span></li></ol><h3 data-seg="«R76m6madeivertbpeqdfffb»"><span data-seg="«R1n6m6madeivertbpeqdfffb»">Deployment Recommendations:</span></h3><p data-seg="«R7mm6madeivertbpeqdfffb»"><span data-seg="«R1nmm6madeivertbpeqdfffb»">For deploying this full-stack application:</span></p><ol data-seg="«R86m6madeivertbpeqdfffb»" start="1"><li data-seg="«R1o6m6madeivertbpeqdfffb»" index="1"><strong data-seg="«Rpo6m6madeivertbpeqdfffb»"><span data-seg="«R6po6m6madeivertbpeqdfffb»">Backend</span></strong><span data-seg="«R19o6m6madeivertbpeqdfffb»">: Deploy to a Node.js-friendly platform like Vercel, Heroku, or AWS</span></li><li data-seg="«R2o6m6madeivertbpeqdfffb»" index="2"><strong data-seg="«Rqo6m6madeivertbpeqdfffb»"><span data-seg="«R6qo6m6madeivertbpeqdfffb»">Database</span></strong><span data-seg="«R1ao6m6madeivertbpeqdfffb»">: Use MongoDB Atlas for a managed MongoDB solution</span></li><li data-seg="«R3o6m6madeivertbpeqdfffb»" index="3"><strong data-seg="«Rro6m6madeivertbpeqdfffb»"><span data-seg="«R6ro6m6madeivertbpeqdfffb»">Frontend</span></strong><span data-seg="«R1bo6m6madeivertbpeqdfffb»">: Deploy to Vercel or Netlify for optimal performance</span></li><li data-seg="«R4o6m6madeivertbpeqdfffb»" index="4"><strong data-seg="«Rso6m6madeivertbpeqdfffb»"><span data-seg="«R6so6m6madeivertbpeqdfffb»">Environment Variables</span></strong><span data-seg="«R1co6m6madeivertbpeqdfffb»">: Securely configure all environment variables in your hosting platform</span></li><li data-seg="«R5o6m6madeivertbpeqdfffb»" index="5"><strong data-seg="«Rto6m6madeivertbpeqdfffb»"><span data-seg="«R6to6m6madeivertbpeqdfffb»">HTTPS</span></strong><span data-seg="«R1do6m6madeivertbpeqdfffb»">: Ensure all communication uses HTTPS for security</span></li></ol><p data-seg="«R8mm6madeivertbpeqdfffb»"><span data-seg="«R1omm6madeivertbpeqdfffb»">This complete implementation provides a solid foundation for your task management application with all the requested features. The modular architecture allows for easy extension and customization as your requirements evolve.</span></p><p data-seg="«R96m6madeivertbpeqdfffb»"><span data-seg="«R1p6m6madeivertbpeqdfffb»">Please make sure to add the following environment variables to your project:</span></p><div class="shadow-base rounded-lg text-muted-foreground bg-muted w-full max-w-[360px] overflow-hidden shadow-sm" data-seg="skip"><div class="my-0 p-2"><div class="animate-pulse rounded-md bg-primary/10 h-[130px] w-full"></div></div></div></div></div></div><div class="items-center gap-1 flex"><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center justify-center gap-1.5 whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-2 text-xs has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-1 has-[&gt;kbd]:pr-1 size-6 rounded-md text-gray-600 hover:text-gray-900 focus:text-gray-900" data-state="closed"><span aria-hidden="true"><span class="grid [&amp;&gt;*]:[grid-area:1/1] "><span style="opacity:1;will-change:opacity"><svg class="copy-icon overflow-visible" fill="currentColor" height="16" viewBox="0 0 16 16" width="16" xmlns="http://www.w3.org/2000/svg"><style>.copy-icon {
            * {
              transition: transform 0.35s cubic-bezier(0.35, 0.2, 0.14, 0.95), d 0.35s cubic-bezier(0.35, 0.2, 0.14, 0.95);
            }
          }
          button:has(.copy-icon):hover, button:has(.copy-icon):focus-visible {
            .left {
              d: path("M 2.75 0.5 C 1.7835 0.5 1 1.2835 1 2.25 V 9.75 C 1 10.7165 1.7835 11.5 2.75 11.5 H 3.75 H 6.5 V 10 H 3.75 H 2.75 C 2.6119 10 2.5 9.8881 2.5 9.75 V 2.25 C 2.5 2.1119 2.6119 2 2.75 2 H 8.25 C 8.3881 2 8.5 2.1119 8.5 2.25 V 5 H 10 V 2.25 C 10 1.2835 9.2165 0.5 8.25 0.5 H 2.75 Z");
              transform: translate(-1px, -1px);
            }
            .right {
              transform: translate(1px, 1px);
            }
          }</style><path class="left" clip-rule="evenodd" d="M2.75 0.5C1.7835 0.5 1 1.2835 1 2.25V9.75C1 10.7165 1.7835 11.5 2.75 11.5H3.75H4.5V10H3.75H2.75C2.61193 10 2.5 9.88807 2.5 9.75V2.25C2.5 2.11193 2.61193 2 2.75 2H8.25C8.38807 2 8.5 2.11193 8.5 2.25V3H10V2.25C10 1.2835 9.2165 0.5 8.25 0.5H2.75Z" fill="currentColor" fill-rule="evenodd"></path><path class="right" clip-rule="evenodd" d="M7.75 4.5C6.7835 4.5 6 5.2835 6 6.25V13.75C6 14.7165 6.7835 15.5 7.75 15.5H13.25C14.2165 15.5 15 14.7165 15 13.75V6.25C15 5.2835 14.2165 4.5 13.25 4.5H7.75ZM7.5 6.25C7.5 6.11193 7.61193 6 7.75 6H13.25C13.3881 6 13.5 6.11193 13.5 6.25V13.75C13.5 13.8881 13.3881 14 13.25 14H7.75C7.61193 14 7.5 13.8881 7.5 13.75V6.25Z" fill="currentColor" fill-rule="evenodd"></path></svg></span></span></span></button><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center justify-center gap-1.5 whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-2 text-xs has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-1 has-[&gt;kbd]:pr-1 size-6 rounded-md text-gray-600 hover:text-gray-900 focus:text-gray-900" aria-label="Retry Message" data-state="closed"><span class="transition-none" style="opacity:1;transform:none"><svg data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16" aria-hidden="true"><path fill-rule="evenodd" clip-rule="evenodd" d="M8.00002 1.25C5.33749 1.25 3.02334 2.73677 1.84047 4.92183L1.48342 5.58138L2.80253 6.29548L3.15958 5.63592C4.09084 3.91566 5.90986 2.75 8.00002 2.75C10.4897 2.75 12.5941 4.40488 13.2713 6.67462H11.8243H11.0743V8.17462H11.8243H15.2489C15.6631 8.17462 15.9989 7.83883 15.9989 7.42462V4V3.25H14.4989V4V5.64468C13.4653 3.06882 10.9456 1.25 8.00002 1.25ZM1.50122 10.8555V12.5V13.25H0.0012207V12.5V9.07538C0.0012207 8.66117 0.337007 8.32538 0.751221 8.32538H4.17584H4.92584V9.82538H4.17584H2.72876C3.40596 12.0951 5.51032 13.75 8.00002 13.75C10.0799 13.75 11.8912 12.5958 12.8266 10.8895L13.1871 10.2318L14.5025 10.9529L14.142 11.6105C12.9539 13.7779 10.6494 15.25 8.00002 15.25C5.05453 15.25 2.53485 13.4313 1.50122 10.8555Z" fill="currentColor"/></svg></span></button></div></div></div></div></div></div></div></div><div style="position:absolute;width:100%;left:0;top:160px;visibility:hidden"><div class="flex w-full px-4 py-3 empty:hidden [&amp;&gt;div]:w-full" data-is-first="false" data-is-last="false"><div class="group w-full gap-2" data-touch-active="false" data-testid="message" role="listitem" id="cBYV9J5punHvaVOangVHCJ68hg05XyaT"><div class="relative flex items-start gap-2"><a class="flex items-center" href="#cBYV9J5punHvaVOangVHCJ68hg05XyaT"><span class="bg-alpha-400 relative flex shrink-0 select-none items-center justify-center overflow-hidden after:absolute after:inset-0 after:border after:mix-blend-darken dark:after:mix-blend-lighten size-6 rounded-lg text-xs after:rounded-lg [&amp;_svg]:size-4"></span></a><div class="min-w-0 flex-1 translate-y-[0.5px]"><div class="flex flex-1 -translate-x-1 flex-col items-stretch gap-2"><div class="prose prose-sm prose-gray min-w-0 break-words w-full pl-1"><p>do you support the preview for the code written in nodejs</p></div><div class="pointer-events-none absolute inset-y-0 right-0 z-10"><div class="bg-background w-fit items-center gap-1 rounded-[10px] p-1 shadow-sm pointer-events-auto sticky top-3 flex -translate-y-1.5 opacity-0 group-hover:opacity-100 has-[[data-state=&#x27;delayed-open&#x27;]]:opacity-100 has-[[data-state=&#x27;instant-open&#x27;]]:opacity-100 has-[[data-state=open]]:opacity-100 md:top-5 [[data-touch-active=true]_&amp;]:opacity-100"><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center justify-center gap-1.5 whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 border-transparent bg-transparent hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 has-[&gt;kbd]:pr-1 hover:bg-alpha-200 focus:bg-alpha-200 focus-visible:bg-alpha-200 h-6 min-w-6 rounded-md px-1 text-sm text-gray-500 hover:text-gray-900 focus:text-gray-900 focus-visible:text-gray-900 has-[&gt;kbd]:gap-[6px] has-[&gt;svg]:px-1 author-action" aria-label="Edit Message" data-state="closed"><span aria-hidden="true"><svg class="pointer-events-none" data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M11.75 0.189331L12.2803 0.719661L15.2803 3.71966L15.8107 4.24999L15.2803 4.78032L5.15901 14.9016C4.45575 15.6049 3.50192 16 2.50736 16H0.75H0V15.25V13.4926C0 12.4981 0.395088 11.5442 1.09835 10.841L11.2197 0.719661L11.75 0.189331ZM11.75 2.31065L9.81066 4.24999L11.75 6.18933L13.6893 4.24999L11.75 2.31065ZM2.15901 11.9016L8.75 5.31065L10.6893 7.24999L4.09835 13.841C3.67639 14.2629 3.1041 14.5 2.50736 14.5H1.5V13.4926C1.5 12.8959 1.73705 12.3236 2.15901 11.9016ZM9 16H16V14.5H9V16Z" fill="currentColor"/></svg></span></button><div data-orientation="horizontal" role="none" class="shrink-0 bg-alpha-400 h-5 w-px author-action"></div><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center justify-center gap-1.5 whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 border-transparent bg-transparent hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 has-[&gt;kbd]:pr-1 hover:bg-alpha-200 focus:bg-alpha-200 focus-visible:bg-alpha-200 h-6 min-w-6 rounded-md px-1 text-sm text-gray-500 hover:text-gray-900 focus:text-gray-900 focus-visible:text-gray-900 has-[&gt;kbd]:gap-[6px] has-[&gt;svg]:px-1 author-action" aria-label="Delete Message" data-state="closed"><span aria-hidden="true"><svg class="pointer-events-none" data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M6.75 2.75C6.75 2.05964 7.30964 1.5 8 1.5C8.69036 1.5 9.25 2.05964 9.25 2.75V3H6.75V2.75ZM5.25 3V2.75C5.25 1.23122 6.48122 0 8 0C9.51878 0 10.75 1.23122 10.75 2.75V3H12.9201H14.25H15V4.5H14.25H13.8846L13.1776 13.6917C13.0774 14.9942 11.9913 16 10.6849 16H5.31508C4.00874 16 2.92263 14.9942 2.82244 13.6917L2.11538 4.5H1.75H1V3H1.75H3.07988H5.25ZM4.31802 13.5767L3.61982 4.5H12.3802L11.682 13.5767C11.6419 14.0977 11.2075 14.5 10.6849 14.5H5.31508C4.79254 14.5 4.3581 14.0977 4.31802 13.5767Z" fill="currentColor"/></svg></span></button><div data-orientation="horizontal" role="none" class="shrink-0 bg-alpha-400 h-5 w-px author-action"></div><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center justify-center gap-1.5 whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 border-transparent bg-transparent hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 has-[&gt;kbd]:pr-1 hover:bg-alpha-200 focus:bg-alpha-200 focus-visible:bg-alpha-200 h-6 min-w-6 rounded-md px-1 text-sm text-gray-500 hover:text-gray-900 focus:text-gray-900 focus-visible:text-gray-900 has-[&gt;kbd]:gap-[6px] has-[&gt;svg]:px-1" aria-label="Copy Message" data-state="closed"><span aria-hidden="true"><svg class="pointer-events-none" data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M2.75 0.5C1.7835 0.5 1 1.2835 1 2.25V9.75C1 10.7165 1.7835 11.5 2.75 11.5H3.75H4.5V10H3.75H2.75C2.61193 10 2.5 9.88807 2.5 9.75V2.25C2.5 2.11193 2.61193 2 2.75 2H8.25C8.38807 2 8.5 2.11193 8.5 2.25V3H10V2.25C10 1.2835 9.2165 0.5 8.25 0.5H2.75ZM7.75 4.5C6.7835 4.5 6 5.2835 6 6.25V13.75C6 14.7165 6.7835 15.5 7.75 15.5H13.25C14.2165 15.5 15 14.7165 15 13.75V6.25C15 5.2835 14.2165 4.5 13.25 4.5H7.75ZM7.5 6.25C7.5 6.11193 7.61193 6 7.75 6H13.25C13.3881 6 13.5 6.11193 13.5 6.25V13.75C13.5 13.8881 13.3881 14 13.25 14H7.75C7.61193 14 7.5 13.8881 7.5 13.75V6.25Z" fill="currentColor"/></svg></span></button></div></div></div></div></div></div></div></div></div></div><div class="absolute inset-x-0 bottom-0 h-px w-full"></div></div></div><div class="sticky inset-x-0 bottom-0"><div id="scroll-down-button" aria-hidden="true" class="animate-in fade-in slide-in-from-bottom absolute inset-x-0 -top-12 z-10 m-auto flex w-fit items-center justify-center group-has-[[data-slot=prompt-actions-container]]/form-container:-top-20 animate-out fade-out slide-out-to-bottom fill-mode-forwards pointer-events-none"><button class="animate-slowBounce shadow-base bg-background hover:bg-muted size-7 items-center justify-center rounded-full text-gray-500 drop-shadow-md hidden" type="button"><svg width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg" class="size-5"><path d="M3.13523 6.15803C3.3241 5.95657 3.64052 5.94637 3.84197 6.13523L7.5 9.56464L11.158 6.13523C11.3595 5.94637 11.6759 5.95657 11.8648 6.15803C12.0536 6.35949 12.0434 6.67591 11.842 6.86477L7.84197 10.6148C7.64964 10.7951 7.35036 10.7951 7.15803 10.6148L3.15803 6.86477C2.95657 6.67591 2.94637 6.35949 3.13523 6.15803Z" fill="currentColor" fill-rule="evenodd" clip-rule="evenodd"></path></svg></button></div></div></div></div><div data-testid="block-resize-handle" class="group z-20 w-0 !overflow-visible !outline-none !ring-0 sticky top-0 mt-2 mb-4" role="separator" style="touch-action:none;user-select:none" tabindex="0" data-panel-group-direction="horizontal" data-panel-group-id="block-panel-group" data-resize-handle="" data-resize-handle-state="inactive" data-panel-resize-handle-enabled="true" data-panel-resize-handle-id="«R7mivertbpeqdfffb»"><div class="absolute inset-0 h-full w-3 translate-x-[-50%] !outline-0 !ring-0"></div><div class="absolute inset-0 h-full w-0 translate-x-[-50%] !outline-0 !ring-0 transition-all duration-200 group-data-[resize-handle-active=keyboard]:w-[3px] group-data-[resize-handle-state=drag]:w-[3px] group-data-[resize-handle-state=hover]:w-[3px] group-data-[resize-handle-active=keyboard]:bg-gray-400 group-data-[resize-handle-state=drag]:bg-gray-400 group-data-[resize-handle-state=hover]:bg-gray-300 group-data-[resize-handle-active=keyboard]:outline-none"></div></div><div class="sticky top-0 h-full min-w-[420px] text-sm z-10" id="block-panel-right" style="flex-basis:0;flex-grow:75.0;flex-shrink:1;overflow:clip" data-panel="" data-panel-group-id="block-panel-group" data-panel-id="block-panel-right" data-panel-size="75.0"><div class="border-alpha-200 absolute inset-y-0 h-full w-full right-0 border-l border-none !flex" style="will-change:auto;opacity:1;width:100%;display:block;transform:none"><div class="material-medium mb-2.5 mr-2 flex-1"><!--$--><div class="bg-background flex size-full flex-col items-stretch" data-testid="desktop-block-panel"><div class="@container/block-header flex h-12 w-full shrink-0 items-center justify-between gap-2 px-2"><div class="flex min-w-0 flex-1 flex-row items-center gap-1.5"><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center justify-center gap-1.5 whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg size-7 text-gray-500" data-testid="close-block-button"><span class="sr-only">Close</span><svg class="pointer-events-none" data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M12.8536 8.7071C13.2441 8.31657 13.2441 7.68341 12.8536 7.29288L9.03034 3.46966L8.50001 2.93933L7.43935 3.99999L7.96968 4.53032L11.4393 7.99999L7.96968 11.4697L7.43935 12L8.50001 13.0607L9.03034 12.5303L12.8536 8.7071ZM7.85356 8.7071C8.24408 8.31657 8.24408 7.68341 7.85356 7.29288L4.03034 3.46966L3.50001 2.93933L2.43935 3.99999L2.96968 4.53032L6.43935 7.99999L2.96968 11.4697L2.43935 12L3.50001 13.0607L4.03034 12.5303L7.85356 8.7071Z" fill="currentColor"/></svg></button><div class="min-w-0 flex-1"><div class="@container/tabs flex-1"><div class="@[11rem]/tabs:hidden flex items-center gap-2"><div class="relative flex w-fit min-w-0 flex-1 items-center gap-2 overflow-x-auto"><button class="font-regular group h-7 max-w-56 select-none whitespace-nowrap rounded-md px-2 text-sm font-medium transition-all bg-transparent text-gray-500 cursor-not-allowed hover:bg-transparent" disabled="" data-testid="tab-file-button" data-active-tab="false" data-state="closed"><div class="truncate"><div class="flex items-center gap-2"><svg class="group-disabled:hidden" data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M1.5 2.5H14.5V12.5C14.5 13.0523 14.0523 13.5 13.5 13.5H2.5C1.94772 13.5 1.5 13.0523 1.5 12.5V2.5ZM0 1H1.5H14.5H16V2.5V12.5C16 13.8807 14.8807 15 13.5 15H2.5C1.11929 15 0 13.8807 0 12.5V2.5V1ZM3.75 5.5C4.16421 5.5 4.5 5.16421 4.5 4.75C4.5 4.33579 4.16421 4 3.75 4C3.33579 4 3 4.33579 3 4.75C3 5.16421 3.33579 5.5 3.75 5.5ZM7 4.75C7 5.16421 6.66421 5.5 6.25 5.5C5.83579 5.5 5.5 5.16421 5.5 4.75C5.5 4.33579 5.83579 4 6.25 4C6.66421 4 7 4.33579 7 4.75ZM8.75 5.5C9.16421 5.5 9.5 5.16421 9.5 4.75C9.5 4.33579 9.16421 4 8.75 4C8.33579 4 8 4.33579 8 4.75C8 5.16421 8.33579 5.5 8.75 5.5Z" fill="currentColor"/></svg><div class="hidden group-disabled:block"><svg data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M0.191137 2.06228L0.751694 2.56055L14.2517 14.5605L14.8122 15.0588L15.8088 13.9377L15.2482 13.4394L13.4399 11.832L16.3183 8.48938V7.51059L13.1149 3.79053C10.6442 0.921301 6.36413 0.684726 3.59378 3.07992L1.74824 1.43943L1.18768 0.941162L0.191137 2.06228ZM14.7602 7.99998L12.3187 10.8354L10.6699 9.36978C11.249 8.24171 11.0661 6.82347 10.1213 5.87865C9.08954 4.8469 7.49326 4.72376 6.32676 5.50923L4.72751 4.08767C6.88288 2.36327 10.1023 2.59076 11.9783 4.76931L14.7602 7.99998ZM7.52702 6.57613L9.46929 8.30259C9.56713 7.82531 9.43091 7.30959 9.06063 6.93931C8.64578 6.52446 8.0484 6.4034 7.52702 6.57613ZM-0.318359 7.51059L1.40386 5.5106L2.54051 6.48938L1.23971 7.99998L4.02168 11.2307C5.52853 12.9805 7.90301 13.4734 9.89972 12.7017L10.4405 14.1008C7.88008 15.0904 4.82516 14.4625 2.88503 12.2094L-0.318359 8.48938V7.51059Z" fill="currentColor"/></svg></div></div></div></button><button class="font-regular group h-7 max-w-56 select-none whitespace-nowrap rounded-md px-2 text-sm font-medium transition-all bg-alpha-200 text-gray-900" data-testid="tab-file-button" data-active-tab="true" data-state="closed"><div class="truncate"><div class="flex items-center gap-2"><svg data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M7.22763 14.1819L10.2276 2.18193L10.4095 1.45432L8.95432 1.09052L8.77242 1.81812L5.77242 13.8181L5.59051 14.5457L7.04573 14.9095L7.22763 14.1819ZM3.75002 12.0607L3.21969 11.5304L0.39647 8.70713C0.00594559 8.31661 0.00594559 7.68344 0.39647 7.29292L3.21969 4.46969L3.75002 3.93936L4.81068 5.00002L4.28035 5.53035L1.81068 8.00003L4.28035 10.4697L4.81068 11L3.75002 12.0607ZM12.25 12.0607L12.7804 11.5304L15.6036 8.70713C15.9941 8.31661 15.9941 7.68344 15.6036 7.29292L12.7804 4.46969L12.25 3.93936L11.1894 5.00002L11.7197 5.53035L14.1894 8.00003L11.7197 10.4697L11.1894 11L12.25 12.0607Z" fill="currentColor"/></svg></div></div></button></div></div><div class="@[11rem]/tabs:flex hidden items-center gap-2"><div class="relative flex w-fit min-w-0 flex-1 items-center gap-2 overflow-x-auto"><button class="font-regular group h-7 max-w-56 select-none whitespace-nowrap rounded-md px-2 text-sm font-medium transition-all bg-transparent text-gray-500 cursor-not-allowed hover:bg-transparent" disabled="" data-testid="tab-file-button" data-active-tab="false" data-state="closed"><div class="truncate"><div class="flex items-center gap-2"><svg class="group-disabled:hidden" data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M1.5 2.5H14.5V12.5C14.5 13.0523 14.0523 13.5 13.5 13.5H2.5C1.94772 13.5 1.5 13.0523 1.5 12.5V2.5ZM0 1H1.5H14.5H16V2.5V12.5C16 13.8807 14.8807 15 13.5 15H2.5C1.11929 15 0 13.8807 0 12.5V2.5V1ZM3.75 5.5C4.16421 5.5 4.5 5.16421 4.5 4.75C4.5 4.33579 4.16421 4 3.75 4C3.33579 4 3 4.33579 3 4.75C3 5.16421 3.33579 5.5 3.75 5.5ZM7 4.75C7 5.16421 6.66421 5.5 6.25 5.5C5.83579 5.5 5.5 5.16421 5.5 4.75C5.5 4.33579 5.83579 4 6.25 4C6.66421 4 7 4.33579 7 4.75ZM8.75 5.5C9.16421 5.5 9.5 5.16421 9.5 4.75C9.5 4.33579 9.16421 4 8.75 4C8.33579 4 8 4.33579 8 4.75C8 5.16421 8.33579 5.5 8.75 5.5Z" fill="currentColor"/></svg><div class="hidden group-disabled:block"><svg data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M0.191137 2.06228L0.751694 2.56055L14.2517 14.5605L14.8122 15.0588L15.8088 13.9377L15.2482 13.4394L13.4399 11.832L16.3183 8.48938V7.51059L13.1149 3.79053C10.6442 0.921301 6.36413 0.684726 3.59378 3.07992L1.74824 1.43943L1.18768 0.941162L0.191137 2.06228ZM14.7602 7.99998L12.3187 10.8354L10.6699 9.36978C11.249 8.24171 11.0661 6.82347 10.1213 5.87865C9.08954 4.8469 7.49326 4.72376 6.32676 5.50923L4.72751 4.08767C6.88288 2.36327 10.1023 2.59076 11.9783 4.76931L14.7602 7.99998ZM7.52702 6.57613L9.46929 8.30259C9.56713 7.82531 9.43091 7.30959 9.06063 6.93931C8.64578 6.52446 8.0484 6.4034 7.52702 6.57613ZM-0.318359 7.51059L1.40386 5.5106L2.54051 6.48938L1.23971 7.99998L4.02168 11.2307C5.52853 12.9805 7.90301 13.4734 9.89972 12.7017L10.4405 14.1008C7.88008 15.0904 4.82516 14.4625 2.88503 12.2094L-0.318359 8.48938V7.51059Z" fill="currentColor"/></svg></div><span>Preview</span></div></div></button><button class="font-regular group h-7 max-w-56 select-none whitespace-nowrap rounded-md px-2 text-sm font-medium transition-all bg-alpha-200 text-gray-900" data-testid="tab-file-button" data-active-tab="true"><div class="truncate"><div class="flex items-center gap-2"><svg data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M7.22763 14.1819L10.2276 2.18193L10.4095 1.45432L8.95432 1.09052L8.77242 1.81812L5.77242 13.8181L5.59051 14.5457L7.04573 14.9095L7.22763 14.1819ZM3.75002 12.0607L3.21969 11.5304L0.39647 8.70713C0.00594559 8.31661 0.00594559 7.68344 0.39647 7.29292L3.21969 4.46969L3.75002 3.93936L4.81068 5.00002L4.28035 5.53035L1.81068 8.00003L4.28035 10.4697L4.81068 11L3.75002 12.0607ZM12.25 12.0607L12.7804 11.5304L15.6036 8.70713C15.9941 8.31661 15.9941 7.68344 15.6036 7.29292L12.7804 4.46969L12.25 3.93936L11.1894 5.00002L11.7197 5.53035L14.1894 8.00003L11.7197 10.4697L11.1894 11L12.25 12.0607Z" fill="currentColor"/></svg><span>Code</span></div></div></button></div></div></div></div></div><div class="flex w-fit items-center justify-end gap-1"><div class="flex items-center gap-1.5 [&amp;_.show-lg]:hidden [&amp;_.hide-lg]:has-[.block-history]:@[26rem]/block-header:!hidden [&amp;_.show-lg]:has-[.block-history]:@[26rem]/block-header:flex [&amp;_.show-lg]:has-[.no-block-history]:@[21rem]/block-header:flex [&amp;_.hide-lg]:has-[.no-block-history]:@[21rem]/block-header:!hidden"><div class="flex items-center gap-3"><div class="flex items-center gap-1"><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center justify-center gap-1.5 whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] size-7 rounded-md" id="block-more-button" type="button" aria-haspopup="menu" aria-expanded="false" data-state="closed"><svg data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M8.75 1V1.75V8.68934L10.7197 6.71967L11.25 6.18934L12.3107 7.25L11.7803 7.78033L8.70711 10.8536C8.31658 11.2441 7.68342 11.2441 7.29289 10.8536L4.21967 7.78033L3.68934 7.25L4.75 6.18934L5.28033 6.71967L7.25 8.68934V1.75V1H8.75ZM13.5 9.25V13.5H2.5V9.25V8.5H1V9.25V14C1 14.5523 1.44771 15 2 15H14C14.5523 15 15 14.5523 15 14V9.25V8.5H13.5V9.25Z" fill="currentColor"/></svg></button></div><div class="block-history flex gap-1"><button type="button" role="combobox" aria-controls="radix-«R2krbmivertbpeqdfffb»" aria-expanded="false" aria-autocomplete="none" dir="ltr" data-state="closed" class="ring-offset-background placeholder:text-muted-foreground w-full py-2 focus-visible:outline-none focus-visible:ring-blue-600 disabled:opacity-50 [&amp;&gt;span]:line-clamp-1 focus:border-alpha-400 focus-visible:border-alpha-400 disabled:border-alpha-300 border-alpha-400 hover:border-alpha-400 focus-visible:ring-offset-background aria-disabled:border-alpha-300 inline-flex shrink-0 cursor-pointer select-none items-center justify-center gap-1.5 whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:bg-gray-100 disabled:text-gray-400 disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:bg-gray-100 aria-disabled:text-gray-400 aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 bg-background-subtle text-gray-900 hover:bg-gray-100 focus:bg-gray-100 focus-visible:bg-gray-100 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] h-7 rounded-md px-1.5"><div class="flex items-center gap-1"><span>v<!-- -->2</span><svg data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M12.0607 6.74999L11.5303 7.28032L8.7071 10.1035C8.31657 10.4941 7.68341 10.4941 7.29288 10.1035L4.46966 7.28032L3.93933 6.74999L4.99999 5.68933L5.53032 6.21966L7.99999 8.68933L10.4697 6.21966L11 5.68933L12.0607 6.74999Z" fill="currentColor"/></svg></div></button><select aria-hidden="true" tabindex="-1" style="position:absolute;border:0;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;word-wrap:normal"></select></div></div></div></div></div><div class="h-full min-h-0 w-full min-w-0"><div class="relative flex size-full min-h-0 flex-1 flex-col"><div class="relative min-h-0 w-full flex-1 grow"><div class="relative size-full min-h-0 flex-1 border-alpha-200 border-t"><div class="size-full invisible h-0 overflow-hidden"></div><div class="size-full block"><div class="h-screen w-screen" id="file-tree-panel-group" style="display:flex;flex-direction:row;height:100%;overflow:hidden;width:100%" data-panel-group="" data-panel-group-direction="horizontal" data-panel-group-id="file-tree-panel-group"><div class="relative z-10 h-full min-w-[160px]" id="file-tree-panel-left" style="flex-basis:0;flex-grow:25.0;flex-shrink:1;overflow:clip" data-panel="" data-panel-group-id="file-tree-panel-group" data-panel-id="file-tree-panel-left" data-panel-size="25.0"><div class="border-alpha-200 absolute inset-y-0 right-0 h-full w-full left-0 border-r" style="will-change:auto;opacity:1;width:100%;display:block;transform:none"><!--$--><div class="bg-muted flex h-full flex-col"><ul class="group flex list-none flex-col w-full flex-1 overflow-y-auto p-1.5 pb-12" data-state="closed" style="-webkit-touch-callout:none"><div data-state="open" class="flex flex-col gap-0"><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" title="app" data-state="open" type="button" aria-controls="radix-«R136qr6bbbmivertbpeqdfffb»" aria-expanded="true" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-chevron-right h-4 w-4 transition-transform rotate-90"><path d="m9 18 6-6-6-6"></path></svg></div><span class="truncate font-normal">app</span></div></button></li><div data-state="open" id="radix-«R136qr6bbbmivertbpeqdfffb»"><div data-sidebar="menu-sub" class="border-alpha-400 group-hover:border-l-alpha-400 duration-250 ml-3 flex min-w-0 translate-x-[0.5px] flex-col border-l border-l-transparent pl-1 transition-colors"><div data-state="open" class="flex flex-col gap-0"><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" title="login" data-state="open" type="button" aria-controls="radix-«R9l36qr6bbbmivertbpeqdfffb»" aria-expanded="true" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-chevron-right h-4 w-4 transition-transform rotate-90"><path d="m9 18 6-6-6-6"></path></svg></div><span class="truncate font-normal">login</span></div></button></li><div data-state="open" id="radix-«R9l36qr6bbbmivertbpeqdfffb»"><div data-sidebar="menu-sub" class="border-alpha-400 group-hover:border-l-alpha-400 duration-250 ml-3 flex min-w-0 translate-x-[0.5px] flex-col border-l border-l-transparent pl-1 transition-colors"><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" data-active="false" title="page.tsx" data-state="closed" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M14.5 6.5V13.5C14.5 14.8807 13.3807 16 12 16H4C2.61929 16 1.5 14.8807 1.5 13.5V1.5V0H3H8H9.08579C9.351 0 9.60536 0.105357 9.79289 0.292893L14.2071 4.70711C14.3946 4.89464 14.5 5.149 14.5 5.41421V6.5ZM13 6.5V13.5C13 14.0523 12.5523 14.5 12 14.5H4C3.44772 14.5 3 14.0523 3 13.5V1.5H8V5V6.5H9.5H13ZM9.5 2.12132V5H12.3787L9.5 2.12132Z" fill="currentColor"/></svg></div><span class="truncate font-normal">page.tsx</span></div></button></li></div></div></div><div data-state="open" class="flex flex-col gap-0"><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" title="register" data-state="open" type="button" aria-controls="radix-«Ral36qr6bbbmivertbpeqdfffb»" aria-expanded="true" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-chevron-right h-4 w-4 transition-transform rotate-90"><path d="m9 18 6-6-6-6"></path></svg></div><span class="truncate font-normal">register</span></div></button></li><div data-state="open" id="radix-«Ral36qr6bbbmivertbpeqdfffb»"><div data-sidebar="menu-sub" class="border-alpha-400 group-hover:border-l-alpha-400 duration-250 ml-3 flex min-w-0 translate-x-[0.5px] flex-col border-l border-l-transparent pl-1 transition-colors"><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" data-active="false" title="page.tsx" data-state="closed" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M14.5 6.5V13.5C14.5 14.8807 13.3807 16 12 16H4C2.61929 16 1.5 14.8807 1.5 13.5V1.5V0H3H8H9.08579C9.351 0 9.60536 0.105357 9.79289 0.292893L14.2071 4.70711C14.3946 4.89464 14.5 5.149 14.5 5.41421V6.5ZM13 6.5V13.5C13 14.0523 12.5523 14.5 12 14.5H4C3.44772 14.5 3 14.0523 3 13.5V1.5H8V5V6.5H9.5H13ZM9.5 2.12132V5H12.3787L9.5 2.12132Z" fill="currentColor"/></svg></div><span class="truncate font-normal">page.tsx</span></div></button></li></div></div></div><div data-state="open" class="flex flex-col gap-0"><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" title="reports" data-state="open" type="button" aria-controls="radix-«Rbl36qr6bbbmivertbpeqdfffb»" aria-expanded="true" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-chevron-right h-4 w-4 transition-transform rotate-90"><path d="m9 18 6-6-6-6"></path></svg></div><span class="truncate font-normal">reports</span></div></button></li><div data-state="open" id="radix-«Rbl36qr6bbbmivertbpeqdfffb»"><div data-sidebar="menu-sub" class="border-alpha-400 group-hover:border-l-alpha-400 duration-250 ml-3 flex min-w-0 translate-x-[0.5px] flex-col border-l border-l-transparent pl-1 transition-colors"><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" data-active="false" title="page.tsx" data-state="closed" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M14.5 6.5V13.5C14.5 14.8807 13.3807 16 12 16H4C2.61929 16 1.5 14.8807 1.5 13.5V1.5V0H3H8H9.08579C9.351 0 9.60536 0.105357 9.79289 0.292893L14.2071 4.70711C14.3946 4.89464 14.5 5.149 14.5 5.41421V6.5ZM13 6.5V13.5C13 14.0523 12.5523 14.5 12 14.5H4C3.44772 14.5 3 14.0523 3 13.5V1.5H8V5V6.5H9.5H13ZM9.5 2.12132V5H12.3787L9.5 2.12132Z" fill="currentColor"/></svg></div><span class="truncate font-normal">page.tsx</span></div></button></li></div></div></div><div data-state="open" class="flex flex-col gap-0"><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" title="settings" data-state="open" type="button" aria-controls="radix-«Rcl36qr6bbbmivertbpeqdfffb»" aria-expanded="true" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-chevron-right h-4 w-4 transition-transform rotate-90"><path d="m9 18 6-6-6-6"></path></svg></div><span class="truncate font-normal">settings</span></div></button></li><div data-state="open" id="radix-«Rcl36qr6bbbmivertbpeqdfffb»"><div data-sidebar="menu-sub" class="border-alpha-400 group-hover:border-l-alpha-400 duration-250 ml-3 flex min-w-0 translate-x-[0.5px] flex-col border-l border-l-transparent pl-1 transition-colors"><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" data-active="false" title="page.tsx" data-state="closed" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M14.5 6.5V13.5C14.5 14.8807 13.3807 16 12 16H4C2.61929 16 1.5 14.8807 1.5 13.5V1.5V0H3H8H9.08579C9.351 0 9.60536 0.105357 9.79289 0.292893L14.2071 4.70711C14.3946 4.89464 14.5 5.149 14.5 5.41421V6.5ZM13 6.5V13.5C13 14.0523 12.5523 14.5 12 14.5H4C3.44772 14.5 3 14.0523 3 13.5V1.5H8V5V6.5H9.5H13ZM9.5 2.12132V5H12.3787L9.5 2.12132Z" fill="currentColor"/></svg></div><span class="truncate font-normal">page.tsx</span></div></button></li></div></div></div><div data-state="open" class="flex flex-col gap-0"><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" title="tasks" data-state="open" type="button" aria-controls="radix-«Rdl36qr6bbbmivertbpeqdfffb»" aria-expanded="true" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-chevron-right h-4 w-4 transition-transform rotate-90"><path d="m9 18 6-6-6-6"></path></svg></div><span class="truncate font-normal">tasks</span></div></button></li><div data-state="open" id="radix-«Rdl36qr6bbbmivertbpeqdfffb»"><div data-sidebar="menu-sub" class="border-alpha-400 group-hover:border-l-alpha-400 duration-250 ml-3 flex min-w-0 translate-x-[0.5px] flex-col border-l border-l-transparent pl-1 transition-colors"><div data-state="open" class="flex flex-col gap-0"><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" title="[id]" data-state="open" type="button" aria-controls="radix-«R1ddl36qr6bbbmivertbpeqdfffb»" aria-expanded="true" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-chevron-right h-4 w-4 transition-transform rotate-90"><path d="m9 18 6-6-6-6"></path></svg></div><span class="truncate font-normal">[id]</span></div></button></li><div data-state="open" id="radix-«R1ddl36qr6bbbmivertbpeqdfffb»"><div data-sidebar="menu-sub" class="border-alpha-400 group-hover:border-l-alpha-400 duration-250 ml-3 flex min-w-0 translate-x-[0.5px] flex-col border-l border-l-transparent pl-1 transition-colors"><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" data-active="false" title="page.tsx" data-state="closed" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M14.5 6.5V13.5C14.5 14.8807 13.3807 16 12 16H4C2.61929 16 1.5 14.8807 1.5 13.5V1.5V0H3H8H9.08579C9.351 0 9.60536 0.105357 9.79289 0.292893L14.2071 4.70711C14.3946 4.89464 14.5 5.149 14.5 5.41421V6.5ZM13 6.5V13.5C13 14.0523 12.5523 14.5 12 14.5H4C3.44772 14.5 3 14.0523 3 13.5V1.5H8V5V6.5H9.5H13ZM9.5 2.12132V5H12.3787L9.5 2.12132Z" fill="currentColor"/></svg></div><span class="truncate font-normal">page.tsx</span></div></button></li></div></div></div><div data-state="open" class="flex flex-col gap-0"><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" title="new" data-state="open" type="button" aria-controls="radix-«R1ldl36qr6bbbmivertbpeqdfffb»" aria-expanded="true" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-chevron-right h-4 w-4 transition-transform rotate-90"><path d="m9 18 6-6-6-6"></path></svg></div><span class="truncate font-normal">new</span></div></button></li><div data-state="open" id="radix-«R1ldl36qr6bbbmivertbpeqdfffb»"><div data-sidebar="menu-sub" class="border-alpha-400 group-hover:border-l-alpha-400 duration-250 ml-3 flex min-w-0 translate-x-[0.5px] flex-col border-l border-l-transparent pl-1 transition-colors"><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" data-active="false" title="page.tsx" data-state="closed" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M14.5 6.5V13.5C14.5 14.8807 13.3807 16 12 16H4C2.61929 16 1.5 14.8807 1.5 13.5V1.5V0H3H8H9.08579C9.351 0 9.60536 0.105357 9.79289 0.292893L14.2071 4.70711C14.3946 4.89464 14.5 5.149 14.5 5.41421V6.5ZM13 6.5V13.5C13 14.0523 12.5523 14.5 12 14.5H4C3.44772 14.5 3 14.0523 3 13.5V1.5H8V5V6.5H9.5H13ZM9.5 2.12132V5H12.3787L9.5 2.12132Z" fill="currentColor"/></svg></div><span class="truncate font-normal">page.tsx</span></div></button></li></div></div></div><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" data-active="false" title="page.tsx" data-state="closed" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M14.5 6.5V13.5C14.5 14.8807 13.3807 16 12 16H4C2.61929 16 1.5 14.8807 1.5 13.5V1.5V0H3H8H9.08579C9.351 0 9.60536 0.105357 9.79289 0.292893L14.2071 4.70711C14.3946 4.89464 14.5 5.149 14.5 5.41421V6.5ZM13 6.5V13.5C13 14.0523 12.5523 14.5 12 14.5H4C3.44772 14.5 3 14.0523 3 13.5V1.5H8V5V6.5H9.5H13ZM9.5 2.12132V5H12.3787L9.5 2.12132Z" fill="currentColor"/></svg></div><span class="truncate font-normal">page.tsx</span></div></button></li></div></div></div><div data-state="open" class="flex flex-col gap-0"><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" title="users" data-state="open" type="button" aria-controls="radix-«Rel36qr6bbbmivertbpeqdfffb»" aria-expanded="true" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-chevron-right h-4 w-4 transition-transform rotate-90"><path d="m9 18 6-6-6-6"></path></svg></div><span class="truncate font-normal">users</span></div></button></li><div data-state="open" id="radix-«Rel36qr6bbbmivertbpeqdfffb»"><div data-sidebar="menu-sub" class="border-alpha-400 group-hover:border-l-alpha-400 duration-250 ml-3 flex min-w-0 translate-x-[0.5px] flex-col border-l border-l-transparent pl-1 transition-colors"><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" data-active="false" title="page.tsx" data-state="closed" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M14.5 6.5V13.5C14.5 14.8807 13.3807 16 12 16H4C2.61929 16 1.5 14.8807 1.5 13.5V1.5V0H3H8H9.08579C9.351 0 9.60536 0.105357 9.79289 0.292893L14.2071 4.70711C14.3946 4.89464 14.5 5.149 14.5 5.41421V6.5ZM13 6.5V13.5C13 14.0523 12.5523 14.5 12 14.5H4C3.44772 14.5 3 14.0523 3 13.5V1.5H8V5V6.5H9.5H13ZM9.5 2.12132V5H12.3787L9.5 2.12132Z" fill="currentColor"/></svg></div><span class="truncate font-normal">page.tsx</span></div></button></li></div></div></div><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" data-active="false" title="page.tsx" data-state="closed" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M14.5 6.5V13.5C14.5 14.8807 13.3807 16 12 16H4C2.61929 16 1.5 14.8807 1.5 13.5V1.5V0H3H8H9.08579C9.351 0 9.60536 0.105357 9.79289 0.292893L14.2071 4.70711C14.3946 4.89464 14.5 5.149 14.5 5.41421V6.5ZM13 6.5V13.5C13 14.0523 12.5523 14.5 12 14.5H4C3.44772 14.5 3 14.0523 3 13.5V1.5H8V5V6.5H9.5H13ZM9.5 2.12132V5H12.3787L9.5 2.12132Z" fill="currentColor"/></svg></div><span class="truncate font-normal">page.tsx</span></div></button></li></div></div></div><div data-state="open" class="flex flex-col gap-0"><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" title="components" data-state="open" type="button" aria-controls="radix-«R156qr6bbbmivertbpeqdfffb»" aria-expanded="true" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-chevron-right h-4 w-4 transition-transform rotate-90"><path d="m9 18 6-6-6-6"></path></svg></div><span class="truncate font-normal">components</span></div></button></li><div data-state="open" id="radix-«R156qr6bbbmivertbpeqdfffb»"><div data-sidebar="menu-sub" class="border-alpha-400 group-hover:border-l-alpha-400 duration-250 ml-3 flex min-w-0 translate-x-[0.5px] flex-col border-l border-l-transparent pl-1 transition-colors"><div data-state="open" class="flex flex-col gap-0"><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" title="dashboard" data-state="open" type="button" aria-controls="radix-«R9l56qr6bbbmivertbpeqdfffb»" aria-expanded="true" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-chevron-right h-4 w-4 transition-transform rotate-90"><path d="m9 18 6-6-6-6"></path></svg></div><span class="truncate font-normal">dashboard</span></div></button></li><div data-state="open" id="radix-«R9l56qr6bbbmivertbpeqdfffb»"><div data-sidebar="menu-sub" class="border-alpha-400 group-hover:border-l-alpha-400 duration-250 ml-3 flex min-w-0 translate-x-[0.5px] flex-col border-l border-l-transparent pl-1 transition-colors"><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" data-active="false" title="dashboard-header.tsx" data-state="closed" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M14.5 6.5V13.5C14.5 14.8807 13.3807 16 12 16H4C2.61929 16 1.5 14.8807 1.5 13.5V1.5V0H3H8H9.08579C9.351 0 9.60536 0.105357 9.79289 0.292893L14.2071 4.70711C14.3946 4.89464 14.5 5.149 14.5 5.41421V6.5ZM13 6.5V13.5C13 14.0523 12.5523 14.5 12 14.5H4C3.44772 14.5 3 14.0523 3 13.5V1.5H8V5V6.5H9.5H13ZM9.5 2.12132V5H12.3787L9.5 2.12132Z" fill="currentColor"/></svg></div><span class="truncate font-normal">dashboard-header.tsx</span></div></button></li><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" data-active="false" title="dashboard-shell.tsx" data-state="closed" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M14.5 6.5V13.5C14.5 14.8807 13.3807 16 12 16H4C2.61929 16 1.5 14.8807 1.5 13.5V1.5V0H3H8H9.08579C9.351 0 9.60536 0.105357 9.79289 0.292893L14.2071 4.70711C14.3946 4.89464 14.5 5.149 14.5 5.41421V6.5ZM13 6.5V13.5C13 14.0523 12.5523 14.5 12 14.5H4C3.44772 14.5 3 14.0523 3 13.5V1.5H8V5V6.5H9.5H13ZM9.5 2.12132V5H12.3787L9.5 2.12132Z" fill="currentColor"/></svg></div><span class="truncate font-normal">dashboard-shell.tsx</span></div></button></li><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" data-active="false" title="overview.tsx" data-state="closed" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M14.5 6.5V13.5C14.5 14.8807 13.3807 16 12 16H4C2.61929 16 1.5 14.8807 1.5 13.5V1.5V0H3H8H9.08579C9.351 0 9.60536 0.105357 9.79289 0.292893L14.2071 4.70711C14.3946 4.89464 14.5 5.149 14.5 5.41421V6.5ZM13 6.5V13.5C13 14.0523 12.5523 14.5 12 14.5H4C3.44772 14.5 3 14.0523 3 13.5V1.5H8V5V6.5H9.5H13ZM9.5 2.12132V5H12.3787L9.5 2.12132Z" fill="currentColor"/></svg></div><span class="truncate font-normal">overview.tsx</span></div></button></li><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" data-active="false" title="recent-tasks.tsx" data-state="closed" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M14.5 6.5V13.5C14.5 14.8807 13.3807 16 12 16H4C2.61929 16 1.5 14.8807 1.5 13.5V1.5V0H3H8H9.08579C9.351 0 9.60536 0.105357 9.79289 0.292893L14.2071 4.70711C14.3946 4.89464 14.5 5.149 14.5 5.41421V6.5ZM13 6.5V13.5C13 14.0523 12.5523 14.5 12 14.5H4C3.44772 14.5 3 14.0523 3 13.5V1.5H8V5V6.5H9.5H13ZM9.5 2.12132V5H12.3787L9.5 2.12132Z" fill="currentColor"/></svg></div><span class="truncate font-normal">recent-tasks.tsx</span></div></button></li><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" data-active="false" title="team-members.tsx" data-state="closed" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M14.5 6.5V13.5C14.5 14.8807 13.3807 16 12 16H4C2.61929 16 1.5 14.8807 1.5 13.5V1.5V0H3H8H9.08579C9.351 0 9.60536 0.105357 9.79289 0.292893L14.2071 4.70711C14.3946 4.89464 14.5 5.149 14.5 5.41421V6.5ZM13 6.5V13.5C13 14.0523 12.5523 14.5 12 14.5H4C3.44772 14.5 3 14.0523 3 13.5V1.5H8V5V6.5H9.5H13ZM9.5 2.12132V5H12.3787L9.5 2.12132Z" fill="currentColor"/></svg></div><span class="truncate font-normal">team-members.tsx</span></div></button></li></div></div></div><div data-state="open" class="flex flex-col gap-0"><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" title="reports" data-state="open" type="button" aria-controls="radix-«Ral56qr6bbbmivertbpeqdfffb»" aria-expanded="true" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-chevron-right h-4 w-4 transition-transform rotate-90"><path d="m9 18 6-6-6-6"></path></svg></div><span class="truncate font-normal">reports</span></div></button></li><div data-state="open" id="radix-«Ral56qr6bbbmivertbpeqdfffb»"><div data-sidebar="menu-sub" class="border-alpha-400 group-hover:border-l-alpha-400 duration-250 ml-3 flex min-w-0 translate-x-[0.5px] flex-col border-l border-l-transparent pl-1 transition-colors"><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" data-active="false" title="priority-distribution-chart.tsx" data-state="closed" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M14.5 6.5V13.5C14.5 14.8807 13.3807 16 12 16H4C2.61929 16 1.5 14.8807 1.5 13.5V1.5V0H3H8H9.08579C9.351 0 9.60536 0.105357 9.79289 0.292893L14.2071 4.70711C14.3946 4.89464 14.5 5.149 14.5 5.41421V6.5ZM13 6.5V13.5C13 14.0523 12.5523 14.5 12 14.5H4C3.44772 14.5 3 14.0523 3 13.5V1.5H8V5V6.5H9.5H13ZM9.5 2.12132V5H12.3787L9.5 2.12132Z" fill="currentColor"/></svg></div><span class="truncate font-normal">priority-distribution-chart.tsx</span></div></button></li><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" data-active="false" title="task-completion-chart.tsx" data-state="closed" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M14.5 6.5V13.5C14.5 14.8807 13.3807 16 12 16H4C2.61929 16 1.5 14.8807 1.5 13.5V1.5V0H3H8H9.08579C9.351 0 9.60536 0.105357 9.79289 0.292893L14.2071 4.70711C14.3946 4.89464 14.5 5.149 14.5 5.41421V6.5ZM13 6.5V13.5C13 14.0523 12.5523 14.5 12 14.5H4C3.44772 14.5 3 14.0523 3 13.5V1.5H8V5V6.5H9.5H13ZM9.5 2.12132V5H12.3787L9.5 2.12132Z" fill="currentColor"/></svg></div><span class="truncate font-normal">task-completion-chart.tsx</span></div></button></li><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" data-active="false" title="team-performance-chart.tsx" data-state="closed" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M14.5 6.5V13.5C14.5 14.8807 13.3807 16 12 16H4C2.61929 16 1.5 14.8807 1.5 13.5V1.5V0H3H8H9.08579C9.351 0 9.60536 0.105357 9.79289 0.292893L14.2071 4.70711C14.3946 4.89464 14.5 5.149 14.5 5.41421V6.5ZM13 6.5V13.5C13 14.0523 12.5523 14.5 12 14.5H4C3.44772 14.5 3 14.0523 3 13.5V1.5H8V5V6.5H9.5H13ZM9.5 2.12132V5H12.3787L9.5 2.12132Z" fill="currentColor"/></svg></div><span class="truncate font-normal">team-performance-chart.tsx</span></div></button></li></div></div></div><div data-state="open" class="flex flex-col gap-0"><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" title="settings" data-state="open" type="button" aria-controls="radix-«Rbl56qr6bbbmivertbpeqdfffb»" aria-expanded="true" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-chevron-right h-4 w-4 transition-transform rotate-90"><path d="m9 18 6-6-6-6"></path></svg></div><span class="truncate font-normal">settings</span></div></button></li><div data-state="open" id="radix-«Rbl56qr6bbbmivertbpeqdfffb»"><div data-sidebar="menu-sub" class="border-alpha-400 group-hover:border-l-alpha-400 duration-250 ml-3 flex min-w-0 translate-x-[0.5px] flex-col border-l border-l-transparent pl-1 transition-colors"><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" data-active="false" title="notification-settings.tsx" data-state="closed" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M14.5 6.5V13.5C14.5 14.8807 13.3807 16 12 16H4C2.61929 16 1.5 14.8807 1.5 13.5V1.5V0H3H8H9.08579C9.351 0 9.60536 0.105357 9.79289 0.292893L14.2071 4.70711C14.3946 4.89464 14.5 5.149 14.5 5.41421V6.5ZM13 6.5V13.5C13 14.0523 12.5523 14.5 12 14.5H4C3.44772 14.5 3 14.0523 3 13.5V1.5H8V5V6.5H9.5H13ZM9.5 2.12132V5H12.3787L9.5 2.12132Z" fill="currentColor"/></svg></div><span class="truncate font-normal">notification-settings.tsx</span></div></button></li><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" data-active="false" title="profile-settings.tsx" data-state="closed" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M14.5 6.5V13.5C14.5 14.8807 13.3807 16 12 16H4C2.61929 16 1.5 14.8807 1.5 13.5V1.5V0H3H8H9.08579C9.351 0 9.60536 0.105357 9.79289 0.292893L14.2071 4.70711C14.3946 4.89464 14.5 5.149 14.5 5.41421V6.5ZM13 6.5V13.5C13 14.0523 12.5523 14.5 12 14.5H4C3.44772 14.5 3 14.0523 3 13.5V1.5H8V5V6.5H9.5H13ZM9.5 2.12132V5H12.3787L9.5 2.12132Z" fill="currentColor"/></svg></div><span class="truncate font-normal">profile-settings.tsx</span></div></button></li><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" data-active="false" title="security-settings.tsx" data-state="closed" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M14.5 6.5V13.5C14.5 14.8807 13.3807 16 12 16H4C2.61929 16 1.5 14.8807 1.5 13.5V1.5V0H3H8H9.08579C9.351 0 9.60536 0.105357 9.79289 0.292893L14.2071 4.70711C14.3946 4.89464 14.5 5.149 14.5 5.41421V6.5ZM13 6.5V13.5C13 14.0523 12.5523 14.5 12 14.5H4C3.44772 14.5 3 14.0523 3 13.5V1.5H8V5V6.5H9.5H13ZM9.5 2.12132V5H12.3787L9.5 2.12132Z" fill="currentColor"/></svg></div><span class="truncate font-normal">security-settings.tsx</span></div></button></li></div></div></div><div data-state="open" class="flex flex-col gap-0"><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" title="tasks" data-state="open" type="button" aria-controls="radix-«Rcl56qr6bbbmivertbpeqdfffb»" aria-expanded="true" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-chevron-right h-4 w-4 transition-transform rotate-90"><path d="m9 18 6-6-6-6"></path></svg></div><span class="truncate font-normal">tasks</span></div></button></li><div data-state="open" id="radix-«Rcl56qr6bbbmivertbpeqdfffb»"><div data-sidebar="menu-sub" class="border-alpha-400 group-hover:border-l-alpha-400 duration-250 ml-3 flex min-w-0 translate-x-[0.5px] flex-col border-l border-l-transparent pl-1 transition-colors"><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" data-active="false" title="kanban-board.tsx" data-state="closed" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M14.5 6.5V13.5C14.5 14.8807 13.3807 16 12 16H4C2.61929 16 1.5 14.8807 1.5 13.5V1.5V0H3H8H9.08579C9.351 0 9.60536 0.105357 9.79289 0.292893L14.2071 4.70711C14.3946 4.89464 14.5 5.149 14.5 5.41421V6.5ZM13 6.5V13.5C13 14.0523 12.5523 14.5 12 14.5H4C3.44772 14.5 3 14.0523 3 13.5V1.5H8V5V6.5H9.5H13ZM9.5 2.12132V5H12.3787L9.5 2.12132Z" fill="currentColor"/></svg></div><span class="truncate font-normal">kanban-board.tsx</span></div></button></li><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" data-active="false" title="task-attachments.tsx" data-state="closed" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M14.5 6.5V13.5C14.5 14.8807 13.3807 16 12 16H4C2.61929 16 1.5 14.8807 1.5 13.5V1.5V0H3H8H9.08579C9.351 0 9.60536 0.105357 9.79289 0.292893L14.2071 4.70711C14.3946 4.89464 14.5 5.149 14.5 5.41421V6.5ZM13 6.5V13.5C13 14.0523 12.5523 14.5 12 14.5H4C3.44772 14.5 3 14.0523 3 13.5V1.5H8V5V6.5H9.5H13ZM9.5 2.12132V5H12.3787L9.5 2.12132Z" fill="currentColor"/></svg></div><span class="truncate font-normal">task-attachments.tsx</span></div></button></li><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" data-active="false" title="task-comments.tsx" data-state="closed" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M14.5 6.5V13.5C14.5 14.8807 13.3807 16 12 16H4C2.61929 16 1.5 14.8807 1.5 13.5V1.5V0H3H8H9.08579C9.351 0 9.60536 0.105357 9.79289 0.292893L14.2071 4.70711C14.3946 4.89464 14.5 5.149 14.5 5.41421V6.5ZM13 6.5V13.5C13 14.0523 12.5523 14.5 12 14.5H4C3.44772 14.5 3 14.0523 3 13.5V1.5H8V5V6.5H9.5H13ZM9.5 2.12132V5H12.3787L9.5 2.12132Z" fill="currentColor"/></svg></div><span class="truncate font-normal">task-comments.tsx</span></div></button></li><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" data-active="false" title="task-details.tsx" data-state="closed" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M14.5 6.5V13.5C14.5 14.8807 13.3807 16 12 16H4C2.61929 16 1.5 14.8807 1.5 13.5V1.5V0H3H8H9.08579C9.351 0 9.60536 0.105357 9.79289 0.292893L14.2071 4.70711C14.3946 4.89464 14.5 5.149 14.5 5.41421V6.5ZM13 6.5V13.5C13 14.0523 12.5523 14.5 12 14.5H4C3.44772 14.5 3 14.0523 3 13.5V1.5H8V5V6.5H9.5H13ZM9.5 2.12132V5H12.3787L9.5 2.12132Z" fill="currentColor"/></svg></div><span class="truncate font-normal">task-details.tsx</span></div></button></li><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" data-active="false" title="task-filters.tsx" data-state="closed" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M14.5 6.5V13.5C14.5 14.8807 13.3807 16 12 16H4C2.61929 16 1.5 14.8807 1.5 13.5V1.5V0H3H8H9.08579C9.351 0 9.60536 0.105357 9.79289 0.292893L14.2071 4.70711C14.3946 4.89464 14.5 5.149 14.5 5.41421V6.5ZM13 6.5V13.5C13 14.0523 12.5523 14.5 12 14.5H4C3.44772 14.5 3 14.0523 3 13.5V1.5H8V5V6.5H9.5H13ZM9.5 2.12132V5H12.3787L9.5 2.12132Z" fill="currentColor"/></svg></div><span class="truncate font-normal">task-filters.tsx</span></div></button></li><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" data-active="false" title="task-form.tsx" data-state="closed" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M14.5 6.5V13.5C14.5 14.8807 13.3807 16 12 16H4C2.61929 16 1.5 14.8807 1.5 13.5V1.5V0H3H8H9.08579C9.351 0 9.60536 0.105357 9.79289 0.292893L14.2071 4.70711C14.3946 4.89464 14.5 5.149 14.5 5.41421V6.5ZM13 6.5V13.5C13 14.0523 12.5523 14.5 12 14.5H4C3.44772 14.5 3 14.0523 3 13.5V1.5H8V5V6.5H9.5H13ZM9.5 2.12132V5H12.3787L9.5 2.12132Z" fill="currentColor"/></svg></div><span class="truncate font-normal">task-form.tsx</span></div></button></li></div></div></div><div data-state="open" class="flex flex-col gap-0"><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" title="ui" data-state="open" type="button" aria-controls="radix-«Rdl56qr6bbbmivertbpeqdfffb»" aria-expanded="true" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-chevron-right h-4 w-4 transition-transform rotate-90"><path d="m9 18 6-6-6-6"></path></svg></div><span class="truncate font-normal">ui</span></div></button></li><div data-state="open" id="radix-«Rdl56qr6bbbmivertbpeqdfffb»"><div data-sidebar="menu-sub" class="border-alpha-400 group-hover:border-l-alpha-400 duration-250 ml-3 flex min-w-0 translate-x-[0.5px] flex-col border-l border-l-transparent pl-1 transition-colors"><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" data-active="false" title="chart.tsx" data-state="closed" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M14.5 6.5V13.5C14.5 14.8807 13.3807 16 12 16H4C2.61929 16 1.5 14.8807 1.5 13.5V1.5V0H3H8H9.08579C9.351 0 9.60536 0.105357 9.79289 0.292893L14.2071 4.70711C14.3946 4.89464 14.5 5.149 14.5 5.41421V6.5ZM13 6.5V13.5C13 14.0523 12.5523 14.5 12 14.5H4C3.44772 14.5 3 14.0523 3 13.5V1.5H8V5V6.5H9.5H13ZM9.5 2.12132V5H12.3787L9.5 2.12132Z" fill="currentColor"/></svg></div><span class="truncate font-normal">chart.tsx</span></div></button></li></div></div></div><div data-state="open" class="flex flex-col gap-0"><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" title="users" data-state="open" type="button" aria-controls="radix-«Rel56qr6bbbmivertbpeqdfffb»" aria-expanded="true" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-chevron-right h-4 w-4 transition-transform rotate-90"><path d="m9 18 6-6-6-6"></path></svg></div><span class="truncate font-normal">users</span></div></button></li><div data-state="open" id="radix-«Rel56qr6bbbmivertbpeqdfffb»"><div data-sidebar="menu-sub" class="border-alpha-400 group-hover:border-l-alpha-400 duration-250 ml-3 flex min-w-0 translate-x-[0.5px] flex-col border-l border-l-transparent pl-1 transition-colors"><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" data-active="false" title="user-management.tsx" data-state="closed" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M14.5 6.5V13.5C14.5 14.8807 13.3807 16 12 16H4C2.61929 16 1.5 14.8807 1.5 13.5V1.5V0H3H8H9.08579C9.351 0 9.60536 0.105357 9.79289 0.292893L14.2071 4.70711C14.3946 4.89464 14.5 5.149 14.5 5.41421V6.5ZM13 6.5V13.5C13 14.0523 12.5523 14.5 12 14.5H4C3.44772 14.5 3 14.0523 3 13.5V1.5H8V5V6.5H9.5H13ZM9.5 2.12132V5H12.3787L9.5 2.12132Z" fill="currentColor"/></svg></div><span class="truncate font-normal">user-management.tsx</span></div></button></li></div></div></div></div></div></div><div data-state="open" class="flex flex-col gap-0"><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" title="lib" data-state="open" type="button" aria-controls="radix-«R176qr6bbbmivertbpeqdfffb»" aria-expanded="true" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-chevron-right h-4 w-4 transition-transform rotate-90"><path d="m9 18 6-6-6-6"></path></svg></div><span class="truncate font-normal">lib</span></div></button></li><div data-state="open" id="radix-«R176qr6bbbmivertbpeqdfffb»"><div data-sidebar="menu-sub" class="border-alpha-400 group-hover:border-l-alpha-400 duration-250 ml-3 flex min-w-0 translate-x-[0.5px] flex-col border-l border-l-transparent pl-1 transition-colors"><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" data-active="false" title="auth.ts" data-state="closed" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M14.5 6.5V13.5C14.5 14.8807 13.3807 16 12 16H4C2.61929 16 1.5 14.8807 1.5 13.5V1.5V0H3H8H9.08579C9.351 0 9.60536 0.105357 9.79289 0.292893L14.2071 4.70711C14.3946 4.89464 14.5 5.149 14.5 5.41421V6.5ZM13 6.5V13.5C13 14.0523 12.5523 14.5 12 14.5H4C3.44772 14.5 3 14.0523 3 13.5V1.5H8V5V6.5H9.5H13ZM9.5 2.12132V5H12.3787L9.5 2.12132Z" fill="currentColor"/></svg></div><span class="truncate font-normal">auth.ts</span></div></button></li><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" data-active="false" title="utils.ts" data-state="closed" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M14.5 6.5V13.5C14.5 14.8807 13.3807 16 12 16H4C2.61929 16 1.5 14.8807 1.5 13.5V1.5V0H3H8H9.08579C9.351 0 9.60536 0.105357 9.79289 0.292893L14.2071 4.70711C14.3946 4.89464 14.5 5.149 14.5 5.41421V6.5ZM13 6.5V13.5C13 14.0523 12.5523 14.5 12 14.5H4C3.44772 14.5 3 14.0523 3 13.5V1.5H8V5V6.5H9.5H13ZM9.5 2.12132V5H12.3787L9.5 2.12132Z" fill="currentColor"/></svg></div><span class="truncate font-normal">utils.ts</span></div></button></li></div></div></div><div data-state="open" class="flex flex-col gap-0"><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" title="middleware" data-state="open" type="button" aria-controls="radix-«R196qr6bbbmivertbpeqdfffb»" aria-expanded="true" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-chevron-right h-4 w-4 transition-transform rotate-90"><path d="m9 18 6-6-6-6"></path></svg></div><span class="truncate font-normal">middleware</span></div></button></li><div data-state="open" id="radix-«R196qr6bbbmivertbpeqdfffb»"><div data-sidebar="menu-sub" class="border-alpha-400 group-hover:border-l-alpha-400 duration-250 ml-3 flex min-w-0 translate-x-[0.5px] flex-col border-l border-l-transparent pl-1 transition-colors"><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" data-active="false" title="auth.js" data-state="closed" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class=""><path fill-rule="evenodd" clip-rule="evenodd" d="M14.5 13.5V6.5V5.41421C14.5 5.149 14.3946 4.89464 14.2071 4.70711L9.79289 0.292893C9.60536 0.105357 9.351 0 9.08579 0H8H3H1.5V1.5V8H3V1.5H8V5V6.5H9.5H13V13.5C13 14.0523 12.5523 14.5 12 14.5H6V16H12C13.3807 16 14.5 14.8807 14.5 13.5ZM9.5 5V2.12132L12.3787 5H9.5ZM2.31885 12.8194H0V11.3194H2.31885V9H3.81885V11.3194H6.13775V12.8194H3.81885V15.1377H2.31885V12.8194Z" fill="currentColor"></path></svg></div><span class="truncate font-normal">auth.js</span></div><div class="flex items-center gap-0.5 text-xs text-gray-500"><div class="text-green-700">+94</div></div></button></li><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" data-active="false" title="errorHandler.js" data-state="closed" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class=""><path fill-rule="evenodd" clip-rule="evenodd" d="M14.5 13.5V6.5V5.41421C14.5 5.149 14.3946 4.89464 14.2071 4.70711L9.79289 0.292893C9.60536 0.105357 9.351 0 9.08579 0H8H3H1.5V1.5V8H3V1.5H8V5V6.5H9.5H13V13.5C13 14.0523 12.5523 14.5 12 14.5H6V16H12C13.3807 16 14.5 14.8807 14.5 13.5ZM9.5 5V2.12132L12.3787 5H9.5ZM2.31885 12.8194H0V11.3194H2.31885V9H3.81885V11.3194H6.13775V12.8194H3.81885V15.1377H2.31885V12.8194Z" fill="currentColor"></path></svg></div><span class="truncate font-normal">errorHandler.js</span></div><div class="flex items-center gap-0.5 text-xs text-gray-500"><div class="text-green-700">+19</div></div></button></li><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" data-active="false" title="upload.js" data-state="closed" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class=""><path fill-rule="evenodd" clip-rule="evenodd" d="M14.5 13.5V6.5V5.41421C14.5 5.149 14.3946 4.89464 14.2071 4.70711L9.79289 0.292893C9.60536 0.105357 9.351 0 9.08579 0H8H3H1.5V1.5V8H3V1.5H8V5V6.5H9.5H13V13.5C13 14.0523 12.5523 14.5 12 14.5H6V16H12C13.3807 16 14.5 14.8807 14.5 13.5ZM9.5 5V2.12132L12.3787 5H9.5ZM2.31885 12.8194H0V11.3194H2.31885V9H3.81885V11.3194H6.13775V12.8194H3.81885V15.1377H2.31885V12.8194Z" fill="currentColor"></path></svg></div><span class="truncate font-normal">upload.js</span></div><div class="flex items-center gap-0.5 text-xs text-gray-500"><div class="text-green-700">+70</div></div></button></li></div></div></div><div data-state="open" class="flex flex-col gap-0"><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" title="models" data-state="open" type="button" aria-controls="radix-«R1b6qr6bbbmivertbpeqdfffb»" aria-expanded="true" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-chevron-right h-4 w-4 transition-transform rotate-90"><path d="m9 18 6-6-6-6"></path></svg></div><span class="truncate font-normal">models</span></div></button></li><div data-state="open" id="radix-«R1b6qr6bbbmivertbpeqdfffb»"><div data-sidebar="menu-sub" class="border-alpha-400 group-hover:border-l-alpha-400 duration-250 ml-3 flex min-w-0 translate-x-[0.5px] flex-col border-l border-l-transparent pl-1 transition-colors"><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" data-active="false" title="Comment.js" data-state="closed" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class=""><path fill-rule="evenodd" clip-rule="evenodd" d="M14.5 13.5V6.5V5.41421C14.5 5.149 14.3946 4.89464 14.2071 4.70711L9.79289 0.292893C9.60536 0.105357 9.351 0 9.08579 0H8H3H1.5V1.5V8H3V1.5H8V5V6.5H9.5H13V13.5C13 14.0523 12.5523 14.5 12 14.5H6V16H12C13.3807 16 14.5 14.8807 14.5 13.5ZM9.5 5V2.12132L12.3787 5H9.5ZM2.31885 12.8194H0V11.3194H2.31885V9H3.81885V11.3194H6.13775V12.8194H3.81885V15.1377H2.31885V12.8194Z" fill="currentColor"></path></svg></div><span class="truncate font-normal">Comment.js</span></div><div class="flex items-center gap-0.5 text-xs text-gray-500"><div class="text-green-700">+61</div></div></button></li><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" data-active="false" title="Notification.js" data-state="closed" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class=""><path fill-rule="evenodd" clip-rule="evenodd" d="M14.5 13.5V6.5V5.41421C14.5 5.149 14.3946 4.89464 14.2071 4.70711L9.79289 0.292893C9.60536 0.105357 9.351 0 9.08579 0H8H3H1.5V1.5V8H3V1.5H8V5V6.5H9.5H13V13.5C13 14.0523 12.5523 14.5 12 14.5H6V16H12C13.3807 16 14.5 14.8807 14.5 13.5ZM9.5 5V2.12132L12.3787 5H9.5ZM2.31885 12.8194H0V11.3194H2.31885V9H3.81885V11.3194H6.13775V12.8194H3.81885V15.1377H2.31885V12.8194Z" fill="currentColor"></path></svg></div><span class="truncate font-normal">Notification.js</span></div><div class="flex items-center gap-0.5 text-xs text-gray-500"><div class="text-green-700">+65</div></div></button></li><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" data-active="false" title="Task.js" data-state="closed" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class=""><path fill-rule="evenodd" clip-rule="evenodd" d="M14.5 13.5V6.5V5.41421C14.5 5.149 14.3946 4.89464 14.2071 4.70711L9.79289 0.292893C9.60536 0.105357 9.351 0 9.08579 0H8H3H1.5V1.5V8H3V1.5H8V5V6.5H9.5H13V13.5C13 14.0523 12.5523 14.5 12 14.5H6V16H12C13.3807 16 14.5 14.8807 14.5 13.5ZM9.5 5V2.12132L12.3787 5H9.5ZM2.31885 12.8194H0V11.3194H2.31885V9H3.81885V11.3194H6.13775V12.8194H3.81885V15.1377H2.31885V12.8194Z" fill="currentColor"></path></svg></div><span class="truncate font-normal">Task.js</span></div><div class="flex items-center gap-0.5 text-xs text-gray-500"><div class="text-green-700">+134</div></div></button></li><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" data-active="false" title="User.js" data-state="closed" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class=""><path fill-rule="evenodd" clip-rule="evenodd" d="M14.5 13.5V6.5V5.41421C14.5 5.149 14.3946 4.89464 14.2071 4.70711L9.79289 0.292893C9.60536 0.105357 9.351 0 9.08579 0H8H3H1.5V1.5V8H3V1.5H8V5V6.5H9.5H13V13.5C13 14.0523 12.5523 14.5 12 14.5H6V16H12C13.3807 16 14.5 14.8807 14.5 13.5ZM9.5 5V2.12132L12.3787 5H9.5ZM2.31885 12.8194H0V11.3194H2.31885V9H3.81885V11.3194H6.13775V12.8194H3.81885V15.1377H2.31885V12.8194Z" fill="currentColor"></path></svg></div><span class="truncate font-normal">User.js</span></div><div class="flex items-center gap-0.5 text-xs text-gray-500"><div class="text-green-700">+142</div></div></button></li></div></div></div><div data-state="open" class="flex flex-col gap-0"><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" title="routes" data-state="open" type="button" aria-controls="radix-«R1d6qr6bbbmivertbpeqdfffb»" aria-expanded="true" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-chevron-right h-4 w-4 transition-transform rotate-90"><path d="m9 18 6-6-6-6"></path></svg></div><span class="truncate font-normal">routes</span></div></button></li><div data-state="open" id="radix-«R1d6qr6bbbmivertbpeqdfffb»"><div data-sidebar="menu-sub" class="border-alpha-400 group-hover:border-l-alpha-400 duration-250 ml-3 flex min-w-0 translate-x-[0.5px] flex-col border-l border-l-transparent pl-1 transition-colors"><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" data-active="false" title="auth.js" data-state="closed" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class=""><path fill-rule="evenodd" clip-rule="evenodd" d="M14.5 13.5V6.5V5.41421C14.5 5.149 14.3946 4.89464 14.2071 4.70711L9.79289 0.292893C9.60536 0.105357 9.351 0 9.08579 0H8H3H1.5V1.5V8H3V1.5H8V5V6.5H9.5H13V13.5C13 14.0523 12.5523 14.5 12 14.5H6V16H12C13.3807 16 14.5 14.8807 14.5 13.5ZM9.5 5V2.12132L12.3787 5H9.5ZM2.31885 12.8194H0V11.3194H2.31885V9H3.81885V11.3194H6.13775V12.8194H3.81885V15.1377H2.31885V12.8194Z" fill="currentColor"></path></svg></div><span class="truncate font-normal">auth.js</span></div><div class="flex items-center gap-0.5 text-xs text-gray-500"><div class="text-green-700">+305</div></div></button></li><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" data-active="false" title="comments.js" data-state="closed" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class=""><path fill-rule="evenodd" clip-rule="evenodd" d="M14.5 13.5V6.5V5.41421C14.5 5.149 14.3946 4.89464 14.2071 4.70711L9.79289 0.292893C9.60536 0.105357 9.351 0 9.08579 0H8H3H1.5V1.5V8H3V1.5H8V5V6.5H9.5H13V13.5C13 14.0523 12.5523 14.5 12 14.5H6V16H12C13.3807 16 14.5 14.8807 14.5 13.5ZM9.5 5V2.12132L12.3787 5H9.5ZM2.31885 12.8194H0V11.3194H2.31885V9H3.81885V11.3194H6.13775V12.8194H3.81885V15.1377H2.31885V12.8194Z" fill="currentColor"></path></svg></div><span class="truncate font-normal">comments.js</span></div><div class="flex items-center gap-0.5 text-xs text-gray-500"><div class="text-green-700">+256</div></div></button></li><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" data-active="false" title="notifications.js" data-state="closed" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class=""><path fill-rule="evenodd" clip-rule="evenodd" d="M14.5 13.5V6.5V5.41421C14.5 5.149 14.3946 4.89464 14.2071 4.70711L9.79289 0.292893C9.60536 0.105357 9.351 0 9.08579 0H8H3H1.5V1.5V8H3V1.5H8V5V6.5H9.5H13V13.5C13 14.0523 12.5523 14.5 12 14.5H6V16H12C13.3807 16 14.5 14.8807 14.5 13.5ZM9.5 5V2.12132L12.3787 5H9.5ZM2.31885 12.8194H0V11.3194H2.31885V9H3.81885V11.3194H6.13775V12.8194H3.81885V15.1377H2.31885V12.8194Z" fill="currentColor"></path></svg></div><span class="truncate font-normal">notifications.js</span></div><div class="flex items-center gap-0.5 text-xs text-gray-500"><div class="text-green-700">+135</div></div></button></li><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" data-active="false" title="reports.js" data-state="closed" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class=""><path fill-rule="evenodd" clip-rule="evenodd" d="M14.5 13.5V6.5V5.41421C14.5 5.149 14.3946 4.89464 14.2071 4.70711L9.79289 0.292893C9.60536 0.105357 9.351 0 9.08579 0H8H3H1.5V1.5V8H3V1.5H8V5V6.5H9.5H13V13.5C13 14.0523 12.5523 14.5 12 14.5H6V16H12C13.3807 16 14.5 14.8807 14.5 13.5ZM9.5 5V2.12132L12.3787 5H9.5ZM2.31885 12.8194H0V11.3194H2.31885V9H3.81885V11.3194H6.13775V12.8194H3.81885V15.1377H2.31885V12.8194Z" fill="currentColor"></path></svg></div><span class="truncate font-normal">reports.js</span></div><div class="flex items-center gap-0.5 text-xs text-gray-500"><div class="text-green-700">+276</div></div></button></li><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" data-active="false" title="tasks.js" data-state="closed" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class=""><path fill-rule="evenodd" clip-rule="evenodd" d="M14.5 13.5V6.5V5.41421C14.5 5.149 14.3946 4.89464 14.2071 4.70711L9.79289 0.292893C9.60536 0.105357 9.351 0 9.08579 0H8H3H1.5V1.5V8H3V1.5H8V5V6.5H9.5H13V13.5C13 14.0523 12.5523 14.5 12 14.5H6V16H12C13.3807 16 14.5 14.8807 14.5 13.5ZM9.5 5V2.12132L12.3787 5H9.5ZM2.31885 12.8194H0V11.3194H2.31885V9H3.81885V11.3194H6.13775V12.8194H3.81885V15.1377H2.31885V12.8194Z" fill="currentColor"></path></svg></div><span class="truncate font-normal">tasks.js</span></div><div class="flex items-center gap-0.5 text-xs text-gray-500"><div class="text-green-700">+475</div></div></button></li><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" data-active="false" title="users.js" data-state="closed" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class=""><path fill-rule="evenodd" clip-rule="evenodd" d="M14.5 13.5V6.5V5.41421C14.5 5.149 14.3946 4.89464 14.2071 4.70711L9.79289 0.292893C9.60536 0.105357 9.351 0 9.08579 0H8H3H1.5V1.5V8H3V1.5H8V5V6.5H9.5H13V13.5C13 14.0523 12.5523 14.5 12 14.5H6V16H12C13.3807 16 14.5 14.8807 14.5 13.5ZM9.5 5V2.12132L12.3787 5H9.5ZM2.31885 12.8194H0V11.3194H2.31885V9H3.81885V11.3194H6.13775V12.8194H3.81885V15.1377H2.31885V12.8194Z" fill="currentColor"></path></svg></div><span class="truncate font-normal">users.js</span></div><div class="flex items-center gap-0.5 text-xs text-gray-500"><div class="text-green-700">+325</div></div></button></li></div></div></div><div data-state="open" class="flex flex-col gap-0"><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" title="socket" data-state="open" type="button" aria-controls="radix-«R1f6qr6bbbmivertbpeqdfffb»" aria-expanded="true" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-chevron-right h-4 w-4 transition-transform rotate-90"><path d="m9 18 6-6-6-6"></path></svg></div><span class="truncate font-normal">socket</span></div></button></li><div data-state="open" id="radix-«R1f6qr6bbbmivertbpeqdfffb»"><div data-sidebar="menu-sub" class="border-alpha-400 group-hover:border-l-alpha-400 duration-250 ml-3 flex min-w-0 translate-x-[0.5px] flex-col border-l border-l-transparent pl-1 transition-colors"><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" data-active="false" title="socketHandlers.js" data-state="closed" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class=""><path fill-rule="evenodd" clip-rule="evenodd" d="M14.5 13.5V6.5V5.41421C14.5 5.149 14.3946 4.89464 14.2071 4.70711L9.79289 0.292893C9.60536 0.105357 9.351 0 9.08579 0H8H3H1.5V1.5V8H3V1.5H8V5V6.5H9.5H13V13.5C13 14.0523 12.5523 14.5 12 14.5H6V16H12C13.3807 16 14.5 14.8807 14.5 13.5ZM9.5 5V2.12132L12.3787 5H9.5ZM2.31885 12.8194H0V11.3194H2.31885V9H3.81885V11.3194H6.13775V12.8194H3.81885V15.1377H2.31885V12.8194Z" fill="currentColor"></path></svg></div><span class="truncate font-normal">socketHandlers.js</span></div><div class="flex items-center gap-0.5 text-xs text-gray-500"><div class="text-green-700">+74</div></div></button></li></div></div></div><div data-state="open" class="flex flex-col gap-0"><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" title="utils" data-state="open" type="button" aria-controls="radix-«R1h6qr6bbbmivertbpeqdfffb»" aria-expanded="true" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-chevron-right h-4 w-4 transition-transform rotate-90"><path d="m9 18 6-6-6-6"></path></svg></div><span class="truncate font-normal">utils</span></div></button></li><div data-state="open" id="radix-«R1h6qr6bbbmivertbpeqdfffb»"><div data-sidebar="menu-sub" class="border-alpha-400 group-hover:border-l-alpha-400 duration-250 ml-3 flex min-w-0 translate-x-[0.5px] flex-col border-l border-l-transparent pl-1 transition-colors"><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" data-active="false" title="email.js" data-state="closed" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class=""><path fill-rule="evenodd" clip-rule="evenodd" d="M14.5 13.5V6.5V5.41421C14.5 5.149 14.3946 4.89464 14.2071 4.70711L9.79289 0.292893C9.60536 0.105357 9.351 0 9.08579 0H8H3H1.5V1.5V8H3V1.5H8V5V6.5H9.5H13V13.5C13 14.0523 12.5523 14.5 12 14.5H6V16H12C13.3807 16 14.5 14.8807 14.5 13.5ZM9.5 5V2.12132L12.3787 5H9.5ZM2.31885 12.8194H0V11.3194H2.31885V9H3.81885V11.3194H6.13775V12.8194H3.81885V15.1377H2.31885V12.8194Z" fill="currentColor"></path></svg></div><span class="truncate font-normal">email.js</span></div><div class="flex items-center gap-0.5 text-xs text-gray-500"><div class="text-green-700">+62</div></div></button></li><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" data-active="false" title="error.js" data-state="closed" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class=""><path fill-rule="evenodd" clip-rule="evenodd" d="M14.5 13.5V6.5V5.41421C14.5 5.149 14.3946 4.89464 14.2071 4.70711L9.79289 0.292893C9.60536 0.105357 9.351 0 9.08579 0H8H3H1.5V1.5V8H3V1.5H8V5V6.5H9.5H13V13.5C13 14.0523 12.5523 14.5 12 14.5H6V16H12C13.3807 16 14.5 14.8807 14.5 13.5ZM9.5 5V2.12132L12.3787 5H9.5ZM2.31885 12.8194H0V11.3194H2.31885V9H3.81885V11.3194H6.13775V12.8194H3.81885V15.1377H2.31885V12.8194Z" fill="currentColor"></path></svg></div><span class="truncate font-normal">error.js</span></div><div class="flex items-center gap-0.5 text-xs text-gray-500"><div class="text-green-700">+8</div></div></button></li><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" data-active="false" title="export.js" data-state="closed" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class=""><path fill-rule="evenodd" clip-rule="evenodd" d="M14.5 13.5V6.5V5.41421C14.5 5.149 14.3946 4.89464 14.2071 4.70711L9.79289 0.292893C9.60536 0.105357 9.351 0 9.08579 0H8H3H1.5V1.5V8H3V1.5H8V5V6.5H9.5H13V13.5C13 14.0523 12.5523 14.5 12 14.5H6V16H12C13.3807 16 14.5 14.8807 14.5 13.5ZM9.5 5V2.12132L12.3787 5H9.5ZM2.31885 12.8194H0V11.3194H2.31885V9H3.81885V11.3194H6.13775V12.8194H3.81885V15.1377H2.31885V12.8194Z" fill="currentColor"></path></svg></div><span class="truncate font-normal">export.js</span></div><div class="flex items-center gap-0.5 text-xs text-gray-500"><div class="text-green-700">+92</div></div></button></li><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" data-active="false" title="scheduler.js" data-state="closed" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class=""><path fill-rule="evenodd" clip-rule="evenodd" d="M14.5 13.5V6.5V5.41421C14.5 5.149 14.3946 4.89464 14.2071 4.70711L9.79289 0.292893C9.60536 0.105357 9.351 0 9.08579 0H8H3H1.5V1.5V8H3V1.5H8V5V6.5H9.5H13V13.5C13 14.0523 12.5523 14.5 12 14.5H6V16H12C13.3807 16 14.5 14.8807 14.5 13.5ZM9.5 5V2.12132L12.3787 5H9.5ZM2.31885 12.8194H0V11.3194H2.31885V9H3.81885V11.3194H6.13775V12.8194H3.81885V15.1377H2.31885V12.8194Z" fill="currentColor"></path></svg></div><span class="truncate font-normal">scheduler.js</span></div><div class="flex items-center gap-0.5 text-xs text-gray-500"><div class="text-green-700">+138</div></div></button></li></div></div></div><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" data-active="true" title=".env.example" data-state="closed" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class=""><path fill-rule="evenodd" clip-rule="evenodd" d="M14.5 13.5V6.5V5.41421C14.5 5.149 14.3946 4.89464 14.2071 4.70711L9.79289 0.292893C9.60536 0.105357 9.351 0 9.08579 0H8H3H1.5V1.5V8H3V1.5H8V5V6.5H9.5H13V13.5C13 14.0523 12.5523 14.5 12 14.5H6V16H12C13.3807 16 14.5 14.8807 14.5 13.5ZM9.5 5V2.12132L12.3787 5H9.5ZM2.31885 12.8194H0V11.3194H2.31885V9H3.81885V11.3194H6.13775V12.8194H3.81885V15.1377H2.31885V12.8194Z" fill="currentColor"></path></svg></div><span class="truncate font-normal">.env.example</span></div><div class="flex items-center gap-0.5 text-xs text-gray-500"><div class="text-green-700">+23</div></div></button></li><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" data-active="false" title="package.json" data-state="closed" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class=""><path fill-rule="evenodd" clip-rule="evenodd" d="M14.5 13.5V6.5V5.41421C14.5 5.149 14.3946 4.89464 14.2071 4.70711L9.79289 0.292893C9.60536 0.105357 9.351 0 9.08579 0H8H3H1.5V1.5V8H3V1.5H8V5V6.5H9.5H13V13.5C13 14.0523 12.5523 14.5 12 14.5H6V16H12C13.3807 16 14.5 14.8807 14.5 13.5ZM9.5 5V2.12132L12.3787 5H9.5ZM2.31885 12.8194H0V11.3194H2.31885V9H3.81885V11.3194H6.13775V12.8194H3.81885V15.1377H2.31885V12.8194Z" fill="currentColor"></path></svg></div><span class="truncate font-normal">package.json</span></div><div class="flex items-center gap-0.5 text-xs text-gray-500"><div class="text-green-700">+94</div></div></button></li><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" data-active="false" title="server.js" data-state="closed" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class=""><path fill-rule="evenodd" clip-rule="evenodd" d="M14.5 13.5V6.5V5.41421C14.5 5.149 14.3946 4.89464 14.2071 4.70711L9.79289 0.292893C9.60536 0.105357 9.351 0 9.08579 0H8H3H1.5V1.5V8H3V1.5H8V5V6.5H9.5H13V13.5C13 14.0523 12.5523 14.5 12 14.5H6V16H12C13.3807 16 14.5 14.8807 14.5 13.5ZM9.5 5V2.12132L12.3787 5H9.5ZM2.31885 12.8194H0V11.3194H2.31885V9H3.81885V11.3194H6.13775V12.8194H3.81885V15.1377H2.31885V12.8194Z" fill="currentColor"></path></svg></div><span class="truncate font-normal">server.js</span></div><div class="flex items-center gap-0.5 text-xs text-gray-500"><div class="text-green-700">+95</div></div></button></li><li><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent text-gray-900 hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg data-[active=true]:bg-alpha-200 mb-0 h-[26px] w-full min-w-36 justify-between gap-2 pl-0.5 pr-1" data-active="false" title="tailwind.config.js" data-state="closed" style="-webkit-touch-callout:none"><div class="flex min-w-0 items-center gap-1"><div class="p-0.5 text-gray-500 group-focus:text-gray-900 group-[[data-active=true]]:text-gray-900"><svg data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M14.5 6.5V13.5C14.5 14.8807 13.3807 16 12 16H4C2.61929 16 1.5 14.8807 1.5 13.5V1.5V0H3H8H9.08579C9.351 0 9.60536 0.105357 9.79289 0.292893L14.2071 4.70711C14.3946 4.89464 14.5 5.149 14.5 5.41421V6.5ZM13 6.5V13.5C13 14.0523 12.5523 14.5 12 14.5H4C3.44772 14.5 3 14.0523 3 13.5V1.5H8V5V6.5H9.5H13ZM9.5 2.12132V5H12.3787L9.5 2.12132Z" fill="currentColor"/></svg></div><span class="truncate font-normal">tailwind.config.js</span></div></button></li></ul></div><!--/$--></div></div><div class="group z-20 w-0 !overflow-visible !outline-none !ring-0 sticky top-0" role="separator" style="touch-action:none;user-select:none" tabindex="0" data-panel-group-direction="horizontal" data-panel-group-id="file-tree-panel-group" data-resize-handle="" data-resize-handle-state="inactive" data-panel-resize-handle-enabled="true" data-panel-resize-handle-id="«R3r6bbbmivertbpeqdfffb»"><div class="absolute inset-0 h-full w-3 translate-x-[-50%] !outline-0 !ring-0"></div><div class="absolute inset-0 h-full w-0 translate-x-[-50%] !outline-0 !ring-0 transition-all duration-200 group-data-[resize-handle-active=keyboard]:w-[3px] group-data-[resize-handle-state=drag]:w-[3px] group-data-[resize-handle-state=hover]:w-[3px] group-data-[resize-handle-active=keyboard]:bg-gray-400 group-data-[resize-handle-state=drag]:bg-gray-400 group-data-[resize-handle-state=hover]:bg-gray-300 group-data-[resize-handle-active=keyboard]:outline-none"></div></div><div class="h-full min-w-[200px]" id="file-tree-panel-right" style="flex-basis:0;flex-grow:75.0;flex-shrink:1;overflow:hidden" data-panel="" data-panel-group-id="file-tree-panel-group" data-panel-id="file-tree-panel-right" data-panel-size="75.0"><div class="flex h-full w-full flex-col"><div class="flex w-full shrink-0 items-center pl-3 pr-2 text-[13px] font-medium text-gray-500 h-[calc(2.25rem-1px)] justify-between gap-2" data-slot="block-tab-header"><div class="flex min-w-0 items-center gap-1 overflow-x-auto"><div class="whitespace-nowrap font-medium [&amp;:nth-last-child(2)]:text-gray-900">.env.example</div><div class="last:hidden"><svg data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M6.74999 3.93933L7.28032 4.46966L10.1035 7.29288C10.4941 7.68341 10.4941 8.31657 10.1035 8.7071L7.28032 11.5303L6.74999 12.0607L5.68933 11L6.21966 10.4697L8.68933 7.99999L6.21966 5.53032L5.68933 4.99999L6.74999 3.93933Z" fill="currentColor"/></svg></div></div><div class="flex items-center gap-1"><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center justify-center gap-1.5 whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-2 text-xs has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-1 has-[&gt;kbd]:pr-1 size-6 rounded-md text-gray-500" aria-label="Copy" data-state="closed"><span aria-hidden="true"><span class="grid [&amp;&gt;*]:[grid-area:1/1] "><span style="opacity:1;will-change:opacity"><svg class="copy-icon overflow-visible" fill="currentColor" height="16" viewBox="0 0 16 16" width="16" xmlns="http://www.w3.org/2000/svg"><style>.copy-icon {
            * {
              transition: transform 0.35s cubic-bezier(0.35, 0.2, 0.14, 0.95), d 0.35s cubic-bezier(0.35, 0.2, 0.14, 0.95);
            }
          }
          button:has(.copy-icon):hover, button:has(.copy-icon):focus-visible {
            .left {
              d: path("M 2.75 0.5 C 1.7835 0.5 1 1.2835 1 2.25 V 9.75 C 1 10.7165 1.7835 11.5 2.75 11.5 H 3.75 H 6.5 V 10 H 3.75 H 2.75 C 2.6119 10 2.5 9.8881 2.5 9.75 V 2.25 C 2.5 2.1119 2.6119 2 2.75 2 H 8.25 C 8.3881 2 8.5 2.1119 8.5 2.25 V 5 H 10 V 2.25 C 10 1.2835 9.2165 0.5 8.25 0.5 H 2.75 Z");
              transform: translate(-1px, -1px);
            }
            .right {
              transform: translate(1px, 1px);
            }
          }</style><path class="left" clip-rule="evenodd" d="M2.75 0.5C1.7835 0.5 1 1.2835 1 2.25V9.75C1 10.7165 1.7835 11.5 2.75 11.5H3.75H4.5V10H3.75H2.75C2.61193 10 2.5 9.88807 2.5 9.75V2.25C2.5 2.11193 2.61193 2 2.75 2H8.25C8.38807 2 8.5 2.11193 8.5 2.25V3H10V2.25C10 1.2835 9.2165 0.5 8.25 0.5H2.75Z" fill="currentColor" fill-rule="evenodd"></path><path class="right" clip-rule="evenodd" d="M7.75 4.5C6.7835 4.5 6 5.2835 6 6.25V13.75C6 14.7165 6.7835 15.5 7.75 15.5H13.25C14.2165 15.5 15 14.7165 15 13.75V6.25C15 5.2835 14.2165 4.5 13.25 4.5H7.75ZM7.5 6.25C7.5 6.11193 7.61193 6 7.75 6H13.25C13.3881 6 13.5 6.11193 13.5 6.25V13.75C13.5 13.8881 13.3881 14 13.25 14H7.75C7.61193 14 7.5 13.8881 7.5 13.75V6.25Z" fill="currentColor" fill-rule="evenodd"></path></svg></span></span></span></button><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center justify-center gap-1.5 whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 px-2 text-xs has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-1 has-[&gt;kbd]:pr-1 size-6 rounded-md text-gray-500" aria-label="Download" data-state="closed"><span aria-hidden="true"><svg class="download-icon overflow-visible" fill="none" height="16" viewBox="0 0 16 16" width="16" xmlns="http://www.w3.org/2000/svg"><style>.download-icon {
            cursor: pointer;
            transform-origin: center;
        }
        .download-icon .arrow-part {
            transition: transform 0.35s cubic-bezier(0.35, 0.2, 0.14, 0.95);
             transform-origin: center;
        }
        button:has(.download-icon):hover .download-icon .arrow-part, button:has(.download-icon):focus-visible .download-icon .arrow-part {
          transform: translateY(-1.5px);
        }
        </style><g class="arrow-part"><path clip-rule="evenodd" d="M8.75 1V1.75V8.68934L10.7197 6.71967L11.25 6.18934L12.3107 7.25L11.7803 7.78033L8.70711 10.8536C8.31658 11.2441 7.68342 11.2441 7.29289 10.8536L4.21967 7.78033L3.68934 7.25L4.75 6.18934L5.28033 6.71967L7.25 8.68934V1.75V1H8.75Z" fill="currentColor" fill-rule="evenodd"></path></g><g class="rectangle-part"><path clip-rule="evenodd" d="M13.5 9.25V13.5H2.5V9.25V8.5H1V9.25V14C1 14.5523 1.44771 15 2 15H14C14.5523 15 15 14.5523 15 14V9.25V8.5H13.5V9.25Z" fill="currentColor" fill-rule="evenodd"></path></g></svg></span></button></div></div><div class="w-full flex-1 overflow-auto"><div class="codeblock bg-muted flex size-full flex-col not-prose flex-1 grow" data-seg="root"><div class="relative flex flex-1 flex-col overflow-hidden font-sans px-0"><!--$!--><template data-dgst="BAILOUT_TO_CLIENT_SIDE_RENDERING"></template><!--/$--></div></div></div></div></div><button class="focus:border-alpha-400 focus-visible:border-alpha-400 disabled:border-alpha-300 border-alpha-400 hover:border-alpha-400 focus-visible:ring-offset-background aria-disabled:border-alpha-300 inline-flex shrink-0 cursor-pointer select-none items-center justify-center gap-1.5 whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:bg-gray-100 disabled:text-gray-400 disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:bg-gray-100 aria-disabled:text-gray-400 aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 bg-background-subtle text-gray-900 hover:bg-gray-100 focus:bg-gray-100 focus-visible:bg-gray-100 px-3 text-sm has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-2 has-[&gt;kbd]:pr-[6px] rounded-lg absolute bottom-2 left-2 z-20 size-7 transition-all -scale-x-100" data-state="closed"><svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M11.3333 8H2" stroke="currentcolor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path><path d="M7.33325 12L11.3333 8L7.33325 4" stroke="currentcolor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path><path d="M14 3.33203V12.6654" stroke="currentcolor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path></svg></button></div></div></div></div><div class="fixed inset-0 z-50 pointer-events-none"></div><div aria-hidden="false" class="relative z-20" style="height:0%;width:100%;min-height:36px;max-height:undefined%;opacity:1"><div class="group absolute z-10 focus:outline-none inset-x-0 h-3 cursor-row-resize -top-1.5" aria-orientation="horizontal" role="separator" tabindex="0"><div class="absolute inset-0 transition-all duration-200 group-hover:bg-gray-300 group-focus:bg-gray-400 my-auto group-hover:h-[3px] group-focus:h-[3px] h-0"></div></div><div class="absolute inset-0"><div class="bg-muted group/log-panel-header relative flex size-full flex-col border-t"><div class="flex h-9 w-full shrink-0 cursor-pointer items-center justify-between hover:text-gray-900"><div class="flex items-center gap-1.5 px-3 text-sm text-gray-500 transition-all group-hover/log-panel-header:text-gray-900"><svg data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M1.5 2.5H14.5V12.5C14.5 13.0523 14.0523 13.5 13.5 13.5H2.5C1.94772 13.5 1.5 13.0523 1.5 12.5V2.5ZM0 1H1.5H14.5H16V2.5V12.5C16 13.8807 14.8807 15 13.5 15H2.5C1.11929 15 0 13.8807 0 12.5V2.5V1ZM4 11.1339L4.44194 10.6919L6.51516 8.61872C6.85687 8.27701 6.85687 7.72299 6.51517 7.38128L4.44194 5.30806L4 4.86612L3.11612 5.75L3.55806 6.19194L5.36612 8L3.55806 9.80806L3.11612 10.25L4 11.1339ZM8 9.75494H8.6225H11.75H12.3725V10.9999H11.75H8.6225H8V9.75494Z" fill="currentColor"/></svg><span>Console</span></div><div class="flex gap-0.5 pr-2"><button class="focus-visible:ring-offset-background inline-flex shrink-0 cursor-pointer select-none items-center justify-center gap-1.5 whitespace-nowrap text-nowrap border font-medium outline-none ring-blue-600 transition-[background,border-color,color,transform,opacity,box-shadow] focus-visible:ring-2 focus-visible:ring-offset-1 disabled:cursor-not-allowed disabled:ring-0 has-[:focus-visible]:ring-2 aria-disabled:cursor-not-allowed aria-disabled:ring-0 [&amp;&gt;svg]:pointer-events-none [&amp;&gt;svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-alpha-200 focus-visible:bg-alpha-200 border-transparent bg-transparent hover:border-transparent focus:border-transparent focus-visible:border-transparent disabled:border-transparent disabled:bg-transparent disabled:text-gray-400 aria-disabled:border-transparent aria-disabled:bg-transparent aria-disabled:text-gray-400 h-6 px-2 text-xs has-[&gt;kbd]:gap-2 has-[&gt;svg]:px-1 has-[&gt;kbd]:pr-1 rounded-lg text-gray-500" data-state="closed"><svg data-testid="geist-icon" height="16" stroke-linejoin="round" style="color:currentColor" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M8.7071 3.14644C8.31657 2.75591 7.68341 2.75592 7.29288 3.14644L3.46966 6.96966L2.93933 7.49999L3.99999 8.56065L4.53032 8.03032L7.99999 4.56065L11.4697 8.03032L12 8.56065L13.0607 7.49999L12.5303 6.96966L8.7071 3.14644ZM8.7071 8.14644C8.31657 7.75592 7.68341 7.75592 7.29288 8.14644L3.46966 11.9697L2.93933 12.5L3.99999 13.5607L4.53032 13.0303L7.99999 9.56065L11.4697 13.0303L12 13.5607L13.0607 12.5L12.5303 11.9697L8.7071 8.14644Z" fill="currentColor"/></svg></button></div></div><div class="flex size-full flex-col items-stretch overflow-hidden bg-transparent"><div class="relative size-full" style="contain:strict"><div class="h-full w-full overflow-y-auto" style="overflow-anchor:none"><div class="mx-auto w-full"><div class="flex h-full items-center justify-center p-8"><div class="text-center text-sm text-gray-500">No logs available to display</div></div></div></div></div></div></div></div></div></div></div></div><!--/$--></div></div></div></div></div></div><!--$?--><template id="B:4"></template><div class="animate-pulse bg-primary/10 h-6 w-36 rounded-full fixed bottom-2 right-2 sm:bottom-3 sm:right-3 md:bottom-4 md:right-4"></div><!--/$--></div><script>$RC("B:3","S:3")</script><script>self.__next_f.push([1,"c1:I[62163,[\"86365\",\"static/chunks/dd702a79-b6c7661c8a838128.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"38058\",\"static/chunks/b7a1a8c0-72ee0f814ed13c32.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"79660\",\"static/chunks/8d598023-196a80608fdd6eee.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"73535\",\"static/chunks/73535-103b6060cf97ab6d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"51679\",\"static/chunks/51679-08aafdbd5acc6aa3.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"8557\",\"static/chunks/8557-c2a5e618ccff242d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"3357\",\"static/chunks/3357-a437bd9e1280840c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"56497\",\"static/chunks/56497-9a15f5e7fc5e058e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69053\",\"static/chunks/69053-2a18fec337af0c69.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69790\",\"static/chunks/69790-06e2618fe911421e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"69241\",\"static/chunks/69241-23922ef52da5b76b.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"19199\",\"static/chunks/19199-c732e5ac6f8e2141.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"43207\",\"static/chunks/43207-f2d4fa16ab44d090.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"13280\",\"static/chunks/13280-b6a1193602500b08.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"7921\",\"static/chunks/7921-73dfed29e8c02165.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40626\",\"static/chunks/40626-7aa1c4c6db827c91.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"42626\",\"static/chunks/42626-46c65f92250a4525.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"76442\",\"static/chunks/76442-21e0af1e9dcba237.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93590\",\"static/chunks/93590-52e31b4cbcf9e82d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"93307\",\"static/chunks/93307-40c92ad52815d0a2.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"6905\",\"static/chunks/6905-cb9cabc11de7c1e0.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"11139\",\"static/chunks/11139-f96710a45351a03f.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20514\",\"static/chunks/20514-f3407bf5b06a848a.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"47682\",\"static/chunks/47682-0d778b613e9847fb.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"53320\",\"static/chunks/53320-a7193a327838943e.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"41599\",\"static/chunks/41599-7a7f7cf9c09e7ac7.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20144\",\"static/chunks/20144-63eeced46f10ea05.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"29753\",\"static/chunks/29753-628fdf7767ca547c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"68223\",\"static/chunks/68223-f371eb2e74f42a9c.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"67343\",\"static/chunks/67343-0a8a43eba0b25445.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"32349\",\"static/chunks/32349-21720b7e60216f19.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"26877\",\"static/chunks/26877-7997e28f400c72fa.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"48223\",\"static/chunks/48223-7ea74e070987a567.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"40390\",\"static/chunks/40390-c9bfaa0de0b72f67.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"17077\",\"static/chunks/17077-6a46ded038f54266.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"33871\",\"static/chunks/33871-ce5211be2bca40e6.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"20897\",\"static/chunks/20897-32692800f1878a20.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"60114\",\"static/chunks/60114-1dd8b378f278c46d.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\",\"51742\",\"static/chunks/app/chat/%5Bvariants%5D/(dynamic-root)/(home)/(chat)/%40chat/id/page-6849e2289adc65f4.js?dpl=dpl_2JiAfaVXXWYJV7PFYmJ1XX7jSRD1\"],\"TemplateListInfiniteClient\"]\n"])</script><script>self.__next_f.push([1,"98:T66f,I am building a task management web app using React.js (frontend), Node.js (backend), and MongoDB (database). I want you to generate optimized, scalable, and secure code for the following feature: [1. Task Assignment and Prioritization* Assign tasks to specific team members.* Set priority levels (High, Medium, Low) for better task management.* Display tasks in a structured Kanban board or list view.2. Deadline Tracking and Notifications* Set deadlines for tasks and receive automated reminders.* Send email or push notifications when a deadline is near.* Display overdue tasks in a separate section for better visibility.3. Progress Reporting* Track task completion rates and pending tasks.* Generate visual reports (bar charts, pie charts) for team performance.* Export reports in CSV or PDF format for analysis.4. Role-Based Permissions* Control user access levels by assigning roles:   * Admin: Full control over tasks and user management.   * Editor: Can create and edit tasks but not manage users.   * Viewer: Can only view tasks without making changes.* Secure role management using JWT authentication.5. Real-Time Collaboration* Allow users to comment on tasks and tag teammates.* Enable file sharing for better document collaboration.* Use WebSockets (Socket.io) for real-time updates and notifications.6. Secure Authentication and Authorization* Use JWT-based authentication to verify users securely.* Implement OAuth login (Google, GitHub) for easy access.* Encrypt sensitive user data using bcrypt.]. The code should follow best practices and include necessary comments for better understanding.\" Give me the frontend first in react99:T18da3,"])</script><script>self.__next_f.push([1,"[V0_FILE]typescriptreact:file=\"app/page.tsx\"\nimport { redirect } from \"next/navigation\"\nimport { DashboardHeader } from \"@/components/dashboard/dashboard-header\"\nimport { DashboardShell } from \"@/components/dashboard/dashboard-shell\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Overview } from \"@/components/dashboard/overview\"\nimport { RecentTasks } from \"@/components/dashboard/recent-tasks\"\nimport { TeamMembers } from \"@/components/dashboard/team-members\"\nimport { getUserSession } from \"@/lib/auth\"\n\nexport default async function DashboardPage() {\n  const user = await getUserSession()\n\n  if (!user) {\n    redirect(\"/login\")\n  }\n\n  return (\n    \u003cDashboardShell\u003e\n      \u003cDashboardHeader heading=\"Dashboard\" text=\"Welcome back! Here's an overview of your team's tasks.\"\u003e\n        \u003cButton\u003e\n          \u003ca href=\"/tasks/new\"\u003eCreate Task\u003c/a\u003e\n        \u003c/Button\u003e\n      \u003c/DashboardHeader\u003e\n      \u003cdiv className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\"\u003e\n        \u003cCard\u003e\n          \u003cCardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\"\u003e\n            \u003cCardTitle className=\"text-sm font-medium\"\u003eTotal Tasks\u003c/CardTitle\u003e\n            \u003csvg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2\"\n              className=\"h-4 w-4 text-muted-foreground\"\n            \u003e\n              \u003cpath d=\"M12 2v20M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6\" /\u003e\n            \u003c/svg\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent\u003e\n            \u003cdiv className=\"text-2xl font-bold\"\u003e24\u003c/div\u003e\n            \u003cp className=\"text-xs text-muted-foreground\"\u003e+10% from last month\u003c/p\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n        \u003cCard\u003e\n          \u003cCardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\"\u003e\n            \u003cCardTitle className=\"text-sm font-medium\"\u003eCompleted\u003c/CardTitle\u003e\n            \u003csvg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2\"\n              className=\"h-4 w-4 text-muted-foreground\"\n            \u003e\n              \u003cpath d=\"M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2\" /\u003e\n              \u003ccircle cx=\"9\" cy=\"7\" r=\"4\" /\u003e\n              \u003cpath d=\"M22 21v-2a4 4 0 0 0-3-3.87M16 3.13a4 4 0 0 1 0 7.75\" /\u003e\n            \u003c/svg\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent\u003e\n            \u003cdiv className=\"text-2xl font-bold\"\u003e16\u003c/div\u003e\n            \u003cp className=\"text-xs text-muted-foreground\"\u003e+12% from last month\u003c/p\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n        \u003cCard\u003e\n          \u003cCardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\"\u003e\n            \u003cCardTitle className=\"text-sm font-medium\"\u003eIn Progress\u003c/CardTitle\u003e\n            \u003csvg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2\"\n              className=\"h-4 w-4 text-muted-foreground\"\n            \u003e\n              \u003crect width=\"20\" height=\"14\" x=\"2\" y=\"5\" rx=\"2\" /\u003e\n              \u003cpath d=\"M2 10h20\" /\u003e\n            \u003c/svg\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent\u003e\n            \u003cdiv className=\"text-2xl font-bold\"\u003e6\u003c/div\u003e\n            \u003cp className=\"text-xs text-muted-foreground\"\u003e-2% from last month\u003c/p\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n        \u003cCard\u003e\n          \u003cCardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\"\u003e\n            \u003cCardTitle className=\"text-sm font-medium\"\u003eOverdue\u003c/CardTitle\u003e\n            \u003csvg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2\"\n              className=\"h-4 w-4 text-muted-foreground\"\n            \u003e\n              \u003cpath d=\"M22 12h-4l-3 9L9 3l-3 9H2\" /\u003e\n            \u003c/svg\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent\u003e\n            \u003cdiv className=\"text-2xl font-bold\"\u003e2\u003c/div\u003e\n            \u003cp className=\"text-xs text-muted-foreground\"\u003e-4% from last month\u003c/p\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n      \u003c/div\u003e\n      \u003cdiv className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-7\"\u003e\n        \u003cCard className=\"col-span-4\"\u003e\n          \u003cCardHeader\u003e\n            \u003cCardTitle\u003eTask Completion Overview\u003c/CardTitle\u003e\n            \u003cCardDescription\u003eTask completion rate over the last 30 days\u003c/CardDescription\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent className=\"pl-2\"\u003e\n            \u003cOverview /\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n        \u003cCard className=\"col-span-3\"\u003e\n          \u003cCardHeader\u003e\n            \u003cCardTitle\u003eRecent Tasks\u003c/CardTitle\u003e\n            \u003cCardDescription\u003eRecently created or updated tasks\u003c/CardDescription\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent\u003e\n            \u003cRecentTasks /\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n      \u003c/div\u003e\n      \u003cdiv className=\"grid gap-4 md:grid-cols-1\"\u003e\n        \u003cCard\u003e\n          \u003cCardHeader\u003e\n            \u003cCardTitle\u003eTeam Members\u003c/CardTitle\u003e\n            \u003cCardDescription\u003eManage your team and their task assignments\u003c/CardDescription\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent\u003e\n            \u003cTeamMembers /\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n      \u003c/div\u003e\n    \u003c/DashboardShell\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"app/tasks/page.tsx\"\nimport { redirect } from \"next/navigation\"\nimport { DashboardHeader } from \"@/components/dashboard/dashboard-header\"\nimport { DashboardShell } from \"@/components/dashboard/dashboard-shell\"\nimport { Button } from \"@/components/ui/button\"\nimport { KanbanBoard } from \"@/components/tasks/kanban-board\"\nimport { TaskFilters } from \"@/components/tasks/task-filters\"\nimport { getUserSession } from \"@/lib/auth\"\n\nexport default async function TasksPage() {\n  const user = await getUserSession()\n\n  if (!user) {\n    redirect(\"/login\")\n  }\n\n  return (\n    \u003cDashboardShell\u003e\n      \u003cDashboardHeader heading=\"Tasks\" text=\"Manage and organize your team's tasks\"\u003e\n        \u003cButton\u003e\n          \u003ca href=\"/tasks/new\"\u003eCreate Task\u003c/a\u003e\n        \u003c/Button\u003e\n      \u003c/DashboardHeader\u003e\n      \u003cdiv className=\"space-y-4\"\u003e\n        \u003cTaskFilters /\u003e\n        \u003cKanbanBoard /\u003e\n      \u003c/div\u003e\n    \u003c/DashboardShell\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"app/tasks/new/page.tsx\"\nimport { redirect } from \"next/navigation\"\nimport { DashboardHeader } from \"@/components/dashboard/dashboard-header\"\nimport { DashboardShell } from \"@/components/dashboard/dashboard-shell\"\nimport { TaskForm } from \"@/components/tasks/task-form\"\nimport { getUserSession } from \"@/lib/auth\"\n\nexport default async function NewTaskPage() {\n  const user = await getUserSession()\n\n  if (!user) {\n    redirect(\"/login\")\n  }\n\n  // Check if user has permission to create tasks\n  if (user.role === \"viewer\") {\n    redirect(\"/dashboard\")\n  }\n\n  return (\n    \u003cDashboardShell\u003e\n      \u003cDashboardHeader heading=\"Create New Task\" text=\"Add a new task and assign it to team members\" /\u003e\n      \u003cdiv className=\"grid gap-4\"\u003e\n        \u003cTaskForm /\u003e\n      \u003c/div\u003e\n    \u003c/DashboardShell\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"app/tasks/[id]/page.tsx\"\nimport { redirect } from \"next/navigation\"\nimport { DashboardHeader } from \"@/components/dashboard/dashboard-header\"\nimport { DashboardShell } from \"@/components/dashboard/dashboard-shell\"\nimport { TaskDetails } from \"@/components/tasks/task-details\"\nimport { TaskComments } from \"@/components/tasks/task-comments\"\nimport { TaskAttachments } from \"@/components/tasks/task-attachments\"\nimport { getUserSession } from \"@/lib/auth\"\n\nexport default async function TaskDetailsPage({ params }: { params: { id: string } }) {\n  const user = await getUserSession()\n\n  if (!user) {\n    redirect(\"/login\")\n  }\n\n  return (\n    \u003cDashboardShell\u003e\n      \u003cDashboardHeader heading=\"Task Details\" text=\"View and manage task details\" /\u003e\n      \u003cdiv className=\"grid gap-6\"\u003e\n        \u003cTaskDetails id={params.id} /\u003e\n        \u003cdiv className=\"grid gap-4 md:grid-cols-2\"\u003e\n          \u003cTaskComments id={params.id} /\u003e\n          \u003cTaskAttachments id={params.id} /\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n    \u003c/DashboardShell\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"app/reports/page.tsx\"\nimport { redirect } from \"next/navigation\"\nimport { DashboardHeader } from \"@/components/dashboard/dashboard-header\"\nimport { DashboardShell } from \"@/components/dashboard/dashboard-shell\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { TaskCompletionChart } from \"@/components/reports/task-completion-chart\"\nimport { TeamPerformanceChart } from \"@/components/reports/team-performance-chart\"\nimport { PriorityDistributionChart } from \"@/components/reports/priority-distribution-chart\"\nimport { getUserSession } from \"@/lib/auth\"\n\nexport default async function ReportsPage() {\n  const user = await getUserSession()\n\n  if (!user) {\n    redirect(\"/login\")\n  }\n\n  return (\n    \u003cDashboardShell\u003e\n      \u003cDashboardHeader heading=\"Reports\" text=\"Analyze task performance and team productivity\"\u003e\n        \u003cdiv className=\"flex space-x-2\"\u003e\n          \u003cButton variant=\"outline\"\u003eExport CSV\u003c/Button\u003e\n          \u003cButton variant=\"outline\"\u003eExport PDF\u003c/Button\u003e\n        \u003c/div\u003e\n      \u003c/DashboardHeader\u003e\n      \u003cdiv className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-2\"\u003e\n        \u003cCard className=\"col-span-1\"\u003e\n          \u003cCardHeader\u003e\n            \u003cCardTitle\u003eTask Completion Rate\u003c/CardTitle\u003e\n            \u003cCardDescription\u003ePercentage of tasks completed on time\u003c/CardDescription\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent className=\"h-80\"\u003e\n            \u003cTaskCompletionChart /\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n        \u003cCard className=\"col-span-1\"\u003e\n          \u003cCardHeader\u003e\n            \u003cCardTitle\u003eTeam Performance\u003c/CardTitle\u003e\n            \u003cCardDescription\u003eTasks completed by team members\u003c/CardDescription\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent className=\"h-80\"\u003e\n            \u003cTeamPerformanceChart /\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n        \u003cCard className=\"col-span-2\"\u003e\n          \u003cCardHeader\u003e\n            \u003cCardTitle\u003eTask Priority Distribution\u003c/CardTitle\u003e\n            \u003cCardDescription\u003eDistribution of tasks by priority level\u003c/CardDescription\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent className=\"h-80\"\u003e\n            \u003cPriorityDistributionChart /\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n      \u003c/div\u003e\n    \u003c/DashboardShell\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"app/settings/page.tsx\"\nimport { redirect } from \"next/navigation\"\nimport { DashboardHeader } from \"@/components/dashboard/dashboard-header\"\nimport { DashboardShell } from \"@/components/dashboard/dashboard-shell\"\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\nimport { ProfileSettings } from \"@/components/settings/profile-settings\"\nimport { NotificationSettings } from \"@/components/settings/notification-settings\"\nimport { SecuritySettings } from \"@/components/settings/security-settings\"\nimport { getUserSession } from \"@/lib/auth\"\n\nexport default async function SettingsPage() {\n  const user = await getUserSession()\n\n  if (!user) {\n    redirect(\"/login\")\n  }\n\n  return (\n    \u003cDashboardShell\u003e\n      \u003cDashboardHeader heading=\"Settings\" text=\"Manage your account settings and preferences\" /\u003e\n      \u003cTabs defaultValue=\"profile\" className=\"space-y-4\"\u003e\n        \u003cTabsList\u003e\n          \u003cTabsTrigger value=\"profile\"\u003eProfile\u003c/TabsTrigger\u003e\n          \u003cTabsTrigger value=\"notifications\"\u003eNotifications\u003c/TabsTrigger\u003e\n          \u003cTabsTrigger value=\"security\"\u003eSecurity\u003c/TabsTrigger\u003e\n        \u003c/TabsList\u003e\n        \u003cTabsContent value=\"profile\" className=\"space-y-4\"\u003e\n          \u003cProfileSettings user={user} /\u003e\n        \u003c/TabsContent\u003e\n        \u003cTabsContent value=\"notifications\" className=\"space-y-4\"\u003e\n          \u003cNotificationSettings user={user} /\u003e\n        \u003c/TabsContent\u003e\n        \u003cTabsContent value=\"security\" className=\"space-y-4\"\u003e\n          \u003cSecuritySettings user={user} /\u003e\n        \u003c/TabsContent\u003e\n      \u003c/Tabs\u003e\n    \u003c/DashboardShell\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"app/users/page.tsx\"\nimport { redirect } from \"next/navigation\"\nimport { DashboardHeader } from \"@/components/dashboard/dashboard-header\"\nimport { DashboardShell } from \"@/components/dashboard/dashboard-shell\"\nimport { Button } from \"@/components/ui/button\"\nimport { UserManagement } from \"@/components/users/user-management\"\nimport { getUserSession } from \"@/lib/auth\"\n\nexport default async function UsersPage() {\n  const user = await getUserSession()\n\n  if (!user) {\n    redirect(\"/login\")\n  }\n\n  // Only admins can access user management\n  if (user.role !== \"admin\") {\n    redirect(\"/dashboard\")\n  }\n\n  return (\n    \u003cDashboardShell\u003e\n      \u003cDashboardHeader heading=\"User Management\" text=\"Manage users and their permissions\"\u003e\n        \u003cButton\u003e\n          \u003ca href=\"/users/new\"\u003eAdd User\u003c/a\u003e\n        \u003c/Button\u003e\n      \u003c/DashboardHeader\u003e\n      \u003cdiv className=\"grid gap-4\"\u003e\n        \u003cUserManagement /\u003e\n      \u003c/div\u003e\n    \u003c/DashboardShell\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"app/login/page.tsx\"\n\"use client\"\n\nimport type React from \"react\"\n\nimport { useState } from \"react\"\nimport Link from \"next/link\"\nimport { useRouter } from \"next/navigation\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { loginUser } from \"@/lib/auth\"\n\nexport default function LoginPage() {\n  const router = useRouter()\n  const [isLoading, setIsLoading] = useState(false)\n  const [error, setError] = useState(\"\")\n\n  async function handleSubmit(event: React.FormEvent\u003cHTMLFormElement\u003e) {\n    event.preventDefault()\n    setIsLoading(true)\n    setError(\"\")\n\n    const formData = new FormData(event.currentTarget)\n    const email = formData.get(\"email\") as string\n    const password = formData.get(\"password\") as string\n\n    try {\n      await loginUser(email, password)\n      router.push(\"/dashboard\")\n    } catch (err) {\n      setError(\"Invalid email or password\")\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    \u003cdiv className=\"flex min-h-screen items-center justify-center bg-gray-50 px-4 py-12 sm:px-6 lg:px-8\"\u003e\n      \u003cCard className=\"w-full max-w-md\"\u003e\n        \u003cCardHeader className=\"space-y-1\"\u003e\n          \u003cCardTitle className=\"text-2xl font-bold\"\u003eLogin\u003c/CardTitle\u003e\n          \u003cCardDescription\u003eEnter your credentials to access your account\u003c/CardDescription\u003e\n        \u003c/CardHeader\u003e\n        \u003cform onSubmit={handleSubmit}\u003e\n          \u003cCardContent className=\"space-y-4\"\u003e\n            {error \u0026\u0026 \u003cdiv className=\"rounded-md bg-red-50 p-2 text-sm text-red-500\"\u003e{error}\u003c/div\u003e}\n            \u003cdiv className=\"space-y-2\"\u003e\n              \u003cLabel htmlFor=\"email\"\u003eEmail\u003c/Label\u003e\n              \u003cInput id=\"email\" name=\"email\" type=\"email\" required /\u003e\n            \u003c/div\u003e\n            \u003cdiv className=\"space-y-2\"\u003e\n              \u003cdiv className=\"flex items-center justify-between\"\u003e\n                \u003cLabel htmlFor=\"password\"\u003ePassword\u003c/Label\u003e\n                \u003cLink href=\"/forgot-password\" className=\"text-sm text-primary\"\u003e\n                  Forgot password?\n                \u003c/Link\u003e\n              \u003c/div\u003e\n              \u003cInput id=\"password\" name=\"password\" type=\"password\" required /\u003e\n            \u003c/div\u003e\n            \u003cdiv className=\"flex items-center space-x-2\"\u003e\n              \u003chr className=\"flex-1\" /\u003e\n              \u003cspan className=\"text-sm text-muted-foreground\"\u003eOR\u003c/span\u003e\n              \u003chr className=\"flex-1\" /\u003e\n            \u003c/div\u003e\n            \u003cdiv className=\"grid grid-cols-2 gap-4\"\u003e\n              \u003cButton variant=\"outline\" type=\"button\" className=\"w-full\"\u003e\n                \u003csvg className=\"mr-2 h-4 w-4\" viewBox=\"0 0 24 24\"\u003e\n                  \u003cpath\n                    d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\"\n                    fill=\"#4285F4\"\n                  /\u003e\n                  \u003cpath\n                    d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\"\n                    fill=\"#34A853\"\n                  /\u003e\n                  \u003cpath\n                    d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\"\n                    fill=\"#FBBC05\"\n                  /\u003e\n                  \u003cpath\n                    d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\"\n                    fill=\"#EA4335\"\n                  /\u003e\n                \u003c/svg\u003e\n                Google\n              \u003c/Button\u003e\n              \u003cButton variant=\"outline\" type=\"button\" className=\"w-full\"\u003e\n                \u003csvg className=\"mr-2 h-4 w-4\" viewBox=\"0 0 24 24\"\u003e\n                  \u003cpath\n                    d=\"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12\"\n                    fill=\"currentColor\"\n                  /\u003e\n                \u003c/svg\u003e\n                GitHub\n              \u003c/Button\u003e\n            \u003c/div\u003e\n          \u003c/CardContent\u003e\n          \u003cCardFooter className=\"flex flex-col space-y-4\"\u003e\n            \u003cButton type=\"submit\" className=\"w-full\" disabled={isLoading}\u003e\n              {isLoading ? \"Logging in...\" : \"Login\"}\n            \u003c/Button\u003e\n            \u003cdiv className=\"text-center text-sm\"\u003e\n              Don\u0026apos;t have an account?{\" \"}\n              \u003cLink href=\"/register\" className=\"text-primary\"\u003e\n                Sign up\n              \u003c/Link\u003e\n            \u003c/div\u003e\n          \u003c/CardFooter\u003e\n        \u003c/form\u003e\n      \u003c/Card\u003e\n    \u003c/div\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"app/register/page.tsx\"\n\"use client\"\n\nimport type React from \"react\"\n\nimport { useState } from \"react\"\nimport Link from \"next/link\"\nimport { useRouter } from \"next/navigation\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { registerUser } from \"@/lib/auth\"\n\nexport default function RegisterPage() {\n  const router = useRouter()\n  const [isLoading, setIsLoading] = useState(false)\n  const [error, setError] = useState(\"\")\n\n  async function handleSubmit(event: React.FormEvent\u003cHTMLFormElement\u003e) {\n    event.preventDefault()\n    setIsLoading(true)\n    setError(\"\")\n\n    const formData = new FormData(event.currentTarget)\n    const name = formData.get(\"name\") as string\n    const email = formData.get(\"email\") as string\n    const password = formData.get(\"password\") as string\n    const confirmPassword = formData.get(\"confirmPassword\") as string\n\n    if (password !== confirmPassword) {\n      setError(\"Passwords do not match\")\n      setIsLoading(false)\n      return\n    }\n\n    try {\n      await registerUser(name, email, password)\n      router.push(\"/dashboard\")\n    } catch (err) {\n      setError(\"Failed to create account\")\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    \u003cdiv className=\"flex min-h-screen items-center justify-center bg-gray-50 px-4 py-12 sm:px-6 lg:px-8\"\u003e\n      \u003cCard className=\"w-full max-w-md\"\u003e\n        \u003cCardHeader className=\"space-y-1\"\u003e\n          \u003cCardTitle className=\"text-2xl font-bold\"\u003eCreate an account\u003c/CardTitle\u003e\n          \u003cCardDescription\u003eEnter your information to create an account\u003c/CardDescription\u003e\n        \u003c/CardHeader\u003e\n        \u003cform onSubmit={handleSubmit}\u003e\n          \u003cCardContent className=\"space-y-4\"\u003e\n            {error \u0026\u0026 \u003cdiv className=\"rounded-md bg-red-50 p-2 text-sm text-red-500\"\u003e{error}\u003c/div\u003e}\n            \u003cdiv className=\"space-y-2\"\u003e\n              \u003cLabel htmlFor=\"name\"\u003eFull Name\u003c/Label\u003e\n              \u003cInput id=\"name\" name=\"name\" required /\u003e\n            \u003c/div\u003e\n            \u003cdiv className=\"space-y-2\"\u003e\n              \u003cLabel htmlFor=\"email\"\u003eEmail\u003c/Label\u003e\n              \u003cInput id=\"email\" name=\"email\" type=\"email\" required /\u003e\n            \u003c/div\u003e\n            \u003cdiv className=\"space-y-2\"\u003e\n              \u003cLabel htmlFor=\"password\"\u003ePassword\u003c/Label\u003e\n              \u003cInput id=\"password\" name=\"password\" type=\"password\" required /\u003e\n            \u003c/div\u003e\n            \u003cdiv className=\"space-y-2\"\u003e\n              \u003cLabel htmlFor=\"confirmPassword\"\u003eConfirm Password\u003c/Label\u003e\n              \u003cInput id=\"confirmPassword\" name=\"confirmPassword\" type=\"password\" required /\u003e\n            \u003c/div\u003e\n          \u003c/CardContent\u003e\n          \u003cCardFooter className=\"flex flex-col space-y-4\"\u003e\n            \u003cButton type=\"submit\" className=\"w-full\" disabled={isLoading}\u003e\n              {isLoading ? \"Creating account...\" : \"Create account\"}\n            \u003c/Button\u003e\n            \u003cdiv className=\"text-center text-sm\"\u003e\n              Already have an account?{\" \"}\n              \u003cLink href=\"/login\" className=\"text-primary\"\u003e\n                Login\n              \u003c/Link\u003e\n            \u003c/div\u003e\n          \u003c/CardFooter\u003e\n        \u003c/form\u003e\n      \u003c/Card\u003e\n    \u003c/div\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/dashboard/dashboard-header.tsx\"\nimport type React from \"react\"\ninterface DashboardHeaderProps {\n  heading: string\n  text?: string\n  children?: React.ReactNode\n}\n\nexport function DashboardHeader({ heading, text, children }: DashboardHeaderProps) {\n  return (\n    \u003cdiv className=\"flex items-center justify-between px-2\"\u003e\n      \u003cdiv className=\"grid gap-1\"\u003e\n        \u003ch1 className=\"font-heading text-3xl md:text-4xl\"\u003e{heading}\u003c/h1\u003e\n        {text \u0026\u0026 \u003cp className=\"text-lg text-muted-foreground\"\u003e{text}\u003c/p\u003e}\n      \u003c/div\u003e\n      {children}\n    \u003c/div\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/dashboard/dashboard-shell.tsx\"\nimport type React from \"react\"\ninterface DashboardShellProps {\n  children: React.ReactNode\n}\n\nexport function DashboardShell({ children }: DashboardShellProps) {\n  return (\n    \u003cdiv className=\"flex min-h-screen flex-col\"\u003e\n      \u003cmain className=\"flex flex-1 flex-col gap-4 p-4 md:gap-8 md:p-8\"\u003e\n        \u003cdiv className=\"mx-auto grid w-full max-w-7xl gap-4 md:gap-8\"\u003e{children}\u003c/div\u003e\n      \u003c/main\u003e\n    \u003c/div\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/dashboard/overview.tsx\"\n\"use client\"\nimport { Area, AreaChart, ResponsiveContainer, Tooltip, XAxis, YAxis } from \"@/components/ui/chart\"\n\nconst data = [\n  {\n    name: \"Jan\",\n    total: 12,\n  },\n  {\n    name: \"Feb\",\n    total: 18,\n  },\n  {\n    name: \"Mar\",\n    total: 24,\n  },\n  {\n    name: \"Apr\",\n    total: 30,\n  },\n  {\n    name: \"May\",\n    total: 22,\n  },\n  {\n    name: \"Jun\",\n    total: 28,\n  },\n  {\n    name: \"Jul\",\n    total: 32,\n  },\n  {\n    name: \"Aug\",\n    total: 36,\n  },\n  {\n    name: \"Sep\",\n    total: 30,\n  },\n  {\n    name: \"Oct\",\n    total: 28,\n  },\n  {\n    name: \"Nov\",\n    total: 34,\n  },\n  {\n    name: \"Dec\",\n    total: 40,\n  },\n]\n\nexport function Overview() {\n  return (\n    \u003cResponsiveContainer width=\"100%\" height={350}\u003e\n      \u003cAreaChart\n        data={data}\n        margin={{\n          top: 10,\n          right: 30,\n          left: 0,\n          bottom: 0,\n        }}\n      \u003e\n        \u003cdefs\u003e\n          \u003clinearGradient id=\"colorTotal\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\"\u003e\n            \u003cstop offset=\"5%\" stopColor=\"#8884d8\" stopOpacity={0.8} /\u003e\n            \u003cstop offset=\"95%\" stopColor=\"#8884d8\" stopOpacity={0} /\u003e\n          \u003c/linearGradient\u003e\n        \u003c/defs\u003e\n        \u003cXAxis dataKey=\"name\" stroke=\"#888888\" fontSize={12} tickLine={false} axisLine={false} /\u003e\n        \u003cYAxis stroke=\"#888888\" fontSize={12} tickLine={false} axisLine={false} tickFormatter={(value) =\u003e `${value}`} /\u003e\n        \u003cTooltip /\u003e\n        \u003cArea type=\"monotone\" dataKey=\"total\" stroke=\"#8884d8\" fillOpacity={1} fill=\"url(#colorTotal)\" /\u003e\n      \u003c/AreaChart\u003e\n    \u003c/ResponsiveContainer\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/dashboard/recent-tasks.tsx\"\n\"use client\"\n\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\nimport { Badge } from \"@/components/ui/badge\"\n\nconst tasks = [\n  {\n    id: \"TASK-8782\",\n    title: \"Create new landing page\",\n    status: \"In Progress\",\n    priority: \"High\",\n    assignee: {\n      name: \"Emma Wilson\",\n      email: \"emma@example.com\",\n      avatar: \"/placeholder.svg?height=32\u0026width=32\",\n    },\n  },\n  {\n    id: \"TASK-7878\",\n    title: \"Update user authentication flow\",\n    status: \"In Review\",\n    priority: \"Medium\",\n    assignee: {\n      name: \"Jackson Lee\",\n      email: \"jackson@example.com\",\n      avatar: \"/placeholder.svg?height=32\u0026width=32\",\n    },\n  },\n  {\n    id: \"TASK-7839\",\n    title: \"Implement notification system\",\n    status: \"Completed\",\n    priority: \"Medium\",\n    assignee: {\n      name: \"Sophia Chen\",\n      email: \"sophia@example.com\",\n      avatar: \"/placeholder.svg?height=32\u0026width=32\",\n    },\n  },\n  {\n    id: \"TASK-7349\",\n    title: \"Fix mobile responsiveness issues\",\n    status: \"In Progress\",\n    priority: \"High\",\n    assignee: {\n      name: \"Liam Johnson\",\n      email: \"liam@example.com\",\n      avatar: \"/placeholder.svg?height=32\u0026width=32\",\n    },\n  },\n  {\n    id: \"TASK-8572\",\n    title: \"Create API documentation\",\n    status: \"Not Started\",\n    priority: \"Low\",\n    assignee: {\n      name: \"Olivia Martinez\",\n      email: \"olivia@example.com\",\n      avatar: \"/placeholder.svg?height=32\u0026width=32\",\n    },\n  },\n]\n\nexport function RecentTasks() {\n  return (\n    \u003cdiv className=\"space-y-8\"\u003e\n      {tasks.map((task) =\u003e (\n        \u003cdiv key={task.id} className=\"flex items-center\"\u003e\n          \u003cAvatar className=\"h-9 w-9\"\u003e\n            \u003cAvatarImage src={task.assignee.avatar} alt={task.assignee.name} /\u003e\n            \u003cAvatarFallback\u003e\n              {task.assignee.name\n                .split(\" \")\n                .map((n) =\u003e n[0])\n                .join(\"\")}\n            \u003c/AvatarFallback\u003e\n          \u003c/Avatar\u003e\n          \u003cdiv className=\"ml-4 space-y-1\"\u003e\n            \u003cp className=\"text-sm font-medium leading-none\"\u003e{task.title}\u003c/p\u003e\n            \u003cp className=\"text-sm text-muted-foreground\"\u003e\n              {task.id} · Assigned to {task.assignee.name}\n            \u003c/p\u003e\n          \u003c/div\u003e\n          \u003cdiv className=\"ml-auto flex items-center gap-2\"\u003e\n            \u003cBadge\n              variant={\n                task.status === \"Completed\"\n                  ? \"success\"\n                  : task.status === \"In Progress\"\n                    ? \"default\"\n                    : task.status === \"In Review\"\n                      ? \"warning\"\n                      : \"secondary\"\n              }\n            \u003e\n              {task.status}\n            \u003c/Badge\u003e\n            \u003cBadge\n              variant={task.priority === \"High\" ? \"destructive\" : task.priority === \"Medium\" ? \"default\" : \"outline\"}\n            \u003e\n              {task.priority}\n            \u003c/Badge\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n      ))}\n    \u003c/div\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/dashboard/team-members.tsx\"\n\"use client\"\n\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\n\nconst teamMembers = [\n  {\n    id: 1,\n    name: \"Emma Wilson\",\n    email: \"emma@example.com\",\n    role: \"Product Manager\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    tasksAssigned: 8,\n    tasksCompleted: 5,\n  },\n  {\n    id: 2,\n    name: \"Jackson Lee\",\n    email: \"jackson@example.com\",\n    role: \"Frontend Developer\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    tasksAssigned: 12,\n    tasksCompleted: 10,\n  },\n  {\n    id: 3,\n    name: \"Sophia Chen\",\n    email: \"sophia@example.com\",\n    role: \"Backend Developer\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    tasksAssigned: 10,\n    tasksCompleted: 7,\n  },\n  {\n    id: 4,\n    name: \"Liam Johnson\",\n    email: \"liam@example.com\",\n    role: \"UI/UX Designer\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    tasksAssigned: 6,\n    tasksCompleted: 4,\n  },\n  {\n    id: 5,\n    name: \"Olivia Martinez\",\n    email: \"olivia@example.com\",\n    role: \"QA Engineer\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    tasksAssigned: 9,\n    tasksCompleted: 8,\n  },\n]\n\nexport function TeamMembers() {\n  return (\n    \u003cdiv className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\"\u003e\n      {teamMembers.map((member) =\u003e (\n        \u003cCard key={member.id}\u003e\n          \u003cCardHeader className=\"flex flex-row items-center gap-4 pb-2\"\u003e\n            \u003cAvatar className=\"h-10 w-10\"\u003e\n              \u003cAvatarImage src={member.avatar} alt={member.name} /\u003e\n              \u003cAvatarFallback\u003e\n                {member.name\n                  .split(\" \")\n                  .map((n) =\u003e n[0])\n                  .join(\"\")}\n              \u003c/AvatarFallback\u003e\n            \u003c/Avatar\u003e\n            \u003cdiv className=\"grid gap-1\"\u003e\n              \u003cCardTitle className=\"text-base\"\u003e{member.name}\u003c/CardTitle\u003e\n              \u003cCardDescription className=\"text-xs\"\u003e{member.role}\u003c/CardDescription\u003e\n            \u003c/div\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent\u003e\n            \u003cdiv className=\"grid gap-2\"\u003e\n              \u003cdiv className=\"grid grid-cols-2 gap-2 text-sm\"\u003e\n                \u003cdiv className=\"flex flex-col\"\u003e\n                  \u003cspan className=\"text-muted-foreground\"\u003eAssigned\u003c/span\u003e\n                  \u003cspan className=\"font-medium\"\u003e{member.tasksAssigned}\u003c/span\u003e\n                \u003c/div\u003e\n                \u003cdiv className=\"flex flex-col\"\u003e\n                  \u003cspan className=\"text-muted-foreground\"\u003eCompleted\u003c/span\u003e\n                  \u003cspan className=\"font-medium\"\u003e{member.tasksCompleted}\u003c/span\u003e\n                \u003c/div\u003e\n              \u003c/div\u003e\n              \u003cdiv className=\"mt-2 flex justify-between\"\u003e\n                \u003cButton size=\"sm\" variant=\"outline\"\u003e\n                  View Profile\n                \u003c/Button\u003e\n                \u003cButton size=\"sm\"\u003eAssign Task\u003c/Button\u003e\n              \u003c/div\u003e\n            \u003c/div\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n      ))}\n    \u003c/div\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/tasks/kanban-board.tsx\"\n\"use client\"\n\nimport { useState } from \"react\"\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\"\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\n\n// Initial task data\nconst initialTasks = {\n  \"to-do\": [\n    {\n      id: \"task-1\",\n      title: \"Create new landing page\",\n      description: \"Design and implement a new landing page for the product\",\n      priority: \"High\",\n      assignee: {\n        name: \"Emma Wilson\",\n        avatar: \"/placeholder.svg?height=32\u0026width=32\",\n      },\n      dueDate: \"2023-12-15\",\n    },\n    {\n      id: \"task-2\",\n      title: \"Update user authentication flow\",\n      description: \"Improve the user authentication experience\",\n      priority: \"Medium\",\n      assignee: {\n        name: \"Jackson Lee\",\n        avatar: \"/placeholder.svg?height=32\u0026width=32\",\n      },\n      dueDate: \"2023-12-20\",\n    },\n    {\n      id: \"task-3\",\n      title: \"Create API documentation\",\n      description: \"Document all API endpoints for developers\",\n      priority: \"Low\",\n      assignee: {\n        name: \"Olivia Martinez\",\n        avatar: \"/placeholder.svg?height=32\u0026width=32\",\n      },\n      dueDate: \"2023-12-30\",\n    },\n  ],\n  \"in-progress\": [\n    {\n      id: \"task-4\",\n      title: \"Implement notification system\",\n      description: \"Create a real-time notification system for users\",\n      priority: \"Medium\",\n      assignee: {\n        name: \"Sophia Chen\",\n        avatar: \"/placeholder.svg?height=32\u0026width=32\",\n      },\n      dueDate: \"2023-12-10\",\n    },\n    {\n      id: \"task-5\",\n      title: \"Fix mobile responsiveness issues\",\n      description: \"Address UI issues on mobile devices\",\n      priority: \"High\",\n      assignee: {\n        name: \"Liam Johnson\",\n        avatar: \"/placeholder.svg?height=32\u0026width=32\",\n      },\n      dueDate: \"2023-12-05\",\n    },\n  ],\n  \"in-review\": [\n    {\n      id: \"task-6\",\n      title: \"Optimize database queries\",\n      description: \"Improve performance of slow database queries\",\n      priority: \"High\",\n      assignee: {\n        name: \"Jackson Lee\",\n        avatar: \"/placeholder.svg?height=32\u0026width=32\",\n      },\n      dueDate: \"2023-12-08\",\n    },\n  ],\n  completed: [\n    {\n      id: \"task-7\",\n      title: \"Set up CI/CD pipeline\",\n      description: \"Implement continuous integration and deployment\",\n      priority: \"Medium\",\n      assignee: {\n        name: \"Sophia Chen\",\n        avatar: \"/placeholder.svg?height=32\u0026width=32\",\n      },\n      dueDate: \"2023-12-01\",\n    },\n    {\n      id: \"task-8\",\n      title: \"Create user onboarding flow\",\n      description: \"Design and implement user onboarding experience\",\n      priority: \"Medium\",\n      assignee: {\n        name: \"Emma Wilson\",\n        avatar: \"/placeholder.svg?height=32\u0026width=32\",\n      },\n      dueDate: \"2023-11-25\",\n    },\n  ],\n}\n\n// Column definitions\nconst columns = [\n  {\n    id: \"to-do\",\n    title: \"To Do\",\n    color: \"bg-gray-100\",\n  },\n  {\n    id: \"in-progress\",\n    title: \"In Progress\",\n    color: \"bg-blue-50\",\n  },\n  {\n    id: \"in-review\",\n    title: \"In Review\",\n    color: \"bg-yellow-50\",\n  },\n  {\n    id: \"completed\",\n    title: \"Completed\",\n    color: \"bg-green-50\",\n  },\n]\n\nexport function KanbanBoard() {\n  const [tasks, setTasks] = useState(initialTasks)\n\n  const handleDragEnd = (result) =\u003e {\n    const { destination, source, draggableId } = result\n\n    // If there's no destination or the item is dropped in the same place\n    if (!destination || (destination.droppableId === source.droppableId \u0026\u0026 destination.index === source.index)) {\n      return\n    }\n\n    // Find the task that was dragged\n    const sourceColumn = tasks[source.droppableId]\n    const taskToMove = sourceColumn.find((task) =\u003e task.id === draggableId)\n\n    // Create new state\n    const newTasks = { ...tasks }\n\n    // Remove from source column\n    newTasks[source.droppableId] = sourceColumn.filter((task) =\u003e task.id !== draggableId)\n\n    // Add to destination column\n    newTasks[destination.droppableId] = [\n      ...newTasks[destination.droppableId].slice(0, destination.index),\n      taskToMove,\n      ...newTasks[destination.droppableId].slice(destination.index),\n    ]\n\n    setTasks(newTasks)\n  }\n\n  return (\n    \u003cDragDropContext onDragEnd={handleDragEnd}\u003e\n      \u003cdiv className=\"grid grid-cols-1 gap-4 md:grid-cols-2 lg:grid-cols-4\"\u003e\n        {columns.map((column) =\u003e (\n          \u003cdiv key={column.id} className=\"flex flex-col\"\u003e\n            \u003cdiv className={`rounded-t-md p-3 ${column.color}`}\u003e\n              \u003ch3 className=\"font-medium\"\u003e{column.title}\u003c/h3\u003e\n              \u003cdiv className=\"text-sm text-muted-foreground\"\u003e{tasks[column.id].length} tasks\u003c/div\u003e\n            \u003c/div\u003e\n            \u003cDroppable droppableId={column.id}\u003e\n              {(provided) =\u003e (\n                \u003cdiv\n                  {...provided.droppableProps}\n                  ref={provided.innerRef}\n                  className=\"flex flex-1 flex-col gap-2 rounded-b-md border border-t-0 bg-background p-2\"\n                \u003e\n                  {tasks[column.id].map((task, index) =\u003e (\n                    \u003cDraggable key={task.id} draggableId={task.id} index={index}\u003e\n                      {(provided) =\u003e (\n                        \u003cCard\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                          className=\"cursor-grab\"\n                        \u003e\n                          \u003cCardHeader className=\"p-3 pb-0\"\u003e\n                            \u003cCardTitle className=\"text-sm font-medium\"\u003e{task.title}\u003c/CardTitle\u003e\n                          \u003c/CardHeader\u003e\n                          \u003cCardContent className=\"p-3\"\u003e\n                            \u003cp className=\"text-xs text-muted-foreground\"\u003e{task.description}\u003c/p\u003e\n                            \u003cdiv className=\"mt-2 flex items-center justify-between\"\u003e\n                              \u003cBadge\n                                variant={\n                                  task.priority === \"High\"\n                                    ? \"destructive\"\n                                    : task.priority === \"Medium\"\n                                      ? \"default\"\n                                      : \"outline\"\n                                }\n                                className=\"text-xs\"\n                              \u003e\n                                {task.priority}\n                              \u003c/Badge\u003e\n                              \u003cdiv className=\"flex items-center gap-1\"\u003e\n                                \u003cspan className=\"text-xs text-muted-foreground\"\u003e\n                                  {new Date(task.dueDate).toLocaleDateString()}\n                                \u003c/span\u003e\n                                \u003cAvatar className=\"h-6 w-6\"\u003e\n                                  \u003cAvatarImage src={task.assignee.avatar} alt={task.assignee.name} /\u003e\n                                  \u003cAvatarFallback className=\"text-xs\"\u003e\n                                    {task.assignee.name\n                                      .split(\" \")\n                                      .map((n) =\u003e n[0])\n                                      .join(\"\")}\n                                  \u003c/AvatarFallback\u003e\n                                \u003c/Avatar\u003e\n                              \u003c/div\u003e\n                            \u003c/div\u003e\n                          \u003c/CardContent\u003e\n                        \u003c/Card\u003e\n                      )}\n                    \u003c/Draggable\u003e\n                  ))}\n                  {provided.placeholder}\n                \u003c/div\u003e\n              )}\n            \u003c/Droppable\u003e\n          \u003c/div\u003e\n        ))}\n      \u003c/div\u003e\n    \u003c/DragDropContext\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/tasks/task-filters.tsx\"\n\"use client\"\n\nimport { useState } from \"react\"\nimport { Input } from \"@/components/ui/input\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { Tabs, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\n\nexport function TaskFilters() {\n  const [view, setView] = useState(\"kanban\")\n\n  return (\n    \u003cdiv className=\"flex flex-col gap-4 sm:flex-row sm:items-center sm:justify-between\"\u003e\n      \u003cdiv className=\"flex items-center gap-2\"\u003e\n        \u003cTabs defaultValue=\"kanban\" className=\"w-[400px]\" onValueChange={setView}\u003e\n          \u003cTabsList\u003e\n            \u003cTabsTrigger value=\"kanban\"\u003eKanban\u003c/TabsTrigger\u003e\n            \u003cTabsTrigger value=\"list\"\u003eList\u003c/TabsTrigger\u003e\n            \u003cTabsTrigger value=\"calendar\"\u003eCalendar\u003c/TabsTrigger\u003e\n          \u003c/TabsList\u003e\n        \u003c/Tabs\u003e\n      \u003c/div\u003e\n      \u003cdiv className=\"flex flex-col gap-2 sm:flex-row sm:items-center\"\u003e\n        \u003cdiv className=\"flex items-center gap-2\"\u003e\n          \u003cInput placeholder=\"Search tasks...\" className=\"h-9 w-[150px] sm:w-[180px] lg:w-[250px]\" /\u003e\n          \u003cSelect defaultValue=\"all\"\u003e\n            \u003cSelectTrigger className=\"h-9 w-[130px]\"\u003e\n              \u003cSelectValue placeholder=\"Priority\" /\u003e\n            \u003c/SelectTrigger\u003e\n            \u003cSelectContent\u003e\n              \u003cSelectItem value=\"all\"\u003eAll Priorities\u003c/SelectItem\u003e\n              \u003cSelectItem value=\"high\"\u003eHigh\u003c/SelectItem\u003e\n              \u003cSelectItem value=\"medium\"\u003eMedium\u003c/SelectItem\u003e\n              \u003cSelectItem value=\"low\"\u003eLow\u003c/SelectItem\u003e\n            \u003c/SelectContent\u003e\n          \u003c/Select\u003e\n          \u003cSelect defaultValue=\"all\"\u003e\n            \u003cSelectTrigger className=\"h-9 w-[130px]\"\u003e\n              \u003cSelectValue placeholder=\"Assignee\" /\u003e\n            \u003c/SelectTrigger\u003e\n            \u003cSelectContent\u003e\n              \u003cSelectItem value=\"all\"\u003eAll Assignees\u003c/SelectItem\u003e\n              \u003cSelectItem value=\"emma\"\u003eEmma Wilson\u003c/SelectItem\u003e\n              \u003cSelectItem value=\"jackson\"\u003eJackson Lee\u003c/SelectItem\u003e\n              \u003cSelectItem value=\"sophia\"\u003eSophia Chen\u003c/SelectItem\u003e\n              \u003cSelectItem value=\"liam\"\u003eLiam Johnson\u003c/SelectItem\u003e\n              \u003cSelectItem value=\"olivia\"\u003eOlivia Martinez\u003c/SelectItem\u003e\n            \u003c/SelectContent\u003e\n          \u003c/Select\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/tasks/task-form.tsx\"\n\"use client\"\n\nimport { useState } from \"react\"\nimport { useRouter } from \"next/navigation\"\nimport { Button } from \"@/components/ui/button\"\nimport { Calendar } from \"@/components/ui/calendar\"\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Form, FormControl, FormDescription, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\"\nimport { Input } from \"@/components/ui/input\"\nimport { Popover, PopoverContent, PopoverTrigger } from \"@/components/ui/popover\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { format } from \"date-fns\"\nimport { CalendarIcon } from \"lucide-react\"\nimport { useForm } from \"react-hook-form\"\n\nexport function TaskForm() {\n  const router = useRouter()\n  const [isLoading, setIsLoading] = useState(false)\n\n  const form = useForm({\n    defaultValues: {\n      title: \"\",\n      description: \"\",\n      priority: \"medium\",\n      assignee: \"\",\n      dueDate: new Date(),\n      tags: \"\",\n    },\n  })\n\n  async function onSubmit(data) {\n    setIsLoading(true)\n\n    try {\n      // Here you would normally send the data to your API\n      console.log(\"Form submitted:\", data)\n\n      // Simulate API call\n      await new Promise((resolve) =\u003e setTimeout(resolve, 1000))\n\n      // Redirect to tasks page\n      router.push(\"/tasks\")\n    } catch (error) {\n      console.error(\"Error creating task:\", error)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    \u003cCard\u003e\n      \u003cCardHeader\u003e\n        \u003cCardTitle\u003eCreate New Task\u003c/CardTitle\u003e\n        \u003cCardDescription\u003eAdd a new task and assign it to team members\u003c/CardDescription\u003e\n      \u003c/CardHeader\u003e\n      \u003cForm {...form}\u003e\n        \u003cform onSubmit={form.handleSubmit(onSubmit)}\u003e\n          \u003cCardContent className=\"space-y-4\"\u003e\n            \u003cFormField\n              control={form.control}\n              name=\"title\"\n              render={({ field }) =\u003e (\n                \u003cFormItem\u003e\n                  \u003cFormLabel\u003eTask Title\u003c/FormLabel\u003e\n                  \u003cFormControl\u003e\n                    \u003cInput placeholder=\"Enter task title\" {...field} /\u003e\n                  \u003c/FormControl\u003e\n                  \u003cFormMessage /\u003e\n                \u003c/FormItem\u003e\n              )}\n            /\u003e\n            \u003cFormField\n              control={form.control}\n              name=\"description\"\n              render={({ field }) =\u003e (\n                \u003cFormItem\u003e\n                  \u003cFormLabel\u003eDescription\u003c/FormLabel\u003e\n                  \u003cFormControl\u003e\n                    \u003cTextarea placeholder=\"Enter task description\" className=\"min-h-[100px]\" {...field} /\u003e\n                  \u003c/FormControl\u003e\n                  \u003cFormMessage /\u003e\n                \u003c/FormItem\u003e\n              )}\n            /\u003e\n            \u003cdiv className=\"grid grid-cols-1 gap-4 md:grid-cols-2\"\u003e\n              \u003cFormField\n                control={form.control}\n                name=\"priority\"\n                render={({ field }) =\u003e (\n                  \u003cFormItem\u003e\n                    \u003cFormLabel\u003ePriority\u003c/FormLabel\u003e\n                    \u003cSelect onValueChange={field.onChange} defaultValue={field.value}\u003e\n                      \u003cFormControl\u003e\n                        \u003cSelectTrigger\u003e\n                          \u003cSelectValue placeholder=\"Select priority\" /\u003e\n                        \u003c/SelectTrigger\u003e\n                      \u003c/FormControl\u003e\n                      \u003cSelectContent\u003e\n                        \u003cSelectItem value=\"high\"\u003eHigh\u003c/SelectItem\u003e\n                        \u003cSelectItem value=\"medium\"\u003eMedium\u003c/SelectItem\u003e\n                        \u003cSelectItem value=\"low\"\u003eLow\u003c/SelectItem\u003e\n                      \u003c/SelectContent\u003e\n                    \u003c/Select\u003e\n                    \u003cFormMessage /\u003e\n                  \u003c/FormItem\u003e\n                )}\n              /\u003e\n              \u003cFormField\n                control={form.control}\n                name=\"assignee\"\n                render={({ field }) =\u003e (\n                  \u003cFormItem\u003e\n                    \u003cFormLabel\u003eAssignee\u003c/FormLabel\u003e\n                    \u003cSelect onValueChange={field.onChange} defaultValue={field.value}\u003e\n                      \u003cFormControl\u003e\n                        \u003cSelectTrigger\u003e\n                          \u003cSelectValue placeholder=\"Select team member\" /\u003e\n                        \u003c/SelectTrigger\u003e\n                      \u003c/FormControl\u003e\n                      \u003cSelectContent\u003e\n                        \u003cSelectItem value=\"emma\"\u003eEmma Wilson\u003c/SelectItem\u003e\n                        \u003cSelectItem value=\"jackson\"\u003eJackson Lee\u003c/SelectItem\u003e\n                        \u003cSelectItem value=\"sophia\"\u003eSophia Chen\u003c/SelectItem\u003e\n                        \u003cSelectItem value=\"liam\"\u003eLiam Johnson\u003c/SelectItem\u003e\n                        \u003cSelectItem value=\"olivia\"\u003eOlivia Martinez\u003c/SelectItem\u003e\n                      \u003c/SelectContent\u003e\n                    \u003c/Select\u003e\n                    \u003cFormMessage /\u003e\n                  \u003c/FormItem\u003e\n                )}\n              /\u003e\n            \u003c/div\u003e\n            \u003cdiv className=\"grid grid-cols-1 gap-4 md:grid-cols-2\"\u003e\n              \u003cFormField\n                control={form.control}\n                name=\"dueDate\"\n                render={({ field }) =\u003e (\n                  \u003cFormItem className=\"flex flex-col\"\u003e\n                    \u003cFormLabel\u003eDue Date\u003c/FormLabel\u003e\n                    \u003cPopover\u003e\n                      \u003cPopoverTrigger asChild\u003e\n                        \u003cFormControl\u003e\n                          \u003cButton variant={\"outline\"} className={\"w-full pl-3 text-left font-normal\"}\u003e\n                            {field.value ? format(field.value, \"PPP\") : \u003cspan\u003ePick a date\u003c/span\u003e}\n                            \u003cCalendarIcon className=\"ml-auto h-4 w-4 opacity-50\" /\u003e\n                          \u003c/Button\u003e\n                        \u003c/FormControl\u003e\n                      \u003c/PopoverTrigger\u003e\n                      \u003cPopoverContent className=\"w-auto p-0\" align=\"start\"\u003e\n                        \u003cCalendar mode=\"single\" selected={field.value} onSelect={field.onChange} initialFocus /\u003e\n                      \u003c/PopoverContent\u003e\n                    \u003c/Popover\u003e\n                    \u003cFormMessage /\u003e\n                  \u003c/FormItem\u003e\n                )}\n              /\u003e\n              \u003cFormField\n                control={form.control}\n                name=\"tags\"\n                render={({ field }) =\u003e (\n                  \u003cFormItem\u003e\n                    \u003cFormLabel\u003eTags\u003c/FormLabel\u003e\n                    \u003cFormControl\u003e\n                      \u003cInput placeholder=\"Enter tags separated by commas\" {...field} /\u003e\n                    \u003c/FormControl\u003e\n                    \u003cFormDescription\u003eE.g. frontend, bug, feature\u003c/FormDescription\u003e\n                    \u003cFormMessage /\u003e\n                  \u003c/FormItem\u003e\n                )}\n              /\u003e\n            \u003c/div\u003e\n          \u003c/CardContent\u003e\n          \u003cCardFooter className=\"flex justify-between\"\u003e\n            \u003cButton variant=\"outline\" type=\"button\" onClick={() =\u003e router.back()}\u003e\n              Cancel\n            \u003c/Button\u003e\n            \u003cButton type=\"submit\" disabled={isLoading}\u003e\n              {isLoading ? \"Creating...\" : \"Create Task\"}\n            \u003c/Button\u003e\n          \u003c/CardFooter\u003e\n        \u003c/form\u003e\n      \u003c/Form\u003e\n    \u003c/Card\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/tasks/task-details.tsx\"\n\"use client\"\n\nimport { useState } from \"react\"\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Progress } from \"@/components/ui/progress\"\nimport { Separator } from \"@/components/ui/separator\"\nimport { format } from \"date-fns\"\n\n// Mock task data - in a real app, this would come from an API\nconst taskData = {\n  id: \"TASK-8782\",\n  title: \"Create new landing page\",\n  description:\n    \"Design and implement a new landing page for the product. The page should highlight key features and include a sign-up form for new users. Make sure it's responsive and works well on mobile devices.\",\n  status: \"In Progress\",\n  priority: \"High\",\n  createdAt: \"2023-11-15T10:30:00Z\",\n  dueDate: \"2023-12-15T23:59:59Z\",\n  progress: 65,\n  assignee: {\n    name: \"Emma Wilson\",\n    email: \"emma@example.com\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n  },\n  creator: {\n    name: \"Liam Johnson\",\n    email: \"liam@example.com\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n  },\n  tags: [\"frontend\", \"design\", \"marketing\"],\n  subtasks: [\n    { id: 1, title: \"Design mockups\", completed: true },\n    { id: 2, title: \"Implement HTML/CSS\", completed: true },\n    { id: 3, title: \"Add JavaScript interactions\", completed: false },\n    { id: 4, title: \"Optimize for mobile\", completed: false },\n    { id: 5, title: \"Test across browsers\", completed: false },\n  ],\n}\n\nexport function TaskDetails({ id }: { id: string }) {\n  const [task, setTask] = useState(taskData)\n  const [isEditing, setIsEditing] = useState(false)\n\n  const toggleSubtask = (subtaskId: number) =\u003e {\n    setTask((prevTask) =\u003e ({\n      ...prevTask,\n      subtasks: prevTask.subtasks.map((subtask) =\u003e\n        subtask.id === subtaskId ? { ...subtask, completed: !subtask.completed } : subtask,\n      ),\n      progress: calculateProgress(\n        prevTask.subtasks.map((subtask) =\u003e\n          subtask.id === subtaskId ? { ...subtask, completed: !subtask.completed } : subtask,\n        ),\n      ),\n    }))\n  }\n\n  const calculateProgress = (subtasks) =\u003e {\n    if (subtasks.length === 0) return 0\n    const completedCount = subtasks.filter((subtask) =\u003e subtask.completed).length\n    return Math.round((completedCount / subtasks.length) * 100)\n  }\n\n  return (\n    \u003cCard\u003e\n      \u003cCardHeader\u003e\n        \u003cdiv className=\"flex items-start justify-between\"\u003e\n          \u003cdiv\u003e\n            \u003cCardTitle className=\"text-xl\"\u003e{task.title}\u003c/CardTitle\u003e\n            \u003cCardDescription\u003e\n              {task.id} · Created on {format(new Date(task.createdAt), \"MMM d, yyyy\")}\n            \u003c/CardDescription\u003e\n          \u003c/div\u003e\n          \u003cdiv className=\"flex items-center gap-2\"\u003e\n            \u003cButton variant=\"outline\" size=\"sm\" onClick={() =\u003e setIsEditing(true)}\u003e\n              Edit\n            \u003c/Button\u003e\n            \u003cButton variant=\"outline\" size=\"sm\"\u003e\n              Delete\n            \u003c/Button\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n        \u003cdiv className=\"mt-2 flex flex-wrap gap-2\"\u003e\n          \u003cBadge\n            variant={\n              task.status === \"Completed\"\n                ? \"success\"\n                : task.status === \"In Progress\"\n                  ? \"default\"\n                  : task.status === \"In Review\"\n                    ? \"warning\"\n                    : \"secondary\"\n            }\n          \u003e\n            {task.status}\n          \u003c/Badge\u003e\n          \u003cBadge\n            variant={task.priority === \"High\" ? \"destructive\" : task.priority === \"Medium\" ? \"default\" : \"outline\"}\n          \u003e\n            {task.priority}\n          \u003c/Badge\u003e\n          {task.tags.map((tag) =\u003e (\n            \u003cBadge key={tag} variant=\"outline\"\u003e\n              {tag}\n            \u003c/Badge\u003e\n          ))}\n        \u003c/div\u003e\n      \u003c/CardHeader\u003e\n      \u003cCardContent className=\"space-y-4\"\u003e\n        \u003cdiv\u003e\n          \u003ch3 className=\"mb-2 font-medium\"\u003eDescription\u003c/h3\u003e\n          \u003cp className=\"text-sm text-muted-foreground\"\u003e{task.description}\u003c/p\u003e\n        \u003c/div\u003e\n\n        \u003cdiv\u003e\n          \u003cdiv className=\"mb-2 flex items-center justify-between\"\u003e\n            \u003ch3 className=\"font-medium\"\u003eProgress\u003c/h3\u003e\n            \u003cspan className=\"text-sm font-medium\"\u003e{task.progress}%\u003c/span\u003e\n          \u003c/div\u003e\n          \u003cProgress value={task.progress} className=\"h-2\" /\u003e\n        \u003c/div\u003e\n\n        \u003cdiv className=\"grid gap-4 md:grid-cols-2\"\u003e\n          \u003cdiv\u003e\n            \u003ch3 className=\"mb-2 font-medium\"\u003eAssignee\u003c/h3\u003e\n            \u003cdiv className=\"flex items-center gap-2\"\u003e\n              \u003cAvatar\u003e\n                \u003cAvatarImage src={task.assignee.avatar} alt={task.assignee.name} /\u003e\n                \u003cAvatarFallback\u003e\n                  {task.assignee.name\n                    .split(\" \")\n                    .map((n) =\u003e n[0])\n                    .join(\"\")}\n                \u003c/AvatarFallback\u003e\n              \u003c/Avatar\u003e\n              \u003cdiv\u003e\n                \u003cp className=\"text-sm font-medium\"\u003e{task.assignee.name}\u003c/p\u003e\n                \u003cp className=\"text-xs text-muted-foreground\"\u003e{task.assignee.email}\u003c/p\u003e\n              \u003c/div\u003e\n            \u003c/div\u003e\n          \u003c/div\u003e\n\n          \u003cdiv\u003e\n            \u003ch3 className=\"mb-2 font-medium\"\u003eDue Date\u003c/h3\u003e\n            \u003cp className=\"text-sm\"\u003e{format(new Date(task.dueDate), \"MMMM d, yyyy\")}\u003c/p\u003e\n            \u003cp className=\"text-xs text-muted-foreground\"\u003e\n              {new Date(task.dueDate) \u003c new Date()\n                ? \"Overdue\"\n                : `${Math.ceil(\n                    (new Date(task.dueDate).getTime() - new Date().getTime()) / (1000 * 60 * 60 * 24),\n                  )} days remaining`}\n            \u003c/p\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n\n        \u003cSeparator /\u003e\n\n        \u003cdiv\u003e\n          \u003ch3 className=\"mb-2 font-medium\"\u003eSubtasks\u003c/h3\u003e\n          \u003cdiv className=\"space-y-2\"\u003e\n            {task.subtasks.map((subtask) =\u003e (\n              \u003cdiv key={subtask.id} className=\"flex items-center gap-2 rounded-md border p-2\"\u003e\n                \u003cinput\n                  type=\"checkbox\"\n                  checked={subtask.completed}\n                  onChange={() =\u003e toggleSubtask(subtask.id)}\n                  className=\"h-4 w-4 rounded border-gray-300\"\n                /\u003e\n                \u003cspan className={`text-sm ${subtask.completed ? \"text-muted-foreground line-through\" : \"\"}`}\u003e\n                  {subtask.title}\n                \u003c/span\u003e\n              \u003c/div\u003e\n            ))}\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/CardContent\u003e\n      \u003cCardFooter className=\"flex justify-between\"\u003e\n        \u003cButton variant=\"outline\"\u003eBack to Tasks\u003c/Button\u003e\n        \u003cButton\u003eUpdate Status\u003c/Button\u003e\n      \u003c/CardFooter\u003e\n    \u003c/Card\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/tasks/task-comments.tsx\"\n\"use client\"\n\nimport { useState } from \"react\"\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { formatDistanceToNow } from \"date-fns\"\n\n// Mock comments data\nconst initialComments = [\n  {\n    id: 1,\n    user: {\n      name: \"Emma Wilson\",\n      avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    },\n    content: \"I've started working on the design mockups. Will share them by tomorrow.\",\n    timestamp: new Date(Date.now() - 1000 * 60 * 60 * 3), // 3 hours ago\n  },\n  {\n    id: 2,\n    user: {\n      name: \"Liam Johnson\",\n      avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    },\n    content: \"Looks good! Make sure to follow the brand guidelines for colors and typography.\",\n    timestamp: new Date(Date.now() - 1000 * 60 * 60 * 2), // 2 hours ago\n  },\n  {\n    id: 3,\n    user: {\n      name: \"Sophia Chen\",\n      avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    },\n    content: \"I can help with the JavaScript interactions once the HTML/CSS is ready.\",\n    timestamp: new Date(Date.now() - 1000 * 60 * 30), // 30 minutes ago\n  },\n]\n\nexport function TaskComments({ id }: { id: string }) {\n  const [comments, setComments] = useState(initialComments)\n  const [newComment, setNewComment] = useState(\"\")\n  const [isSubmitting, setIsSubmitting] = useState(false)\n\n  const handleSubmitComment = () =\u003e {\n    if (!newComment.trim()) return\n\n    setIsSubmitting(true)\n\n    // Simulate API call\n    setTimeout(() =\u003e {\n      const comment = {\n        id: comments.length + 1,\n        user: {\n          name: \"Current User\", // In a real app, this would be the logged-in user\n          avatar: \"/placeholder.svg?height=40\u0026width=40\",\n        },\n        content: newComment,\n        timestamp: new Date(),\n      }\n\n      setComments([...comments, comment])\n      setNewComment(\"\")\n      setIsSubmitting(false)\n    }, 500)\n  }\n\n  return (\n    \u003cCard\u003e\n      \u003cCardHeader\u003e\n        \u003cCardTitle className=\"text-lg\"\u003eComments\u003c/CardTitle\u003e\n      \u003c/CardHeader\u003e\n      \u003cCardContent className=\"space-y-4\"\u003e\n        {comments.length === 0 ? (\n          \u003cp className=\"text-center text-sm text-muted-foreground\"\u003eNo comments yet. Be the first to comment!\u003c/p\u003e\n        ) : (\n          \u003cdiv className=\"space-y-4\"\u003e\n            {comments.map((comment) =\u003e (\n              \u003cdiv key={comment.id} className=\"flex gap-3\"\u003e\n                \u003cAvatar className=\"h-8 w-8\"\u003e\n                  \u003cAvatarImage src={comment.user.avatar} alt={comment.user.name} /\u003e\n                  \u003cAvatarFallback\u003e\n                    {comment.user.name\n                      .split(\" \")\n                      .map((n) =\u003e n[0])\n                      .join(\"\")}\n                  \u003c/AvatarFallback\u003e\n                \u003c/Avatar\u003e\n                \u003cdiv className=\"flex-1 space-y-1\"\u003e\n                  \u003cdiv className=\"flex items-center justify-between\"\u003e\n                    \u003cp className=\"text-sm font-medium\"\u003e{comment.user.name}\u003c/p\u003e\n                    \u003cp className=\"text-xs text-muted-foreground\"\u003e\n                      {formatDistanceToNow(comment.timestamp, { addSuffix: true })}\n                    \u003c/p\u003e\n                  \u003c/div\u003e\n                  \u003cp className=\"text-sm\"\u003e{comment.content}\u003c/p\u003e\n                \u003c/div\u003e\n              \u003c/div\u003e\n            ))}\n          \u003c/div\u003e\n        )}\n      \u003c/CardContent\u003e\n      \u003cCardFooter\u003e\n        \u003cdiv className=\"flex w-full flex-col space-y-2\"\u003e\n          \u003cTextarea\n            placeholder=\"Add a comment...\"\n            value={newComment}\n            onChange={(e) =\u003e setNewComment(e.target.value)}\n            className=\"min-h-[80px] resize-none\"\n          /\u003e\n          \u003cdiv className=\"flex justify-end\"\u003e\n            \u003cButton onClick={handleSubmitComment} disabled={!newComment.trim() || isSubmitting}\u003e\n              {isSubmitting ? \"Posting...\" : \"Post Comment\"}\n            \u003c/Button\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/CardFooter\u003e\n    \u003c/Card\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/tasks/task-attachments.tsx\"\n\"use client\"\n\nimport { useState } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { formatBytes } from \"@/lib/utils\"\nimport { FileIcon, ImageIcon, PaperclipIcon, TrashIcon, UploadIcon } from \"lucide-react\"\n\n// Mock attachments data\nconst initialAttachments = [\n  {\n    id: 1,\n    name: \"landing-page-mockup.png\",\n    type: \"image/png\",\n    size: 1200000, // 1.2 MB\n    url: \"/placeholder.svg?height=100\u0026width=100\",\n    uploadedAt: new Date(Date.now() - 1000 * 60 * 60 * 24), // 1 day ago\n  },\n  {\n    id: 2,\n    name: \"requirements.pdf\",\n    type: \"application/pdf\",\n    size: 500000, // 500 KB\n    url: \"#\",\n    uploadedAt: new Date(Date.now() - 1000 * 60 * 60 * 48), // 2 days ago\n  },\n  {\n    id: 3,\n    name: \"brand-guidelines.docx\",\n    type: \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n    size: 350000, // 350 KB\n    url: \"#\",\n    uploadedAt: new Date(Date.now() - 1000 * 60 * 60 * 72), // 3 days ago\n  },\n]\n\nexport function TaskAttachments({ id }: { id: string }) {\n  const [attachments, setAttachments] = useState(initialAttachments)\n  const [isUploading, setIsUploading] = useState(false)\n\n  const handleFileUpload = (event) =\u003e {\n    const files = event.target.files\n    if (!files || files.length === 0) return\n\n    setIsUploading(true)\n\n    // Simulate API call for file upload\n    setTimeout(() =\u003e {\n      const newAttachments = Array.from(files).map((file, index) =\u003e ({\n        id: attachments.length + index + 1,\n        name: file.name,\n        type: file.type,\n        size: file.size,\n        url: file.type.startsWith(\"image/\") ? URL.createObjectURL(file) : \"#\",\n        uploadedAt: new Date(),\n      }))\n\n      setAttachments([...attachments, ...newAttachments])\n      setIsUploading(false)\n    }, 1000)\n  }\n\n  const handleDeleteAttachment = (id) =\u003e {\n    setAttachments(attachments.filter((attachment) =\u003e attachment.id !== id))\n  }\n\n  const getFileIcon = (type) =\u003e {\n    if (type.startsWith(\"image/\")) {\n      return \u003cImageIcon className=\"h-6 w-6 text-blue-500\" /\u003e\n    } else if (type === \"application/pdf\" || type.includes(\"document\") || type.includes(\"text\")) {\n      return \u003cFileIcon className=\"h-6 w-6 text-red-500\" /\u003e\n    } else {\n      return \u003cPaperclipIcon className=\"h-6 w-6 text-gray-500\" /\u003e\n    }\n  }\n\n  return (\n    \u003cCard\u003e\n      \u003cCardHeader\u003e\n        \u003cCardTitle className=\"text-lg\"\u003eAttachments\u003c/CardTitle\u003e\n      \u003c/CardHeader\u003e\n      \u003cCardContent className=\"space-y-4\"\u003e\n        {attachments.length === 0 ? (\n          \u003cp className=\"text-center text-sm text-muted-foreground\"\u003e\n            No attachments yet. Upload files to share with the team.\n          \u003c/p\u003e\n        ) : (\n          \u003cdiv className=\"space-y-2\"\u003e\n            {attachments.map((attachment) =\u003e (\n              \u003cdiv key={attachment.id} className=\"flex items-center justify-between rounded-md border p-2\"\u003e\n                \u003cdiv className=\"flex items-center gap-2\"\u003e\n                  {getFileIcon(attachment.type)}\n                  \u003cdiv\u003e\n                    \u003cp className=\"text-sm font-medium\"\u003e{attachment.name}\u003c/p\u003e\n                    \u003cp className=\"text-xs text-muted-foreground\"\u003e\n                      {formatBytes(attachment.size)} · {attachment.uploadedAt.toLocaleDateString()}\n                    \u003c/p\u003e\n                  \u003c/div\u003e\n                \u003c/div\u003e\n                \u003cdiv className=\"flex items-center gap-2\"\u003e\n                  \u003cButton variant=\"ghost\" size=\"sm\" asChild\u003e\n                    \u003ca href={attachment.url} target=\"_blank\" rel=\"noopener noreferrer\"\u003e\n                      View\n                    \u003c/a\u003e\n                  \u003c/Button\u003e\n                  \u003cButton variant=\"ghost\" size=\"sm\" onClick={() =\u003e handleDeleteAttachment(attachment.id)}\u003e\n                    \u003cTrashIcon className=\"h-4 w-4 text-red-500\" /\u003e\n                  \u003c/Button\u003e\n                \u003c/div\u003e\n              \u003c/div\u003e\n            ))}\n          \u003c/div\u003e\n        )}\n      \u003c/CardContent\u003e\n      \u003cCardFooter\u003e\n        \u003cdiv className=\"w-full\"\u003e\n          \u003clabel htmlFor=\"file-upload\"\u003e\n            \u003cdiv className=\"flex cursor-pointer items-center justify-center gap-2 rounded-md border border-dashed p-4 hover:bg-muted\"\u003e\n              \u003cUploadIcon className=\"h-5 w-5\" /\u003e\n              \u003cspan className=\"text-sm font-medium\"\u003e{isUploading ? \"Uploading...\" : \"Upload Files\"}\u003c/span\u003e\n              \u003cinput\n                id=\"file-upload\"\n                type=\"file\"\n                multiple\n                className=\"hidden\"\n                onChange={handleFileUpload}\n                disabled={isUploading}\n              /\u003e\n            \u003c/div\u003e\n          \u003c/label\u003e\n        \u003c/div\u003e\n      \u003c/CardFooter\u003e\n    \u003c/Card\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/reports/task-completion-chart.tsx\"\n\"use client\"\n\nimport { Bar, BarChart, CartesianGrid, Legend, ResponsiveContainer, Tooltip, XAxis, YAxis } from \"@/components/ui/chart\"\n\n// Mock data for task completion\nconst data = [\n  {\n    name: \"Week 1\",\n    completed: 12,\n    overdue: 2,\n  },\n  {\n    name: \"Week 2\",\n    completed: 18,\n    overdue: 1,\n  },\n  {\n    name: \"Week 3\",\n    completed: 15,\n    overdue: 3,\n  },\n  {\n    name: \"Week 4\",\n    completed: 20,\n    overdue: 0,\n  },\n  {\n    name: \"Week 5\",\n    completed: 16,\n    overdue: 2,\n  },\n  {\n    name: \"Week 6\",\n    completed: 22,\n    overdue: 1,\n  },\n]\n\nexport function TaskCompletionChart() {\n  return (\n    \u003cResponsiveContainer width=\"100%\" height=\"100%\"\u003e\n      \u003cBarChart\n        data={data}\n        margin={{\n          top: 20,\n          right: 30,\n          left: 20,\n          bottom: 5,\n        }}\n      \u003e\n        \u003cCartesianGrid strokeDasharray=\"3 3\" /\u003e\n        \u003cXAxis dataKey=\"name\" /\u003e\n        \u003cYAxis /\u003e\n        \u003cTooltip /\u003e\n        \u003cLegend /\u003e\n        \u003cBar dataKey=\"completed\" fill=\"#4ade80\" name=\"Completed Tasks\" /\u003e\n        \u003cBar dataKey=\"overdue\" fill=\"#f87171\" name=\"Overdue Tasks\" /\u003e\n      \u003c/BarChart\u003e\n    \u003c/ResponsiveContainer\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/reports/team-performance-chart.tsx\"\n\"use client\"\n\nimport { Bar, BarChart, CartesianGrid, Legend, ResponsiveContainer, Tooltip, XAxis, YAxis } from \"@/components/ui/chart\"\n\n// Mock data for team performance\nconst data = [\n  {\n    name: \"Emma\",\n    completed: 15,\n    inProgress: 3,\n  },\n  {\n    name: \"Jackson\",\n    completed: 20,\n    inProgress: 5,\n  },\n  {\n    name: \"Sophia\",\n    completed: 18,\n    inProgress: 2,\n  },\n  {\n    name: \"Liam\",\n    completed: 12,\n    inProgress: 4,\n  },\n  {\n    name: \"Olivia\",\n    completed: 16,\n    inProgress: 3,\n  },\n]\n\nexport function TeamPerformanceChart() {\n  return (\n    \u003cResponsiveContainer width=\"100%\" height=\"100%\"\u003e\n      \u003cBarChart\n        data={data}\n        layout=\"vertical\"\n        margin={{\n          top: 20,\n          right: 30,\n          left: 60,\n          bottom: 5,\n        }}\n      \u003e\n        \u003cCartesianGrid strokeDasharray=\"3 3\" /\u003e\n        \u003cXAxis type=\"number\" /\u003e\n        \u003cYAxis dataKey=\"name\" type=\"category\" /\u003e\n        \u003cTooltip /\u003e\n        \u003cLegend /\u003e\n        \u003cBar dataKey=\"completed\" stackId=\"a\" fill=\"#8884d8\" name=\"Completed\" /\u003e\n        \u003cBar dataKey=\"inProgress\" stackId=\"a\" fill=\"#82ca9d\" name=\"In Progress\" /\u003e\n      \u003c/BarChart\u003e\n    \u003c/ResponsiveContainer\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/reports/priority-distribution-chart.tsx\"\n\"use client\"\n\nimport { Cell, Legend, Pie, PieChart, ResponsiveContainer, Tooltip } from \"@/components/ui/chart\"\n\n// Mock data for priority distribution\nconst data = [\n  { name: \"High\", value: 12, color: \"#ef4444\" },\n  { name: \"Medium\", value: 24, color: \"#f59e0b\" },\n  { name: \"Low\", value: 18, color: \"#10b981\" },\n]\n\nexport function PriorityDistributionChart() {\n  return (\n    \u003cResponsiveContainer width=\"100%\" height=\"100%\"\u003e\n      \u003cPieChart\u003e\n        \u003cPie\n          data={data}\n          cx=\"50%\"\n          cy=\"50%\"\n          labelLine={false}\n          outerRadius={80}\n          fill=\"#8884d8\"\n          dataKey=\"value\"\n          label={({ name, percent }) =\u003e `${name} ${(percent * 100).toFixed(0)}%`}\n        \u003e\n          {data.map((entry, index) =\u003e (\n            \u003cCell key={`cell-${index}`} fill={entry.color} /\u003e\n          ))}\n        \u003c/Pie\u003e\n        \u003cTooltip /\u003e\n        \u003cLegend /\u003e\n      \u003c/PieChart\u003e\n    \u003c/ResponsiveContainer\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/settings/profile-settings.tsx\"\n\"use client\"\n\nimport { useState } from \"react\"\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Form, FormControl, FormDescription, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\"\nimport { Input } from \"@/components/ui/input\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { useForm } from \"react-hook-form\"\n\nexport function ProfileSettings({ user }) {\n  const [isLoading, setIsLoading] = useState(false)\n\n  const form = useForm({\n    defaultValues: {\n      name: user.name || \"\",\n      email: user.email || \"\",\n      bio: user.bio || \"\",\n      jobTitle: user.jobTitle || \"\",\n      company: user.company || \"\",\n    },\n  })\n\n  async function onSubmit(data) {\n    setIsLoading(true)\n\n    try {\n      // Here you would normally send the data to your API\n      console.log(\"Profile updated:\", data)\n\n      // Simulate API call\n      await new Promise((resolve) =\u003e setTimeout(resolve, 1000))\n    } catch (error) {\n      console.error(\"Error updating profile:\", error)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    \u003cCard\u003e\n      \u003cCardHeader\u003e\n        \u003cCardTitle\u003eProfile Information\u003c/CardTitle\u003e\n        \u003cCardDescription\u003eUpdate your profile information and how others see you on the platform\u003c/CardDescription\u003e\n      \u003c/CardHeader\u003e\n      \u003cForm {...form}\u003e\n        \u003cform onSubmit={form.handleSubmit(onSubmit)}\u003e\n          \u003cCardContent className=\"space-y-6\"\u003e\n            \u003cdiv className=\"flex items-center gap-4\"\u003e\n              \u003cAvatar className=\"h-16 w-16\"\u003e\n                \u003cAvatarImage src={user.avatar || \"/placeholder.svg?height=64\u0026width=64\"} alt={user.name} /\u003e\n                \u003cAvatarFallback\u003e\n                  {user.name\n                    ? user.name\n                        .split(\" \")\n                        .map((n) =\u003e n[0])\n                        .join(\"\")\n                    : \"U\"}\n                \u003c/AvatarFallback\u003e\n              \u003c/Avatar\u003e\n              \u003cdiv\u003e\n                \u003cButton variant=\"outline\" size=\"sm\"\u003e\n                  Change Avatar\n                \u003c/Button\u003e\n                \u003cp className=\"mt-1 text-xs text-muted-foreground\"\u003eJPG, GIF or PNG. Max size of 2MB.\u003c/p\u003e\n              \u003c/div\u003e\n            \u003c/div\u003e\n\n            \u003cdiv className=\"grid gap-4 md:grid-cols-2\"\u003e\n              \u003cFormField\n                control={form.control}\n                name=\"name\"\n                render={({ field }) =\u003e (\n                  \u003cFormItem\u003e\n                    \u003cFormLabel\u003eFull Name\u003c/FormLabel\u003e\n                    \u003cFormControl\u003e\n                      \u003cInput placeholder=\"Your name\" {...field} /\u003e\n                    \u003c/FormControl\u003e\n                    \u003cFormMessage /\u003e\n                  \u003c/FormItem\u003e\n                )}\n              /\u003e\n              \u003cFormField\n                control={form.control}\n                name=\"email\"\n                render={({ field }) =\u003e (\n                  \u003cFormItem\u003e\n                    \u003cFormLabel\u003eEmail\u003c/FormLabel\u003e\n                    \u003cFormControl\u003e\n                      \u003cInput placeholder=\"Your email\" type=\"email\" {...field} /\u003e\n                    \u003c/FormControl\u003e\n                    \u003cFormMessage /\u003e\n                  \u003c/FormItem\u003e\n                )}\n              /\u003e\n            \u003c/div\u003e\n\n            \u003cFormField\n              control={form.control}\n              name=\"bio\"\n              render={({ field }) =\u003e (\n                \u003cFormItem\u003e\n                  \u003cFormLabel\u003eBio\u003c/FormLabel\u003e\n                  \u003cFormControl\u003e\n                    \u003cTextarea placeholder=\"Tell us a little about yourself\" className=\"min-h-[100px]\" {...field} /\u003e\n                  \u003c/FormControl\u003e\n                  \u003cFormDescription\u003eBrief description for your profile. URLs are hyperlinked.\u003c/FormDescription\u003e\n                  \u003cFormMessage /\u003e\n                \u003c/FormItem\u003e\n              )}\n            /\u003e\n\n            \u003cdiv className=\"grid gap-4 md:grid-cols-2\"\u003e\n              \u003cFormField\n                control={form.control}\n                name=\"jobTitle\"\n                render={({ field }) =\u003e (\n                  \u003cFormItem\u003e\n                    \u003cFormLabel\u003eJob Title\u003c/FormLabel\u003e\n                    \u003cFormControl\u003e\n                      \u003cInput placeholder=\"Your job title\" {...field} /\u003e\n                    \u003c/FormControl\u003e\n                    \u003cFormMessage /\u003e\n                  \u003c/FormItem\u003e\n                )}\n              /\u003e\n              \u003cFormField\n                control={form.control}\n                name=\"company\"\n                render={({ field }) =\u003e (\n                  \u003cFormItem\u003e\n                    \u003cFormLabel\u003eCompany\u003c/FormLabel\u003e\n                    \u003cFormControl\u003e\n                      \u003cInput placeholder=\"Your company\" {...field} /\u003e\n                    \u003c/FormControl\u003e\n                    \u003cFormMessage /\u003e\n                  \u003c/FormItem\u003e\n                )}\n              /\u003e\n            \u003c/div\u003e\n          \u003c/CardContent\u003e\n          \u003cCardFooter\u003e\n            \u003cButton type=\"submit\" disabled={isLoading}\u003e\n              {isLoading ? \"Saving...\" : \"Save Changes\"}\n            \u003c/Button\u003e\n          \u003c/CardFooter\u003e\n        \u003c/form\u003e\n      \u003c/Form\u003e\n    \u003c/Card\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/settings/notification-settings.tsx\"\n\"use client\"\n\nimport { useState } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Label } from \"@/components/ui/label\"\nimport { Switch } from \"@/components/ui/switch\"\n\nexport function NotificationSettings({ user }) {\n  const [isLoading, setIsLoading] = useState(false)\n  const [settings, setSettings] = useState({\n    emailNotifications: true,\n    pushNotifications: true,\n    taskAssigned: true,\n    taskUpdated: true,\n    taskCompleted: true,\n    commentAdded: true,\n    deadlineReminder: true,\n    weeklyDigest: false,\n  })\n\n  const handleToggle = (key) =\u003e {\n    setSettings({\n      ...settings,\n      [key]: !settings[key],\n    })\n  }\n\n  const handleSave = async () =\u003e {\n    setIsLoading(true)\n\n    try {\n      // Here you would normally send the data to your API\n      console.log(\"Notification settings updated:\", settings)\n\n      // Simulate API call\n      await new Promise((resolve) =\u003e setTimeout(resolve, 1000))\n    } catch (error) {\n      console.error(\"Error updating notification settings:\", error)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    \u003cCard\u003e\n      \u003cCardHeader\u003e\n        \u003cCardTitle\u003eNotification Preferences\u003c/CardTitle\u003e\n        \u003cCardDescription\u003eChoose how and when you want to be notified\u003c/CardDescription\u003e\n      \u003c/CardHeader\u003e\n      \u003cCardContent className=\"space-y-6\"\u003e\n        \u003cdiv className=\"space-y-4\"\u003e\n          \u003ch3 className=\"text-sm font-medium\"\u003eNotification Channels\u003c/h3\u003e\n          \u003cdiv className=\"flex items-center justify-between\"\u003e\n            \u003cdiv className=\"space-y-0.5\"\u003e\n              \u003cLabel htmlFor=\"emailNotifications\"\u003eEmail Notifications\u003c/Label\u003e\n              \u003cp className=\"text-xs text-muted-foreground\"\u003eReceive notifications via email\u003c/p\u003e\n            \u003c/div\u003e\n            \u003cSwitch\n              id=\"emailNotifications\"\n              checked={settings.emailNotifications}\n              onCheckedChange={() =\u003e handleToggle(\"emailNotifications\")}\n            /\u003e\n          \u003c/div\u003e\n          \u003cdiv className=\"flex items-center justify-between\"\u003e\n            \u003cdiv className=\"space-y-0.5\"\u003e\n              \u003cLabel htmlFor=\"pushNotifications\"\u003ePush Notifications\u003c/Label\u003e\n              \u003cp className=\"text-xs text-muted-foreground\"\u003eReceive notifications in your browser\u003c/p\u003e\n            \u003c/div\u003e\n            \u003cSwitch\n              id=\"pushNotifications\"\n              checked={settings.pushNotifications}\n              onCheckedChange={() =\u003e handleToggle(\"pushNotifications\")}\n            /\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n\n        \u003cdiv className=\"space-y-4\"\u003e\n          \u003ch3 className=\"text-sm font-medium\"\u003eTask Notifications\u003c/h3\u003e\n          \u003cdiv className=\"flex items-center justify-between\"\u003e\n            \u003cdiv className=\"space-y-0.5\"\u003e\n              \u003cLabel htmlFor=\"taskAssigned\"\u003eTask Assigned\u003c/Label\u003e\n              \u003cp className=\"text-xs text-muted-foreground\"\u003eWhen a task is assigned to you\u003c/p\u003e\n            \u003c/div\u003e\n            \u003cSwitch\n              id=\"taskAssigned\"\n              checked={settings.taskAssigned}\n              onCheckedChange={() =\u003e handleToggle(\"taskAssigned\")}\n            /\u003e\n          \u003c/div\u003e\n          \u003cdiv className=\"flex items-center justify-between\"\u003e\n            \u003cdiv className=\"space-y-0.5\"\u003e\n              \u003cLabel htmlFor=\"taskUpdated\"\u003eTask Updated\u003c/Label\u003e\n              \u003cp className=\"text-xs text-muted-foreground\"\u003eWhen a task you're assigned to is updated\u003c/p\u003e\n            \u003c/div\u003e\n            \u003cSwitch\n              id=\"taskUpdated\"\n              checked={settings.taskUpdated}\n              onCheckedChange={() =\u003e handleToggle(\"taskUpdated\")}\n            /\u003e\n          \u003c/div\u003e\n          \u003cdiv className=\"flex items-center justify-between\"\u003e\n            \u003cdiv className=\"space-y-0.5\"\u003e\n              \u003cLabel htmlFor=\"taskCompleted\"\u003eTask Completed\u003c/Label\u003e\n              \u003cp className=\"text-xs text-muted-foreground\"\u003eWhen a task you're assigned to is marked as completed\u003c/p\u003e\n            \u003c/div\u003e\n            \u003cSwitch\n              id=\"taskCompleted\"\n              checked={settings.taskCompleted}\n              onCheckedChange={() =\u003e handleToggle(\"taskCompleted\")}\n            /\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n\n        \u003cdiv className=\"space-y-4\"\u003e\n          \u003ch3 className=\"text-sm font-medium\"\u003eOther Notifications\u003c/h3\u003e\n          \u003cdiv className=\"flex items-center justify-between\"\u003e\n            \u003cdiv className=\"space-y-0.5\"\u003e\n              \u003cLabel htmlFor=\"commentAdded\"\u003eComment Added\u003c/Label\u003e\n              \u003cp className=\"text-xs text-muted-foreground\"\u003eWhen someone comments on a task you're involved with\u003c/p\u003e\n            \u003c/div\u003e\n            \u003cSwitch\n              id=\"commentAdded\"\n              checked={settings.commentAdded}\n              onCheckedChange={() =\u003e handleToggle(\"commentAdded\")}\n            /\u003e\n          \u003c/div\u003e\n          \u003cdiv className=\"flex items-center justify-between\"\u003e\n            \u003cdiv className=\"space-y-0.5\"\u003e\n              \u003cLabel htmlFor=\"deadlineReminder\"\u003eDeadline Reminders\u003c/Label\u003e\n              \u003cp className=\"text-xs text-muted-foreground\"\u003eReceive reminders before task deadlines\u003c/p\u003e\n            \u003c/div\u003e\n            \u003cSwitch\n              id=\"deadlineReminder\"\n              checked={settings.deadlineReminder}\n              onCheckedChange={() =\u003e handleToggle(\"deadlineReminder\")}\n            /\u003e\n          \u003c/div\u003e\n          \u003cdiv className=\"flex items-center justify-between\"\u003e\n            \u003cdiv className=\"space-y-0.5\"\u003e\n              \u003cLabel htmlFor=\"weeklyDigest\"\u003eWeekly Digest\u003c/Label\u003e\n              \u003cp className=\"text-xs text-muted-foreground\"\u003eReceive a weekly summary of your tasks and progress\u003c/p\u003e\n            \u003c/div\u003e\n            \u003cSwitch\n              id=\"weeklyDigest\"\n              checked={settings.weeklyDigest}\n              onCheckedChange={() =\u003e handleToggle(\"weeklyDigest\")}\n            /\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/CardContent\u003e\n      \u003cCardFooter\u003e\n        \u003cButton onClick={handleSave} disabled={isLoading}\u003e\n          {isLoading ? \"Saving...\" : \"Save Preferences\"}\n        \u003c/Button\u003e\n      \u003c/CardFooter\u003e\n    \u003c/Card\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/settings/security-settings.tsx\"\n\"use client\"\n\nimport { useState } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Form, FormControl, FormDescription, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { Switch } from \"@/components/ui/switch\"\nimport { useForm } from \"react-hook-form\"\n\nexport function SecuritySettings({ user }) {\n  const [isLoading, setIsLoading] = useState(false)\n  const [twoFactorEnabled, setTwoFactorEnabled] = useState(false)\n\n  const form = useForm({\n    defaultValues: {\n      currentPassword: \"\",\n      newPassword: \"\",\n      confirmPassword: \"\",\n    },\n  })\n\n  async function onSubmit(data) {\n    setIsLoading(true)\n\n    try {\n      // Here you would normally send the data to your API\n      console.log(\"Password updated:\", data)\n\n      // Simulate API call\n      await new Promise((resolve) =\u003e setTimeout(resolve, 1000))\n\n      // Reset form\n      form.reset()\n    } catch (error) {\n      console.error(\"Error updating password:\", error)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const handleToggleTwoFactor = async () =\u003e {\n    setIsLoading(true)\n\n    try {\n      // Here you would normally send the data to your API\n      console.log(\"Two-factor authentication toggled:\", !twoFactorEnabled)\n\n      // Simulate API call\n      await new Promise((resolve) =\u003e setTimeout(resolve, 1000))\n\n      setTwoFactorEnabled(!twoFactorEnabled)\n    } catch (error) {\n      console.error(\"Error toggling two-factor authentication:\", error)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    \u003cCard\u003e\n      \u003cCardHeader\u003e\n        \u003cCardTitle\u003eSecurity Settings\u003c/CardTitle\u003e\n        \u003cCardDescription\u003eManage your password and account security\u003c/CardDescription\u003e\n      \u003c/CardHeader\u003e\n      \u003cCardContent className=\"space-y-6\"\u003e\n        \u003cForm {...form}\u003e\n          \u003cform onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\"\u003e\n            \u003cFormField\n              control={form.control}\n              name=\"currentPassword\"\n              render={({ field }) =\u003e (\n                \u003cFormItem\u003e\n                  \u003cFormLabel\u003eCurrent Password\u003c/FormLabel\u003e\n                  \u003cFormControl\u003e\n                    \u003cInput type=\"password\" {...field} /\u003e\n                  \u003c/FormControl\u003e\n                  \u003cFormMessage /\u003e\n                \u003c/FormItem\u003e\n              )}\n            /\u003e\n            \u003cFormField\n              control={form.control}\n              name=\"newPassword\"\n              render={({ field }) =\u003e (\n                \u003cFormItem\u003e\n                  \u003cFormLabel\u003eNew Password\u003c/FormLabel\u003e\n                  \u003cFormControl\u003e\n                    \u003cInput type=\"password\" {...field} /\u003e\n                  \u003c/FormControl\u003e\n                  \u003cFormDescription\u003e\n                    Password must be at least 8 characters long and include a mix of letters, numbers, and symbols.\n                  \u003c/FormDescription\u003e\n                  \u003cFormMessage /\u003e\n                \u003c/FormItem\u003e\n              )}\n            /\u003e\n            \u003cFormField\n              control={form.control}\n              name=\"confirmPassword\"\n              render={({ field }) =\u003e (\n                \u003cFormItem\u003e\n                  \u003cFormLabel\u003eConfirm New Password\u003c/FormLabel\u003e\n                  \u003cFormControl\u003e\n                    \u003cInput type=\"password\" {...field} /\u003e\n                  \u003c/FormControl\u003e\n                  \u003cFormMessage /\u003e\n                \u003c/FormItem\u003e\n              )}\n            /\u003e\n            \u003cButton type=\"submit\" disabled={isLoading}\u003e\n              {isLoading ? \"Updating...\" : \"Update Password\"}\n            \u003c/Button\u003e\n          \u003c/form\u003e\n        \u003c/Form\u003e\n\n        \u003cdiv className=\"space-y-4\"\u003e\n          \u003ch3 className=\"text-sm font-medium\"\u003eTwo-Factor Authentication\u003c/h3\u003e\n          \u003cdiv className=\"flex items-center justify-between\"\u003e\n            \u003cdiv className=\"space-y-0.5\"\u003e\n              \u003cLabel htmlFor=\"twoFactorAuth\"\u003eEnable Two-Factor Authentication\u003c/Label\u003e\n              \u003cp className=\"text-xs text-muted-foreground\"\u003eAdd an extra layer of security to your account\u003c/p\u003e\n            \u003c/div\u003e\n            \u003cSwitch\n              id=\"twoFactorAuth\"\n              checked={twoFactorEnabled}\n              onCheckedChange={handleToggleTwoFactor}\n              disabled={isLoading}\n            /\u003e\n          \u003c/div\u003e\n          {twoFactorEnabled \u0026\u0026 (\n            \u003cdiv className=\"rounded-md bg-muted p-4\"\u003e\n              \u003cp className=\"text-sm\"\u003e\n                Two-factor authentication is enabled. You will receive a verification code via email when signing in.\n              \u003c/p\u003e\n            \u003c/div\u003e\n          )}\n        \u003c/div\u003e\n\n        \u003cdiv className=\"space-y-4\"\u003e\n          \u003ch3 className=\"text-sm font-medium\"\u003eSession Management\u003c/h3\u003e\n          \u003cdiv className=\"rounded-md border p-4\"\u003e\n            \u003cdiv className=\"flex items-center justify-between\"\u003e\n              \u003cdiv\u003e\n                \u003cp className=\"text-sm font-medium\"\u003eActive Sessions\u003c/p\u003e\n                \u003cp className=\"text-xs text-muted-foreground\"\u003eYou are currently logged in on 2 devices\u003c/p\u003e\n              \u003c/div\u003e\n              \u003cButton variant=\"outline\" size=\"sm\"\u003e\n                Manage Sessions\n              \u003c/Button\u003e\n            \u003c/div\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/CardContent\u003e\n      \u003cCardFooter className=\"flex justify-between\"\u003e\n        \u003cButton variant=\"outline\" className=\"text-red-500\"\u003e\n          Delete Account\n        \u003c/Button\u003e\n        \u003cButton variant=\"outline\"\u003eDownload Personal Data\u003c/Button\u003e\n      \u003c/CardFooter\u003e\n    \u003c/Card\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/users/user-management.tsx\"\n\"use client\"\n\nimport { useState } from \"react\"\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\"\nimport { Input } from \"@/components/ui/input\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\"\nimport { MoreHorizontalIcon, SearchIcon } from \"lucide-react\"\n\n// Mock users data\nconst initialUsers = [\n  {\n    id: 1,\n    name: \"Emma Wilson\",\n    email: \"emma@example.com\",\n    role: \"admin\",\n    status: \"active\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    lastActive: \"2023-11-28T10:30:00Z\",\n  },\n  {\n    id: 2,\n    name: \"Jackson Lee\",\n    email: \"jackson@example.com\",\n    role: \"editor\",\n    status: \"active\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    lastActive: \"2023-11-27T14:45:00Z\",\n  },\n  {\n    id: 3,\n    name: \"Sophia Chen\",\n    email: \"sophia@example.com\",\n    role: \"editor\",\n    status: \"active\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    lastActive: \"2023-11-28T09:15:00Z\",\n  },\n  {\n    id: 4,\n    name: \"Liam Johnson\",\n    email: \"liam@example.com\",\n    role: \"viewer\",\n    status: \"active\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    lastActive: \"2023-11-26T11:20:00Z\",\n  },\n  {\n    id: 5,\n    name: \"Olivia Martinez\",\n    email: \"olivia@example.com\",\n    role: \"editor\",\n    status: \"inactive\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    lastActive: \"2023-11-20T16:30:00Z\",\n  },\n  {\n    id: 6,\n    name: \"Noah Williams\",\n    email: \"noah@example.com\",\n    role: \"viewer\",\n    status: \"pending\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    lastActive: null,\n  },\n]\n\nexport function UserManagement() {\n  const [users, setUsers] = useState(initialUsers)\n  const [searchQuery, setSearchQuery] = useState(\"\")\n  const [roleFilter, setRoleFilter] = useState(\"all\")\n  const [statusFilter, setStatusFilter] = useState(\"all\")\n\n  const filteredUsers = users.filter((user) =\u003e {\n    const matchesSearch =\n      user.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n      user.email.toLowerCase().includes(searchQuery.toLowerCase())\n\n    const matchesRole = roleFilter === \"all\" || user.role === roleFilter\n    const matchesStatus = statusFilter === \"all\" || user.status === statusFilter\n\n    return matchesSearch \u0026\u0026 matchesRole \u0026\u0026 matchesStatus\n  })\n\n  const handleRoleChange = (userId, newRole) =\u003e {\n    setUsers(users.map((user) =\u003e (user.id === userId ? { ...user, role: newRole } : user)))\n  }\n\n  const handleStatusChange = (userId, newStatus) =\u003e {\n    setUsers(users.map((user) =\u003e (user.id === userId ? { ...user, status: newStatus } : user)))\n  }\n\n  const getRoleBadgeVariant = (role) =\u003e {\n    switch (role) {\n      case \"admin\":\n        return \"default\"\n      case \"editor\":\n        return \"secondary\"\n      case \"viewer\":\n        return \"outline\"\n      default:\n        return \"outline\"\n    }\n  }\n\n  const getStatusBadgeVariant = (status) =\u003e {\n    switch (status) {\n      case \"active\":\n        return \"success\"\n      case \"inactive\":\n        return \"secondary\"\n      case \"pending\":\n        return \"warning\"\n      default:\n        return \"outline\"\n    }\n  }\n\n  const formatLastActive = (lastActive) =\u003e {\n    if (!lastActive) return \"Never\"\n\n    const date = new Date(lastActive)\n    return date.toLocaleDateString() + \" \" + date.toLocaleTimeString()\n  }\n\n  return (\n    \u003cCard\u003e\n      \u003cCardHeader\u003e\n        \u003cCardTitle\u003eUser Management\u003c/CardTitle\u003e\n        \u003cCardDescription\u003eManage users and their permissions in your organization\u003c/CardDescription\u003e\n      \u003c/CardHeader\u003e\n      \u003cCardContent\u003e\n        \u003cdiv className=\"mb-4 flex flex-col gap-4 sm:flex-row sm:items-center sm:justify-between\"\u003e\n          \u003cdiv className=\"flex items-center gap-2\"\u003e\n            \u003cdiv className=\"relative\"\u003e\n              \u003cSearchIcon className=\"absolute left-2.5 top-2.5 h-4 w-4 text-muted-foreground\" /\u003e\n              \u003cInput\n                type=\"search\"\n                placeholder=\"Search users...\"\n                className=\"pl-8\"\n                value={searchQuery}\n                onChange={(e) =\u003e setSearchQuery(e.target.value)}\n              /\u003e\n            \u003c/div\u003e\n          \u003c/div\u003e\n          \u003cdiv className=\"flex flex-col gap-2 sm:flex-row\"\u003e\n            \u003cSelect value={roleFilter} onValueChange={setRoleFilter}\u003e\n              \u003cSelectTrigger className=\"w-[180px]\"\u003e\n                \u003cSelectValue placeholder=\"Filter by role\" /\u003e\n              \u003c/SelectTrigger\u003e\n              \u003cSelectContent\u003e\n                \u003cSelectItem value=\"all\"\u003eAll Roles\u003c/SelectItem\u003e\n                \u003cSelectItem value=\"admin\"\u003eAdmin\u003c/SelectItem\u003e\n                \u003cSelectItem value=\"editor\"\u003eEditor\u003c/SelectItem\u003e\n                \u003cSelectItem value=\"viewer\"\u003eViewer\u003c/SelectItem\u003e\n              \u003c/SelectContent\u003e\n            \u003c/Select\u003e\n            \u003cSelect value={statusFilter} onValueChange={setStatusFilter}\u003e\n              \u003cSelectTrigger className=\"w-[180px]\"\u003e\n                \u003cSelectValue placeholder=\"Filter by status\" /\u003e\n              \u003c/SelectTrigger\u003e\n              \u003cSelectContent\u003e\n                \u003cSelectItem value=\"all\"\u003eAll Statuses\u003c/SelectItem\u003e\n                \u003cSelectItem value=\"active\"\u003eActive\u003c/SelectItem\u003e\n                \u003cSelectItem value=\"inactive\"\u003eInactive\u003c/SelectItem\u003e\n                \u003cSelectItem value=\"pending\"\u003ePending\u003c/SelectItem\u003e\n              \u003c/SelectContent\u003e\n            \u003c/Select\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n        \u003cdiv className=\"rounded-md border\"\u003e\n          \u003cTable\u003e\n            \u003cTableHeader\u003e\n              \u003cTableRow\u003e\n                \u003cTableHead\u003eUser\u003c/TableHead\u003e\n                \u003cTableHead\u003eRole\u003c/TableHead\u003e\n                \u003cTableHead\u003eStatus\u003c/TableHead\u003e\n                \u003cTableHead\u003eLast Active\u003c/TableHead\u003e\n                \u003cTableHead className=\"text-right\"\u003eActions\u003c/TableHead\u003e\n              \u003c/TableRow\u003e\n            \u003c/TableHeader\u003e\n            \u003cTableBody\u003e\n              {filteredUsers.length === 0 ? (\n                \u003cTableRow\u003e\n                  \u003cTableCell colSpan={5} className=\"text-center\"\u003e\n                    No users found\n                  \u003c/TableCell\u003e\n                \u003c/TableRow\u003e\n              ) : (\n                filteredUsers.map((user) =\u003e (\n                  \u003cTableRow key={user.id}\u003e\n                    \u003cTableCell\u003e\n                      \u003cdiv className=\"flex items-center gap-3\"\u003e\n                        \u003cAvatar\u003e\n                          \u003cAvatarImage src={user.avatar} alt={user.name} /\u003e\n                          \u003cAvatarFallback\u003e\n                            {user.name\n                              .split(\" \")\n                              .map((n) =\u003e n[0])\n                              .join(\"\")}\n                          \u003c/AvatarFallback\u003e\n                        \u003c/Avatar\u003e\n                        \u003cdiv\u003e\n                          \u003cp className=\"font-medium\"\u003e{user.name}\u003c/p\u003e\n                          \u003cp className=\"text-sm text-muted-foreground\"\u003e{user.email}\u003c/p\u003e\n                        \u003c/div\u003e\n                      \u003c/div\u003e\n                    \u003c/TableCell\u003e\n                    \u003cTableCell\u003e\n                      \u003cBadge variant={getRoleBadgeVariant(user.role)}\u003e\n                        {user.role.charAt(0).toUpperCase() + user.role.slice(1)}\n                      \u003c/Badge\u003e\n                    \u003c/TableCell\u003e\n                    \u003cTableCell\u003e\n                      \u003cBadge variant={getStatusBadgeVariant(user.status)}\u003e\n                        {user.status.charAt(0).toUpperCase() + user.status.slice(1)}\n                      \u003c/Badge\u003e\n                    \u003c/TableCell\u003e\n                    \u003cTableCell\u003e{formatLastActive(user.lastActive)}\u003c/TableCell\u003e\n                    \u003cTableCell className=\"text-right\"\u003e\n                      \u003cDropdownMenu\u003e\n                        \u003cDropdownMenuTrigger asChild\u003e\n                          \u003cButton variant=\"ghost\" size=\"sm\"\u003e\n                            \u003cMoreHorizontalIcon className=\"h-4 w-4\" /\u003e\n                            \u003cspan className=\"sr-only\"\u003eOpen menu\u003c/span\u003e\n                          \u003c/Button\u003e\n                        \u003c/DropdownMenuTrigger\u003e\n                        \u003cDropdownMenuContent align=\"end\"\u003e\n                          \u003cDropdownMenuLabel\u003eActions\u003c/DropdownMenuLabel\u003e\n                          \u003cDropdownMenuItem\u003eView Profile\u003c/DropdownMenuItem\u003e\n                          \u003cDropdownMenuSeparator /\u003e\n                          \u003cDropdownMenuLabel\u003eChange Role\u003c/DropdownMenuLabel\u003e\n                          \u003cDropdownMenuItem onClick={() =\u003e handleRoleChange(user.id, \"admin\")}\u003e\n                            Make Admin\n                          \u003c/DropdownMenuItem\u003e\n                          \u003cDropdownMenuItem onClick={() =\u003e handleRoleChange(user.id, \"editor\")}\u003e\n                            Make Editor\n                          \u003c/DropdownMenuItem\u003e\n                          \u003cDropdownMenuItem onClick={() =\u003e handleRoleChange(user.id, \"viewer\")}\u003e\n                            Make Viewer\n                          \u003c/DropdownMenuItem\u003e\n                          \u003cDropdownMenuSeparator /\u003e\n                          \u003cDropdownMenuLabel\u003eChange Status\u003c/DropdownMenuLabel\u003e\n                          \u003cDropdownMenuItem onClick={() =\u003e handleStatusChange(user.id, \"active\")}\u003e\n                            Set Active\n                          \u003c/DropdownMenuItem\u003e\n                          \u003cDropdownMenuItem onClick={() =\u003e handleStatusChange(user.id, \"inactive\")}\u003e\n                            Set Inactive\n                          \u003c/DropdownMenuItem\u003e\n                          \u003cDropdownMenuSeparator /\u003e\n                          \u003cDropdownMenuItem className=\"text-red-600\"\u003eDelete User\u003c/DropdownMenuItem\u003e\n                        \u003c/DropdownMenuContent\u003e\n                      \u003c/DropdownMenu\u003e\n                    \u003c/TableCell\u003e\n                  \u003c/TableRow\u003e\n                ))\n              )}\n            \u003c/TableBody\u003e\n          \u003c/Table\u003e\n        \u003c/div\u003e\n      \u003c/CardContent\u003e\n    \u003c/Card\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"lib/auth.ts\"\n// This is a mock implementation for demonstration purposes\n// In a real application, you would use a proper authentication library like NextAuth.js\n\nimport { jwtVerify, SignJWT } from \"jose\"\n\n// Mock user data\nconst users = [\n  {\n    id: 1,\n    name: \"Admin User\",\n    email: \"admin@example.com\",\n    password: \"admin123\", // In a real app, this would be hashed\n    role: \"admin\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    bio: \"Task management system administrator\",\n    jobTitle: \"Project Manager\",\n    company: \"Acme Inc.\",\n  },\n  {\n    id: 2,\n    name: \"Editor User\",\n    email: \"editor@example.com\",\n    password: \"editor123\", // In a real app, this would be hashed\n    role: \"editor\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    bio: \"Frontend developer working on the task management system\",\n    jobTitle: \"Senior Developer\",\n    company: \"Acme Inc.\",\n  },\n  {\n    id: 3,\n    name: \"Viewer User\",\n    email: \"viewer@example.com\",\n    password: \"viewer123\", // In a real app, this would be hashed\n    role: \"viewer\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    bio: \"Team member using the task management system\",\n    jobTitle: \"Content Writer\",\n    company: \"Acme Inc.\",\n  },\n]\n\n// Secret key for JWT\nconst JWT_SECRET = new TextEncoder().encode(process.env.JWT_SECRET || \"your-secret-key\")\n\n// Login user\nexport async function loginUser(email: string, password: string) {\n  // Find user by email\n  const user = users.find((u) =\u003e u.email === email)\n\n  // Check if user exists and password matches\n  if (!user || user.password !== password) {\n    throw new Error(\"Invalid credentials\")\n  }\n\n  // Create JWT token\n  const token = await new SignJWT({ userId: user.id, role: user.role })\n    .setProtectedHeader({ alg: \"HS256\" })\n    .setIssuedAt()\n    .setExpirationTime(\"24h\")\n    .sign(JWT_SECRET)\n\n  // Store token in localStorage (in a real app, use cookies for better security)\n  if (typeof window !== \"undefined\") {\n    localStorage.setItem(\"auth-token\", token)\n  }\n\n  return { user: { id: user.id, name: user.name, email: user.email, role: user.role } }\n}\n\n// Register user\nexport async function registerUser(name: string, email: string, password: string) {\n  // Check if user already exists\n  if (users.find((u) =\u003e u.email === email)) {\n    throw new Error(\"User already exists\")\n  }\n\n  // Create new user\n  const newUser = {\n    id: users.length + 1,\n    name,\n    email,\n    password, // In a real app, this would be hashed\n    role: \"viewer\", // Default role for new users\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    bio: \"\",\n    jobTitle: \"\",\n    company: \"\",\n  }\n\n  // Add user to the mock database\n  users.push(newUser)\n\n  // Create JWT token\n  const token = await new SignJWT({ userId: newUser.id, role: newUser.role })\n    .setProtectedHeader({ alg: \"HS256\" })\n    .setIssuedAt()\n    .setExpirationTime(\"24h\")\n    .sign(JWT_SECRET)\n\n  // Store token in localStorage (in a real app, use cookies for better security)\n  if (typeof window !== \"undefined\") {\n    localStorage.setItem(\"auth-token\", token)\n  }\n\n  return { user: { id: newUser.id, name: newUser.name, email: newUser.email, role: newUser.role } }\n}\n\n// Get user session\nexport async function getUserSession() {\n  // In a server component, we would verify the session cookie\n  // For this demo, we'll simulate a logged-in user\n\n  // In a client component, we would get the token from localStorage\n  let token\n  if (typeof window !== \"undefined\") {\n    token = localStorage.getItem(\"auth-token\")\n  }\n\n  if (!token) {\n    // For demo purposes, return a mock user\n    return users[0]\n  }\n\n  try {\n    // Verify token\n    const { payload } = await jwtVerify(token, JWT_SECRET)\n    const userId = payload.userId as number\n\n    // Find user\n    const user = users.find((u) =\u003e u.id === userId)\n    if (!user) {\n      return null\n    }\n\n    return user\n  } catch (error) {\n    console.error(\"Error verifying token:\", error)\n    return null\n  }\n}\n\n// Logout user\nexport function logoutUser() {\n  if (typeof window !== \"undefined\") {\n    localStorage.removeItem(\"auth-token\")\n  }\n}\n\n[V0_FILE]typescriptreact:file=\"lib/utils.ts\"\nimport { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n\n// Format bytes to human-readable format\nexport function formatBytes(bytes: number, decimals = 2) {\n  if (bytes === 0) return \"0 Bytes\"\n\n  const k = 1024\n  const dm = decimals \u003c 0 ? 0 : decimals\n  const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"]\n\n  const i = Math.floor(Math.log(bytes) / Math.log(k))\n\n  return Number.parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + \" \" + sizes[i]\n}\n\n[V0_FILE]typescriptreact:file=\"tailwind.config.js\"\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  darkMode: [\"class\"],\n  content: [\n    \"./pages/**/*.{ts,tsx}\",\n    \"./components/**/*.{ts,tsx}\",\n    \"./app/**/*.{ts,tsx}\",\n    \"./src/**/*.{ts,tsx}\",\n    \"*.{js,ts,jsx,tsx,mdx}\",\n  ],\n  theme: {\n    container: {\n      center: true,\n      padding: \"2rem\",\n      screens: {\n        \"2xl\": \"1400px\",\n      },\n    },\n    extend: {\n      colors: {\n        border: \"hsl(var(--border))\",\n        input: \"hsl(var(--input))\",\n        ring: \"hsl(var(--ring))\",\n        background: \"hsl(var(--background))\",\n        foreground: \"hsl(var(--foreground))\",\n        primary: {\n          DEFAULT: \"hsl(var(--primary))\",\n          foreground: \"hsl(var(--primary-foreground))\",\n        },\n        secondary: {\n          DEFAULT: \"hsl(var(--secondary))\",\n          foreground: \"hsl(var(--secondary-foreground))\",\n        },\n        destructive: {\n          DEFAULT: \"hsl(var(--destructive))\",\n          foreground: \"hsl(var(--destructive-foreground))\",\n        },\n        muted: {\n          DEFAULT: \"hsl(var(--muted))\",\n          foreground: \"hsl(var(--muted-foreground))\",\n        },\n        accent: {\n          DEFAULT: \"hsl(var(--accent))\",\n          foreground: \"hsl(var(--accent-foreground))\",\n        },\n        popover: {\n          DEFAULT: \"hsl(var(--popover))\",\n          foreground: \"hsl(var(--popover-foreground))\",\n        },\n        card: {\n          DEFAULT: \"hsl(var(--card))\",\n          foreground: \"hsl(var(--card-foreground))\",\n        },\n        success: {\n          DEFAULT: \"#10b981\",\n          foreground: \"#ffffff\",\n        },\n        warning: {\n          DEFAULT: \"#f59e0b\",\n          foreground: \"#ffffff\",\n        },\n      },\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: { height: 0 },\n          to: { height: \"var(--radix-accordion-content-height)\" },\n        },\n        \"accordion-up\": {\n          from: { height: \"var(--radix-accordion-content-height)\" },\n          to: { height: 0 },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\")],\n}\n\n[V0_FILE]typescriptreact:file=\"components/ui/chart.tsx\" isQuickEdit=\"true\"\nexport {\n  Area,\n  AreaChart,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n  Bar,\n  BarChart,\n  CartesianGrid,\n  Legend,\n  Cell,\n  Pie,\n  PieChart,\n} from \"recharts\"\n"])</script><script>self.__next_f.push([1,"9a:T19de4,"])</script><script>self.__next_f.push([1,"[V0_FILE]tsx:file=\"app/page.tsx\"\nimport { redirect } from \"next/navigation\";\nimport { DashboardHeader } from \"@/components/dashboard/dashboard-header\";\nimport { DashboardShell } from \"@/components/dashboard/dashboard-shell\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Overview } from \"@/components/dashboard/overview\";\nimport { RecentTasks } from \"@/components/dashboard/recent-tasks\";\nimport { TeamMembers } from \"@/components/dashboard/team-members\";\nimport { getUserSession } from \"@/lib/auth\";\n\nexport default async function DashboardPage() {\n  const user = await getUserSession();\n  \n  if (!user) {\n    redirect(\"/login\");\n  }\n  \n  return (\n    \u003cDashboardShell\u003e\n      \u003cDashboardHeader\n        heading=\"Dashboard\"\n        text=\"Welcome back! Here's an overview of your team's tasks.\"\n      \u003e\n        \u003cButton\u003e\n          \u003ca href=\"/tasks/new\"\u003eCreate Task\u003c/a\u003e\n        \u003c/Button\u003e\n      \u003c/DashboardHeader\u003e\n      \u003cdiv className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\"\u003e\n        \u003cCard\u003e\n          \u003cCardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\"\u003e\n            \u003cCardTitle className=\"text-sm font-medium\"\u003eTotal Tasks\u003c/CardTitle\u003e\n            \u003csvg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2\"\n              className=\"h-4 w-4 text-muted-foreground\"\n            \u003e\n              \u003cpath d=\"M12 2v20M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6\" /\u003e\n            \u003c/svg\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent\u003e\n            \u003cdiv className=\"text-2xl font-bold\"\u003e24\u003c/div\u003e\n            \u003cp className=\"text-xs text-muted-foreground\"\u003e\n              +10% from last month\n            \u003c/p\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n        \u003cCard\u003e\n          \u003cCardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\"\u003e\n            \u003cCardTitle className=\"text-sm font-medium\"\u003eCompleted\u003c/CardTitle\u003e\n            \u003csvg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2\"\n              className=\"h-4 w-4 text-muted-foreground\"\n            \u003e\n              \u003cpath d=\"M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2\" /\u003e\n              \u003ccircle cx=\"9\" cy=\"7\" r=\"4\" /\u003e\n              \u003cpath d=\"M22 21v-2a4 4 0 0 0-3-3.87M16 3.13a4 4 0 0 1 0 7.75\" /\u003e\n            \u003c/svg\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent\u003e\n            \u003cdiv className=\"text-2xl font-bold\"\u003e16\u003c/div\u003e\n            \u003cp className=\"text-xs text-muted-foreground\"\u003e\n              +12% from last month\n            \u003c/p\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n        \u003cCard\u003e\n          \u003cCardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\"\u003e\n            \u003cCardTitle className=\"text-sm font-medium\"\u003eIn Progress\u003c/CardTitle\u003e\n            \u003csvg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2\"\n              className=\"h-4 w-4 text-muted-foreground\"\n            \u003e\n              \u003crect width=\"20\" height=\"14\" x=\"2\" y=\"5\" rx=\"2\" /\u003e\n              \u003cpath d=\"M2 10h20\" /\u003e\n            \u003c/svg\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent\u003e\n            \u003cdiv className=\"text-2xl font-bold\"\u003e6\u003c/div\u003e\n            \u003cp className=\"text-xs text-muted-foreground\"\u003e\n              -2% from last month\n            \u003c/p\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n        \u003cCard\u003e\n          \u003cCardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\"\u003e\n            \u003cCardTitle className=\"text-sm font-medium\"\u003eOverdue\u003c/CardTitle\u003e\n            \u003csvg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2\"\n              className=\"h-4 w-4 text-muted-foreground\"\n            \u003e\n              \u003cpath d=\"M22 12h-4l-3 9L9 3l-3 9H2\" /\u003e\n            \u003c/svg\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent\u003e\n            \u003cdiv className=\"text-2xl font-bold\"\u003e2\u003c/div\u003e\n            \u003cp className=\"text-xs text-muted-foreground\"\u003e\n              -4% from last month\n            \u003c/p\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n      \u003c/div\u003e\n      \u003cdiv className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-7\"\u003e\n        \u003cCard className=\"col-span-4\"\u003e\n          \u003cCardHeader\u003e\n            \u003cCardTitle\u003eTask Completion Overview\u003c/CardTitle\u003e\n            \u003cCardDescription\u003e\n              Task completion rate over the last 30 days\n            \u003c/CardDescription\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent className=\"pl-2\"\u003e\n            \u003cOverview /\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n        \u003cCard className=\"col-span-3\"\u003e\n          \u003cCardHeader\u003e\n            \u003cCardTitle\u003eRecent Tasks\u003c/CardTitle\u003e\n            \u003cCardDescription\u003e\n              Recently created or updated tasks\n            \u003c/CardDescription\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent\u003e\n            \u003cRecentTasks /\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n      \u003c/div\u003e\n      \u003cdiv className=\"grid gap-4 md:grid-cols-1\"\u003e\n        \u003cCard\u003e\n          \u003cCardHeader\u003e\n            \u003cCardTitle\u003eTeam Members\u003c/CardTitle\u003e\n            \u003cCardDescription\u003e\n              Manage your team and their task assignments\n            \u003c/CardDescription\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent\u003e\n            \u003cTeamMembers /\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n      \u003c/div\u003e\n    \u003c/DashboardShell\u003e\n  );\n}\n[V0_FILE]tsx:file=\"app/tasks/page.tsx\"\nimport { redirect } from \"next/navigation\";\nimport { DashboardHeader } from \"@/components/dashboard/dashboard-header\";\nimport { DashboardShell } from \"@/components/dashboard/dashboard-shell\";\nimport { Button } from \"@/components/ui/button\";\nimport { KanbanBoard } from \"@/components/tasks/kanban-board\";\nimport { TaskFilters } from \"@/components/tasks/task-filters\";\nimport { getUserSession } from \"@/lib/auth\";\n\nexport default async function TasksPage() {\n  const user = await getUserSession();\n  \n  if (!user) {\n    redirect(\"/login\");\n  }\n  \n  return (\n    \u003cDashboardShell\u003e\n      \u003cDashboardHeader\n        heading=\"Tasks\"\n        text=\"Manage and organize your team's tasks\"\n      \u003e\n        \u003cButton\u003e\n          \u003ca href=\"/tasks/new\"\u003eCreate Task\u003c/a\u003e\n        \u003c/Button\u003e\n      \u003c/DashboardHeader\u003e\n      \u003cdiv className=\"space-y-4\"\u003e\n        \u003cTaskFilters /\u003e\n        \u003cKanbanBoard /\u003e\n      \u003c/div\u003e\n    \u003c/DashboardShell\u003e\n  );\n}\n[V0_FILE]tsx:file=\"app/tasks/new/page.tsx\"\nimport { redirect } from \"next/navigation\";\nimport { DashboardHeader } from \"@/components/dashboard/dashboard-header\";\nimport { DashboardShell } from \"@/components/dashboard/dashboard-shell\";\nimport { TaskForm } from \"@/components/tasks/task-form\";\nimport { getUserSession } from \"@/lib/auth\";\n\nexport default async function NewTaskPage() {\n  const user = await getUserSession();\n  \n  if (!user) {\n    redirect(\"/login\");\n  }\n  \n  // Check if user has permission to create tasks\n  if (user.role === \"viewer\") {\n    redirect(\"/dashboard\");\n  }\n  \n  return (\n    \u003cDashboardShell\u003e\n      \u003cDashboardHeader\n        heading=\"Create New Task\"\n        text=\"Add a new task and assign it to team members\"\n      /\u003e\n      \u003cdiv className=\"grid gap-4\"\u003e\n        \u003cTaskForm /\u003e\n      \u003c/div\u003e\n    \u003c/DashboardShell\u003e\n  );\n}\n[V0_FILE]tsx:file=\"app/tasks/[id]/page.tsx\"\nimport { redirect } from \"next/navigation\";\nimport { DashboardHeader } from \"@/components/dashboard/dashboard-header\";\nimport { DashboardShell } from \"@/components/dashboard/dashboard-shell\";\nimport { TaskDetails } from \"@/components/tasks/task-details\";\nimport { TaskComments } from \"@/components/tasks/task-comments\";\nimport { TaskAttachments } from \"@/components/tasks/task-attachments\";\nimport { getUserSession } from \"@/lib/auth\";\n\nexport default async function TaskDetailsPage({ params }: { params: { id: string } }) {\n  const user = await getUserSession();\n  \n  if (!user) {\n    redirect(\"/login\");\n  }\n  \n  return (\n    \u003cDashboardShell\u003e\n      \u003cDashboardHeader\n        heading=\"Task Details\"\n        text=\"View and manage task details\"\n      /\u003e\n      \u003cdiv className=\"grid gap-6\"\u003e\n        \u003cTaskDetails id={params.id} /\u003e\n        \u003cdiv className=\"grid gap-4 md:grid-cols-2\"\u003e\n          \u003cTaskComments id={params.id} /\u003e\n          \u003cTaskAttachments id={params.id} /\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n    \u003c/DashboardShell\u003e\n  );\n}\n[V0_FILE]tsx:file=\"app/reports/page.tsx\"\nimport { redirect } from \"next/navigation\";\nimport { DashboardHeader } from \"@/components/dashboard/dashboard-header\";\nimport { DashboardShell } from \"@/components/dashboard/dashboard-shell\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { TaskCompletionChart } from \"@/components/reports/task-completion-chart\";\nimport { TeamPerformanceChart } from \"@/components/reports/team-performance-chart\";\nimport { PriorityDistributionChart } from \"@/components/reports/priority-distribution-chart\";\nimport { getUserSession } from \"@/lib/auth\";\n\nexport default async function ReportsPage() {\n  const user = await getUserSession();\n  \n  if (!user) {\n    redirect(\"/login\");\n  }\n  \n  return (\n    \u003cDashboardShell\u003e\n      \u003cDashboardHeader\n        heading=\"Reports\"\n        text=\"Analyze task performance and team productivity\"\n      \u003e\n        \u003cdiv className=\"flex space-x-2\"\u003e\n          \u003cButton variant=\"outline\"\u003e\n            Export CSV\n          \u003c/Button\u003e\n          \u003cButton variant=\"outline\"\u003e\n            Export PDF\n          \u003c/Button\u003e\n        \u003c/div\u003e\n      \u003c/DashboardHeader\u003e\n      \u003cdiv className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-2\"\u003e\n        \u003cCard className=\"col-span-1\"\u003e\n          \u003cCardHeader\u003e\n            \u003cCardTitle\u003eTask Completion Rate\u003c/CardTitle\u003e\n            \u003cCardDescription\u003e\n              Percentage of tasks completed on time\n            \u003c/CardDescription\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent className=\"h-80\"\u003e\n            \u003cTaskCompletionChart /\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n        \u003cCard className=\"col-span-1\"\u003e\n          \u003cCardHeader\u003e\n            \u003cCardTitle\u003eTeam Performance\u003c/CardTitle\u003e\n            \u003cCardDescription\u003e\n              Tasks completed by team members\n            \u003c/CardDescription\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent className=\"h-80\"\u003e\n            \u003cTeamPerformanceChart /\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n        \u003cCard className=\"col-span-2\"\u003e\n          \u003cCardHeader\u003e\n            \u003cCardTitle\u003eTask Priority Distribution\u003c/CardTitle\u003e\n            \u003cCardDescription\u003e\n              Distribution of tasks by priority level\n            \u003c/CardDescription\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent className=\"h-80\"\u003e\n            \u003cPriorityDistributionChart /\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n      \u003c/div\u003e\n    \u003c/DashboardShell\u003e\n  );\n}\n[V0_FILE]tsx:file=\"app/settings/page.tsx\"\nimport { redirect } from \"next/navigation\";\nimport { DashboardHeader } from \"@/components/dashboard/dashboard-header\";\nimport { DashboardShell } from \"@/components/dashboard/dashboard-shell\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { ProfileSettings } from \"@/components/settings/profile-settings\";\nimport { NotificationSettings } from \"@/components/settings/notification-settings\";\nimport { SecuritySettings } from \"@/components/settings/security-settings\";\nimport { getUserSession } from \"@/lib/auth\";\n\nexport default async function SettingsPage() {\n  const user = await getUserSession();\n  \n  if (!user) {\n    redirect(\"/login\");\n  }\n  \n  return (\n    \u003cDashboardShell\u003e\n      \u003cDashboardHeader\n        heading=\"Settings\"\n        text=\"Manage your account settings and preferences\"\n      /\u003e\n      \u003cTabs defaultValue=\"profile\" className=\"space-y-4\"\u003e\n        \u003cTabsList\u003e\n          \u003cTabsTrigger value=\"profile\"\u003eProfile\u003c/TabsTrigger\u003e\n          \u003cTabsTrigger value=\"notifications\"\u003eNotifications\u003c/TabsTrigger\u003e\n          \u003cTabsTrigger value=\"security\"\u003eSecurity\u003c/TabsTrigger\u003e\n        \u003c/TabsList\u003e\n        \u003cTabsContent value=\"profile\" className=\"space-y-4\"\u003e\n          \u003cProfileSettings user={user} /\u003e\n        \u003c/TabsContent\u003e\n        \u003cTabsContent value=\"notifications\" className=\"space-y-4\"\u003e\n          \u003cNotificationSettings user={user} /\u003e\n        \u003c/TabsContent\u003e\n        \u003cTabsContent value=\"security\" className=\"space-y-4\"\u003e\n          \u003cSecuritySettings user={user} /\u003e\n        \u003c/TabsContent\u003e\n      \u003c/Tabs\u003e\n    \u003c/DashboardShell\u003e\n  );\n}\n[V0_FILE]tsx:file=\"app/users/page.tsx\"\nimport { redirect } from \"next/navigation\";\nimport { DashboardHeader } from \"@/components/dashboard/dashboard-header\";\nimport { DashboardShell } from \"@/components/dashboard/dashboard-shell\";\nimport { Button } from \"@/components/ui/button\";\nimport { UserManagement } from \"@/components/users/user-management\";\nimport { getUserSession } from \"@/lib/auth\";\n\nexport default async function UsersPage() {\n  const user = await getUserSession();\n  \n  if (!user) {\n    redirect(\"/login\");\n  }\n  \n  // Only admins can access user management\n  if (user.role !== \"admin\") {\n    redirect(\"/dashboard\");\n  }\n  \n  return (\n    \u003cDashboardShell\u003e\n      \u003cDashboardHeader\n        heading=\"User Management\"\n        text=\"Manage users and their permissions\"\n      \u003e\n        \u003cButton\u003e\n          \u003ca href=\"/users/new\"\u003eAdd User\u003c/a\u003e\n        \u003c/Button\u003e\n      \u003c/DashboardHeader\u003e\n      \u003cdiv className=\"grid gap-4\"\u003e\n        \u003cUserManagement /\u003e\n      \u003c/div\u003e\n    \u003c/DashboardShell\u003e\n  );\n}\n[V0_FILE]tsx:file=\"app/login/page.tsx\"\n\"use client\";\n\nimport { useState } from \"react\";\nimport Link from \"next/link\";\nimport { useRouter } from \"next/navigation\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { loginUser } from \"@/lib/auth\";\n\nexport default function LoginPage() {\n  const router = useRouter();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  \n  async function handleSubmit(event: React.FormEvent\u003cHTMLFormElement\u003e) {\n    event.preventDefault();\n    setIsLoading(true);\n    setError(\"\");\n    \n    const formData = new FormData(event.currentTarget);\n    const email = formData.get(\"email\") as string;\n    const password = formData.get(\"password\") as string;\n    \n    try {\n      await loginUser(email, password);\n      router.push(\"/dashboard\");\n    } catch (err) {\n      setError(\"Invalid email or password\");\n      setIsLoading(false);\n    }\n  }\n  \n  return (\n    \u003cdiv className=\"flex min-h-screen items-center justify-center bg-gray-50 px-4 py-12 sm:px-6 lg:px-8\"\u003e\n      \u003cCard className=\"w-full max-w-md\"\u003e\n        \u003cCardHeader className=\"space-y-1\"\u003e\n          \u003cCardTitle className=\"text-2xl font-bold\"\u003eLogin\u003c/CardTitle\u003e\n          \u003cCardDescription\u003e\n            Enter your credentials to access your account\n          \u003c/CardDescription\u003e\n        \u003c/CardHeader\u003e\n        \u003cform onSubmit={handleSubmit}\u003e\n          \u003cCardContent className=\"space-y-4\"\u003e\n            {error \u0026\u0026 (\n              \u003cdiv className=\"rounded-md bg-red-50 p-2 text-sm text-red-500\"\u003e\n                {error}\n              \u003c/div\u003e\n            )}\n            \u003cdiv className=\"space-y-2\"\u003e\n              \u003cLabel htmlFor=\"email\"\u003eEmail\u003c/Label\u003e\n              \u003cInput id=\"email\" name=\"email\" type=\"email\" required /\u003e\n            \u003c/div\u003e\n            \u003cdiv className=\"space-y-2\"\u003e\n              \u003cdiv className=\"flex items-center justify-between\"\u003e\n                \u003cLabel htmlFor=\"password\"\u003ePassword\u003c/Label\u003e\n                \u003cLink href=\"/forgot-password\" className=\"text-sm text-primary\"\u003e\n                  Forgot password?\n                \u003c/Link\u003e\n              \u003c/div\u003e\n              \u003cInput id=\"password\" name=\"password\" type=\"password\" required /\u003e\n            \u003c/div\u003e\n            \u003cdiv className=\"flex items-center space-x-2\"\u003e\n              \u003chr className=\"flex-1\" /\u003e\n              \u003cspan className=\"text-sm text-muted-foreground\"\u003eOR\u003c/span\u003e\n              \u003chr className=\"flex-1\" /\u003e\n            \u003c/div\u003e\n            \u003cdiv className=\"grid grid-cols-2 gap-4\"\u003e\n              \u003cButton variant=\"outline\" type=\"button\" className=\"w-full\"\u003e\n                \u003csvg className=\"mr-2 h-4 w-4\" viewBox=\"0 0 24 24\"\u003e\n                  \u003cpath\n                    d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\"\n                    fill=\"#4285F4\"\n                  /\u003e\n                  \u003cpath\n                    d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\"\n                    fill=\"#34A853\"\n                  /\u003e\n                  \u003cpath\n                    d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\"\n                    fill=\"#FBBC05\"\n                  /\u003e\n                  \u003cpath\n                    d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\"\n                    fill=\"#EA4335\"\n                  /\u003e\n                \u003c/svg\u003e\n                Google\n              \u003c/Button\u003e\n              \u003cButton variant=\"outline\" type=\"button\" className=\"w-full\"\u003e\n                \u003csvg className=\"mr-2 h-4 w-4\" viewBox=\"0 0 24 24\"\u003e\n                  \u003cpath\n                    d=\"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12\"\n                    fill=\"currentColor\"\n                  /\u003e\n                \u003c/svg\u003e\n                GitHub\n              \u003c/Button\u003e\n            \u003c/div\u003e\n          \u003c/CardContent\u003e\n          \u003cCardFooter className=\"flex flex-col space-y-4\"\u003e\n            \u003cButton type=\"submit\" className=\"w-full\" disabled={isLoading}\u003e\n              {isLoading ? \"Logging in...\" : \"Login\"}\n            \u003c/Button\u003e\n            \u003cdiv className=\"text-center text-sm\"\u003e\n              Don\u0026apos;t have an account?{\" \"}\n              \u003cLink href=\"/register\" className=\"text-primary\"\u003e\n                Sign up\n              \u003c/Link\u003e\n            \u003c/div\u003e\n          \u003c/CardFooter\u003e\n        \u003c/form\u003e\n      \u003c/Card\u003e\n    \u003c/div\u003e\n  );\n}\n[V0_FILE]tsx:file=\"app/register/page.tsx\"\n\"use client\";\n\nimport { useState } from \"react\";\nimport Link from \"next/link\";\nimport { useRouter } from \"next/navigation\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { registerUser } from \"@/lib/auth\";\n\nexport default function RegisterPage() {\n  const router = useRouter();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  \n  async function handleSubmit(event: React.FormEvent\u003cHTMLFormElement\u003e) {\n    event.preventDefault();\n    setIsLoading(true);\n    setError(\"\");\n    \n    const formData = new FormData(event.currentTarget);\n    const name = formData.get(\"name\") as string;\n    const email = formData.get(\"email\") as string;\n    const password = formData.get(\"password\") as string;\n    const confirmPassword = formData.get(\"confirmPassword\") as string;\n    \n    if (password !== confirmPassword) {\n      setError(\"Passwords do not match\");\n      setIsLoading(false);\n      return;\n    }\n    \n    try {\n      await registerUser(name, email, password);\n      router.push(\"/dashboard\");\n    } catch (err) {\n      setError(\"Failed to create account\");\n      setIsLoading(false);\n    }\n  }\n  \n  return (\n    \u003cdiv className=\"flex min-h-screen items-center justify-center bg-gray-50 px-4 py-12 sm:px-6 lg:px-8\"\u003e\n      \u003cCard className=\"w-full max-w-md\"\u003e\n        \u003cCardHeader className=\"space-y-1\"\u003e\n          \u003cCardTitle className=\"text-2xl font-bold\"\u003eCreate an account\u003c/CardTitle\u003e\n          \u003cCardDescription\u003e\n            Enter your information to create an account\n          \u003c/CardDescription\u003e\n        \u003c/CardHeader\u003e\n        \u003cform onSubmit={handleSubmit}\u003e\n          \u003cCardContent className=\"space-y-4\"\u003e\n            {error \u0026\u0026 (\n              \u003cdiv className=\"rounded-md bg-red-50 p-2 text-sm text-red-500\"\u003e\n                {error}\n              \u003c/div\u003e\n            )}\n            \u003cdiv className=\"space-y-2\"\u003e\n              \u003cLabel htmlFor=\"name\"\u003eFull Name\u003c/Label\u003e\n              \u003cInput id=\"name\" name=\"name\" required /\u003e\n            \u003c/div\u003e\n            \u003cdiv className=\"space-y-2\"\u003e\n              \u003cLabel htmlFor=\"email\"\u003eEmail\u003c/Label\u003e\n              \u003cInput id=\"email\" name=\"email\" type=\"email\" required /\u003e\n            \u003c/div\u003e\n            \u003cdiv className=\"space-y-2\"\u003e\n              \u003cLabel htmlFor=\"password\"\u003ePassword\u003c/Label\u003e\n              \u003cInput id=\"password\" name=\"password\" type=\"password\" required /\u003e\n            \u003c/div\u003e\n            \u003cdiv className=\"space-y-2\"\u003e\n              \u003cLabel htmlFor=\"confirmPassword\"\u003eConfirm Password\u003c/Label\u003e\n              \u003cInput\n                id=\"confirmPassword\"\n                name=\"confirmPassword\"\n                type=\"password\"\n                required\n              /\u003e\n            \u003c/div\u003e\n          \u003c/CardContent\u003e\n          \u003cCardFooter className=\"flex flex-col space-y-4\"\u003e\n            \u003cButton type=\"submit\" className=\"w-full\" disabled={isLoading}\u003e\n              {isLoading ? \"Creating account...\" : \"Create account\"}\n            \u003c/Button\u003e\n            \u003cdiv className=\"text-center text-sm\"\u003e\n              Already have an account?{\" \"}\n              \u003cLink href=\"/login\" className=\"text-primary\"\u003e\n                Login\n              \u003c/Link\u003e\n            \u003c/div\u003e\n          \u003c/CardFooter\u003e\n        \u003c/form\u003e\n      \u003c/Card\u003e\n    \u003c/div\u003e\n  );\n}\n[V0_FILE]tsx:file=\"components/dashboard/dashboard-header.tsx\"\ninterface DashboardHeaderProps {\n  heading: string;\n  text?: string;\n  children?: React.ReactNode;\n}\n\nexport function DashboardHeader({\n  heading,\n  text,\n  children,\n}: DashboardHeaderProps) {\n  return (\n    \u003cdiv className=\"flex items-center justify-between px-2\"\u003e\n      \u003cdiv className=\"grid gap-1\"\u003e\n        \u003ch1 className=\"font-heading text-3xl md:text-4xl\"\u003e{heading}\u003c/h1\u003e\n        {text \u0026\u0026 \u003cp className=\"text-lg text-muted-foreground\"\u003e{text}\u003c/p\u003e}\n      \u003c/div\u003e\n      {children}\n    \u003c/div\u003e\n  );\n}\n[V0_FILE]tsx:file=\"components/dashboard/dashboard-shell.tsx\"\ninterface DashboardShellProps {\n  children: React.ReactNode;\n}\n\nexport function DashboardShell({ children }: DashboardShellProps) {\n  return (\n    \u003cdiv className=\"flex min-h-screen flex-col\"\u003e\n      \u003cmain className=\"flex flex-1 flex-col gap-4 p-4 md:gap-8 md:p-8\"\u003e\n        \u003cdiv className=\"mx-auto grid w-full max-w-7xl gap-4 md:gap-8\"\u003e\n          {children}\n        \u003c/div\u003e\n      \u003c/main\u003e\n    \u003c/div\u003e\n  );\n}\n[V0_FILE]tsx:file=\"components/dashboard/overview.tsx\"\n\"use client\";\n\nimport { Card } from \"@/components/ui/card\";\nimport { \n  Area, \n  AreaChart, \n  ResponsiveContainer, \n  Tooltip, \n  XAxis, \n  YAxis \n} from \"@/components/ui/chart\";\n\nconst data = [\n  {\n    name: \"Jan\",\n    total: 12,\n  },\n  {\n    name: \"Feb\",\n    total: 18,\n  },\n  {\n    name: \"Mar\",\n    total: 24,\n  },\n  {\n    name: \"Apr\",\n    total: 30,\n  },\n  {\n    name: \"May\",\n    total: 22,\n  },\n  {\n    name: \"Jun\",\n    total: 28,\n  },\n  {\n    name: \"Jul\",\n    total: 32,\n  },\n  {\n    name: \"Aug\",\n    total: 36,\n  },\n  {\n    name: \"Sep\",\n    total: 30,\n  },\n  {\n    name: \"Oct\",\n    total: 28,\n  },\n  {\n    name: \"Nov\",\n    total: 34,\n  },\n  {\n    name: \"Dec\",\n    total: 40,\n  },\n];\n\nexport function Overview() {\n  return (\n    \u003cResponsiveContainer width=\"100%\" height={350}\u003e\n      \u003cAreaChart\n        data={data}\n        margin={{\n          top: 10,\n          right: 30,\n          left: 0,\n          bottom: 0,\n        }}\n      \u003e\n        \u003cdefs\u003e\n          \u003clinearGradient id=\"colorTotal\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\"\u003e\n            \u003cstop offset=\"5%\" stopColor=\"#8884d8\" stopOpacity={0.8} /\u003e\n            \u003cstop offset=\"95%\" stopColor=\"#8884d8\" stopOpacity={0} /\u003e\n          \u003c/linearGradient\u003e\n        \u003c/defs\u003e\n        \u003cXAxis\n          dataKey=\"name\"\n          stroke=\"#888888\"\n          fontSize={12}\n          tickLine={false}\n          axisLine={false}\n        /\u003e\n        \u003cYAxis\n          stroke=\"#888888\"\n          fontSize={12}\n          tickLine={false}\n          axisLine={false}\n          tickFormatter={(value) =\u003e `${value}`}\n        /\u003e\n        \u003cTooltip /\u003e\n        \u003cArea\n          type=\"monotone\"\n          dataKey=\"total\"\n          stroke=\"#8884d8\"\n          fillOpacity={1}\n          fill=\"url(#colorTotal)\"\n        /\u003e\n      \u003c/AreaChart\u003e\n    \u003c/ResponsiveContainer\u003e\n  );\n}\n[V0_FILE]tsx:file=\"components/dashboard/recent-tasks.tsx\"\n\"use client\";\n\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { Badge } from \"@/components/ui/badge\";\n\nconst tasks = [\n  {\n    id: \"TASK-8782\",\n    title: \"Create new landing page\",\n    status: \"In Progress\",\n    priority: \"High\",\n    assignee: {\n      name: \"Emma Wilson\",\n      email: \"emma@example.com\",\n      avatar: \"/placeholder.svg?height=32\u0026width=32\",\n    },\n  },\n  {\n    id: \"TASK-7878\",\n    title: \"Update user authentication flow\",\n    status: \"In Review\",\n    priority: \"Medium\",\n    assignee: {\n      name: \"Jackson Lee\",\n      email: \"jackson@example.com\",\n      avatar: \"/placeholder.svg?height=32\u0026width=32\",\n    },\n  },\n  {\n    id: \"TASK-7839\",\n    title: \"Implement notification system\",\n    status: \"Completed\",\n    priority: \"Medium\",\n    assignee: {\n      name: \"Sophia Chen\",\n      email: \"sophia@example.com\",\n      avatar: \"/placeholder.svg?height=32\u0026width=32\",\n    },\n  },\n  {\n    id: \"TASK-7349\",\n    title: \"Fix mobile responsiveness issues\",\n    status: \"In Progress\",\n    priority: \"High\",\n    assignee: {\n      name: \"Liam Johnson\",\n      email: \"liam@example.com\",\n      avatar: \"/placeholder.svg?height=32\u0026width=32\",\n    },\n  },\n  {\n    id: \"TASK-8572\",\n    title: \"Create API documentation\",\n    status: \"Not Started\",\n    priority: \"Low\",\n    assignee: {\n      name: \"Olivia Martinez\",\n      email: \"olivia@example.com\",\n      avatar: \"/placeholder.svg?height=32\u0026width=32\",\n    },\n  },\n];\n\nexport function RecentTasks() {\n  return (\n    \u003cdiv className=\"space-y-8\"\u003e\n      {tasks.map((task) =\u003e (\n        \u003cdiv key={task.id} className=\"flex items-center\"\u003e\n          \u003cAvatar className=\"h-9 w-9\"\u003e\n            \u003cAvatarImage src={task.assignee.avatar} alt={task.assignee.name} /\u003e\n            \u003cAvatarFallback\u003e\n              {task.assignee.name\n                .split(\" \")\n                .map((n) =\u003e n[0])\n                .join(\"\")}\n            \u003c/AvatarFallback\u003e\n          \u003c/Avatar\u003e\n          \u003cdiv className=\"ml-4 space-y-1\"\u003e\n            \u003cp className=\"text-sm font-medium leading-none\"\u003e{task.title}\u003c/p\u003e\n            \u003cp className=\"text-sm text-muted-foreground\"\u003e\n              {task.id} · Assigned to {task.assignee.name}\n            \u003c/p\u003e\n          \u003c/div\u003e\n          \u003cdiv className=\"ml-auto flex items-center gap-2\"\u003e\n            \u003cBadge\n              variant={\n                task.status === \"Completed\"\n                  ? \"success\"\n                  : task.status === \"In Progress\"\n                  ? \"default\"\n                  : task.status === \"In Review\"\n                  ? \"warning\"\n                  : \"secondary\"\n              }\n            \u003e\n              {task.status}\n            \u003c/Badge\u003e\n            \u003cBadge\n              variant={\n                task.priority === \"High\"\n                  ? \"destructive\"\n                  : task.priority === \"Medium\"\n                  ? \"default\"\n                  : \"outline\"\n              }\n            \u003e\n              {task.priority}\n            \u003c/Badge\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n      ))}\n    \u003c/div\u003e\n  );\n}\n[V0_FILE]tsx:file=\"components/dashboard/team-members.tsx\"\n\"use client\";\n\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\n\nconst teamMembers = [\n  {\n    id: 1,\n    name: \"Emma Wilson\",\n    email: \"emma@example.com\",\n    role: \"Product Manager\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    tasksAssigned: 8,\n    tasksCompleted: 5,\n  },\n  {\n    id: 2,\n    name: \"Jackson Lee\",\n    email: \"jackson@example.com\",\n    role: \"Frontend Developer\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    tasksAssigned: 12,\n    tasksCompleted: 10,\n  },\n  {\n    id: 3,\n    name: \"Sophia Chen\",\n    email: \"sophia@example.com\",\n    role: \"Backend Developer\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    tasksAssigned: 10,\n    tasksCompleted: 7,\n  },\n  {\n    id: 4,\n    name: \"Liam Johnson\",\n    email: \"liam@example.com\",\n    role: \"UI/UX Designer\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    tasksAssigned: 6,\n    tasksCompleted: 4,\n  },\n  {\n    id: 5,\n    name: \"Olivia Martinez\",\n    email: \"olivia@example.com\",\n    role: \"QA Engineer\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    tasksAssigned: 9,\n    tasksCompleted: 8,\n  },\n];\n\nexport function TeamMembers() {\n  return (\n    \u003cdiv className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\"\u003e\n      {teamMembers.map((member) =\u003e (\n        \u003cCard key={member.id}\u003e\n          \u003cCardHeader className=\"flex flex-row items-center gap-4 pb-2\"\u003e\n            \u003cAvatar className=\"h-10 w-10\"\u003e\n              \u003cAvatarImage src={member.avatar} alt={member.name} /\u003e\n              \u003cAvatarFallback\u003e\n                {member.name\n                  .split(\" \")\n                  .map((n) =\u003e n[0])\n                  .join(\"\")}\n              \u003c/AvatarFallback\u003e\n            \u003c/Avatar\u003e\n            \u003cdiv className=\"grid gap-1\"\u003e\n              \u003cCardTitle className=\"text-base\"\u003e{member.name}\u003c/CardTitle\u003e\n              \u003cCardDescription className=\"text-xs\"\u003e\n                {member.role}\n              \u003c/CardDescription\u003e\n            \u003c/div\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent\u003e\n            \u003cdiv className=\"grid gap-2\"\u003e\n              \u003cdiv className=\"grid grid-cols-2 gap-2 text-sm\"\u003e\n                \u003cdiv className=\"flex flex-col\"\u003e\n                  \u003cspan className=\"text-muted-foreground\"\u003eAssigned\u003c/span\u003e\n                  \u003cspan className=\"font-medium\"\u003e{member.tasksAssigned}\u003c/span\u003e\n                \u003c/div\u003e\n                \u003cdiv className=\"flex flex-col\"\u003e\n                  \u003cspan className=\"text-muted-foreground\"\u003eCompleted\u003c/span\u003e\n                  \u003cspan className=\"font-medium\"\u003e{member.tasksCompleted}\u003c/span\u003e\n                \u003c/div\u003e\n              \u003c/div\u003e\n              \u003cdiv className=\"mt-2 flex justify-between\"\u003e\n                \u003cButton size=\"sm\" variant=\"outline\"\u003e\n                  View Profile\n                \u003c/Button\u003e\n                \u003cButton size=\"sm\"\u003eAssign Task\u003c/Button\u003e\n              \u003c/div\u003e\n            \u003c/div\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n      ))}\n    \u003c/div\u003e\n  );\n}\n[V0_FILE]tsx:file=\"components/tasks/kanban-board.tsx\"\n\"use client\";\n\nimport { useState } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\n\n// Initial task data\nconst initialTasks = {\n  \"to-do\": [\n    {\n      id: \"task-1\",\n      title: \"Create new landing page\",\n      description: \"Design and implement a new landing page for the product\",\n      priority: \"High\",\n      assignee: {\n        name: \"Emma Wilson\",\n        avatar: \"/placeholder.svg?height=32\u0026width=32\",\n      },\n      dueDate: \"2023-12-15\",\n    },\n    {\n      id: \"task-2\",\n      title: \"Update user authentication flow\",\n      description: \"Improve the user authentication experience\",\n      priority: \"Medium\",\n      assignee: {\n        name: \"Jackson Lee\",\n        avatar: \"/placeholder.svg?height=32\u0026width=32\",\n      },\n      dueDate: \"2023-12-20\",\n    },\n    {\n      id: \"task-3\",\n      title: \"Create API documentation\",\n      description: \"Document all API endpoints for developers\",\n      priority: \"Low\",\n      assignee: {\n        name: \"Olivia Martinez\",\n        avatar: \"/placeholder.svg?height=32\u0026width=32\",\n      },\n      dueDate: \"2023-12-30\",\n    },\n  ],\n  \"in-progress\": [\n    {\n      id: \"task-4\",\n      title: \"Implement notification system\",\n      description: \"Create a real-time notification system for users\",\n      priority: \"Medium\",\n      assignee: {\n        name: \"Sophia Chen\",\n        avatar: \"/placeholder.svg?height=32\u0026width=32\",\n      },\n      dueDate: \"2023-12-10\",\n    },\n    {\n      id: \"task-5\",\n      title: \"Fix mobile responsiveness issues\",\n      description: \"Address UI issues on mobile devices\",\n      priority: \"High\",\n      assignee: {\n        name: \"Liam Johnson\",\n        avatar: \"/placeholder.svg?height=32\u0026width=32\",\n      },\n      dueDate: \"2023-12-05\",\n    },\n  ],\n  \"in-review\": [\n    {\n      id: \"task-6\",\n      title: \"Optimize database queries\",\n      description: \"Improve performance of slow database queries\",\n      priority: \"High\",\n      assignee: {\n        name: \"Jackson Lee\",\n        avatar: \"/placeholder.svg?height=32\u0026width=32\",\n      },\n      dueDate: \"2023-12-08\",\n    },\n  ],\n  \"completed\": [\n    {\n      id: \"task-7\",\n      title: \"Set up CI/CD pipeline\",\n      description: \"Implement continuous integration and deployment\",\n      priority: \"Medium\",\n      assignee: {\n        name: \"Sophia Chen\",\n        avatar: \"/placeholder.svg?height=32\u0026width=32\",\n      },\n      dueDate: \"2023-12-01\",\n    },\n    {\n      id: \"task-8\",\n      title: \"Create user onboarding flow\",\n      description: \"Design and implement user onboarding experience\",\n      priority: \"Medium\",\n      assignee: {\n        name: \"Emma Wilson\",\n        avatar: \"/placeholder.svg?height=32\u0026width=32\",\n      },\n      dueDate: \"2023-11-25\",\n    },\n  ],\n};\n\n// Column definitions\nconst columns = [\n  {\n    id: \"to-do\",\n    title: \"To Do\",\n    color: \"bg-gray-100\",\n  },\n  {\n    id: \"in-progress\",\n    title: \"In Progress\",\n    color: \"bg-blue-50\",\n  },\n  {\n    id: \"in-review\",\n    title: \"In Review\",\n    color: \"bg-yellow-50\",\n  },\n  {\n    id: \"completed\",\n    title: \"Completed\",\n    color: \"bg-green-50\",\n  },\n];\n\nexport function KanbanBoard() {\n  const [tasks, setTasks] = useState(initialTasks);\n\n  const handleDragEnd = (result) =\u003e {\n    const { destination, source, draggableId } = result;\n\n    // If there's no destination or the item is dropped in the same place\n    if (!destination || \n        (destination.droppableId === source.droppableId \u0026\u0026 \n         destination.index === source.index)) {\n      return;\n    }\n\n    // Find the task that was dragged\n    const sourceColumn = tasks[source.droppableId];\n    const taskToMove = sourceColumn.find(task =\u003e task.id === draggableId);\n\n    // Create new state\n    const newTasks = { ...tasks };\n    \n    // Remove from source column\n    newTasks[source.droppableId] = sourceColumn.filter(\n      task =\u003e task.id !== draggableId\n    );\n    \n    // Add to destination column\n    newTasks[destination.droppableId] = [\n      ...newTasks[destination.droppableId].slice(0, destination.index),\n      taskToMove,\n      ...newTasks[destination.droppableId].slice(destination.index)\n    ];\n    \n    setTasks(newTasks);\n  };\n\n  return (\n    \u003cDragDropContext onDragEnd={handleDragEnd}\u003e\n      \u003cdiv className=\"grid grid-cols-1 gap-4 md:grid-cols-2 lg:grid-cols-4\"\u003e\n        {columns.map((column) =\u003e (\n          \u003cdiv key={column.id} className=\"flex flex-col\"\u003e\n            \u003cdiv className={`rounded-t-md p-3 ${column.color}`}\u003e\n              \u003ch3 className=\"font-medium\"\u003e{column.title}\u003c/h3\u003e\n              \u003cdiv className=\"text-sm text-muted-foreground\"\u003e\n                {tasks[column.id].length} tasks\n              \u003c/div\u003e\n            \u003c/div\u003e\n            \u003cDroppable droppableId={column.id}\u003e\n              {(provided) =\u003e (\n                \u003cdiv\n                  {...provided.droppableProps}\n                  ref={provided.innerRef}\n                  className=\"flex flex-1 flex-col gap-2 rounded-b-md border border-t-0 bg-background p-2\"\n                \u003e\n                  {tasks[column.id].map((task, index) =\u003e (\n                    \u003cDraggable\n                      key={task.id}\n                      draggableId={task.id}\n                      index={index}\n                    \u003e\n                      {(provided) =\u003e (\n                        \u003cCard\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                          className=\"cursor-grab\"\n                        \u003e\n                          \u003cCardHeader className=\"p-3 pb-0\"\u003e\n                            \u003cCardTitle className=\"text-sm font-medium\"\u003e\n                              {task.title}\n                            \u003c/CardTitle\u003e\n                          \u003c/CardHeader\u003e\n                          \u003cCardContent className=\"p-3\"\u003e\n                            \u003cp className=\"text-xs text-muted-foreground\"\u003e\n                              {task.description}\n                            \u003c/p\u003e\n                            \u003cdiv className=\"mt-2 flex items-center justify-between\"\u003e\n                              \u003cBadge\n                                variant={\n                                  task.priority === \"High\"\n                                    ? \"destructive\"\n                                    : task.priority === \"Medium\"\n                                    ? \"default\"\n                                    : \"outline\"\n                                }\n                                className=\"text-xs\"\n                              \u003e\n                                {task.priority}\n                              \u003c/Badge\u003e\n                              \u003cdiv className=\"flex items-center gap-1\"\u003e\n                                \u003cspan className=\"text-xs text-muted-foreground\"\u003e\n                                  {new Date(task.dueDate).toLocaleDateString()}\n                                \u003c/span\u003e\n                                \u003cAvatar className=\"h-6 w-6\"\u003e\n                                  \u003cAvatarImage\n                                    src={task.assignee.avatar}\n                                    alt={task.assignee.name}\n                                  /\u003e\n                                  \u003cAvatarFallback className=\"text-xs\"\u003e\n                                    {task.assignee.name\n                                      .split(\" \")\n                                      .map((n) =\u003e n[0])\n                                      .join(\"\")}\n                                  \u003c/AvatarFallback\u003e\n                                \u003c/Avatar\u003e\n                              \u003c/div\u003e\n                            \u003c/div\u003e\n                          \u003c/CardContent\u003e\n                        \u003c/Card\u003e\n                      )}\n                    \u003c/Draggable\u003e\n                  ))}\n                  {provided.placeholder}\n                \u003c/div\u003e\n              )}\n            \u003c/Droppable\u003e\n          \u003c/div\u003e\n        ))}\n      \u003c/div\u003e\n    \u003c/DragDropContext\u003e\n  );\n}\n[V0_FILE]tsx:file=\"components/tasks/task-filters.tsx\"\n\"use client\";\n\nimport { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { Tabs, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\n\nexport function TaskFilters() {\n  const [view, setView] = useState(\"kanban\");\n\n  return (\n    \u003cdiv className=\"flex flex-col gap-4 sm:flex-row sm:items-center sm:justify-between\"\u003e\n      \u003cdiv className=\"flex items-center gap-2\"\u003e\n        \u003cTabs defaultValue=\"kanban\" className=\"w-[400px]\" onValueChange={setView}\u003e\n          \u003cTabsList\u003e\n            \u003cTabsTrigger value=\"kanban\"\u003eKanban\u003c/TabsTrigger\u003e\n            \u003cTabsTrigger value=\"list\"\u003eList\u003c/TabsTrigger\u003e\n            \u003cTabsTrigger value=\"calendar\"\u003eCalendar\u003c/TabsTrigger\u003e\n          \u003c/TabsList\u003e\n        \u003c/Tabs\u003e\n      \u003c/div\u003e\n      \u003cdiv className=\"flex flex-col gap-2 sm:flex-row sm:items-center\"\u003e\n        \u003cdiv className=\"flex items-center gap-2\"\u003e\n          \u003cInput\n            placeholder=\"Search tasks...\"\n            className=\"h-9 w-[150px] sm:w-[180px] lg:w-[250px]\"\n          /\u003e\n          \u003cSelect defaultValue=\"all\"\u003e\n            \u003cSelectTrigger className=\"h-9 w-[130px]\"\u003e\n              \u003cSelectValue placeholder=\"Priority\" /\u003e\n            \u003c/SelectTrigger\u003e\n            \u003cSelectContent\u003e\n              \u003cSelectItem value=\"all\"\u003eAll Priorities\u003c/SelectItem\u003e\n              \u003cSelectItem value=\"high\"\u003eHigh\u003c/SelectItem\u003e\n              \u003cSelectItem value=\"medium\"\u003eMedium\u003c/SelectItem\u003e\n              \u003cSelectItem value=\"low\"\u003eLow\u003c/SelectItem\u003e\n            \u003c/SelectContent\u003e\n          \u003c/Select\u003e\n          \u003cSelect defaultValue=\"all\"\u003e\n            \u003cSelectTrigger className=\"h-9 w-[130px]\"\u003e\n              \u003cSelectValue placeholder=\"Assignee\" /\u003e\n            \u003c/SelectTrigger\u003e\n            \u003cSelectContent\u003e\n              \u003cSelectItem value=\"all\"\u003eAll Assignees\u003c/SelectItem\u003e\n              \u003cSelectItem value=\"emma\"\u003eEmma Wilson\u003c/SelectItem\u003e\n              \u003cSelectItem value=\"jackson\"\u003eJackson Lee\u003c/SelectItem\u003e\n              \u003cSelectItem value=\"sophia\"\u003eSophia Chen\u003c/SelectItem\u003e\n              \u003cSelectItem value=\"liam\"\u003eLiam Johnson\u003c/SelectItem\u003e\n              \u003cSelectItem value=\"olivia\"\u003eOlivia Martinez\u003c/SelectItem\u003e\n            \u003c/SelectContent\u003e\n          \u003c/Select\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n  );\n}\n[V0_FILE]tsx:file=\"components/tasks/task-form.tsx\"\n\"use client\";\n\nimport { useState } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport { Button } from \"@/components/ui/button\";\nimport { Calendar } from \"@/components/ui/calendar\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { format } from \"date-fns\";\nimport { CalendarIcon } from 'lucide-react';\nimport { useForm } from \"react-hook-form\";\n\nexport function TaskForm() {\n  const router = useRouter();\n  const [isLoading, setIsLoading] = useState(false);\n  \n  const form = useForm({\n    defaultValues: {\n      title: \"\",\n      description: \"\",\n      priority: \"medium\",\n      assignee: \"\",\n      dueDate: new Date(),\n      tags: \"\",\n    },\n  });\n\n  async function onSubmit(data) {\n    setIsLoading(true);\n    \n    try {\n      // Here you would normally send the data to your API\n      console.log(\"Form submitted:\", data);\n      \n      // Simulate API call\n      await new Promise((resolve) =\u003e setTimeout(resolve, 1000));\n      \n      // Redirect to tasks page\n      router.push(\"/tasks\");\n    } catch (error) {\n      console.error(\"Error creating task:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  return (\n    \u003cCard\u003e\n      \u003cCardHeader\u003e\n        \u003cCardTitle\u003eCreate New Task\u003c/CardTitle\u003e\n        \u003cCardDescription\u003e\n          Add a new task and assign it to team members\n        \u003c/CardDescription\u003e\n      \u003c/CardHeader\u003e\n      \u003cForm {...form}\u003e\n        \u003cform onSubmit={form.handleSubmit(onSubmit)}\u003e\n          \u003cCardContent className=\"space-y-4\"\u003e\n            \u003cFormField\n              control={form.control}\n              name=\"title\"\n              render={({ field }) =\u003e (\n                \u003cFormItem\u003e\n                  \u003cFormLabel\u003eTask Title\u003c/FormLabel\u003e\n                  \u003cFormControl\u003e\n                    \u003cInput placeholder=\"Enter task title\" {...field} /\u003e\n                  \u003c/FormControl\u003e\n                  \u003cFormMessage /\u003e\n                \u003c/FormItem\u003e\n              )}\n            /\u003e\n            \u003cFormField\n              control={form.control}\n              name=\"description\"\n              render={({ field }) =\u003e (\n                \u003cFormItem\u003e\n                  \u003cFormLabel\u003eDescription\u003c/FormLabel\u003e\n                  \u003cFormControl\u003e\n                    \u003cTextarea\n                      placeholder=\"Enter task description\"\n                      className=\"min-h-[100px]\"\n                      {...field}\n                    /\u003e\n                  \u003c/FormControl\u003e\n                  \u003cFormMessage /\u003e\n                \u003c/FormItem\u003e\n              )}\n            /\u003e\n            \u003cdiv className=\"grid grid-cols-1 gap-4 md:grid-cols-2\"\u003e\n              \u003cFormField\n                control={form.control}\n                name=\"priority\"\n                render={({ field }) =\u003e (\n                  \u003cFormItem\u003e\n                    \u003cFormLabel\u003ePriority\u003c/FormLabel\u003e\n                    \u003cSelect\n                      onValueChange={field.onChange}\n                      defaultValue={field.value}\n                    \u003e\n                      \u003cFormControl\u003e\n                        \u003cSelectTrigger\u003e\n                          \u003cSelectValue placeholder=\"Select priority\" /\u003e\n                        \u003c/SelectTrigger\u003e\n                      \u003c/FormControl\u003e\n                      \u003cSelectContent\u003e\n                        \u003cSelectItem value=\"high\"\u003eHigh\u003c/SelectItem\u003e\n                        \u003cSelectItem value=\"medium\"\u003eMedium\u003c/SelectItem\u003e\n                        \u003cSelectItem value=\"low\"\u003eLow\u003c/SelectItem\u003e\n                      \u003c/SelectContent\u003e\n                    \u003c/Select\u003e\n                    \u003cFormMessage /\u003e\n                  \u003c/FormItem\u003e\n                )}\n              /\u003e\n              \u003cFormField\n                control={form.control}\n                name=\"assignee\"\n                render={({ field }) =\u003e (\n                  \u003cFormItem\u003e\n                    \u003cFormLabel\u003eAssignee\u003c/FormLabel\u003e\n                    \u003cSelect\n                      onValueChange={field.onChange}\n                      defaultValue={field.value}\n                    \u003e\n                      \u003cFormControl\u003e\n                        \u003cSelectTrigger\u003e\n                          \u003cSelectValue placeholder=\"Select team member\" /\u003e\n                        \u003c/SelectTrigger\u003e\n                      \u003c/FormControl\u003e\n                      \u003cSelectContent\u003e\n                        \u003cSelectItem value=\"emma\"\u003eEmma Wilson\u003c/SelectItem\u003e\n                        \u003cSelectItem value=\"jackson\"\u003eJackson Lee\u003c/SelectItem\u003e\n                        \u003cSelectItem value=\"sophia\"\u003eSophia Chen\u003c/SelectItem\u003e\n                        \u003cSelectItem value=\"liam\"\u003eLiam Johnson\u003c/SelectItem\u003e\n                        \u003cSelectItem value=\"olivia\"\u003eOlivia Martinez\u003c/SelectItem\u003e\n                      \u003c/SelectContent\u003e\n                    \u003c/Select\u003e\n                    \u003cFormMessage /\u003e\n                  \u003c/FormItem\u003e\n                )}\n              /\u003e\n            \u003c/div\u003e\n            \u003cdiv className=\"grid grid-cols-1 gap-4 md:grid-cols-2\"\u003e\n              \u003cFormField\n                control={form.control}\n                name=\"dueDate\"\n                render={({ field }) =\u003e (\n                  \u003cFormItem className=\"flex flex-col\"\u003e\n                    \u003cFormLabel\u003eDue Date\u003c/FormLabel\u003e\n                    \u003cPopover\u003e\n                      \u003cPopoverTrigger asChild\u003e\n                        \u003cFormControl\u003e\n                          \u003cButton\n                            variant={\"outline\"}\n                            className={\n                              \"w-full pl-3 text-left font-normal\"\n                            }\n                          \u003e\n                            {field.value ? (\n                              format(field.value, \"PPP\")\n                            ) : (\n                              \u003cspan\u003ePick a date\u003c/span\u003e\n                            )}\n                            \u003cCalendarIcon className=\"ml-auto h-4 w-4 opacity-50\" /\u003e\n                          \u003c/Button\u003e\n                        \u003c/FormControl\u003e\n                      \u003c/PopoverTrigger\u003e\n                      \u003cPopoverContent className=\"w-auto p-0\" align=\"start\"\u003e\n                        \u003cCalendar\n                          mode=\"single\"\n                          selected={field.value}\n                          onSelect={field.onChange}\n                          initialFocus\n                        /\u003e\n                      \u003c/PopoverContent\u003e\n                    \u003c/Popover\u003e\n                    \u003cFormMessage /\u003e\n                  \u003c/FormItem\u003e\n                )}\n              /\u003e\n              \u003cFormField\n                control={form.control}\n                name=\"tags\"\n                render={({ field }) =\u003e (\n                  \u003cFormItem\u003e\n                    \u003cFormLabel\u003eTags\u003c/FormLabel\u003e\n                    \u003cFormControl\u003e\n                      \u003cInput\n                        placeholder=\"Enter tags separated by commas\"\n                        {...field}\n                      /\u003e\n                    \u003c/FormControl\u003e\n                    \u003cFormDescription\u003e\n                      E.g. frontend, bug, feature\n                    \u003c/FormDescription\u003e\n                    \u003cFormMessage /\u003e\n                  \u003c/FormItem\u003e\n                )}\n              /\u003e\n            \u003c/div\u003e\n          \u003c/CardContent\u003e\n          \u003cCardFooter className=\"flex justify-between\"\u003e\n            \u003cButton variant=\"outline\" type=\"button\" onClick={() =\u003e router.back()}\u003e\n              Cancel\n            \u003c/Button\u003e\n            \u003cButton type=\"submit\" disabled={isLoading}\u003e\n              {isLoading ? \"Creating...\" : \"Create Task\"}\n            \u003c/Button\u003e\n          \u003c/CardFooter\u003e\n        \u003c/form\u003e\n      \u003c/Form\u003e\n    \u003c/Card\u003e\n  );\n}\n[V0_FILE]tsx:file=\"components/tasks/task-details.tsx\"\n\"use client\";\n\nimport { useState } from \"react\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { format } from \"date-fns\";\n\n// Mock task data - in a real app, this would come from an API\nconst taskData = {\n  id: \"TASK-8782\",\n  title: \"Create new landing page\",\n  description:\n    \"Design and implement a new landing page for the product. The page should highlight key features and include a sign-up form for new users. Make sure it's responsive and works well on mobile devices.\",\n  status: \"In Progress\",\n  priority: \"High\",\n  createdAt: \"2023-11-15T10:30:00Z\",\n  dueDate: \"2023-12-15T23:59:59Z\",\n  progress: 65,\n  assignee: {\n    name: \"Emma Wilson\",\n    email: \"emma@example.com\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n  },\n  creator: {\n    name: \"Liam Johnson\",\n    email: \"liam@example.com\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n  },\n  tags: [\"frontend\", \"design\", \"marketing\"],\n  subtasks: [\n    { id: 1, title: \"Design mockups\", completed: true },\n    { id: 2, title: \"Implement HTML/CSS\", completed: true },\n    { id: 3, title: \"Add JavaScript interactions\", completed: false },\n    { id: 4, title: \"Optimize for mobile\", completed: false },\n    { id: 5, title: \"Test across browsers\", completed: false },\n  ],\n};\n\nexport function TaskDetails({ id }: { id: string }) {\n  const [task, setTask] = useState(taskData);\n  const [isEditing, setIsEditing] = useState(false);\n\n  const toggleSubtask = (subtaskId: number) =\u003e {\n    setTask((prevTask) =\u003e ({\n      ...prevTask,\n      subtasks: prevTask.subtasks.map((subtask) =\u003e\n        subtask.id === subtaskId\n          ? { ...subtask, completed: !subtask.completed }\n          : subtask\n      ),\n      progress: calculateProgress(\n        prevTask.subtasks.map((subtask) =\u003e\n          subtask.id === subtaskId\n            ? { ...subtask, completed: !subtask.completed }\n            : subtask\n        )\n      ),\n    }));\n  };\n\n  const calculateProgress = (subtasks) =\u003e {\n    if (subtasks.length === 0) return 0;\n    const completedCount = subtasks.filter((subtask) =\u003e subtask.completed).length;\n    return Math.round((completedCount / subtasks.length) * 100);\n  };\n\n  return (\n    \u003cCard\u003e\n      \u003cCardHeader\u003e\n        \u003cdiv className=\"flex items-start justify-between\"\u003e\n          \u003cdiv\u003e\n            \u003cCardTitle className=\"text-xl\"\u003e{task.title}\u003c/CardTitle\u003e\n            \u003cCardDescription\u003e\n              {task.id} · Created on{\" \"}\n              {format(new Date(task.createdAt), \"MMM d, yyyy\")}\n            \u003c/CardDescription\u003e\n          \u003c/div\u003e\n          \u003cdiv className=\"flex items-center gap-2\"\u003e\n            \u003cButton variant=\"outline\" size=\"sm\" onClick={() =\u003e setIsEditing(true)}\u003e\n              Edit\n            \u003c/Button\u003e\n            \u003cButton variant=\"outline\" size=\"sm\"\u003e\n              Delete\n            \u003c/Button\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n        \u003cdiv className=\"mt-2 flex flex-wrap gap-2\"\u003e\n          \u003cBadge\n            variant={\n              task.status === \"Completed\"\n                ? \"success\"\n                : task.status === \"In Progress\"\n                ? \"default\"\n                : task.status === \"In Review\"\n                ? \"warning\"\n                : \"secondary\"\n            }\n          \u003e\n            {task.status}\n          \u003c/Badge\u003e\n          \u003cBadge\n            variant={\n              task.priority === \"High\"\n                ? \"destructive\"\n                : task.priority === \"Medium\"\n                ? \"default\"\n                : \"outline\"\n            }\n          \u003e\n            {task.priority}\n          \u003c/Badge\u003e\n          {task.tags.map((tag) =\u003e (\n            \u003cBadge key={tag} variant=\"outline\"\u003e\n              {tag}\n            \u003c/Badge\u003e\n          ))}\n        \u003c/div\u003e\n      \u003c/CardHeader\u003e\n      \u003cCardContent className=\"space-y-4\"\u003e\n        \u003cdiv\u003e\n          \u003ch3 className=\"mb-2 font-medium\"\u003eDescription\u003c/h3\u003e\n          \u003cp className=\"text-sm text-muted-foreground\"\u003e{task.description}\u003c/p\u003e\n        \u003c/div\u003e\n        \n        \u003cdiv\u003e\n          \u003cdiv className=\"mb-2 flex items-center justify-between\"\u003e\n            \u003ch3 className=\"font-medium\"\u003eProgress\u003c/h3\u003e\n            \u003cspan className=\"text-sm font-medium\"\u003e{task.progress}%\u003c/span\u003e\n          \u003c/div\u003e\n          \u003cProgress value={task.progress} className=\"h-2\" /\u003e\n        \u003c/div\u003e\n        \n        \u003cdiv className=\"grid gap-4 md:grid-cols-2\"\u003e\n          \u003cdiv\u003e\n            \u003ch3 className=\"mb-2 font-medium\"\u003eAssignee\u003c/h3\u003e\n            \u003cdiv className=\"flex items-center gap-2\"\u003e\n              \u003cAvatar\u003e\n                \u003cAvatarImage src={task.assignee.avatar} alt={task.assignee.name} /\u003e\n                \u003cAvatarFallback\u003e\n                  {task.assignee.name\n                    .split(\" \")\n                    .map((n) =\u003e n[0])\n                    .join(\"\")}\n                \u003c/AvatarFallback\u003e\n              \u003c/Avatar\u003e\n              \u003cdiv\u003e\n                \u003cp className=\"text-sm font-medium\"\u003e{task.assignee.name}\u003c/p\u003e\n                \u003cp className=\"text-xs text-muted-foreground\"\u003e{task.assignee.email}\u003c/p\u003e\n              \u003c/div\u003e\n            \u003c/div\u003e\n          \u003c/div\u003e\n          \n          \u003cdiv\u003e\n            \u003ch3 className=\"mb-2 font-medium\"\u003eDue Date\u003c/h3\u003e\n            \u003cp className=\"text-sm\"\u003e\n              {format(new Date(task.dueDate), \"MMMM d, yyyy\")}\n            \u003c/p\u003e\n            \u003cp className=\"text-xs text-muted-foreground\"\u003e\n              {new Date(task.dueDate) \u003c new Date()\n                ? \"Overdue\"\n                : `${Math.ceil(\n                    (new Date(task.dueDate).getTime() - new Date().getTime()) /\n                      (1000 * 60 * 60 * 24)\n                  )} days remaining`}\n            \u003c/p\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n        \n        \u003cSeparator /\u003e\n        \n        \u003cdiv\u003e\n          \u003ch3 className=\"mb-2 font-medium\"\u003eSubtasks\u003c/h3\u003e\n          \u003cdiv className=\"space-y-2\"\u003e\n            {task.subtasks.map((subtask) =\u003e (\n              \u003cdiv\n                key={subtask.id}\n                className=\"flex items-center gap-2 rounded-md border p-2\"\n              \u003e\n                \u003cinput\n                  type=\"checkbox\"\n                  checked={subtask.completed}\n                  onChange={() =\u003e toggleSubtask(subtask.id)}\n                  className=\"h-4 w-4 rounded border-gray-300\"\n                /\u003e\n                \u003cspan\n                  className={`text-sm ${\n                    subtask.completed ? \"text-muted-foreground line-through\" : \"\"\n                  }`}\n                \u003e\n                  {subtask.title}\n                \u003c/span\u003e\n              \u003c/div\u003e\n            ))}\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/CardContent\u003e\n      \u003cCardFooter className=\"flex justify-between\"\u003e\n        \u003cButton variant=\"outline\"\u003eBack to Tasks\u003c/Button\u003e\n        \u003cButton\u003eUpdate Status\u003c/Button\u003e\n      \u003c/CardFooter\u003e\n    \u003c/Card\u003e\n  );\n}\n[V0_FILE]tsx:file=\"components/tasks/task-comments.tsx\"\n\"use client\";\n\nimport { useState } from \"react\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Card,\n  CardContent,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { formatDistanceToNow } from \"date-fns\";\n\n// Mock comments data\nconst initialComments = [\n  {\n    id: 1,\n    user: {\n      name: \"Emma Wilson\",\n      avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    },\n    content: \"I've started working on the design mockups. Will share them by tomorrow.\",\n    timestamp: new Date(Date.now() - 1000 * 60 * 60 * 3), // 3 hours ago\n  },\n  {\n    id: 2,\n    user: {\n      name: \"Liam Johnson\",\n      avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    },\n    content: \"Looks good! Make sure to follow the brand guidelines for colors and typography.\",\n    timestamp: new Date(Date.now() - 1000 * 60 * 60 * 2), // 2 hours ago\n  },\n  {\n    id: 3,\n    user: {\n      name: \"Sophia Chen\",\n      avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    },\n    content: \"I can help with the JavaScript interactions once the HTML/CSS is ready.\",\n    timestamp: new Date(Date.now() - 1000 * 60 * 30), // 30 minutes ago\n  },\n];\n\nexport function TaskComments({ id }: { id: string }) {\n  const [comments, setComments] = useState(initialComments);\n  const [newComment, setNewComment] = useState(\"\");\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleSubmitComment = () =\u003e {\n    if (!newComment.trim()) return;\n    \n    setIsSubmitting(true);\n    \n    // Simulate API call\n    setTimeout(() =\u003e {\n      const comment = {\n        id: comments.length + 1,\n        user: {\n          name: \"Current User\", // In a real app, this would be the logged-in user\n          avatar: \"/placeholder.svg?height=40\u0026width=40\",\n        },\n        content: newComment,\n        timestamp: new Date(),\n      };\n      \n      setComments([...comments, comment]);\n      setNewComment(\"\");\n      setIsSubmitting(false);\n    }, 500);\n  };\n\n  return (\n    \u003cCard\u003e\n      \u003cCardHeader\u003e\n        \u003cCardTitle className=\"text-lg\"\u003eComments\u003c/CardTitle\u003e\n      \u003c/CardHeader\u003e\n      \u003cCardContent className=\"space-y-4\"\u003e\n        {comments.length === 0 ? (\n          \u003cp className=\"text-center text-sm text-muted-foreground\"\u003e\n            No comments yet. Be the first to comment!\n          \u003c/p\u003e\n        ) : (\n          \u003cdiv className=\"space-y-4\"\u003e\n            {comments.map((comment) =\u003e (\n              \u003cdiv key={comment.id} className=\"flex gap-3\"\u003e\n                \u003cAvatar className=\"h-8 w-8\"\u003e\n                  \u003cAvatarImage src={comment.user.avatar} alt={comment.user.name} /\u003e\n                  \u003cAvatarFallback\u003e\n                    {comment.user.name\n                      .split(\" \")\n                      .map((n) =\u003e n[0])\n                      .join(\"\")}\n                  \u003c/AvatarFallback\u003e\n                \u003c/Avatar\u003e\n                \u003cdiv className=\"flex-1 space-y-1\"\u003e\n                  \u003cdiv className=\"flex items-center justify-between\"\u003e\n                    \u003cp className=\"text-sm font-medium\"\u003e{comment.user.name}\u003c/p\u003e\n                    \u003cp className=\"text-xs text-muted-foreground\"\u003e\n                      {formatDistanceToNow(comment.timestamp, { addSuffix: true })}\n                    \u003c/p\u003e\n                  \u003c/div\u003e\n                  \u003cp className=\"text-sm\"\u003e{comment.content}\u003c/p\u003e\n                \u003c/div\u003e\n              \u003c/div\u003e\n            ))}\n          \u003c/div\u003e\n        )}\n      \u003c/CardContent\u003e\n      \u003cCardFooter\u003e\n        \u003cdiv className=\"flex w-full flex-col space-y-2\"\u003e\n          \u003cTextarea\n            placeholder=\"Add a comment...\"\n            value={newComment}\n            onChange={(e) =\u003e setNewComment(e.target.value)}\n            className=\"min-h-[80px] resize-none\"\n          /\u003e\n          \u003cdiv className=\"flex justify-end\"\u003e\n            \u003cButton \n              onClick={handleSubmitComment} \n              disabled={!newComment.trim() || isSubmitting}\n            \u003e\n              {isSubmitting ? \"Posting...\" : \"Post Comment\"}\n            \u003c/Button\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/CardFooter\u003e\n    \u003c/Card\u003e\n  );\n}\n[V0_FILE]tsx:file=\"components/tasks/task-attachments.tsx\"\n\"use client\";\n\nimport { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Card,\n  CardContent,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { formatBytes } from \"@/lib/utils\";\nimport { FileIcon, ImageIcon, PaperclipIcon, TrashIcon, UploadIcon } from 'lucide-react';\n\n// Mock attachments data\nconst initialAttachments = [\n  {\n    id: 1,\n    name: \"landing-page-mockup.png\",\n    type: \"image/png\",\n    size: 1200000, // 1.2 MB\n    url: \"/placeholder.svg?height=100\u0026width=100\",\n    uploadedAt: new Date(Date.now() - 1000 * 60 * 60 * 24), // 1 day ago\n  },\n  {\n    id: 2,\n    name: \"requirements.pdf\",\n    type: \"application/pdf\",\n    size: 500000, // 500 KB\n    url: \"#\",\n    uploadedAt: new Date(Date.now() - 1000 * 60 * 60 * 48), // 2 days ago\n  },\n  {\n    id: 3,\n    name: \"brand-guidelines.docx\",\n    type: \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n    size: 350000, // 350 KB\n    url: \"#\",\n    uploadedAt: new Date(Date.now() - 1000 * 60 * 60 * 72), // 3 days ago\n  },\n];\n\nexport function TaskAttachments({ id }: { id: string }) {\n  const [attachments, setAttachments] = useState(initialAttachments);\n  const [isUploading, setIsUploading] = useState(false);\n\n  const handleFileUpload = (event) =\u003e {\n    const files = event.target.files;\n    if (!files || files.length === 0) return;\n    \n    setIsUploading(true);\n    \n    // Simulate API call for file upload\n    setTimeout(() =\u003e {\n      const newAttachments = Array.from(files).map((file, index) =\u003e ({\n        id: attachments.length + index + 1,\n        name: file.name,\n        type: file.type,\n        size: file.size,\n        url: file.type.startsWith(\"image/\") \n          ? URL.createObjectURL(file) \n          : \"#\",\n        uploadedAt: new Date(),\n      }));\n      \n      setAttachments([...attachments, ...newAttachments]);\n      setIsUploading(false);\n    }, 1000);\n  };\n\n  const handleDeleteAttachment = (id) =\u003e {\n    setAttachments(attachments.filter((attachment) =\u003e attachment.id !== id));\n  };\n\n  const getFileIcon = (type) =\u003e {\n    if (type.startsWith(\"image/\")) {\n      return \u003cImageIcon className=\"h-6 w-6 text-blue-500\" /\u003e;\n    } else if (\n      type === \"application/pdf\" ||\n      type.includes(\"document\") ||\n      type.includes(\"text\")\n    ) {\n      return \u003cFileIcon className=\"h-6 w-6 text-red-500\" /\u003e;\n    } else {\n      return \u003cPaperclipIcon className=\"h-6 w-6 text-gray-500\" /\u003e;\n    }\n  };\n\n  return (\n    \u003cCard\u003e\n      \u003cCardHeader\u003e\n        \u003cCardTitle className=\"text-lg\"\u003eAttachments\u003c/CardTitle\u003e\n      \u003c/CardHeader\u003e\n      \u003cCardContent className=\"space-y-4\"\u003e\n        {attachments.length === 0 ? (\n          \u003cp className=\"text-center text-sm text-muted-foreground\"\u003e\n            No attachments yet. Upload files to share with the team.\n          \u003c/p\u003e\n        ) : (\n          \u003cdiv className=\"space-y-2\"\u003e\n            {attachments.map((attachment) =\u003e (\n              \u003cdiv\n                key={attachment.id}\n                className=\"flex items-center justify-between rounded-md border p-2\"\n              \u003e\n                \u003cdiv className=\"flex items-center gap-2\"\u003e\n                  {getFileIcon(attachment.type)}\n                  \u003cdiv\u003e\n                    \u003cp className=\"text-sm font-medium\"\u003e{attachment.name}\u003c/p\u003e\n                    \u003cp className=\"text-xs text-muted-foreground\"\u003e\n                      {formatBytes(attachment.size)} · {attachment.uploadedAt.toLocaleDateString()}\n                    \u003c/p\u003e\n                  \u003c/div\u003e\n                \u003c/div\u003e\n                \u003cdiv className=\"flex items-center gap-2\"\u003e\n                  \u003cButton variant=\"ghost\" size=\"sm\" asChild\u003e\n                    \u003ca href={attachment.url} target=\"_blank\" rel=\"noopener noreferrer\"\u003e\n                      View\n                    \u003c/a\u003e\n                  \u003c/Button\u003e\n                  \u003cButton\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    onClick={() =\u003e handleDeleteAttachment(attachment.id)}\n                  \u003e\n                    \u003cTrashIcon className=\"h-4 w-4 text-red-500\" /\u003e\n                  \u003c/Button\u003e\n                \u003c/div\u003e\n              \u003c/div\u003e\n            ))}\n          \u003c/div\u003e\n        )}\n      \u003c/CardContent\u003e\n      \u003cCardFooter\u003e\n        \u003cdiv className=\"w-full\"\u003e\n          \u003clabel htmlFor=\"file-upload\"\u003e\n            \u003cdiv className=\"flex cursor-pointer items-center justify-center gap-2 rounded-md border border-dashed p-4 hover:bg-muted\"\u003e\n              \u003cUploadIcon className=\"h-5 w-5\" /\u003e\n              \u003cspan className=\"text-sm font-medium\"\u003e\n                {isUploading ? \"Uploading...\" : \"Upload Files\"}\n              \u003c/span\u003e\n              \u003cinput\n                id=\"file-upload\"\n                type=\"file\"\n                multiple\n                className=\"hidden\"\n                onChange={handleFileUpload}\n                disabled={isUploading}\n              /\u003e\n            \u003c/div\u003e\n          \u003c/label\u003e\n        \u003c/div\u003e\n      \u003c/CardFooter\u003e\n    \u003c/Card\u003e\n  );\n}\n[V0_FILE]tsx:file=\"components/reports/task-completion-chart.tsx\"\n\"use client\";\n\nimport {\n  Bar,\n  BarChart,\n  CartesianGrid,\n  Legend,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from \"@/components/ui/chart\";\n\n// Mock data for task completion\nconst data = [\n  {\n    name: \"Week 1\",\n    completed: 12,\n    overdue: 2,\n  },\n  {\n    name: \"Week 2\",\n    completed: 18,\n    overdue: 1,\n  },\n  {\n    name: \"Week 3\",\n    completed: 15,\n    overdue: 3,\n  },\n  {\n    name: \"Week 4\",\n    completed: 20,\n    overdue: 0,\n  },\n  {\n    name: \"Week 5\",\n    completed: 16,\n    overdue: 2,\n  },\n  {\n    name: \"Week 6\",\n    completed: 22,\n    overdue: 1,\n  },\n];\n\nexport function TaskCompletionChart() {\n  return (\n    \u003cResponsiveContainer width=\"100%\" height=\"100%\"\u003e\n      \u003cBarChart\n        data={data}\n        margin={{\n          top: 20,\n          right: 30,\n          left: 20,\n          bottom: 5,\n        }}\n      \u003e\n        \u003cCartesianGrid strokeDasharray=\"3 3\" /\u003e\n        \u003cXAxis dataKey=\"name\" /\u003e\n        \u003cYAxis /\u003e\n        \u003cTooltip /\u003e\n        \u003cLegend /\u003e\n        \u003cBar dataKey=\"completed\" fill=\"#4ade80\" name=\"Completed Tasks\" /\u003e\n        \u003cBar dataKey=\"overdue\" fill=\"#f87171\" name=\"Overdue Tasks\" /\u003e\n      \u003c/BarChart\u003e\n    \u003c/ResponsiveContainer\u003e\n  );\n}\n[V0_FILE]tsx:file=\"components/reports/team-performance-chart.tsx\"\n\"use client\";\n\nimport {\n  Bar,\n  BarChart,\n  CartesianGrid,\n  Legend,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from \"@/components/ui/chart\";\n\n// Mock data for team performance\nconst data = [\n  {\n    name: \"Emma\",\n    completed: 15,\n    inProgress: 3,\n  },\n  {\n    name: \"Jackson\",\n    completed: 20,\n    inProgress: 5,\n  },\n  {\n    name: \"Sophia\",\n    completed: 18,\n    inProgress: 2,\n  },\n  {\n    name: \"Liam\",\n    completed: 12,\n    inProgress: 4,\n  },\n  {\n    name: \"Olivia\",\n    completed: 16,\n    inProgress: 3,\n  },\n];\n\nexport function TeamPerformanceChart() {\n  return (\n    \u003cResponsiveContainer width=\"100%\" height=\"100%\"\u003e\n      \u003cBarChart\n        data={data}\n        layout=\"vertical\"\n        margin={{\n          top: 20,\n          right: 30,\n          left: 60,\n          bottom: 5,\n        }}\n      \u003e\n        \u003cCartesianGrid strokeDasharray=\"3 3\" /\u003e\n        \u003cXAxis type=\"number\" /\u003e\n        \u003cYAxis dataKey=\"name\" type=\"category\" /\u003e\n        \u003cTooltip /\u003e\n        \u003cLegend /\u003e\n        \u003cBar dataKey=\"completed\" stackId=\"a\" fill=\"#8884d8\" name=\"Completed\" /\u003e\n        \u003cBar dataKey=\"inProgress\" stackId=\"a\" fill=\"#82ca9d\" name=\"In Progress\" /\u003e\n      \u003c/BarChart\u003e\n    \u003c/ResponsiveContainer\u003e\n  );\n}\n[V0_FILE]tsx:file=\"components/reports/priority-distribution-chart.tsx\"\n\"use client\";\n\nimport {\n  Cell,\n  Legend,\n  Pie,\n  PieChart,\n  ResponsiveContainer,\n  Tooltip,\n} from \"@/components/ui/chart\";\n\n// Mock data for priority distribution\nconst data = [\n  { name: \"High\", value: 12, color: \"#ef4444\" },\n  { name: \"Medium\", value: 24, color: \"#f59e0b\" },\n  { name: \"Low\", value: 18, color: \"#10b981\" },\n];\n\nexport function PriorityDistributionChart() {\n  return (\n    \u003cResponsiveContainer width=\"100%\" height=\"100%\"\u003e\n      \u003cPieChart\u003e\n        \u003cPie\n          data={data}\n          cx=\"50%\"\n          cy=\"50%\"\n          labelLine={false}\n          outerRadius={80}\n          fill=\"#8884d8\"\n          dataKey=\"value\"\n          label={({ name, percent }) =\u003e `${name} ${(percent * 100).toFixed(0)}%`}\n        \u003e\n          {data.map((entry, index) =\u003e (\n            \u003cCell key={`cell-${index}`} fill={entry.color} /\u003e\n          ))}\n        \u003c/Pie\u003e\n        \u003cTooltip /\u003e\n        \u003cLegend /\u003e\n      \u003c/PieChart\u003e\n    \u003c/ResponsiveContainer\u003e\n  );\n}\n[V0_FILE]tsx:file=\"components/settings/profile-settings.tsx\"\n\"use client\";\n\nimport { useState } from \"react\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { useForm } from \"react-hook-form\";\n\nexport function ProfileSettings({ user }) {\n  const [isLoading, setIsLoading] = useState(false);\n  \n  const form = useForm({\n    defaultValues: {\n      name: user.name || \"\",\n      email: user.email || \"\",\n      bio: user.bio || \"\",\n      jobTitle: user.jobTitle || \"\",\n      company: user.company || \"\",\n    },\n  });\n\n  async function onSubmit(data) {\n    setIsLoading(true);\n    \n    try {\n      // Here you would normally send the data to your API\n      console.log(\"Profile updated:\", data);\n      \n      // Simulate API call\n      await new Promise((resolve) =\u003e setTimeout(resolve, 1000));\n    } catch (error) {\n      console.error(\"Error updating profile:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  return (\n    \u003cCard\u003e\n      \u003cCardHeader\u003e\n        \u003cCardTitle\u003eProfile Information\u003c/CardTitle\u003e\n        \u003cCardDescription\u003e\n          Update your profile information and how others see you on the platform\n        \u003c/CardDescription\u003e\n      \u003c/CardHeader\u003e\n      \u003cForm {...form}\u003e\n        \u003cform onSubmit={form.handleSubmit(onSubmit)}\u003e\n          \u003cCardContent className=\"space-y-6\"\u003e\n            \u003cdiv className=\"flex items-center gap-4\"\u003e\n              \u003cAvatar className=\"h-16 w-16\"\u003e\n                \u003cAvatarImage src={user.avatar || \"/placeholder.svg?height=64\u0026width=64\"} alt={user.name} /\u003e\n                \u003cAvatarFallback\u003e\n                  {user.name\n                    ? user.name\n                        .split(\" \")\n                        .map((n) =\u003e n[0])\n                        .join(\"\")\n                    : \"U\"}\n                \u003c/AvatarFallback\u003e\n              \u003c/Avatar\u003e\n              \u003cdiv\u003e\n                \u003cButton variant=\"outline\" size=\"sm\"\u003e\n                  Change Avatar\n                \u003c/Button\u003e\n                \u003cp className=\"mt-1 text-xs text-muted-foreground\"\u003e\n                  JPG, GIF or PNG. Max size of 2MB.\n                \u003c/p\u003e\n              \u003c/div\u003e\n            \u003c/div\u003e\n            \n            \u003cdiv className=\"grid gap-4 md:grid-cols-2\"\u003e\n              \u003cFormField\n                control={form.control}\n                name=\"name\"\n                render={({ field }) =\u003e (\n                  \u003cFormItem\u003e\n                    \u003cFormLabel\u003eFull Name\u003c/FormLabel\u003e\n                    \u003cFormControl\u003e\n                      \u003cInput placeholder=\"Your name\" {...field} /\u003e\n                    \u003c/FormControl\u003e\n                    \u003cFormMessage /\u003e\n                  \u003c/FormItem\u003e\n                )}\n              /\u003e\n              \u003cFormField\n                control={form.control}\n                name=\"email\"\n                render={({ field }) =\u003e (\n                  \u003cFormItem\u003e\n                    \u003cFormLabel\u003eEmail\u003c/FormLabel\u003e\n                    \u003cFormControl\u003e\n                      \u003cInput placeholder=\"Your email\" type=\"email\" {...field} /\u003e\n                    \u003c/FormControl\u003e\n                    \u003cFormMessage /\u003e\n                  \u003c/FormItem\u003e\n                )}\n              /\u003e\n            \u003c/div\u003e\n            \n            \u003cFormField\n              control={form.control}\n              name=\"bio\"\n              render={({ field }) =\u003e (\n                \u003cFormItem\u003e\n                  \u003cFormLabel\u003eBio\u003c/FormLabel\u003e\n                  \u003cFormControl\u003e\n                    \u003cTextarea\n                      placeholder=\"Tell us a little about yourself\"\n                      className=\"min-h-[100px]\"\n                      {...field}\n                    /\u003e\n                  \u003c/FormControl\u003e\n                  \u003cFormDescription\u003e\n                    Brief description for your profile. URLs are hyperlinked.\n                  \u003c/FormDescription\u003e\n                  \u003cFormMessage /\u003e\n                \u003c/FormItem\u003e\n              )}\n            /\u003e\n            \n            \u003cdiv className=\"grid gap-4 md:grid-cols-2\"\u003e\n              \u003cFormField\n                control={form.control}\n                name=\"jobTitle\"\n                render={({ field }) =\u003e (\n                  \u003cFormItem\u003e\n                    \u003cFormLabel\u003eJob Title\u003c/FormLabel\u003e\n                    \u003cFormControl\u003e\n                      \u003cInput placeholder=\"Your job title\" {...field} /\u003e\n                    \u003c/FormControl\u003e\n                    \u003cFormMessage /\u003e\n                  \u003c/FormItem\u003e\n                )}\n              /\u003e\n              \u003cFormField\n                control={form.control}\n                name=\"company\"\n                render={({ field }) =\u003e (\n                  \u003cFormItem\u003e\n                    \u003cFormLabel\u003eCompany\u003c/FormLabel\u003e\n                    \u003cFormControl\u003e\n                      \u003cInput placeholder=\"Your company\" {...field} /\u003e\n                    \u003c/FormControl\u003e\n                    \u003cFormMessage /\u003e\n                  \u003c/FormItem\u003e\n                )}\n              /\u003e\n            \u003c/div\u003e\n          \u003c/CardContent\u003e\n          \u003cCardFooter\u003e\n            \u003cButton type=\"submit\" disabled={isLoading}\u003e\n              {isLoading ? \"Saving...\" : \"Save Changes\"}\n            \u003c/Button\u003e\n          \u003c/CardFooter\u003e\n        \u003c/form\u003e\n      \u003c/Form\u003e\n    \u003c/Card\u003e\n  );\n}\n[V0_FILE]tsx:file=\"components/settings/notification-settings.tsx\"\n\"use client\";\n\nimport { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { Label } from \"@/components/ui/label\";\nimport { Switch } from \"@/components/ui/switch\";\n\nexport function NotificationSettings({ user }) {\n  const [isLoading, setIsLoading] = useState(false);\n  const [settings, setSettings] = useState({\n    emailNotifications: true,\n    pushNotifications: true,\n    taskAssigned: true,\n    taskUpdated: true,\n    taskCompleted: true,\n    commentAdded: true,\n    deadlineReminder: true,\n    weeklyDigest: false,\n  });\n\n  const handleToggle = (key) =\u003e {\n    setSettings({\n      ...settings,\n      [key]: !settings[key],\n    });\n  };\n\n  const handleSave = async () =\u003e {\n    setIsLoading(true);\n    \n    try {\n      // Here you would normally send the data to your API\n      console.log(\"Notification settings updated:\", settings);\n      \n      // Simulate API call\n      await new Promise((resolve) =\u003e setTimeout(resolve, 1000));\n    } catch (error) {\n      console.error(\"Error updating notification settings:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    \u003cCard\u003e\n      \u003cCardHeader\u003e\n        \u003cCardTitle\u003eNotification Preferences\u003c/CardTitle\u003e\n        \u003cCardDescription\u003e\n          Choose how and when you want to be notified\n        \u003c/CardDescription\u003e\n      \u003c/CardHeader\u003e\n      \u003cCardContent className=\"space-y-6\"\u003e\n        \u003cdiv className=\"space-y-4\"\u003e\n          \u003ch3 className=\"text-sm font-medium\"\u003eNotification Channels\u003c/h3\u003e\n          \u003cdiv className=\"flex items-center justify-between\"\u003e\n            \u003cdiv className=\"space-y-0.5\"\u003e\n              \u003cLabel htmlFor=\"emailNotifications\"\u003eEmail Notifications\u003c/Label\u003e\n              \u003cp className=\"text-xs text-muted-foreground\"\u003e\n                Receive notifications via email\n              \u003c/p\u003e\n            \u003c/div\u003e\n            \u003cSwitch\n              id=\"emailNotifications\"\n              checked={settings.emailNotifications}\n              onCheckedChange={() =\u003e handleToggle(\"emailNotifications\")}\n            /\u003e\n          \u003c/div\u003e\n          \u003cdiv className=\"flex items-center justify-between\"\u003e\n            \u003cdiv className=\"space-y-0.5\"\u003e\n              \u003cLabel htmlFor=\"pushNotifications\"\u003ePush Notifications\u003c/Label\u003e\n              \u003cp className=\"text-xs text-muted-foreground\"\u003e\n                Receive notifications in your browser\n              \u003c/p\u003e\n            \u003c/div\u003e\n            \u003cSwitch\n              id=\"pushNotifications\"\n              checked={settings.pushNotifications}\n              onCheckedChange={() =\u003e handleToggle(\"pushNotifications\")}\n            /\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n        \n        \u003cdiv className=\"space-y-4\"\u003e\n          \u003ch3 className=\"text-sm font-medium\"\u003eTask Notifications\u003c/h3\u003e\n          \u003cdiv className=\"flex items-center justify-between\"\u003e\n            \u003cdiv className=\"space-y-0.5\"\u003e\n              \u003cLabel htmlFor=\"taskAssigned\"\u003eTask Assigned\u003c/Label\u003e\n              \u003cp className=\"text-xs text-muted-foreground\"\u003e\n                When a task is assigned to you\n              \u003c/p\u003e\n            \u003c/div\u003e\n            \u003cSwitch\n              id=\"taskAssigned\"\n              checked={settings.taskAssigned}\n              onCheckedChange={() =\u003e handleToggle(\"taskAssigned\")}\n            /\u003e\n          \u003c/div\u003e\n          \u003cdiv className=\"flex items-center justify-between\"\u003e\n            \u003cdiv className=\"space-y-0.5\"\u003e\n              \u003cLabel htmlFor=\"taskUpdated\"\u003eTask Updated\u003c/Label\u003e\n              \u003cp className=\"text-xs text-muted-foreground\"\u003e\n                When a task you're assigned to is updated\n              \u003c/p\u003e\n            \u003c/div\u003e\n            \u003cSwitch\n              id=\"taskUpdated\"\n              checked={settings.taskUpdated}\n              onCheckedChange={() =\u003e handleToggle(\"taskUpdated\")}\n            /\u003e\n          \u003c/div\u003e\n          \u003cdiv className=\"flex items-center justify-between\"\u003e\n            \u003cdiv className=\"space-y-0.5\"\u003e\n              \u003cLabel htmlFor=\"taskCompleted\"\u003eTask Completed\u003c/Label\u003e\n              \u003cp className=\"text-xs text-muted-foreground\"\u003e\n                When a task you're assigned to is marked as completed\n              \u003c/p\u003e\n            \u003c/div\u003e\n            \u003cSwitch\n              id=\"taskCompleted\"\n              checked={settings.taskCompleted}\n              onCheckedChange={() =\u003e handleToggle(\"taskCompleted\")}\n            /\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n        \n        \u003cdiv className=\"space-y-4\"\u003e\n          \u003ch3 className=\"text-sm font-medium\"\u003eOther Notifications\u003c/h3\u003e\n          \u003cdiv className=\"flex items-center justify-between\"\u003e\n            \u003cdiv className=\"space-y-0.5\"\u003e\n              \u003cLabel htmlFor=\"commentAdded\"\u003eComment Added\u003c/Label\u003e\n              \u003cp className=\"text-xs text-muted-foreground\"\u003e\n                When someone comments on a task you're involved with\n              \u003c/p\u003e\n            \u003c/div\u003e\n            \u003cSwitch\n              id=\"commentAdded\"\n              checked={settings.commentAdded}\n              onCheckedChange={() =\u003e handleToggle(\"commentAdded\")}\n            /\u003e\n          \u003c/div\u003e\n          \u003cdiv className=\"flex items-center justify-between\"\u003e\n            \u003cdiv className=\"space-y-0.5\"\u003e\n              \u003cLabel htmlFor=\"deadlineReminder\"\u003eDeadline Reminders\u003c/Label\u003e\n              \u003cp className=\"text-xs text-muted-foreground\"\u003e\n                Receive reminders before task deadlines\n              \u003c/p\u003e\n            \u003c/div\u003e\n            \u003cSwitch\n              id=\"deadlineReminder\"\n              checked={settings.deadlineReminder}\n              onCheckedChange={() =\u003e handleToggle(\"deadlineReminder\")}\n            /\u003e\n          \u003c/div\u003e\n          \u003cdiv className=\"flex items-center justify-between\"\u003e\n            \u003cdiv className=\"space-y-0.5\"\u003e\n              \u003cLabel htmlFor=\"weeklyDigest\"\u003eWeekly Digest\u003c/Label\u003e\n              \u003cp className=\"text-xs text-muted-foreground\"\u003e\n                Receive a weekly summary of your tasks and progress\n              \u003c/p\u003e\n            \u003c/div\u003e\n            \u003cSwitch\n              id=\"weeklyDigest\"\n              checked={settings.weeklyDigest}\n              onCheckedChange={() =\u003e handleToggle(\"weeklyDigest\")}\n            /\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/CardContent\u003e\n      \u003cCardFooter\u003e\n        \u003cButton onClick={handleSave} disabled={isLoading}\u003e\n          {isLoading ? \"Saving...\" : \"Save Preferences\"}\n        \u003c/Button\u003e\n      \u003c/CardFooter\u003e\n    \u003c/Card\u003e\n  );\n}\n[V0_FILE]tsx:file=\"components/settings/security-settings.tsx\"\n\"use client\";\n\nimport { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Switch } from \"@/components/ui/switch\";\nimport { useForm } from \"react-hook-form\";\n\nexport function SecuritySettings({ user }) {\n  const [isLoading, setIsLoading] = useState(false);\n  const [twoFactorEnabled, setTwoFactorEnabled] = useState(false);\n  \n  const form = useForm({\n    defaultValues: {\n      currentPassword: \"\",\n      newPassword: \"\",\n      confirmPassword: \"\",\n    },\n  });\n\n  async function onSubmit(data) {\n    setIsLoading(true);\n    \n    try {\n      // Here you would normally send the data to your API\n      console.log(\"Password updated:\", data);\n      \n      // Simulate API call\n      await new Promise((resolve) =\u003e setTimeout(resolve, 1000));\n      \n      // Reset form\n      form.reset();\n    } catch (error) {\n      console.error(\"Error updating password:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  const handleToggleTwoFactor = async () =\u003e {\n    setIsLoading(true);\n    \n    try {\n      // Here you would normally send the data to your API\n      console.log(\"Two-factor authentication toggled:\", !twoFactorEnabled);\n      \n      // Simulate API call\n      await new Promise((resolve) =\u003e setTimeout(resolve, 1000));\n      \n      setTwoFactorEnabled(!twoFactorEnabled);\n    } catch (error) {\n      console.error(\"Error toggling two-factor authentication:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    \u003cCard\u003e\n      \u003cCardHeader\u003e\n        \u003cCardTitle\u003eSecurity Settings\u003c/CardTitle\u003e\n        \u003cCardDescription\u003e\n          Manage your password and account security\n        \u003c/CardDescription\u003e\n      \u003c/CardHeader\u003e\n      \u003cCardContent className=\"space-y-6\"\u003e\n        \u003cForm {...form}\u003e\n          \u003cform onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\"\u003e\n            \u003cFormField\n              control={form.control}\n              name=\"currentPassword\"\n              render={({ field }) =\u003e (\n                \u003cFormItem\u003e\n                  \u003cFormLabel\u003eCurrent Password\u003c/FormLabel\u003e\n                  \u003cFormControl\u003e\n                    \u003cInput type=\"password\" {...field} /\u003e\n                  \u003c/FormControl\u003e\n                  \u003cFormMessage /\u003e\n                \u003c/FormItem\u003e\n              )}\n            /\u003e\n            \u003cFormField\n              control={form.control}\n              name=\"newPassword\"\n              render={({ field }) =\u003e (\n                \u003cFormItem\u003e\n                  \u003cFormLabel\u003eNew Password\u003c/FormLabel\u003e\n                  \u003cFormControl\u003e\n                    \u003cInput type=\"password\" {...field} /\u003e\n                  \u003c/FormControl\u003e\n                  \u003cFormDescription\u003e\n                    Password must be at least 8 characters long and include a mix of letters, numbers, and symbols.\n                  \u003c/FormDescription\u003e\n                  \u003cFormMessage /\u003e\n                \u003c/FormItem\u003e\n              )}\n            /\u003e\n            \u003cFormField\n              control={form.control}\n              name=\"confirmPassword\"\n              render={({ field }) =\u003e (\n                \u003cFormItem\u003e\n                  \u003cFormLabel\u003eConfirm New Password\u003c/FormLabel\u003e\n                  \u003cFormControl\u003e\n                    \u003cInput type=\"password\" {...field} /\u003e\n                  \u003c/FormControl\u003e\n                  \u003cFormMessage /\u003e\n                \u003c/FormItem\u003e\n              )}\n            /\u003e\n            \u003cButton type=\"submit\" disabled={isLoading}\u003e\n              {isLoading ? \"Updating...\" : \"Update Password\"}\n            \u003c/Button\u003e\n          \u003c/form\u003e\n        \u003c/Form\u003e\n        \n        \u003cdiv className=\"space-y-4\"\u003e\n          \u003ch3 className=\"text-sm font-medium\"\u003eTwo-Factor Authentication\u003c/h3\u003e\n          \u003cdiv className=\"flex items-center justify-between\"\u003e\n            \u003cdiv className=\"space-y-0.5\"\u003e\n              \u003cLabel htmlFor=\"twoFactorAuth\"\u003eEnable Two-Factor Authentication\u003c/Label\u003e\n              \u003cp className=\"text-xs text-muted-foreground\"\u003e\n                Add an extra layer of security to your account\n              \u003c/p\u003e\n            \u003c/div\u003e\n            \u003cSwitch\n              id=\"twoFactorAuth\"\n              checked={twoFactorEnabled}\n              onCheckedChange={handleToggleTwoFactor}\n              disabled={isLoading}\n            /\u003e\n          \u003c/div\u003e\n          {twoFactorEnabled \u0026\u0026 (\n            \u003cdiv className=\"rounded-md bg-muted p-4\"\u003e\n              \u003cp className=\"text-sm\"\u003e\n                Two-factor authentication is enabled. You will receive a verification code via email when signing in.\n              \u003c/p\u003e\n            \u003c/div\u003e\n          )}\n        \u003c/div\u003e\n        \n        \u003cdiv className=\"space-y-4\"\u003e\n          \u003ch3 className=\"text-sm font-medium\"\u003eSession Management\u003c/h3\u003e\n          \u003cdiv className=\"rounded-md border p-4\"\u003e\n            \u003cdiv className=\"flex items-center justify-between\"\u003e\n              \u003cdiv\u003e\n                \u003cp className=\"text-sm font-medium\"\u003eActive Sessions\u003c/p\u003e\n                \u003cp className=\"text-xs text-muted-foreground\"\u003e\n                  You are currently logged in on 2 devices\n                \u003c/p\u003e\n              \u003c/div\u003e\n              \u003cButton variant=\"outline\" size=\"sm\"\u003e\n                Manage Sessions\n              \u003c/Button\u003e\n            \u003c/div\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/CardContent\u003e\n      \u003cCardFooter className=\"flex justify-between\"\u003e\n        \u003cButton variant=\"outline\" className=\"text-red-500\"\u003e\n          Delete Account\n        \u003c/Button\u003e\n        \u003cButton variant=\"outline\"\u003e\n          Download Personal Data\n        \u003c/Button\u003e\n      \u003c/CardFooter\u003e\n    \u003c/Card\u003e\n  );\n}\n[V0_FILE]tsx:file=\"components/users/user-management.tsx\"\n\"use client\";\n\nimport { useState } from \"react\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport { Input } from \"@/components/ui/input\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\nimport { MoreHorizontalIcon, SearchIcon } from 'lucide-react';\n\n// Mock users data\nconst initialUsers = [\n  {\n    id: 1,\n    name: \"Emma Wilson\",\n    email: \"emma@example.com\",\n    role: \"admin\",\n    status: \"active\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    lastActive: \"2023-11-28T10:30:00Z\",\n  },\n  {\n    id: 2,\n    name: \"Jackson Lee\",\n    email: \"jackson@example.com\",\n    role: \"editor\",\n    status: \"active\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    lastActive: \"2023-11-27T14:45:00Z\",\n  },\n  {\n    id: 3,\n    name: \"Sophia Chen\",\n    email: \"sophia@example.com\",\n    role: \"editor\",\n    status: \"active\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    lastActive: \"2023-11-28T09:15:00Z\",\n  },\n  {\n    id: 4,\n    name: \"Liam Johnson\",\n    email: \"liam@example.com\",\n    role: \"viewer\",\n    status: \"active\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    lastActive: \"2023-11-26T11:20:00Z\",\n  },\n  {\n    id: 5,\n    name: \"Olivia Martinez\",\n    email: \"olivia@example.com\",\n    role: \"editor\",\n    status: \"inactive\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    lastActive: \"2023-11-20T16:30:00Z\",\n  },\n  {\n    id: 6,\n    name: \"Noah Williams\",\n    email: \"noah@example.com\",\n    role: \"viewer\",\n    status: \"pending\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    lastActive: null,\n  },\n];\n\nexport function UserManagement() {\n  const [users, setUsers] = useState(initialUsers);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [roleFilter, setRoleFilter] = useState(\"all\");\n  const [statusFilter, setStatusFilter] = useState(\"all\");\n\n  const filteredUsers = users.filter((user) =\u003e {\n    const matchesSearch =\n      user.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n      user.email.toLowerCase().includes(searchQuery.toLowerCase());\n    \n    const matchesRole = roleFilter === \"all\" || user.role === roleFilter;\n    const matchesStatus = statusFilter === \"all\" || user.status === statusFilter;\n    \n    return matchesSearch \u0026\u0026 matchesRole \u0026\u0026 matchesStatus;\n  });\n\n  const handleRoleChange = (userId, newRole) =\u003e {\n    setUsers(\n      users.map((user) =\u003e\n        user.id === userId ? { ...user, role: newRole } : user\n      )\n    );\n  };\n\n  const handleStatusChange = (userId, newStatus) =\u003e {\n    setUsers(\n      users.map((user) =\u003e\n        user.id === userId ? { ...user, status: newStatus } : user\n      )\n    );\n  };\n\n  const getRoleBadgeVariant = (role) =\u003e {\n    switch (role) {\n      case \"admin\":\n        return \"default\";\n      case \"editor\":\n        return \"secondary\";\n      case \"viewer\":\n        return \"outline\";\n      default:\n        return \"outline\";\n    }\n  };\n\n  const getStatusBadgeVariant = (status) =\u003e {\n    switch (status) {\n      case \"active\":\n        return \"success\";\n      case \"inactive\":\n        return \"secondary\";\n      case \"pending\":\n        return \"warning\";\n      default:\n        return \"outline\";\n    }\n  };\n\n  const formatLastActive = (lastActive) =\u003e {\n    if (!lastActive) return \"Never\";\n    \n    const date = new Date(lastActive);\n    return date.toLocaleDateString() + \" \" + date.toLocaleTimeString();\n  };\n\n  return (\n    \u003cCard\u003e\n      \u003cCardHeader\u003e\n        \u003cCardTitle\u003eUser Management\u003c/CardTitle\u003e\n        \u003cCardDescription\u003e\n          Manage users and their permissions in your organization\n        \u003c/CardDescription\u003e\n      \u003c/CardHeader\u003e\n      \u003cCardContent\u003e\n        \u003cdiv className=\"mb-4 flex flex-col gap-4 sm:flex-row sm:items-center sm:justify-between\"\u003e\n          \u003cdiv className=\"flex items-center gap-2\"\u003e\n            \u003cdiv className=\"relative\"\u003e\n              \u003cSearchIcon className=\"absolute left-2.5 top-2.5 h-4 w-4 text-muted-foreground\" /\u003e\n              \u003cInput\n                type=\"search\"\n                placeholder=\"Search users...\"\n                className=\"pl-8\"\n                value={searchQuery}\n                onChange={(e) =\u003e setSearchQuery(e.target.value)}\n              /\u003e\n            \u003c/div\u003e\n          \u003c/div\u003e\n          \u003cdiv className=\"flex flex-col gap-2 sm:flex-row\"\u003e\n            \u003cSelect value={roleFilter} onValueChange={setRoleFilter}\u003e\n              \u003cSelectTrigger className=\"w-[180px]\"\u003e\n                \u003cSelectValue placeholder=\"Filter by role\" /\u003e\n              \u003c/SelectTrigger\u003e\n              \u003cSelectContent\u003e\n                \u003cSelectItem value=\"all\"\u003eAll Roles\u003c/SelectItem\u003e\n                \u003cSelectItem value=\"admin\"\u003eAdmin\u003c/SelectItem\u003e\n                \u003cSelectItem value=\"editor\"\u003eEditor\u003c/SelectItem\u003e\n                \u003cSelectItem value=\"viewer\"\u003eViewer\u003c/SelectItem\u003e\n              \u003c/SelectContent\u003e\n            \u003c/Select\u003e\n            \u003cSelect value={statusFilter} onValueChange={setStatusFilter}\u003e\n              \u003cSelectTrigger className=\"w-[180px]\"\u003e\n                \u003cSelectValue placeholder=\"Filter by status\" /\u003e\n              \u003c/SelectTrigger\u003e\n              \u003cSelectContent\u003e\n                \u003cSelectItem value=\"all\"\u003eAll Statuses\u003c/SelectItem\u003e\n                \u003cSelectItem value=\"active\"\u003eActive\u003c/SelectItem\u003e\n                \u003cSelectItem value=\"inactive\"\u003eInactive\u003c/SelectItem\u003e\n                \u003cSelectItem value=\"pending\"\u003ePending\u003c/SelectItem\u003e\n              \u003c/SelectContent\u003e\n            \u003c/Select\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n        \u003cdiv className=\"rounded-md border\"\u003e\n          \u003cTable\u003e\n            \u003cTableHeader\u003e\n              \u003cTableRow\u003e\n                \u003cTableHead\u003eUser\u003c/TableHead\u003e\n                \u003cTableHead\u003eRole\u003c/TableHead\u003e\n                \u003cTableHead\u003eStatus\u003c/TableHead\u003e\n                \u003cTableHead\u003eLast Active\u003c/TableHead\u003e\n                \u003cTableHead className=\"text-right\"\u003eActions\u003c/TableHead\u003e\n              \u003c/TableRow\u003e\n            \u003c/TableHeader\u003e\n            \u003cTableBody\u003e\n              {filteredUsers.length === 0 ? (\n                \u003cTableRow\u003e\n                  \u003cTableCell colSpan={5} className=\"text-center\"\u003e\n                    No users found\n                  \u003c/TableCell\u003e\n                \u003c/TableRow\u003e\n              ) : (\n                filteredUsers.map((user) =\u003e (\n                  \u003cTableRow key={user.id}\u003e\n                    \u003cTableCell\u003e\n                      \u003cdiv className=\"flex items-center gap-3\"\u003e\n                        \u003cAvatar\u003e\n                          \u003cAvatarImage src={user.avatar} alt={user.name} /\u003e\n                          \u003cAvatarFallback\u003e\n                            {user.name\n                              .split(\" \")\n                              .map((n) =\u003e n[0])\n                              .join(\"\")}\n                          \u003c/AvatarFallback\u003e\n                        \u003c/Avatar\u003e\n                        \u003cdiv\u003e\n                          \u003cp className=\"font-medium\"\u003e{user.name}\u003c/p\u003e\n                          \u003cp className=\"text-sm text-muted-foreground\"\u003e\n                            {user.email}\n                          \u003c/p\u003e\n                        \u003c/div\u003e\n                      \u003c/div\u003e\n                    \u003c/TableCell\u003e\n                    \u003cTableCell\u003e\n                      \u003cBadge variant={getRoleBadgeVariant(user.role)}\u003e\n                        {user.role.charAt(0).toUpperCase() + user.role.slice(1)}\n                      \u003c/Badge\u003e\n                    \u003c/TableCell\u003e\n                    \u003cTableCell\u003e\n                      \u003cBadge variant={getStatusBadgeVariant(user.status)}\u003e\n                        {user.status.charAt(0).toUpperCase() + user.status.slice(1)}\n                      \u003c/Badge\u003e\n                    \u003c/TableCell\u003e\n                    \u003cTableCell\u003e{formatLastActive(user.lastActive)}\u003c/TableCell\u003e\n                    \u003cTableCell className=\"text-right\"\u003e\n                      \u003cDropdownMenu\u003e\n                        \u003cDropdownMenuTrigger asChild\u003e\n                          \u003cButton variant=\"ghost\" size=\"sm\"\u003e\n                            \u003cMoreHorizontalIcon className=\"h-4 w-4\" /\u003e\n                            \u003cspan className=\"sr-only\"\u003eOpen menu\u003c/span\u003e\n                          \u003c/Button\u003e\n                        \u003c/DropdownMenuTrigger\u003e\n                        \u003cDropdownMenuContent align=\"end\"\u003e\n                          \u003cDropdownMenuLabel\u003eActions\u003c/DropdownMenuLabel\u003e\n                          \u003cDropdownMenuItem\u003eView Profile\u003c/DropdownMenuItem\u003e\n                          \u003cDropdownMenuSeparator /\u003e\n                          \u003cDropdownMenuLabel\u003eChange Role\u003c/DropdownMenuLabel\u003e\n                          \u003cDropdownMenuItem onClick={() =\u003e handleRoleChange(user.id, \"admin\")}\u003e\n                            Make Admin\n                          \u003c/DropdownMenuItem\u003e\n                          \u003cDropdownMenuItem onClick={() =\u003e handleRoleChange(user.id, \"editor\")}\u003e\n                            Make Editor\n                          \u003c/DropdownMenuItem\u003e\n                          \u003cDropdownMenuItem onClick={() =\u003e handleRoleChange(user.id, \"viewer\")}\u003e\n                            Make Viewer\n                          \u003c/DropdownMenuItem\u003e\n                          \u003cDropdownMenuSeparator /\u003e\n                          \u003cDropdownMenuLabel\u003eChange Status\u003c/DropdownMenuLabel\u003e\n                          \u003cDropdownMenuItem onClick={() =\u003e handleStatusChange(user.id, \"active\")}\u003e\n                            Set Active\n                          \u003c/DropdownMenuItem\u003e\n                          \u003cDropdownMenuItem onClick={() =\u003e handleStatusChange(user.id, \"inactive\")}\u003e\n                            Set Inactive\n                          \u003c/DropdownMenuItem\u003e\n                          \u003cDropdownMenuSeparator /\u003e\n                          \u003cDropdownMenuItem className=\"text-red-600\"\u003e\n                            Delete User\n                          \u003c/DropdownMenuItem\u003e\n                        \u003c/DropdownMenuContent\u003e\n                      \u003c/DropdownMenu\u003e\n                    \u003c/TableCell\u003e\n                  \u003c/TableRow\u003e\n                ))\n              )}\n            \u003c/TableBody\u003e\n          \u003c/Table\u003e\n        \u003c/div\u003e\n      \u003c/CardContent\u003e\n    \u003c/Card\u003e\n  );\n}\n[V0_FILE]tsx:file=\"lib/auth.ts\"\n// This is a mock implementation for demonstration purposes\n// In a real application, you would use a proper authentication library like NextAuth.js\n\nimport { jwtVerify, SignJWT } from \"jose\";\n\n// Mock user data\nconst users = [\n  {\n    id: 1,\n    name: \"Admin User\",\n    email: \"admin@example.com\",\n    password: \"admin123\", // In a real app, this would be hashed\n    role: \"admin\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    bio: \"Task management system administrator\",\n    jobTitle: \"Project Manager\",\n    company: \"Acme Inc.\",\n  },\n  {\n    id: 2,\n    name: \"Editor User\",\n    email: \"editor@example.com\",\n    password: \"editor123\", // In a real app, this would be hashed\n    role: \"editor\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    bio: \"Frontend developer working on the task management system\",\n    jobTitle: \"Senior Developer\",\n    company: \"Acme Inc.\",\n  },\n  {\n    id: 3,\n    name: \"Viewer User\",\n    email: \"viewer@example.com\",\n    password: \"viewer123\", // In a real app, this would be hashed\n    role: \"viewer\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    bio: \"Team member using the task management system\",\n    jobTitle: \"Content Writer\",\n    company: \"Acme Inc.\",\n  },\n];\n\n// Secret key for JWT\nconst JWT_SECRET = new TextEncoder().encode(\n  process.env.JWT_SECRET || \"your-secret-key\"\n);\n\n// Login user\nexport async function loginUser(email: string, password: string) {\n  // Find user by email\n  const user = users.find((u) =\u003e u.email === email);\n  \n  // Check if user exists and password matches\n  if (!user || user.password !== password) {\n    throw new Error(\"Invalid credentials\");\n  }\n  \n  // Create JWT token\n  const token = await new SignJWT({ userId: user.id, role: user.role })\n    .setProtectedHeader({ alg: \"HS256\" })\n    .setIssuedAt()\n    .setExpirationTime(\"24h\")\n    .sign(JWT_SECRET);\n  \n  // Store token in localStorage (in a real app, use cookies for better security)\n  if (typeof window !== \"undefined\") {\n    localStorage.setItem(\"auth-token\", token);\n  }\n  \n  return { user: { id: user.id, name: user.name, email: user.email, role: user.role } };\n}\n\n// Register user\nexport async function registerUser(name: string, email: string, password: string) {\n  // Check if user already exists\n  if (users.find((u) =\u003e u.email === email)) {\n    throw new Error(\"User already exists\");\n  }\n  \n  // Create new user\n  const newUser = {\n    id: users.length + 1,\n    name,\n    email,\n    password, // In a real app, this would be hashed\n    role: \"viewer\", // Default role for new users\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    bio: \"\",\n    jobTitle: \"\",\n    company: \"\",\n  };\n  \n  // Add user to the mock database\n  users.push(newUser);\n  \n  // Create JWT token\n  const token = await new SignJWT({ userId: newUser.id, role: newUser.role })\n    .setProtectedHeader({ alg: \"HS256\" })\n    .setIssuedAt()\n    .setExpirationTime(\"24h\")\n    .sign(JWT_SECRET);\n  \n  // Store token in localStorage (in a real app, use cookies for better security)\n  if (typeof window !== \"undefined\") {\n    localStorage.setItem(\"auth-token\", token);\n  }\n  \n  return { user: { id: newUser.id, name: newUser.name, email: newUser.email, role: newUser.role } };\n}\n\n// Get user session\nexport async function getUserSession() {\n  // In a server component, we would verify the session cookie\n  // For this demo, we'll simulate a logged-in user\n  \n  // In a client component, we would get the token from localStorage\n  let token;\n  if (typeof window !== \"undefined\") {\n    token = localStorage.getItem(\"auth-token\");\n  }\n  \n  if (!token) {\n    // For demo purposes, return a mock user\n    return users[0];\n  }\n  \n  try {\n    // Verify token\n    const { payload } = await jwtVerify(token, JWT_SECRET);\n    const userId = payload.userId as number;\n    \n    // Find user\n    const user = users.find((u) =\u003e u.id === userId);\n    if (!user) {\n      return null;\n    }\n    \n    return user;\n  } catch (error) {\n    console.error(\"Error verifying token:\", error);\n    return null;\n  }\n}\n\n// Logout user\nexport function logoutUser() {\n  if (typeof window !== \"undefined\") {\n    localStorage.removeItem(\"auth-token\");\n  }\n}\n[V0_FILE]tsx:file=\"lib/utils.ts\"\nimport { type ClassValue, clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\n// Format bytes to human-readable format\nexport function formatBytes(bytes: number, decimals = 2) {\n  if (bytes === 0) return \"0 Bytes\";\n\n  const k = 1024;\n  const dm = decimals \u003c 0 ? 0 : decimals;\n  const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + \" \" + sizes[i];\n}\n[V0_FILE]tsx:file=\"tailwind.config.js\"\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  darkMode: [\"class\"],\n  content: [\"./pages/**/*.{ts,tsx}\", \"./components/**/*.{ts,tsx}\", \"./app/**/*.{ts,tsx}\", \"./src/**/*.{ts,tsx}\", \"*.{js,ts,jsx,tsx,mdx}\"],\n  theme: {\n    container: {\n      center: true,\n      padding: \"2rem\",\n      screens: {\n        \"2xl\": \"1400px\",\n      },\n    },\n    extend: {\n      colors: {\n        border: \"hsl(var(--border))\",\n        input: \"hsl(var(--input))\",\n        ring: \"hsl(var(--ring))\",\n        background: \"hsl(var(--background))\",\n        foreground: \"hsl(var(--foreground))\",\n        primary: {\n          DEFAULT: \"hsl(var(--primary))\",\n          foreground: \"hsl(var(--primary-foreground))\",\n        },\n        secondary: {\n          DEFAULT: \"hsl(var(--secondary))\",\n          foreground: \"hsl(var(--secondary-foreground))\",\n        },\n        destructive: {\n          DEFAULT: \"hsl(var(--destructive))\",\n          foreground: \"hsl(var(--destructive-foreground))\",\n        },\n        muted: {\n          DEFAULT: \"hsl(var(--muted))\",\n          foreground: \"hsl(var(--muted-foreground))\",\n        },\n        accent: {\n          DEFAULT: \"hsl(var(--accent))\",\n          foreground: \"hsl(var(--accent-foreground))\",\n        },\n        popover: {\n          DEFAULT: \"hsl(var(--popover))\",\n          foreground: \"hsl(var(--popover-foreground))\",\n        },\n        card: {\n          DEFAULT: \"hsl(var(--card))\",\n          foreground: \"hsl(var(--card-foreground))\",\n        },\n        success: {\n          DEFAULT: \"#10b981\",\n          foreground: \"#ffffff\",\n        },\n        warning: {\n          DEFAULT: \"#f59e0b\",\n          foreground: \"#ffffff\",\n        },\n      },\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: { height: 0 },\n          to: { height: \"var(--radix-accordion-content-height)\" },\n        },\n        \"accordion-up\": {\n          from: { height: \"var(--radix-accordion-content-height)\" },\n          to: { height: 0 },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\")],\n}\n[V0_FILE]tsx:file=\"components/ui/chart.tsx\"\nexport {\n  Area,\n  AreaChart,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n  Bar,\n  BarChart,\n  CartesianGrid,\n  Legend,\n  Cell,\n  Pie,\n  PieChart,\n} from \"recharts\";"])</script><script>self.__next_f.push([1,"9b:T2c612,"])</script><script>self.__next_f.push([1,"[V0_FILE]typescriptreact:file=\"app/page.tsx\" isMerged=\"true\"\nimport { redirect } from \"next/navigation\"\nimport { DashboardHeader } from \"@/components/dashboard/dashboard-header\"\nimport { DashboardShell } from \"@/components/dashboard/dashboard-shell\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Overview } from \"@/components/dashboard/overview\"\nimport { RecentTasks } from \"@/components/dashboard/recent-tasks\"\nimport { TeamMembers } from \"@/components/dashboard/team-members\"\nimport { getUserSession } from \"@/lib/auth\"\n\nexport default async function DashboardPage() {\n  const user = await getUserSession()\n\n  if (!user) {\n    redirect(\"/login\")\n  }\n\n  return (\n    \u003cDashboardShell\u003e\n      \u003cDashboardHeader heading=\"Dashboard\" text=\"Welcome back! Here's an overview of your team's tasks.\"\u003e\n        \u003cButton\u003e\n          \u003ca href=\"/tasks/new\"\u003eCreate Task\u003c/a\u003e\n        \u003c/Button\u003e\n      \u003c/DashboardHeader\u003e\n      \u003cdiv className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\"\u003e\n        \u003cCard\u003e\n          \u003cCardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\"\u003e\n            \u003cCardTitle className=\"text-sm font-medium\"\u003eTotal Tasks\u003c/CardTitle\u003e\n            \u003csvg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2\"\n              className=\"h-4 w-4 text-muted-foreground\"\n            \u003e\n              \u003cpath d=\"M12 2v20M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6\" /\u003e\n            \u003c/svg\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent\u003e\n            \u003cdiv className=\"text-2xl font-bold\"\u003e24\u003c/div\u003e\n            \u003cp className=\"text-xs text-muted-foreground\"\u003e+10% from last month\u003c/p\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n        \u003cCard\u003e\n          \u003cCardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\"\u003e\n            \u003cCardTitle className=\"text-sm font-medium\"\u003eCompleted\u003c/CardTitle\u003e\n            \u003csvg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2\"\n              className=\"h-4 w-4 text-muted-foreground\"\n            \u003e\n              \u003cpath d=\"M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2\" /\u003e\n              \u003ccircle cx=\"9\" cy=\"7\" r=\"4\" /\u003e\n              \u003cpath d=\"M22 21v-2a4 4 0 0 0-3-3.87M16 3.13a4 4 0 0 1 0 7.75\" /\u003e\n            \u003c/svg\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent\u003e\n            \u003cdiv className=\"text-2xl font-bold\"\u003e16\u003c/div\u003e\n            \u003cp className=\"text-xs text-muted-foreground\"\u003e+12% from last month\u003c/p\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n        \u003cCard\u003e\n          \u003cCardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\"\u003e\n            \u003cCardTitle className=\"text-sm font-medium\"\u003eIn Progress\u003c/CardTitle\u003e\n            \u003csvg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2\"\n              className=\"h-4 w-4 text-muted-foreground\"\n            \u003e\n              \u003crect width=\"20\" height=\"14\" x=\"2\" y=\"5\" rx=\"2\" /\u003e\n              \u003cpath d=\"M2 10h20\" /\u003e\n            \u003c/svg\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent\u003e\n            \u003cdiv className=\"text-2xl font-bold\"\u003e6\u003c/div\u003e\n            \u003cp className=\"text-xs text-muted-foreground\"\u003e-2% from last month\u003c/p\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n        \u003cCard\u003e\n          \u003cCardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\"\u003e\n            \u003cCardTitle className=\"text-sm font-medium\"\u003eOverdue\u003c/CardTitle\u003e\n            \u003csvg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2\"\n              className=\"h-4 w-4 text-muted-foreground\"\n            \u003e\n              \u003cpath d=\"M22 12h-4l-3 9L9 3l-3 9H2\" /\u003e\n            \u003c/svg\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent\u003e\n            \u003cdiv className=\"text-2xl font-bold\"\u003e2\u003c/div\u003e\n            \u003cp className=\"text-xs text-muted-foreground\"\u003e-4% from last month\u003c/p\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n      \u003c/div\u003e\n      \u003cdiv className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-7\"\u003e\n        \u003cCard className=\"col-span-4\"\u003e\n          \u003cCardHeader\u003e\n            \u003cCardTitle\u003eTask Completion Overview\u003c/CardTitle\u003e\n            \u003cCardDescription\u003eTask completion rate over the last 30 days\u003c/CardDescription\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent className=\"pl-2\"\u003e\n            \u003cOverview /\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n        \u003cCard className=\"col-span-3\"\u003e\n          \u003cCardHeader\u003e\n            \u003cCardTitle\u003eRecent Tasks\u003c/CardTitle\u003e\n            \u003cCardDescription\u003eRecently created or updated tasks\u003c/CardDescription\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent\u003e\n            \u003cRecentTasks /\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n      \u003c/div\u003e\n      \u003cdiv className=\"grid gap-4 md:grid-cols-1\"\u003e\n        \u003cCard\u003e\n          \u003cCardHeader\u003e\n            \u003cCardTitle\u003eTeam Members\u003c/CardTitle\u003e\n            \u003cCardDescription\u003eManage your team and their task assignments\u003c/CardDescription\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent\u003e\n            \u003cTeamMembers /\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n      \u003c/div\u003e\n    \u003c/DashboardShell\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"app/tasks/page.tsx\" isMerged=\"true\"\nimport { redirect } from \"next/navigation\"\nimport { DashboardHeader } from \"@/components/dashboard/dashboard-header\"\nimport { DashboardShell } from \"@/components/dashboard/dashboard-shell\"\nimport { Button } from \"@/components/ui/button\"\nimport { KanbanBoard } from \"@/components/tasks/kanban-board\"\nimport { TaskFilters } from \"@/components/tasks/task-filters\"\nimport { getUserSession } from \"@/lib/auth\"\n\nexport default async function TasksPage() {\n  const user = await getUserSession()\n\n  if (!user) {\n    redirect(\"/login\")\n  }\n\n  return (\n    \u003cDashboardShell\u003e\n      \u003cDashboardHeader heading=\"Tasks\" text=\"Manage and organize your team's tasks\"\u003e\n        \u003cButton\u003e\n          \u003ca href=\"/tasks/new\"\u003eCreate Task\u003c/a\u003e\n        \u003c/Button\u003e\n      \u003c/DashboardHeader\u003e\n      \u003cdiv className=\"space-y-4\"\u003e\n        \u003cTaskFilters /\u003e\n        \u003cKanbanBoard /\u003e\n      \u003c/div\u003e\n    \u003c/DashboardShell\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"app/tasks/new/page.tsx\" isMerged=\"true\"\nimport { redirect } from \"next/navigation\"\nimport { DashboardHeader } from \"@/components/dashboard/dashboard-header\"\nimport { DashboardShell } from \"@/components/dashboard/dashboard-shell\"\nimport { TaskForm } from \"@/components/tasks/task-form\"\nimport { getUserSession } from \"@/lib/auth\"\n\nexport default async function NewTaskPage() {\n  const user = await getUserSession()\n\n  if (!user) {\n    redirect(\"/login\")\n  }\n\n  // Check if user has permission to create tasks\n  if (user.role === \"viewer\") {\n    redirect(\"/dashboard\")\n  }\n\n  return (\n    \u003cDashboardShell\u003e\n      \u003cDashboardHeader heading=\"Create New Task\" text=\"Add a new task and assign it to team members\" /\u003e\n      \u003cdiv className=\"grid gap-4\"\u003e\n        \u003cTaskForm /\u003e\n      \u003c/div\u003e\n    \u003c/DashboardShell\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"app/tasks/[id]/page.tsx\" isMerged=\"true\"\nimport { redirect } from \"next/navigation\"\nimport { DashboardHeader } from \"@/components/dashboard/dashboard-header\"\nimport { DashboardShell } from \"@/components/dashboard/dashboard-shell\"\nimport { TaskDetails } from \"@/components/tasks/task-details\"\nimport { TaskComments } from \"@/components/tasks/task-comments\"\nimport { TaskAttachments } from \"@/components/tasks/task-attachments\"\nimport { getUserSession } from \"@/lib/auth\"\n\nexport default async function TaskDetailsPage({ params }: { params: { id: string } }) {\n  const user = await getUserSession()\n\n  if (!user) {\n    redirect(\"/login\")\n  }\n\n  return (\n    \u003cDashboardShell\u003e\n      \u003cDashboardHeader heading=\"Task Details\" text=\"View and manage task details\" /\u003e\n      \u003cdiv className=\"grid gap-6\"\u003e\n        \u003cTaskDetails id={params.id} /\u003e\n        \u003cdiv className=\"grid gap-4 md:grid-cols-2\"\u003e\n          \u003cTaskComments id={params.id} /\u003e\n          \u003cTaskAttachments id={params.id} /\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n    \u003c/DashboardShell\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"app/reports/page.tsx\" isMerged=\"true\"\nimport { redirect } from \"next/navigation\"\nimport { DashboardHeader } from \"@/components/dashboard/dashboard-header\"\nimport { DashboardShell } from \"@/components/dashboard/dashboard-shell\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { TaskCompletionChart } from \"@/components/reports/task-completion-chart\"\nimport { TeamPerformanceChart } from \"@/components/reports/team-performance-chart\"\nimport { PriorityDistributionChart } from \"@/components/reports/priority-distribution-chart\"\nimport { getUserSession } from \"@/lib/auth\"\n\nexport default async function ReportsPage() {\n  const user = await getUserSession()\n\n  if (!user) {\n    redirect(\"/login\")\n  }\n\n  return (\n    \u003cDashboardShell\u003e\n      \u003cDashboardHeader heading=\"Reports\" text=\"Analyze task performance and team productivity\"\u003e\n        \u003cdiv className=\"flex space-x-2\"\u003e\n          \u003cButton variant=\"outline\"\u003eExport CSV\u003c/Button\u003e\n          \u003cButton variant=\"outline\"\u003eExport PDF\u003c/Button\u003e\n        \u003c/div\u003e\n      \u003c/DashboardHeader\u003e\n      \u003cdiv className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-2\"\u003e\n        \u003cCard className=\"col-span-1\"\u003e\n          \u003cCardHeader\u003e\n            \u003cCardTitle\u003eTask Completion Rate\u003c/CardTitle\u003e\n            \u003cCardDescription\u003ePercentage of tasks completed on time\u003c/CardDescription\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent className=\"h-80\"\u003e\n            \u003cTaskCompletionChart /\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n        \u003cCard className=\"col-span-1\"\u003e\n          \u003cCardHeader\u003e\n            \u003cCardTitle\u003eTeam Performance\u003c/CardTitle\u003e\n            \u003cCardDescription\u003eTasks completed by team members\u003c/CardDescription\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent className=\"h-80\"\u003e\n            \u003cTeamPerformanceChart /\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n        \u003cCard className=\"col-span-2\"\u003e\n          \u003cCardHeader\u003e\n            \u003cCardTitle\u003eTask Priority Distribution\u003c/CardTitle\u003e\n            \u003cCardDescription\u003eDistribution of tasks by priority level\u003c/CardDescription\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent className=\"h-80\"\u003e\n            \u003cPriorityDistributionChart /\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n      \u003c/div\u003e\n    \u003c/DashboardShell\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"app/settings/page.tsx\" isMerged=\"true\"\nimport { redirect } from \"next/navigation\"\nimport { DashboardHeader } from \"@/components/dashboard/dashboard-header\"\nimport { DashboardShell } from \"@/components/dashboard/dashboard-shell\"\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\nimport { ProfileSettings } from \"@/components/settings/profile-settings\"\nimport { NotificationSettings } from \"@/components/settings/notification-settings\"\nimport { SecuritySettings } from \"@/components/settings/security-settings\"\nimport { getUserSession } from \"@/lib/auth\"\n\nexport default async function SettingsPage() {\n  const user = await getUserSession()\n\n  if (!user) {\n    redirect(\"/login\")\n  }\n\n  return (\n    \u003cDashboardShell\u003e\n      \u003cDashboardHeader heading=\"Settings\" text=\"Manage your account settings and preferences\" /\u003e\n      \u003cTabs defaultValue=\"profile\" className=\"space-y-4\"\u003e\n        \u003cTabsList\u003e\n          \u003cTabsTrigger value=\"profile\"\u003eProfile\u003c/TabsTrigger\u003e\n          \u003cTabsTrigger value=\"notifications\"\u003eNotifications\u003c/TabsTrigger\u003e\n          \u003cTabsTrigger value=\"security\"\u003eSecurity\u003c/TabsTrigger\u003e\n        \u003c/TabsList\u003e\n        \u003cTabsContent value=\"profile\" className=\"space-y-4\"\u003e\n          \u003cProfileSettings user={user} /\u003e\n        \u003c/TabsContent\u003e\n        \u003cTabsContent value=\"notifications\" className=\"space-y-4\"\u003e\n          \u003cNotificationSettings user={user} /\u003e\n        \u003c/TabsContent\u003e\n        \u003cTabsContent value=\"security\" className=\"space-y-4\"\u003e\n          \u003cSecuritySettings user={user} /\u003e\n        \u003c/TabsContent\u003e\n      \u003c/Tabs\u003e\n    \u003c/DashboardShell\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"app/users/page.tsx\" isMerged=\"true\"\nimport { redirect } from \"next/navigation\"\nimport { DashboardHeader } from \"@/components/dashboard/dashboard-header\"\nimport { DashboardShell } from \"@/components/dashboard/dashboard-shell\"\nimport { Button } from \"@/components/ui/button\"\nimport { UserManagement } from \"@/components/users/user-management\"\nimport { getUserSession } from \"@/lib/auth\"\n\nexport default async function UsersPage() {\n  const user = await getUserSession()\n\n  if (!user) {\n    redirect(\"/login\")\n  }\n\n  // Only admins can access user management\n  if (user.role !== \"admin\") {\n    redirect(\"/dashboard\")\n  }\n\n  return (\n    \u003cDashboardShell\u003e\n      \u003cDashboardHeader heading=\"User Management\" text=\"Manage users and their permissions\"\u003e\n        \u003cButton\u003e\n          \u003ca href=\"/users/new\"\u003eAdd User\u003c/a\u003e\n        \u003c/Button\u003e\n      \u003c/DashboardHeader\u003e\n      \u003cdiv className=\"grid gap-4\"\u003e\n        \u003cUserManagement /\u003e\n      \u003c/div\u003e\n    \u003c/DashboardShell\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"app/login/page.tsx\" isMerged=\"true\"\n\"use client\"\n\nimport type React from \"react\"\n\nimport { useState } from \"react\"\nimport Link from \"next/link\"\nimport { useRouter } from \"next/navigation\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { loginUser } from \"@/lib/auth\"\n\nexport default function LoginPage() {\n  const router = useRouter()\n  const [isLoading, setIsLoading] = useState(false)\n  const [error, setError] = useState(\"\")\n\n  async function handleSubmit(event: React.FormEvent\u003cHTMLFormElement\u003e) {\n    event.preventDefault()\n    setIsLoading(true)\n    setError(\"\")\n\n    const formData = new FormData(event.currentTarget)\n    const email = formData.get(\"email\") as string\n    const password = formData.get(\"password\") as string\n\n    try {\n      await loginUser(email, password)\n      router.push(\"/dashboard\")\n    } catch (err) {\n      setError(\"Invalid email or password\")\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    \u003cdiv className=\"flex min-h-screen items-center justify-center bg-gray-50 px-4 py-12 sm:px-6 lg:px-8\"\u003e\n      \u003cCard className=\"w-full max-w-md\"\u003e\n        \u003cCardHeader className=\"space-y-1\"\u003e\n          \u003cCardTitle className=\"text-2xl font-bold\"\u003eLogin\u003c/CardTitle\u003e\n          \u003cCardDescription\u003eEnter your credentials to access your account\u003c/CardDescription\u003e\n        \u003c/CardHeader\u003e\n        \u003cform onSubmit={handleSubmit}\u003e\n          \u003cCardContent className=\"space-y-4\"\u003e\n            {error \u0026\u0026 \u003cdiv className=\"rounded-md bg-red-50 p-2 text-sm text-red-500\"\u003e{error}\u003c/div\u003e}\n            \u003cdiv className=\"space-y-2\"\u003e\n              \u003cLabel htmlFor=\"email\"\u003eEmail\u003c/Label\u003e\n              \u003cInput id=\"email\" name=\"email\" type=\"email\" required /\u003e\n            \u003c/div\u003e\n            \u003cdiv className=\"space-y-2\"\u003e\n              \u003cdiv className=\"flex items-center justify-between\"\u003e\n                \u003cLabel htmlFor=\"password\"\u003ePassword\u003c/Label\u003e\n                \u003cLink href=\"/forgot-password\" className=\"text-sm text-primary\"\u003e\n                  Forgot password?\n                \u003c/Link\u003e\n              \u003c/div\u003e\n              \u003cInput id=\"password\" name=\"password\" type=\"password\" required /\u003e\n            \u003c/div\u003e\n            \u003cdiv className=\"flex items-center space-x-2\"\u003e\n              \u003chr className=\"flex-1\" /\u003e\n              \u003cspan className=\"text-sm text-muted-foreground\"\u003eOR\u003c/span\u003e\n              \u003chr className=\"flex-1\" /\u003e\n            \u003c/div\u003e\n            \u003cdiv className=\"grid grid-cols-2 gap-4\"\u003e\n              \u003cButton variant=\"outline\" type=\"button\" className=\"w-full\"\u003e\n                \u003csvg className=\"mr-2 h-4 w-4\" viewBox=\"0 0 24 24\"\u003e\n                  \u003cpath\n                    d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\"\n                    fill=\"#4285F4\"\n                  /\u003e\n                  \u003cpath\n                    d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\"\n                    fill=\"#34A853\"\n                  /\u003e\n                  \u003cpath\n                    d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\"\n                    fill=\"#FBBC05\"\n                  /\u003e\n                  \u003cpath\n                    d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\"\n                    fill=\"#EA4335\"\n                  /\u003e\n                \u003c/svg\u003e\n                Google\n              \u003c/Button\u003e\n              \u003cButton variant=\"outline\" type=\"button\" className=\"w-full\"\u003e\n                \u003csvg className=\"mr-2 h-4 w-4\" viewBox=\"0 0 24 24\"\u003e\n                  \u003cpath\n                    d=\"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12\"\n                    fill=\"currentColor\"\n                  /\u003e\n                \u003c/svg\u003e\n                GitHub\n              \u003c/Button\u003e\n            \u003c/div\u003e\n          \u003c/CardContent\u003e\n          \u003cCardFooter className=\"flex flex-col space-y-4\"\u003e\n            \u003cButton type=\"submit\" className=\"w-full\" disabled={isLoading}\u003e\n              {isLoading ? \"Logging in...\" : \"Login\"}\n            \u003c/Button\u003e\n            \u003cdiv className=\"text-center text-sm\"\u003e\n              Don\u0026apos;t have an account?{\" \"}\n              \u003cLink href=\"/register\" className=\"text-primary\"\u003e\n                Sign up\n              \u003c/Link\u003e\n            \u003c/div\u003e\n          \u003c/CardFooter\u003e\n        \u003c/form\u003e\n      \u003c/Card\u003e\n    \u003c/div\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"app/register/page.tsx\" isMerged=\"true\"\n\"use client\"\n\nimport type React from \"react\"\n\nimport { useState } from \"react\"\nimport Link from \"next/link\"\nimport { useRouter } from \"next/navigation\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { registerUser } from \"@/lib/auth\"\n\nexport default function RegisterPage() {\n  const router = useRouter()\n  const [isLoading, setIsLoading] = useState(false)\n  const [error, setError] = useState(\"\")\n\n  async function handleSubmit(event: React.FormEvent\u003cHTMLFormElement\u003e) {\n    event.preventDefault()\n    setIsLoading(true)\n    setError(\"\")\n\n    const formData = new FormData(event.currentTarget)\n    const name = formData.get(\"name\") as string\n    const email = formData.get(\"email\") as string\n    const password = formData.get(\"password\") as string\n    const confirmPassword = formData.get(\"confirmPassword\") as string\n\n    if (password !== confirmPassword) {\n      setError(\"Passwords do not match\")\n      setIsLoading(false)\n      return\n    }\n\n    try {\n      await registerUser(name, email, password)\n      router.push(\"/dashboard\")\n    } catch (err) {\n      setError(\"Failed to create account\")\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    \u003cdiv className=\"flex min-h-screen items-center justify-center bg-gray-50 px-4 py-12 sm:px-6 lg:px-8\"\u003e\n      \u003cCard className=\"w-full max-w-md\"\u003e\n        \u003cCardHeader className=\"space-y-1\"\u003e\n          \u003cCardTitle className=\"text-2xl font-bold\"\u003eCreate an account\u003c/CardTitle\u003e\n          \u003cCardDescription\u003eEnter your information to create an account\u003c/CardDescription\u003e\n        \u003c/CardHeader\u003e\n        \u003cform onSubmit={handleSubmit}\u003e\n          \u003cCardContent className=\"space-y-4\"\u003e\n            {error \u0026\u0026 \u003cdiv className=\"rounded-md bg-red-50 p-2 text-sm text-red-500\"\u003e{error}\u003c/div\u003e}\n            \u003cdiv className=\"space-y-2\"\u003e\n              \u003cLabel htmlFor=\"name\"\u003eFull Name\u003c/Label\u003e\n              \u003cInput id=\"name\" name=\"name\" required /\u003e\n            \u003c/div\u003e\n            \u003cdiv className=\"space-y-2\"\u003e\n              \u003cLabel htmlFor=\"email\"\u003eEmail\u003c/Label\u003e\n              \u003cInput id=\"email\" name=\"email\" type=\"email\" required /\u003e\n            \u003c/div\u003e\n            \u003cdiv className=\"space-y-2\"\u003e\n              \u003cLabel htmlFor=\"password\"\u003ePassword\u003c/Label\u003e\n              \u003cInput id=\"password\" name=\"password\" type=\"password\" required /\u003e\n            \u003c/div\u003e\n            \u003cdiv className=\"space-y-2\"\u003e\n              \u003cLabel htmlFor=\"confirmPassword\"\u003eConfirm Password\u003c/Label\u003e\n              \u003cInput id=\"confirmPassword\" name=\"confirmPassword\" type=\"password\" required /\u003e\n            \u003c/div\u003e\n          \u003c/CardContent\u003e\n          \u003cCardFooter className=\"flex flex-col space-y-4\"\u003e\n            \u003cButton type=\"submit\" className=\"w-full\" disabled={isLoading}\u003e\n              {isLoading ? \"Creating account...\" : \"Create account\"}\n            \u003c/Button\u003e\n            \u003cdiv className=\"text-center text-sm\"\u003e\n              Already have an account?{\" \"}\n              \u003cLink href=\"/login\" className=\"text-primary\"\u003e\n                Login\n              \u003c/Link\u003e\n            \u003c/div\u003e\n          \u003c/CardFooter\u003e\n        \u003c/form\u003e\n      \u003c/Card\u003e\n    \u003c/div\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/dashboard/dashboard-header.tsx\" isMerged=\"true\"\nimport type React from \"react\"\ninterface DashboardHeaderProps {\n  heading: string\n  text?: string\n  children?: React.ReactNode\n}\n\nexport function DashboardHeader({ heading, text, children }: DashboardHeaderProps) {\n  return (\n    \u003cdiv className=\"flex items-center justify-between px-2\"\u003e\n      \u003cdiv className=\"grid gap-1\"\u003e\n        \u003ch1 className=\"font-heading text-3xl md:text-4xl\"\u003e{heading}\u003c/h1\u003e\n        {text \u0026\u0026 \u003cp className=\"text-lg text-muted-foreground\"\u003e{text}\u003c/p\u003e}\n      \u003c/div\u003e\n      {children}\n    \u003c/div\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/dashboard/dashboard-shell.tsx\" isMerged=\"true\"\nimport type React from \"react\"\ninterface DashboardShellProps {\n  children: React.ReactNode\n}\n\nexport function DashboardShell({ children }: DashboardShellProps) {\n  return (\n    \u003cdiv className=\"flex min-h-screen flex-col\"\u003e\n      \u003cmain className=\"flex flex-1 flex-col gap-4 p-4 md:gap-8 md:p-8\"\u003e\n        \u003cdiv className=\"mx-auto grid w-full max-w-7xl gap-4 md:gap-8\"\u003e{children}\u003c/div\u003e\n      \u003c/main\u003e\n    \u003c/div\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/dashboard/overview.tsx\" isMerged=\"true\"\n\"use client\"\nimport { Area, AreaChart, ResponsiveContainer, Tooltip, XAxis, YAxis } from \"@/components/ui/chart\"\n\nconst data = [\n  {\n    name: \"Jan\",\n    total: 12,\n  },\n  {\n    name: \"Feb\",\n    total: 18,\n  },\n  {\n    name: \"Mar\",\n    total: 24,\n  },\n  {\n    name: \"Apr\",\n    total: 30,\n  },\n  {\n    name: \"May\",\n    total: 22,\n  },\n  {\n    name: \"Jun\",\n    total: 28,\n  },\n  {\n    name: \"Jul\",\n    total: 32,\n  },\n  {\n    name: \"Aug\",\n    total: 36,\n  },\n  {\n    name: \"Sep\",\n    total: 30,\n  },\n  {\n    name: \"Oct\",\n    total: 28,\n  },\n  {\n    name: \"Nov\",\n    total: 34,\n  },\n  {\n    name: \"Dec\",\n    total: 40,\n  },\n]\n\nexport function Overview() {\n  return (\n    \u003cResponsiveContainer width=\"100%\" height={350}\u003e\n      \u003cAreaChart\n        data={data}\n        margin={{\n          top: 10,\n          right: 30,\n          left: 0,\n          bottom: 0,\n        }}\n      \u003e\n        \u003cdefs\u003e\n          \u003clinearGradient id=\"colorTotal\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\"\u003e\n            \u003cstop offset=\"5%\" stopColor=\"#8884d8\" stopOpacity={0.8} /\u003e\n            \u003cstop offset=\"95%\" stopColor=\"#8884d8\" stopOpacity={0} /\u003e\n          \u003c/linearGradient\u003e\n        \u003c/defs\u003e\n        \u003cXAxis dataKey=\"name\" stroke=\"#888888\" fontSize={12} tickLine={false} axisLine={false} /\u003e\n        \u003cYAxis stroke=\"#888888\" fontSize={12} tickLine={false} axisLine={false} tickFormatter={(value) =\u003e `${value}`} /\u003e\n        \u003cTooltip /\u003e\n        \u003cArea type=\"monotone\" dataKey=\"total\" stroke=\"#8884d8\" fillOpacity={1} fill=\"url(#colorTotal)\" /\u003e\n      \u003c/AreaChart\u003e\n    \u003c/ResponsiveContainer\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/dashboard/recent-tasks.tsx\" isMerged=\"true\"\n\"use client\"\n\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\nimport { Badge } from \"@/components/ui/badge\"\n\nconst tasks = [\n  {\n    id: \"TASK-8782\",\n    title: \"Create new landing page\",\n    status: \"In Progress\",\n    priority: \"High\",\n    assignee: {\n      name: \"Emma Wilson\",\n      email: \"emma@example.com\",\n      avatar: \"/placeholder.svg?height=32\u0026width=32\",\n    },\n  },\n  {\n    id: \"TASK-7878\",\n    title: \"Update user authentication flow\",\n    status: \"In Review\",\n    priority: \"Medium\",\n    assignee: {\n      name: \"Jackson Lee\",\n      email: \"jackson@example.com\",\n      avatar: \"/placeholder.svg?height=32\u0026width=32\",\n    },\n  },\n  {\n    id: \"TASK-7839\",\n    title: \"Implement notification system\",\n    status: \"Completed\",\n    priority: \"Medium\",\n    assignee: {\n      name: \"Sophia Chen\",\n      email: \"sophia@example.com\",\n      avatar: \"/placeholder.svg?height=32\u0026width=32\",\n    },\n  },\n  {\n    id: \"TASK-7349\",\n    title: \"Fix mobile responsiveness issues\",\n    status: \"In Progress\",\n    priority: \"High\",\n    assignee: {\n      name: \"Liam Johnson\",\n      email: \"liam@example.com\",\n      avatar: \"/placeholder.svg?height=32\u0026width=32\",\n    },\n  },\n  {\n    id: \"TASK-8572\",\n    title: \"Create API documentation\",\n    status: \"Not Started\",\n    priority: \"Low\",\n    assignee: {\n      name: \"Olivia Martinez\",\n      email: \"olivia@example.com\",\n      avatar: \"/placeholder.svg?height=32\u0026width=32\",\n    },\n  },\n]\n\nexport function RecentTasks() {\n  return (\n    \u003cdiv className=\"space-y-8\"\u003e\n      {tasks.map((task) =\u003e (\n        \u003cdiv key={task.id} className=\"flex items-center\"\u003e\n          \u003cAvatar className=\"h-9 w-9\"\u003e\n            \u003cAvatarImage src={task.assignee.avatar} alt={task.assignee.name} /\u003e\n            \u003cAvatarFallback\u003e\n              {task.assignee.name\n                .split(\" \")\n                .map((n) =\u003e n[0])\n                .join(\"\")}\n            \u003c/AvatarFallback\u003e\n          \u003c/Avatar\u003e\n          \u003cdiv className=\"ml-4 space-y-1\"\u003e\n            \u003cp className=\"text-sm font-medium leading-none\"\u003e{task.title}\u003c/p\u003e\n            \u003cp className=\"text-sm text-muted-foreground\"\u003e\n              {task.id} · Assigned to {task.assignee.name}\n            \u003c/p\u003e\n          \u003c/div\u003e\n          \u003cdiv className=\"ml-auto flex items-center gap-2\"\u003e\n            \u003cBadge\n              variant={\n                task.status === \"Completed\"\n                  ? \"success\"\n                  : task.status === \"In Progress\"\n                    ? \"default\"\n                    : task.status === \"In Review\"\n                      ? \"warning\"\n                      : \"secondary\"\n              }\n            \u003e\n              {task.status}\n            \u003c/Badge\u003e\n            \u003cBadge\n              variant={task.priority === \"High\" ? \"destructive\" : task.priority === \"Medium\" ? \"default\" : \"outline\"}\n            \u003e\n              {task.priority}\n            \u003c/Badge\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n      ))}\n    \u003c/div\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/dashboard/team-members.tsx\" isMerged=\"true\"\n\"use client\"\n\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\n\nconst teamMembers = [\n  {\n    id: 1,\n    name: \"Emma Wilson\",\n    email: \"emma@example.com\",\n    role: \"Product Manager\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    tasksAssigned: 8,\n    tasksCompleted: 5,\n  },\n  {\n    id: 2,\n    name: \"Jackson Lee\",\n    email: \"jackson@example.com\",\n    role: \"Frontend Developer\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    tasksAssigned: 12,\n    tasksCompleted: 10,\n  },\n  {\n    id: 3,\n    name: \"Sophia Chen\",\n    email: \"sophia@example.com\",\n    role: \"Backend Developer\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    tasksAssigned: 10,\n    tasksCompleted: 7,\n  },\n  {\n    id: 4,\n    name: \"Liam Johnson\",\n    email: \"liam@example.com\",\n    role: \"UI/UX Designer\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    tasksAssigned: 6,\n    tasksCompleted: 4,\n  },\n  {\n    id: 5,\n    name: \"Olivia Martinez\",\n    email: \"olivia@example.com\",\n    role: \"QA Engineer\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    tasksAssigned: 9,\n    tasksCompleted: 8,\n  },\n]\n\nexport function TeamMembers() {\n  return (\n    \u003cdiv className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\"\u003e\n      {teamMembers.map((member) =\u003e (\n        \u003cCard key={member.id}\u003e\n          \u003cCardHeader className=\"flex flex-row items-center gap-4 pb-2\"\u003e\n            \u003cAvatar className=\"h-10 w-10\"\u003e\n              \u003cAvatarImage src={member.avatar} alt={member.name} /\u003e\n              \u003cAvatarFallback\u003e\n                {member.name\n                  .split(\" \")\n                  .map((n) =\u003e n[0])\n                  .join(\"\")}\n              \u003c/AvatarFallback\u003e\n            \u003c/Avatar\u003e\n            \u003cdiv className=\"grid gap-1\"\u003e\n              \u003cCardTitle className=\"text-base\"\u003e{member.name}\u003c/CardTitle\u003e\n              \u003cCardDescription className=\"text-xs\"\u003e{member.role}\u003c/CardDescription\u003e\n            \u003c/div\u003e\n          \u003c/CardHeader\u003e\n          \u003cCardContent\u003e\n            \u003cdiv className=\"grid gap-2\"\u003e\n              \u003cdiv className=\"grid grid-cols-2 gap-2 text-sm\"\u003e\n                \u003cdiv className=\"flex flex-col\"\u003e\n                  \u003cspan className=\"text-muted-foreground\"\u003eAssigned\u003c/span\u003e\n                  \u003cspan className=\"font-medium\"\u003e{member.tasksAssigned}\u003c/span\u003e\n                \u003c/div\u003e\n                \u003cdiv className=\"flex flex-col\"\u003e\n                  \u003cspan className=\"text-muted-foreground\"\u003eCompleted\u003c/span\u003e\n                  \u003cspan className=\"font-medium\"\u003e{member.tasksCompleted}\u003c/span\u003e\n                \u003c/div\u003e\n              \u003c/div\u003e\n              \u003cdiv className=\"mt-2 flex justify-between\"\u003e\n                \u003cButton size=\"sm\" variant=\"outline\"\u003e\n                  View Profile\n                \u003c/Button\u003e\n                \u003cButton size=\"sm\"\u003eAssign Task\u003c/Button\u003e\n              \u003c/div\u003e\n            \u003c/div\u003e\n          \u003c/CardContent\u003e\n        \u003c/Card\u003e\n      ))}\n    \u003c/div\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/tasks/kanban-board.tsx\" isMerged=\"true\"\n\"use client\"\n\nimport { useState } from \"react\"\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\"\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\n\n// Initial task data\nconst initialTasks = {\n  \"to-do\": [\n    {\n      id: \"task-1\",\n      title: \"Create new landing page\",\n      description: \"Design and implement a new landing page for the product\",\n      priority: \"High\",\n      assignee: {\n        name: \"Emma Wilson\",\n        avatar: \"/placeholder.svg?height=32\u0026width=32\",\n      },\n      dueDate: \"2023-12-15\",\n    },\n    {\n      id: \"task-2\",\n      title: \"Update user authentication flow\",\n      description: \"Improve the user authentication experience\",\n      priority: \"Medium\",\n      assignee: {\n        name: \"Jackson Lee\",\n        avatar: \"/placeholder.svg?height=32\u0026width=32\",\n      },\n      dueDate: \"2023-12-20\",\n    },\n    {\n      id: \"task-3\",\n      title: \"Create API documentation\",\n      description: \"Document all API endpoints for developers\",\n      priority: \"Low\",\n      assignee: {\n        name: \"Olivia Martinez\",\n        avatar: \"/placeholder.svg?height=32\u0026width=32\",\n      },\n      dueDate: \"2023-12-30\",\n    },\n  ],\n  \"in-progress\": [\n    {\n      id: \"task-4\",\n      title: \"Implement notification system\",\n      description: \"Create a real-time notification system for users\",\n      priority: \"Medium\",\n      assignee: {\n        name: \"Sophia Chen\",\n        avatar: \"/placeholder.svg?height=32\u0026width=32\",\n      },\n      dueDate: \"2023-12-10\",\n    },\n    {\n      id: \"task-5\",\n      title: \"Fix mobile responsiveness issues\",\n      description: \"Address UI issues on mobile devices\",\n      priority: \"High\",\n      assignee: {\n        name: \"Liam Johnson\",\n        avatar: \"/placeholder.svg?height=32\u0026width=32\",\n      },\n      dueDate: \"2023-12-05\",\n    },\n  ],\n  \"in-review\": [\n    {\n      id: \"task-6\",\n      title: \"Optimize database queries\",\n      description: \"Improve performance of slow database queries\",\n      priority: \"High\",\n      assignee: {\n        name: \"Jackson Lee\",\n        avatar: \"/placeholder.svg?height=32\u0026width=32\",\n      },\n      dueDate: \"2023-12-08\",\n    },\n  ],\n  completed: [\n    {\n      id: \"task-7\",\n      title: \"Set up CI/CD pipeline\",\n      description: \"Implement continuous integration and deployment\",\n      priority: \"Medium\",\n      assignee: {\n        name: \"Sophia Chen\",\n        avatar: \"/placeholder.svg?height=32\u0026width=32\",\n      },\n      dueDate: \"2023-12-01\",\n    },\n    {\n      id: \"task-8\",\n      title: \"Create user onboarding flow\",\n      description: \"Design and implement user onboarding experience\",\n      priority: \"Medium\",\n      assignee: {\n        name: \"Emma Wilson\",\n        avatar: \"/placeholder.svg?height=32\u0026width=32\",\n      },\n      dueDate: \"2023-11-25\",\n    },\n  ],\n}\n\n// Column definitions\nconst columns = [\n  {\n    id: \"to-do\",\n    title: \"To Do\",\n    color: \"bg-gray-100\",\n  },\n  {\n    id: \"in-progress\",\n    title: \"In Progress\",\n    color: \"bg-blue-50\",\n  },\n  {\n    id: \"in-review\",\n    title: \"In Review\",\n    color: \"bg-yellow-50\",\n  },\n  {\n    id: \"completed\",\n    title: \"Completed\",\n    color: \"bg-green-50\",\n  },\n]\n\nexport function KanbanBoard() {\n  const [tasks, setTasks] = useState(initialTasks)\n\n  const handleDragEnd = (result) =\u003e {\n    const { destination, source, draggableId } = result\n\n    // If there's no destination or the item is dropped in the same place\n    if (!destination || (destination.droppableId === source.droppableId \u0026\u0026 destination.index === source.index)) {\n      return\n    }\n\n    // Find the task that was dragged\n    const sourceColumn = tasks[source.droppableId]\n    const taskToMove = sourceColumn.find((task) =\u003e task.id === draggableId)\n\n    // Create new state\n    const newTasks = { ...tasks }\n\n    // Remove from source column\n    newTasks[source.droppableId] = sourceColumn.filter((task) =\u003e task.id !== draggableId)\n\n    // Add to destination column\n    newTasks[destination.droppableId] = [\n      ...newTasks[destination.droppableId].slice(0, destination.index),\n      taskToMove,\n      ...newTasks[destination.droppableId].slice(destination.index),\n    ]\n\n    setTasks(newTasks)\n  }\n\n  return (\n    \u003cDragDropContext onDragEnd={handleDragEnd}\u003e\n      \u003cdiv className=\"grid grid-cols-1 gap-4 md:grid-cols-2 lg:grid-cols-4\"\u003e\n        {columns.map((column) =\u003e (\n          \u003cdiv key={column.id} className=\"flex flex-col\"\u003e\n            \u003cdiv className={`rounded-t-md p-3 ${column.color}`}\u003e\n              \u003ch3 className=\"font-medium\"\u003e{column.title}\u003c/h3\u003e\n              \u003cdiv className=\"text-sm text-muted-foreground\"\u003e{tasks[column.id].length} tasks\u003c/div\u003e\n            \u003c/div\u003e\n            \u003cDroppable droppableId={column.id}\u003e\n              {(provided) =\u003e (\n                \u003cdiv\n                  {...provided.droppableProps}\n                  ref={provided.innerRef}\n                  className=\"flex flex-1 flex-col gap-2 rounded-b-md border border-t-0 bg-background p-2\"\n                \u003e\n                  {tasks[column.id].map((task, index) =\u003e (\n                    \u003cDraggable key={task.id} draggableId={task.id} index={index}\u003e\n                      {(provided) =\u003e (\n                        \u003cCard\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                          className=\"cursor-grab\"\n                        \u003e\n                          \u003cCardHeader className=\"p-3 pb-0\"\u003e\n                            \u003cCardTitle className=\"text-sm font-medium\"\u003e{task.title}\u003c/CardTitle\u003e\n                          \u003c/CardHeader\u003e\n                          \u003cCardContent className=\"p-3\"\u003e\n                            \u003cp className=\"text-xs text-muted-foreground\"\u003e{task.description}\u003c/p\u003e\n                            \u003cdiv className=\"mt-2 flex items-center justify-between\"\u003e\n                              \u003cBadge\n                                variant={\n                                  task.priority === \"High\"\n                                    ? \"destructive\"\n                                    : task.priority === \"Medium\"\n                                      ? \"default\"\n                                      : \"outline\"\n                                }\n                                className=\"text-xs\"\n                              \u003e\n                                {task.priority}\n                              \u003c/Badge\u003e\n                              \u003cdiv className=\"flex items-center gap-1\"\u003e\n                                \u003cspan className=\"text-xs text-muted-foreground\"\u003e\n                                  {new Date(task.dueDate).toLocaleDateString()}\n                                \u003c/span\u003e\n                                \u003cAvatar className=\"h-6 w-6\"\u003e\n                                  \u003cAvatarImage src={task.assignee.avatar} alt={task.assignee.name} /\u003e\n                                  \u003cAvatarFallback className=\"text-xs\"\u003e\n                                    {task.assignee.name\n                                      .split(\" \")\n                                      .map((n) =\u003e n[0])\n                                      .join(\"\")}\n                                  \u003c/AvatarFallback\u003e\n                                \u003c/Avatar\u003e\n                              \u003c/div\u003e\n                            \u003c/div\u003e\n                          \u003c/CardContent\u003e\n                        \u003c/Card\u003e\n                      )}\n                    \u003c/Draggable\u003e\n                  ))}\n                  {provided.placeholder}\n                \u003c/div\u003e\n              )}\n            \u003c/Droppable\u003e\n          \u003c/div\u003e\n        ))}\n      \u003c/div\u003e\n    \u003c/DragDropContext\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/tasks/task-filters.tsx\" isMerged=\"true\"\n\"use client\"\n\nimport { useState } from \"react\"\nimport { Input } from \"@/components/ui/input\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { Tabs, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\n\nexport function TaskFilters() {\n  const [view, setView] = useState(\"kanban\")\n\n  return (\n    \u003cdiv className=\"flex flex-col gap-4 sm:flex-row sm:items-center sm:justify-between\"\u003e\n      \u003cdiv className=\"flex items-center gap-2\"\u003e\n        \u003cTabs defaultValue=\"kanban\" className=\"w-[400px]\" onValueChange={setView}\u003e\n          \u003cTabsList\u003e\n            \u003cTabsTrigger value=\"kanban\"\u003eKanban\u003c/TabsTrigger\u003e\n            \u003cTabsTrigger value=\"list\"\u003eList\u003c/TabsTrigger\u003e\n            \u003cTabsTrigger value=\"calendar\"\u003eCalendar\u003c/TabsTrigger\u003e\n          \u003c/TabsList\u003e\n        \u003c/Tabs\u003e\n      \u003c/div\u003e\n      \u003cdiv className=\"flex flex-col gap-2 sm:flex-row sm:items-center\"\u003e\n        \u003cdiv className=\"flex items-center gap-2\"\u003e\n          \u003cInput placeholder=\"Search tasks...\" className=\"h-9 w-[150px] sm:w-[180px] lg:w-[250px]\" /\u003e\n          \u003cSelect defaultValue=\"all\"\u003e\n            \u003cSelectTrigger className=\"h-9 w-[130px]\"\u003e\n              \u003cSelectValue placeholder=\"Priority\" /\u003e\n            \u003c/SelectTrigger\u003e\n            \u003cSelectContent\u003e\n              \u003cSelectItem value=\"all\"\u003eAll Priorities\u003c/SelectItem\u003e\n              \u003cSelectItem value=\"high\"\u003eHigh\u003c/SelectItem\u003e\n              \u003cSelectItem value=\"medium\"\u003eMedium\u003c/SelectItem\u003e\n              \u003cSelectItem value=\"low\"\u003eLow\u003c/SelectItem\u003e\n            \u003c/SelectContent\u003e\n          \u003c/Select\u003e\n          \u003cSelect defaultValue=\"all\"\u003e\n            \u003cSelectTrigger className=\"h-9 w-[130px]\"\u003e\n              \u003cSelectValue placeholder=\"Assignee\" /\u003e\n            \u003c/SelectTrigger\u003e\n            \u003cSelectContent\u003e\n              \u003cSelectItem value=\"all\"\u003eAll Assignees\u003c/SelectItem\u003e\n              \u003cSelectItem value=\"emma\"\u003eEmma Wilson\u003c/SelectItem\u003e\n              \u003cSelectItem value=\"jackson\"\u003eJackson Lee\u003c/SelectItem\u003e\n              \u003cSelectItem value=\"sophia\"\u003eSophia Chen\u003c/SelectItem\u003e\n              \u003cSelectItem value=\"liam\"\u003eLiam Johnson\u003c/SelectItem\u003e\n              \u003cSelectItem value=\"olivia\"\u003eOlivia Martinez\u003c/SelectItem\u003e\n            \u003c/SelectContent\u003e\n          \u003c/Select\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/tasks/task-form.tsx\" isMerged=\"true\"\n\"use client\"\n\nimport { useState } from \"react\"\nimport { useRouter } from \"next/navigation\"\nimport { Button } from \"@/components/ui/button\"\nimport { Calendar } from \"@/components/ui/calendar\"\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Form, FormControl, FormDescription, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\"\nimport { Input } from \"@/components/ui/input\"\nimport { Popover, PopoverContent, PopoverTrigger } from \"@/components/ui/popover\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { format } from \"date-fns\"\nimport { CalendarIcon } from \"lucide-react\"\nimport { useForm } from \"react-hook-form\"\n\nexport function TaskForm() {\n  const router = useRouter()\n  const [isLoading, setIsLoading] = useState(false)\n\n  const form = useForm({\n    defaultValues: {\n      title: \"\",\n      description: \"\",\n      priority: \"medium\",\n      assignee: \"\",\n      dueDate: new Date(),\n      tags: \"\",\n    },\n  })\n\n  async function onSubmit(data) {\n    setIsLoading(true)\n\n    try {\n      // Here you would normally send the data to your API\n      console.log(\"Form submitted:\", data)\n\n      // Simulate API call\n      await new Promise((resolve) =\u003e setTimeout(resolve, 1000))\n\n      // Redirect to tasks page\n      router.push(\"/tasks\")\n    } catch (error) {\n      console.error(\"Error creating task:\", error)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    \u003cCard\u003e\n      \u003cCardHeader\u003e\n        \u003cCardTitle\u003eCreate New Task\u003c/CardTitle\u003e\n        \u003cCardDescription\u003eAdd a new task and assign it to team members\u003c/CardDescription\u003e\n      \u003c/CardHeader\u003e\n      \u003cForm {...form}\u003e\n        \u003cform onSubmit={form.handleSubmit(onSubmit)}\u003e\n          \u003cCardContent className=\"space-y-4\"\u003e\n            \u003cFormField\n              control={form.control}\n              name=\"title\"\n              render={({ field }) =\u003e (\n                \u003cFormItem\u003e\n                  \u003cFormLabel\u003eTask Title\u003c/FormLabel\u003e\n                  \u003cFormControl\u003e\n                    \u003cInput placeholder=\"Enter task title\" {...field} /\u003e\n                  \u003c/FormControl\u003e\n                  \u003cFormMessage /\u003e\n                \u003c/FormItem\u003e\n              )}\n            /\u003e\n            \u003cFormField\n              control={form.control}\n              name=\"description\"\n              render={({ field }) =\u003e (\n                \u003cFormItem\u003e\n                  \u003cFormLabel\u003eDescription\u003c/FormLabel\u003e\n                  \u003cFormControl\u003e\n                    \u003cTextarea placeholder=\"Enter task description\" className=\"min-h-[100px]\" {...field} /\u003e\n                  \u003c/FormControl\u003e\n                  \u003cFormMessage /\u003e\n                \u003c/FormItem\u003e\n              )}\n            /\u003e\n            \u003cdiv className=\"grid grid-cols-1 gap-4 md:grid-cols-2\"\u003e\n              \u003cFormField\n                control={form.control}\n                name=\"priority\"\n                render={({ field }) =\u003e (\n                  \u003cFormItem\u003e\n                    \u003cFormLabel\u003ePriority\u003c/FormLabel\u003e\n                    \u003cSelect onValueChange={field.onChange} defaultValue={field.value}\u003e\n                      \u003cFormControl\u003e\n                        \u003cSelectTrigger\u003e\n                          \u003cSelectValue placeholder=\"Select priority\" /\u003e\n                        \u003c/SelectTrigger\u003e\n                      \u003c/FormControl\u003e\n                      \u003cSelectContent\u003e\n                        \u003cSelectItem value=\"high\"\u003eHigh\u003c/SelectItem\u003e\n                        \u003cSelectItem value=\"medium\"\u003eMedium\u003c/SelectItem\u003e\n                        \u003cSelectItem value=\"low\"\u003eLow\u003c/SelectItem\u003e\n                      \u003c/SelectContent\u003e\n                    \u003c/Select\u003e\n                    \u003cFormMessage /\u003e\n                  \u003c/FormItem\u003e\n                )}\n              /\u003e\n              \u003cFormField\n                control={form.control}\n                name=\"assignee\"\n                render={({ field }) =\u003e (\n                  \u003cFormItem\u003e\n                    \u003cFormLabel\u003eAssignee\u003c/FormLabel\u003e\n                    \u003cSelect onValueChange={field.onChange} defaultValue={field.value}\u003e\n                      \u003cFormControl\u003e\n                        \u003cSelectTrigger\u003e\n                          \u003cSelectValue placeholder=\"Select team member\" /\u003e\n                        \u003c/SelectTrigger\u003e\n                      \u003c/FormControl\u003e\n                      \u003cSelectContent\u003e\n                        \u003cSelectItem value=\"emma\"\u003eEmma Wilson\u003c/SelectItem\u003e\n                        \u003cSelectItem value=\"jackson\"\u003eJackson Lee\u003c/SelectItem\u003e\n                        \u003cSelectItem value=\"sophia\"\u003eSophia Chen\u003c/SelectItem\u003e\n                        \u003cSelectItem value=\"liam\"\u003eLiam Johnson\u003c/SelectItem\u003e\n                        \u003cSelectItem value=\"olivia\"\u003eOlivia Martinez\u003c/SelectItem\u003e\n                      \u003c/SelectContent\u003e\n                    \u003c/Select\u003e\n                    \u003cFormMessage /\u003e\n                  \u003c/FormItem\u003e\n                )}\n              /\u003e\n            \u003c/div\u003e\n            \u003cdiv className=\"grid grid-cols-1 gap-4 md:grid-cols-2\"\u003e\n              \u003cFormField\n                control={form.control}\n                name=\"dueDate\"\n                render={({ field }) =\u003e (\n                  \u003cFormItem className=\"flex flex-col\"\u003e\n                    \u003cFormLabel\u003eDue Date\u003c/FormLabel\u003e\n                    \u003cPopover\u003e\n                      \u003cPopoverTrigger asChild\u003e\n                        \u003cFormControl\u003e\n                          \u003cButton variant={\"outline\"} className={\"w-full pl-3 text-left font-normal\"}\u003e\n                            {field.value ? format(field.value, \"PPP\") : \u003cspan\u003ePick a date\u003c/span\u003e}\n                            \u003cCalendarIcon className=\"ml-auto h-4 w-4 opacity-50\" /\u003e\n                          \u003c/Button\u003e\n                        \u003c/FormControl\u003e\n                      \u003c/PopoverTrigger\u003e\n                      \u003cPopoverContent className=\"w-auto p-0\" align=\"start\"\u003e\n                        \u003cCalendar mode=\"single\" selected={field.value} onSelect={field.onChange} initialFocus /\u003e\n                      \u003c/PopoverContent\u003e\n                    \u003c/Popover\u003e\n                    \u003cFormMessage /\u003e\n                  \u003c/FormItem\u003e\n                )}\n              /\u003e\n              \u003cFormField\n                control={form.control}\n                name=\"tags\"\n                render={({ field }) =\u003e (\n                  \u003cFormItem\u003e\n                    \u003cFormLabel\u003eTags\u003c/FormLabel\u003e\n                    \u003cFormControl\u003e\n                      \u003cInput placeholder=\"Enter tags separated by commas\" {...field} /\u003e\n                    \u003c/FormControl\u003e\n                    \u003cFormDescription\u003eE.g. frontend, bug, feature\u003c/FormDescription\u003e\n                    \u003cFormMessage /\u003e\n                  \u003c/FormItem\u003e\n                )}\n              /\u003e\n            \u003c/div\u003e\n          \u003c/CardContent\u003e\n          \u003cCardFooter className=\"flex justify-between\"\u003e\n            \u003cButton variant=\"outline\" type=\"button\" onClick={() =\u003e router.back()}\u003e\n              Cancel\n            \u003c/Button\u003e\n            \u003cButton type=\"submit\" disabled={isLoading}\u003e\n              {isLoading ? \"Creating...\" : \"Create Task\"}\n            \u003c/Button\u003e\n          \u003c/CardFooter\u003e\n        \u003c/form\u003e\n      \u003c/Form\u003e\n    \u003c/Card\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/tasks/task-details.tsx\" isMerged=\"true\"\n\"use client\"\n\nimport { useState } from \"react\"\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Progress } from \"@/components/ui/progress\"\nimport { Separator } from \"@/components/ui/separator\"\nimport { format } from \"date-fns\"\n\n// Mock task data - in a real app, this would come from an API\nconst taskData = {\n  id: \"TASK-8782\",\n  title: \"Create new landing page\",\n  description:\n    \"Design and implement a new landing page for the product. The page should highlight key features and include a sign-up form for new users. Make sure it's responsive and works well on mobile devices.\",\n  status: \"In Progress\",\n  priority: \"High\",\n  createdAt: \"2023-11-15T10:30:00Z\",\n  dueDate: \"2023-12-15T23:59:59Z\",\n  progress: 65,\n  assignee: {\n    name: \"Emma Wilson\",\n    email: \"emma@example.com\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n  },\n  creator: {\n    name: \"Liam Johnson\",\n    email: \"liam@example.com\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n  },\n  tags: [\"frontend\", \"design\", \"marketing\"],\n  subtasks: [\n    { id: 1, title: \"Design mockups\", completed: true },\n    { id: 2, title: \"Implement HTML/CSS\", completed: true },\n    { id: 3, title: \"Add JavaScript interactions\", completed: false },\n    { id: 4, title: \"Optimize for mobile\", completed: false },\n    { id: 5, title: \"Test across browsers\", completed: false },\n  ],\n}\n\nexport function TaskDetails({ id }: { id: string }) {\n  const [task, setTask] = useState(taskData)\n  const [isEditing, setIsEditing] = useState(false)\n\n  const toggleSubtask = (subtaskId: number) =\u003e {\n    setTask((prevTask) =\u003e ({\n      ...prevTask,\n      subtasks: prevTask.subtasks.map((subtask) =\u003e\n        subtask.id === subtaskId ? { ...subtask, completed: !subtask.completed } : subtask,\n      ),\n      progress: calculateProgress(\n        prevTask.subtasks.map((subtask) =\u003e\n          subtask.id === subtaskId ? { ...subtask, completed: !subtask.completed } : subtask,\n        ),\n      ),\n    }))\n  }\n\n  const calculateProgress = (subtasks) =\u003e {\n    if (subtasks.length === 0) return 0\n    const completedCount = subtasks.filter((subtask) =\u003e subtask.completed).length\n    return Math.round((completedCount / subtasks.length) * 100)\n  }\n\n  return (\n    \u003cCard\u003e\n      \u003cCardHeader\u003e\n        \u003cdiv className=\"flex items-start justify-between\"\u003e\n          \u003cdiv\u003e\n            \u003cCardTitle className=\"text-xl\"\u003e{task.title}\u003c/CardTitle\u003e\n            \u003cCardDescription\u003e\n              {task.id} · Created on {format(new Date(task.createdAt), \"MMM d, yyyy\")}\n            \u003c/CardDescription\u003e\n          \u003c/div\u003e\n          \u003cdiv className=\"flex items-center gap-2\"\u003e\n            \u003cButton variant=\"outline\" size=\"sm\" onClick={() =\u003e setIsEditing(true)}\u003e\n              Edit\n            \u003c/Button\u003e\n            \u003cButton variant=\"outline\" size=\"sm\"\u003e\n              Delete\n            \u003c/Button\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n        \u003cdiv className=\"mt-2 flex flex-wrap gap-2\"\u003e\n          \u003cBadge\n            variant={\n              task.status === \"Completed\"\n                ? \"success\"\n                : task.status === \"In Progress\"\n                  ? \"default\"\n                  : task.status === \"In Review\"\n                    ? \"warning\"\n                    : \"secondary\"\n            }\n          \u003e\n            {task.status}\n          \u003c/Badge\u003e\n          \u003cBadge\n            variant={task.priority === \"High\" ? \"destructive\" : task.priority === \"Medium\" ? \"default\" : \"outline\"}\n          \u003e\n            {task.priority}\n          \u003c/Badge\u003e\n          {task.tags.map((tag) =\u003e (\n            \u003cBadge key={tag} variant=\"outline\"\u003e\n              {tag}\n            \u003c/Badge\u003e\n          ))}\n        \u003c/div\u003e\n      \u003c/CardHeader\u003e\n      \u003cCardContent className=\"space-y-4\"\u003e\n        \u003cdiv\u003e\n          \u003ch3 className=\"mb-2 font-medium\"\u003eDescription\u003c/h3\u003e\n          \u003cp className=\"text-sm text-muted-foreground\"\u003e{task.description}\u003c/p\u003e\n        \u003c/div\u003e\n\n        \u003cdiv\u003e\n          \u003cdiv className=\"mb-2 flex items-center justify-between\"\u003e\n            \u003ch3 className=\"font-medium\"\u003eProgress\u003c/h3\u003e\n            \u003cspan className=\"text-sm font-medium\"\u003e{task.progress}%\u003c/span\u003e\n          \u003c/div\u003e\n          \u003cProgress value={task.progress} className=\"h-2\" /\u003e\n        \u003c/div\u003e\n\n        \u003cdiv className=\"grid gap-4 md:grid-cols-2\"\u003e\n          \u003cdiv\u003e\n            \u003ch3 className=\"mb-2 font-medium\"\u003eAssignee\u003c/h3\u003e\n            \u003cdiv className=\"flex items-center gap-2\"\u003e\n              \u003cAvatar\u003e\n                \u003cAvatarImage src={task.assignee.avatar} alt={task.assignee.name} /\u003e\n                \u003cAvatarFallback\u003e\n                  {task.assignee.name\n                    .split(\" \")\n                    .map((n) =\u003e n[0])\n                    .join(\"\")}\n                \u003c/AvatarFallback\u003e\n              \u003c/Avatar\u003e\n              \u003cdiv\u003e\n                \u003cp className=\"text-sm font-medium\"\u003e{task.assignee.name}\u003c/p\u003e\n                \u003cp className=\"text-xs text-muted-foreground\"\u003e{task.assignee.email}\u003c/p\u003e\n              \u003c/div\u003e\n            \u003c/div\u003e\n          \u003c/div\u003e\n\n          \u003cdiv\u003e\n            \u003ch3 className=\"mb-2 font-medium\"\u003eDue Date\u003c/h3\u003e\n            \u003cp className=\"text-sm\"\u003e{format(new Date(task.dueDate), \"MMMM d, yyyy\")}\u003c/p\u003e\n            \u003cp className=\"text-xs text-muted-foreground\"\u003e\n              {new Date(task.dueDate) \u003c new Date()\n                ? \"Overdue\"\n                : `${Math.ceil(\n                    (new Date(task.dueDate).getTime() - new Date().getTime()) / (1000 * 60 * 60 * 24),\n                  )} days remaining`}\n            \u003c/p\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n\n        \u003cSeparator /\u003e\n\n        \u003cdiv\u003e\n          \u003ch3 className=\"mb-2 font-medium\"\u003eSubtasks\u003c/h3\u003e\n          \u003cdiv className=\"space-y-2\"\u003e\n            {task.subtasks.map((subtask) =\u003e (\n              \u003cdiv key={subtask.id} className=\"flex items-center gap-2 rounded-md border p-2\"\u003e\n                \u003cinput\n                  type=\"checkbox\"\n                  checked={subtask.completed}\n                  onChange={() =\u003e toggleSubtask(subtask.id)}\n                  className=\"h-4 w-4 rounded border-gray-300\"\n                /\u003e\n                \u003cspan className={`text-sm ${subtask.completed ? \"text-muted-foreground line-through\" : \"\"}`}\u003e\n                  {subtask.title}\n                \u003c/span\u003e\n              \u003c/div\u003e\n            ))}\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/CardContent\u003e\n      \u003cCardFooter className=\"flex justify-between\"\u003e\n        \u003cButton variant=\"outline\"\u003eBack to Tasks\u003c/Button\u003e\n        \u003cButton\u003eUpdate Status\u003c/Button\u003e\n      \u003c/CardFooter\u003e\n    \u003c/Card\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/tasks/task-comments.tsx\" isMerged=\"true\"\n\"use client\"\n\nimport { useState } from \"react\"\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { formatDistanceToNow } from \"date-fns\"\n\n// Mock comments data\nconst initialComments = [\n  {\n    id: 1,\n    user: {\n      name: \"Emma Wilson\",\n      avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    },\n    content: \"I've started working on the design mockups. Will share them by tomorrow.\",\n    timestamp: new Date(Date.now() - 1000 * 60 * 60 * 3), // 3 hours ago\n  },\n  {\n    id: 2,\n    user: {\n      name: \"Liam Johnson\",\n      avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    },\n    content: \"Looks good! Make sure to follow the brand guidelines for colors and typography.\",\n    timestamp: new Date(Date.now() - 1000 * 60 * 60 * 2), // 2 hours ago\n  },\n  {\n    id: 3,\n    user: {\n      name: \"Sophia Chen\",\n      avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    },\n    content: \"I can help with the JavaScript interactions once the HTML/CSS is ready.\",\n    timestamp: new Date(Date.now() - 1000 * 60 * 30), // 30 minutes ago\n  },\n]\n\nexport function TaskComments({ id }: { id: string }) {\n  const [comments, setComments] = useState(initialComments)\n  const [newComment, setNewComment] = useState(\"\")\n  const [isSubmitting, setIsSubmitting] = useState(false)\n\n  const handleSubmitComment = () =\u003e {\n    if (!newComment.trim()) return\n\n    setIsSubmitting(true)\n\n    // Simulate API call\n    setTimeout(() =\u003e {\n      const comment = {\n        id: comments.length + 1,\n        user: {\n          name: \"Current User\", // In a real app, this would be the logged-in user\n          avatar: \"/placeholder.svg?height=40\u0026width=40\",\n        },\n        content: newComment,\n        timestamp: new Date(),\n      }\n\n      setComments([...comments, comment])\n      setNewComment(\"\")\n      setIsSubmitting(false)\n    }, 500)\n  }\n\n  return (\n    \u003cCard\u003e\n      \u003cCardHeader\u003e\n        \u003cCardTitle className=\"text-lg\"\u003eComments\u003c/CardTitle\u003e\n      \u003c/CardHeader\u003e\n      \u003cCardContent className=\"space-y-4\"\u003e\n        {comments.length === 0 ? (\n          \u003cp className=\"text-center text-sm text-muted-foreground\"\u003eNo comments yet. Be the first to comment!\u003c/p\u003e\n        ) : (\n          \u003cdiv className=\"space-y-4\"\u003e\n            {comments.map((comment) =\u003e (\n              \u003cdiv key={comment.id} className=\"flex gap-3\"\u003e\n                \u003cAvatar className=\"h-8 w-8\"\u003e\n                  \u003cAvatarImage src={comment.user.avatar} alt={comment.user.name} /\u003e\n                  \u003cAvatarFallback\u003e\n                    {comment.user.name\n                      .split(\" \")\n                      .map((n) =\u003e n[0])\n                      .join(\"\")}\n                  \u003c/AvatarFallback\u003e\n                \u003c/Avatar\u003e\n                \u003cdiv className=\"flex-1 space-y-1\"\u003e\n                  \u003cdiv className=\"flex items-center justify-between\"\u003e\n                    \u003cp className=\"text-sm font-medium\"\u003e{comment.user.name}\u003c/p\u003e\n                    \u003cp className=\"text-xs text-muted-foreground\"\u003e\n                      {formatDistanceToNow(comment.timestamp, { addSuffix: true })}\n                    \u003c/p\u003e\n                  \u003c/div\u003e\n                  \u003cp className=\"text-sm\"\u003e{comment.content}\u003c/p\u003e\n                \u003c/div\u003e\n              \u003c/div\u003e\n            ))}\n          \u003c/div\u003e\n        )}\n      \u003c/CardContent\u003e\n      \u003cCardFooter\u003e\n        \u003cdiv className=\"flex w-full flex-col space-y-2\"\u003e\n          \u003cTextarea\n            placeholder=\"Add a comment...\"\n            value={newComment}\n            onChange={(e) =\u003e setNewComment(e.target.value)}\n            className=\"min-h-[80px] resize-none\"\n          /\u003e\n          \u003cdiv className=\"flex justify-end\"\u003e\n            \u003cButton onClick={handleSubmitComment} disabled={!newComment.trim() || isSubmitting}\u003e\n              {isSubmitting ? \"Posting...\" : \"Post Comment\"}\n            \u003c/Button\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/CardFooter\u003e\n    \u003c/Card\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/tasks/task-attachments.tsx\" isMerged=\"true\"\n\"use client\"\n\nimport { useState } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { formatBytes } from \"@/lib/utils\"\nimport { FileIcon, ImageIcon, PaperclipIcon, TrashIcon, UploadIcon } from \"lucide-react\"\n\n// Mock attachments data\nconst initialAttachments = [\n  {\n    id: 1,\n    name: \"landing-page-mockup.png\",\n    type: \"image/png\",\n    size: 1200000, // 1.2 MB\n    url: \"/placeholder.svg?height=100\u0026width=100\",\n    uploadedAt: new Date(Date.now() - 1000 * 60 * 60 * 24), // 1 day ago\n  },\n  {\n    id: 2,\n    name: \"requirements.pdf\",\n    type: \"application/pdf\",\n    size: 500000, // 500 KB\n    url: \"#\",\n    uploadedAt: new Date(Date.now() - 1000 * 60 * 60 * 48), // 2 days ago\n  },\n  {\n    id: 3,\n    name: \"brand-guidelines.docx\",\n    type: \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n    size: 350000, // 350 KB\n    url: \"#\",\n    uploadedAt: new Date(Date.now() - 1000 * 60 * 60 * 72), // 3 days ago\n  },\n]\n\nexport function TaskAttachments({ id }: { id: string }) {\n  const [attachments, setAttachments] = useState(initialAttachments)\n  const [isUploading, setIsUploading] = useState(false)\n\n  const handleFileUpload = (event) =\u003e {\n    const files = event.target.files\n    if (!files || files.length === 0) return\n\n    setIsUploading(true)\n\n    // Simulate API call for file upload\n    setTimeout(() =\u003e {\n      const newAttachments = Array.from(files).map((file, index) =\u003e ({\n        id: attachments.length + index + 1,\n        name: file.name,\n        type: file.type,\n        size: file.size,\n        url: file.type.startsWith(\"image/\") ? URL.createObjectURL(file) : \"#\",\n        uploadedAt: new Date(),\n      }))\n\n      setAttachments([...attachments, ...newAttachments])\n      setIsUploading(false)\n    }, 1000)\n  }\n\n  const handleDeleteAttachment = (id) =\u003e {\n    setAttachments(attachments.filter((attachment) =\u003e attachment.id !== id))\n  }\n\n  const getFileIcon = (type) =\u003e {\n    if (type.startsWith(\"image/\")) {\n      return \u003cImageIcon className=\"h-6 w-6 text-blue-500\" /\u003e\n    } else if (type === \"application/pdf\" || type.includes(\"document\") || type.includes(\"text\")) {\n      return \u003cFileIcon className=\"h-6 w-6 text-red-500\" /\u003e\n    } else {\n      return \u003cPaperclipIcon className=\"h-6 w-6 text-gray-500\" /\u003e\n    }\n  }\n\n  return (\n    \u003cCard\u003e\n      \u003cCardHeader\u003e\n        \u003cCardTitle className=\"text-lg\"\u003eAttachments\u003c/CardTitle\u003e\n      \u003c/CardHeader\u003e\n      \u003cCardContent className=\"space-y-4\"\u003e\n        {attachments.length === 0 ? (\n          \u003cp className=\"text-center text-sm text-muted-foreground\"\u003e\n            No attachments yet. Upload files to share with the team.\n          \u003c/p\u003e\n        ) : (\n          \u003cdiv className=\"space-y-2\"\u003e\n            {attachments.map((attachment) =\u003e (\n              \u003cdiv key={attachment.id} className=\"flex items-center justify-between rounded-md border p-2\"\u003e\n                \u003cdiv className=\"flex items-center gap-2\"\u003e\n                  {getFileIcon(attachment.type)}\n                  \u003cdiv\u003e\n                    \u003cp className=\"text-sm font-medium\"\u003e{attachment.name}\u003c/p\u003e\n                    \u003cp className=\"text-xs text-muted-foreground\"\u003e\n                      {formatBytes(attachment.size)} · {attachment.uploadedAt.toLocaleDateString()}\n                    \u003c/p\u003e\n                  \u003c/div\u003e\n                \u003c/div\u003e\n                \u003cdiv className=\"flex items-center gap-2\"\u003e\n                  \u003cButton variant=\"ghost\" size=\"sm\" asChild\u003e\n                    \u003ca href={attachment.url} target=\"_blank\" rel=\"noopener noreferrer\"\u003e\n                      View\n                    \u003c/a\u003e\n                  \u003c/Button\u003e\n                  \u003cButton variant=\"ghost\" size=\"sm\" onClick={() =\u003e handleDeleteAttachment(attachment.id)}\u003e\n                    \u003cTrashIcon className=\"h-4 w-4 text-red-500\" /\u003e\n                  \u003c/Button\u003e\n                \u003c/div\u003e\n              \u003c/div\u003e\n            ))}\n          \u003c/div\u003e\n        )}\n      \u003c/CardContent\u003e\n      \u003cCardFooter\u003e\n        \u003cdiv className=\"w-full\"\u003e\n          \u003clabel htmlFor=\"file-upload\"\u003e\n            \u003cdiv className=\"flex cursor-pointer items-center justify-center gap-2 rounded-md border border-dashed p-4 hover:bg-muted\"\u003e\n              \u003cUploadIcon className=\"h-5 w-5\" /\u003e\n              \u003cspan className=\"text-sm font-medium\"\u003e{isUploading ? \"Uploading...\" : \"Upload Files\"}\u003c/span\u003e\n              \u003cinput\n                id=\"file-upload\"\n                type=\"file\"\n                multiple\n                className=\"hidden\"\n                onChange={handleFileUpload}\n                disabled={isUploading}\n              /\u003e\n            \u003c/div\u003e\n          \u003c/label\u003e\n        \u003c/div\u003e\n      \u003c/CardFooter\u003e\n    \u003c/Card\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/reports/task-completion-chart.tsx\" isMerged=\"true\"\n\"use client\"\n\nimport { Bar, BarChart, CartesianGrid, Legend, ResponsiveContainer, Tooltip, XAxis, YAxis } from \"@/components/ui/chart\"\n\n// Mock data for task completion\nconst data = [\n  {\n    name: \"Week 1\",\n    completed: 12,\n    overdue: 2,\n  },\n  {\n    name: \"Week 2\",\n    completed: 18,\n    overdue: 1,\n  },\n  {\n    name: \"Week 3\",\n    completed: 15,\n    overdue: 3,\n  },\n  {\n    name: \"Week 4\",\n    completed: 20,\n    overdue: 0,\n  },\n  {\n    name: \"Week 5\",\n    completed: 16,\n    overdue: 2,\n  },\n  {\n    name: \"Week 6\",\n    completed: 22,\n    overdue: 1,\n  },\n]\n\nexport function TaskCompletionChart() {\n  return (\n    \u003cResponsiveContainer width=\"100%\" height=\"100%\"\u003e\n      \u003cBarChart\n        data={data}\n        margin={{\n          top: 20,\n          right: 30,\n          left: 20,\n          bottom: 5,\n        }}\n      \u003e\n        \u003cCartesianGrid strokeDasharray=\"3 3\" /\u003e\n        \u003cXAxis dataKey=\"name\" /\u003e\n        \u003cYAxis /\u003e\n        \u003cTooltip /\u003e\n        \u003cLegend /\u003e\n        \u003cBar dataKey=\"completed\" fill=\"#4ade80\" name=\"Completed Tasks\" /\u003e\n        \u003cBar dataKey=\"overdue\" fill=\"#f87171\" name=\"Overdue Tasks\" /\u003e\n      \u003c/BarChart\u003e\n    \u003c/ResponsiveContainer\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/reports/team-performance-chart.tsx\" isMerged=\"true\"\n\"use client\"\n\nimport { Bar, BarChart, CartesianGrid, Legend, ResponsiveContainer, Tooltip, XAxis, YAxis } from \"@/components/ui/chart\"\n\n// Mock data for team performance\nconst data = [\n  {\n    name: \"Emma\",\n    completed: 15,\n    inProgress: 3,\n  },\n  {\n    name: \"Jackson\",\n    completed: 20,\n    inProgress: 5,\n  },\n  {\n    name: \"Sophia\",\n    completed: 18,\n    inProgress: 2,\n  },\n  {\n    name: \"Liam\",\n    completed: 12,\n    inProgress: 4,\n  },\n  {\n    name: \"Olivia\",\n    completed: 16,\n    inProgress: 3,\n  },\n]\n\nexport function TeamPerformanceChart() {\n  return (\n    \u003cResponsiveContainer width=\"100%\" height=\"100%\"\u003e\n      \u003cBarChart\n        data={data}\n        layout=\"vertical\"\n        margin={{\n          top: 20,\n          right: 30,\n          left: 60,\n          bottom: 5,\n        }}\n      \u003e\n        \u003cCartesianGrid strokeDasharray=\"3 3\" /\u003e\n        \u003cXAxis type=\"number\" /\u003e\n        \u003cYAxis dataKey=\"name\" type=\"category\" /\u003e\n        \u003cTooltip /\u003e\n        \u003cLegend /\u003e\n        \u003cBar dataKey=\"completed\" stackId=\"a\" fill=\"#8884d8\" name=\"Completed\" /\u003e\n        \u003cBar dataKey=\"inProgress\" stackId=\"a\" fill=\"#82ca9d\" name=\"In Progress\" /\u003e\n      \u003c/BarChart\u003e\n    \u003c/ResponsiveContainer\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/reports/priority-distribution-chart.tsx\" isMerged=\"true\"\n\"use client\"\n\nimport { Cell, Legend, Pie, PieChart, ResponsiveContainer, Tooltip } from \"@/components/ui/chart\"\n\n// Mock data for priority distribution\nconst data = [\n  { name: \"High\", value: 12, color: \"#ef4444\" },\n  { name: \"Medium\", value: 24, color: \"#f59e0b\" },\n  { name: \"Low\", value: 18, color: \"#10b981\" },\n]\n\nexport function PriorityDistributionChart() {\n  return (\n    \u003cResponsiveContainer width=\"100%\" height=\"100%\"\u003e\n      \u003cPieChart\u003e\n        \u003cPie\n          data={data}\n          cx=\"50%\"\n          cy=\"50%\"\n          labelLine={false}\n          outerRadius={80}\n          fill=\"#8884d8\"\n          dataKey=\"value\"\n          label={({ name, percent }) =\u003e `${name} ${(percent * 100).toFixed(0)}%`}\n        \u003e\n          {data.map((entry, index) =\u003e (\n            \u003cCell key={`cell-${index}`} fill={entry.color} /\u003e\n          ))}\n        \u003c/Pie\u003e\n        \u003cTooltip /\u003e\n        \u003cLegend /\u003e\n      \u003c/PieChart\u003e\n    \u003c/ResponsiveContainer\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/settings/profile-settings.tsx\" isMerged=\"true\"\n\"use client\"\n\nimport { useState } from \"react\"\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Form, FormControl, FormDescription, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\"\nimport { Input } from \"@/components/ui/input\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { useForm } from \"react-hook-form\"\n\nexport function ProfileSettings({ user }) {\n  const [isLoading, setIsLoading] = useState(false)\n\n  const form = useForm({\n    defaultValues: {\n      name: user.name || \"\",\n      email: user.email || \"\",\n      bio: user.bio || \"\",\n      jobTitle: user.jobTitle || \"\",\n      company: user.company || \"\",\n    },\n  })\n\n  async function onSubmit(data) {\n    setIsLoading(true)\n\n    try {\n      // Here you would normally send the data to your API\n      console.log(\"Profile updated:\", data)\n\n      // Simulate API call\n      await new Promise((resolve) =\u003e setTimeout(resolve, 1000))\n    } catch (error) {\n      console.error(\"Error updating profile:\", error)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    \u003cCard\u003e\n      \u003cCardHeader\u003e\n        \u003cCardTitle\u003eProfile Information\u003c/CardTitle\u003e\n        \u003cCardDescription\u003eUpdate your profile information and how others see you on the platform\u003c/CardDescription\u003e\n      \u003c/CardHeader\u003e\n      \u003cForm {...form}\u003e\n        \u003cform onSubmit={form.handleSubmit(onSubmit)}\u003e\n          \u003cCardContent className=\"space-y-6\"\u003e\n            \u003cdiv className=\"flex items-center gap-4\"\u003e\n              \u003cAvatar className=\"h-16 w-16\"\u003e\n                \u003cAvatarImage src={user.avatar || \"/placeholder.svg?height=64\u0026width=64\"} alt={user.name} /\u003e\n                \u003cAvatarFallback\u003e\n                  {user.name\n                    ? user.name\n                        .split(\" \")\n                        .map((n) =\u003e n[0])\n                        .join(\"\")\n                    : \"U\"}\n                \u003c/AvatarFallback\u003e\n              \u003c/Avatar\u003e\n              \u003cdiv\u003e\n                \u003cButton variant=\"outline\" size=\"sm\"\u003e\n                  Change Avatar\n                \u003c/Button\u003e\n                \u003cp className=\"mt-1 text-xs text-muted-foreground\"\u003eJPG, GIF or PNG. Max size of 2MB.\u003c/p\u003e\n              \u003c/div\u003e\n            \u003c/div\u003e\n\n            \u003cdiv className=\"grid gap-4 md:grid-cols-2\"\u003e\n              \u003cFormField\n                control={form.control}\n                name=\"name\"\n                render={({ field }) =\u003e (\n                  \u003cFormItem\u003e\n                    \u003cFormLabel\u003eFull Name\u003c/FormLabel\u003e\n                    \u003cFormControl\u003e\n                      \u003cInput placeholder=\"Your name\" {...field} /\u003e\n                    \u003c/FormControl\u003e\n                    \u003cFormMessage /\u003e\n                  \u003c/FormItem\u003e\n                )}\n              /\u003e\n              \u003cFormField\n                control={form.control}\n                name=\"email\"\n                render={({ field }) =\u003e (\n                  \u003cFormItem\u003e\n                    \u003cFormLabel\u003eEmail\u003c/FormLabel\u003e\n                    \u003cFormControl\u003e\n                      \u003cInput placeholder=\"Your email\" type=\"email\" {...field} /\u003e\n                    \u003c/FormControl\u003e\n                    \u003cFormMessage /\u003e\n                  \u003c/FormItem\u003e\n                )}\n              /\u003e\n            \u003c/div\u003e\n\n            \u003cFormField\n              control={form.control}\n              name=\"bio\"\n              render={({ field }) =\u003e (\n                \u003cFormItem\u003e\n                  \u003cFormLabel\u003eBio\u003c/FormLabel\u003e\n                  \u003cFormControl\u003e\n                    \u003cTextarea placeholder=\"Tell us a little about yourself\" className=\"min-h-[100px]\" {...field} /\u003e\n                  \u003c/FormControl\u003e\n                  \u003cFormDescription\u003eBrief description for your profile. URLs are hyperlinked.\u003c/FormDescription\u003e\n                  \u003cFormMessage /\u003e\n                \u003c/FormItem\u003e\n              )}\n            /\u003e\n\n            \u003cdiv className=\"grid gap-4 md:grid-cols-2\"\u003e\n              \u003cFormField\n                control={form.control}\n                name=\"jobTitle\"\n                render={({ field }) =\u003e (\n                  \u003cFormItem\u003e\n                    \u003cFormLabel\u003eJob Title\u003c/FormLabel\u003e\n                    \u003cFormControl\u003e\n                      \u003cInput placeholder=\"Your job title\" {...field} /\u003e\n                    \u003c/FormControl\u003e\n                    \u003cFormMessage /\u003e\n                  \u003c/FormItem\u003e\n                )}\n              /\u003e\n              \u003cFormField\n                control={form.control}\n                name=\"company\"\n                render={({ field }) =\u003e (\n                  \u003cFormItem\u003e\n                    \u003cFormLabel\u003eCompany\u003c/FormLabel\u003e\n                    \u003cFormControl\u003e\n                      \u003cInput placeholder=\"Your company\" {...field} /\u003e\n                    \u003c/FormControl\u003e\n                    \u003cFormMessage /\u003e\n                  \u003c/FormItem\u003e\n                )}\n              /\u003e\n            \u003c/div\u003e\n          \u003c/CardContent\u003e\n          \u003cCardFooter\u003e\n            \u003cButton type=\"submit\" disabled={isLoading}\u003e\n              {isLoading ? \"Saving...\" : \"Save Changes\"}\n            \u003c/Button\u003e\n          \u003c/CardFooter\u003e\n        \u003c/form\u003e\n      \u003c/Form\u003e\n    \u003c/Card\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/settings/notification-settings.tsx\" isMerged=\"true\"\n\"use client\"\n\nimport { useState } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Label } from \"@/components/ui/label\"\nimport { Switch } from \"@/components/ui/switch\"\n\nexport function NotificationSettings({ user }) {\n  const [isLoading, setIsLoading] = useState(false)\n  const [settings, setSettings] = useState({\n    emailNotifications: true,\n    pushNotifications: true,\n    taskAssigned: true,\n    taskUpdated: true,\n    taskCompleted: true,\n    commentAdded: true,\n    deadlineReminder: true,\n    weeklyDigest: false,\n  })\n\n  const handleToggle = (key) =\u003e {\n    setSettings({\n      ...settings,\n      [key]: !settings[key],\n    })\n  }\n\n  const handleSave = async () =\u003e {\n    setIsLoading(true)\n\n    try {\n      // Here you would normally send the data to your API\n      console.log(\"Notification settings updated:\", settings)\n\n      // Simulate API call\n      await new Promise((resolve) =\u003e setTimeout(resolve, 1000))\n    } catch (error) {\n      console.error(\"Error updating notification settings:\", error)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    \u003cCard\u003e\n      \u003cCardHeader\u003e\n        \u003cCardTitle\u003eNotification Preferences\u003c/CardTitle\u003e\n        \u003cCardDescription\u003eChoose how and when you want to be notified\u003c/CardDescription\u003e\n      \u003c/CardHeader\u003e\n      \u003cCardContent className=\"space-y-6\"\u003e\n        \u003cdiv className=\"space-y-4\"\u003e\n          \u003ch3 className=\"text-sm font-medium\"\u003eNotification Channels\u003c/h3\u003e\n          \u003cdiv className=\"flex items-center justify-between\"\u003e\n            \u003cdiv className=\"space-y-0.5\"\u003e\n              \u003cLabel htmlFor=\"emailNotifications\"\u003eEmail Notifications\u003c/Label\u003e\n              \u003cp className=\"text-xs text-muted-foreground\"\u003eReceive notifications via email\u003c/p\u003e\n            \u003c/div\u003e\n            \u003cSwitch\n              id=\"emailNotifications\"\n              checked={settings.emailNotifications}\n              onCheckedChange={() =\u003e handleToggle(\"emailNotifications\")}\n            /\u003e\n          \u003c/div\u003e\n          \u003cdiv className=\"flex items-center justify-between\"\u003e\n            \u003cdiv className=\"space-y-0.5\"\u003e\n              \u003cLabel htmlFor=\"pushNotifications\"\u003ePush Notifications\u003c/Label\u003e\n              \u003cp className=\"text-xs text-muted-foreground\"\u003eReceive notifications in your browser\u003c/p\u003e\n            \u003c/div\u003e\n            \u003cSwitch\n              id=\"pushNotifications\"\n              checked={settings.pushNotifications}\n              onCheckedChange={() =\u003e handleToggle(\"pushNotifications\")}\n            /\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n\n        \u003cdiv className=\"space-y-4\"\u003e\n          \u003ch3 className=\"text-sm font-medium\"\u003eTask Notifications\u003c/h3\u003e\n          \u003cdiv className=\"flex items-center justify-between\"\u003e\n            \u003cdiv className=\"space-y-0.5\"\u003e\n              \u003cLabel htmlFor=\"taskAssigned\"\u003eTask Assigned\u003c/Label\u003e\n              \u003cp className=\"text-xs text-muted-foreground\"\u003eWhen a task is assigned to you\u003c/p\u003e\n            \u003c/div\u003e\n            \u003cSwitch\n              id=\"taskAssigned\"\n              checked={settings.taskAssigned}\n              onCheckedChange={() =\u003e handleToggle(\"taskAssigned\")}\n            /\u003e\n          \u003c/div\u003e\n          \u003cdiv className=\"flex items-center justify-between\"\u003e\n            \u003cdiv className=\"space-y-0.5\"\u003e\n              \u003cLabel htmlFor=\"taskUpdated\"\u003eTask Updated\u003c/Label\u003e\n              \u003cp className=\"text-xs text-muted-foreground\"\u003eWhen a task you're assigned to is updated\u003c/p\u003e\n            \u003c/div\u003e\n            \u003cSwitch\n              id=\"taskUpdated\"\n              checked={settings.taskUpdated}\n              onCheckedChange={() =\u003e handleToggle(\"taskUpdated\")}\n            /\u003e\n          \u003c/div\u003e\n          \u003cdiv className=\"flex items-center justify-between\"\u003e\n            \u003cdiv className=\"space-y-0.5\"\u003e\n              \u003cLabel htmlFor=\"taskCompleted\"\u003eTask Completed\u003c/Label\u003e\n              \u003cp className=\"text-xs text-muted-foreground\"\u003eWhen a task you're assigned to is marked as completed\u003c/p\u003e\n            \u003c/div\u003e\n            \u003cSwitch\n              id=\"taskCompleted\"\n              checked={settings.taskCompleted}\n              onCheckedChange={() =\u003e handleToggle(\"taskCompleted\")}\n            /\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n\n        \u003cdiv className=\"space-y-4\"\u003e\n          \u003ch3 className=\"text-sm font-medium\"\u003eOther Notifications\u003c/h3\u003e\n          \u003cdiv className=\"flex items-center justify-between\"\u003e\n            \u003cdiv className=\"space-y-0.5\"\u003e\n              \u003cLabel htmlFor=\"commentAdded\"\u003eComment Added\u003c/Label\u003e\n              \u003cp className=\"text-xs text-muted-foreground\"\u003eWhen someone comments on a task you're involved with\u003c/p\u003e\n            \u003c/div\u003e\n            \u003cSwitch\n              id=\"commentAdded\"\n              checked={settings.commentAdded}\n              onCheckedChange={() =\u003e handleToggle(\"commentAdded\")}\n            /\u003e\n          \u003c/div\u003e\n          \u003cdiv className=\"flex items-center justify-between\"\u003e\n            \u003cdiv className=\"space-y-0.5\"\u003e\n              \u003cLabel htmlFor=\"deadlineReminder\"\u003eDeadline Reminders\u003c/Label\u003e\n              \u003cp className=\"text-xs text-muted-foreground\"\u003eReceive reminders before task deadlines\u003c/p\u003e\n            \u003c/div\u003e\n            \u003cSwitch\n              id=\"deadlineReminder\"\n              checked={settings.deadlineReminder}\n              onCheckedChange={() =\u003e handleToggle(\"deadlineReminder\")}\n            /\u003e\n          \u003c/div\u003e\n          \u003cdiv className=\"flex items-center justify-between\"\u003e\n            \u003cdiv className=\"space-y-0.5\"\u003e\n              \u003cLabel htmlFor=\"weeklyDigest\"\u003eWeekly Digest\u003c/Label\u003e\n              \u003cp className=\"text-xs text-muted-foreground\"\u003eReceive a weekly summary of your tasks and progress\u003c/p\u003e\n            \u003c/div\u003e\n            \u003cSwitch\n              id=\"weeklyDigest\"\n              checked={settings.weeklyDigest}\n              onCheckedChange={() =\u003e handleToggle(\"weeklyDigest\")}\n            /\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/CardContent\u003e\n      \u003cCardFooter\u003e\n        \u003cButton onClick={handleSave} disabled={isLoading}\u003e\n          {isLoading ? \"Saving...\" : \"Save Preferences\"}\n        \u003c/Button\u003e\n      \u003c/CardFooter\u003e\n    \u003c/Card\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/settings/security-settings.tsx\" isMerged=\"true\"\n\"use client\"\n\nimport { useState } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Form, FormControl, FormDescription, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { Switch } from \"@/components/ui/switch\"\nimport { useForm } from \"react-hook-form\"\n\nexport function SecuritySettings({ user }) {\n  const [isLoading, setIsLoading] = useState(false)\n  const [twoFactorEnabled, setTwoFactorEnabled] = useState(false)\n\n  const form = useForm({\n    defaultValues: {\n      currentPassword: \"\",\n      newPassword: \"\",\n      confirmPassword: \"\",\n    },\n  })\n\n  async function onSubmit(data) {\n    setIsLoading(true)\n\n    try {\n      // Here you would normally send the data to your API\n      console.log(\"Password updated:\", data)\n\n      // Simulate API call\n      await new Promise((resolve) =\u003e setTimeout(resolve, 1000))\n\n      // Reset form\n      form.reset()\n    } catch (error) {\n      console.error(\"Error updating password:\", error)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const handleToggleTwoFactor = async () =\u003e {\n    setIsLoading(true)\n\n    try {\n      // Here you would normally send the data to your API\n      console.log(\"Two-factor authentication toggled:\", !twoFactorEnabled)\n\n      // Simulate API call\n      await new Promise((resolve) =\u003e setTimeout(resolve, 1000))\n\n      setTwoFactorEnabled(!twoFactorEnabled)\n    } catch (error) {\n      console.error(\"Error toggling two-factor authentication:\", error)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    \u003cCard\u003e\n      \u003cCardHeader\u003e\n        \u003cCardTitle\u003eSecurity Settings\u003c/CardTitle\u003e\n        \u003cCardDescription\u003eManage your password and account security\u003c/CardDescription\u003e\n      \u003c/CardHeader\u003e\n      \u003cCardContent className=\"space-y-6\"\u003e\n        \u003cForm {...form}\u003e\n          \u003cform onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\"\u003e\n            \u003cFormField\n              control={form.control}\n              name=\"currentPassword\"\n              render={({ field }) =\u003e (\n                \u003cFormItem\u003e\n                  \u003cFormLabel\u003eCurrent Password\u003c/FormLabel\u003e\n                  \u003cFormControl\u003e\n                    \u003cInput type=\"password\" {...field} /\u003e\n                  \u003c/FormControl\u003e\n                  \u003cFormMessage /\u003e\n                \u003c/FormItem\u003e\n              )}\n            /\u003e\n            \u003cFormField\n              control={form.control}\n              name=\"newPassword\"\n              render={({ field }) =\u003e (\n                \u003cFormItem\u003e\n                  \u003cFormLabel\u003eNew Password\u003c/FormLabel\u003e\n                  \u003cFormControl\u003e\n                    \u003cInput type=\"password\" {...field} /\u003e\n                  \u003c/FormControl\u003e\n                  \u003cFormDescription\u003e\n                    Password must be at least 8 characters long and include a mix of letters, numbers, and symbols.\n                  \u003c/FormDescription\u003e\n                  \u003cFormMessage /\u003e\n                \u003c/FormItem\u003e\n              )}\n            /\u003e\n            \u003cFormField\n              control={form.control}\n              name=\"confirmPassword\"\n              render={({ field }) =\u003e (\n                \u003cFormItem\u003e\n                  \u003cFormLabel\u003eConfirm New Password\u003c/FormLabel\u003e\n                  \u003cFormControl\u003e\n                    \u003cInput type=\"password\" {...field} /\u003e\n                  \u003c/FormControl\u003e\n                  \u003cFormMessage /\u003e\n                \u003c/FormItem\u003e\n              )}\n            /\u003e\n            \u003cButton type=\"submit\" disabled={isLoading}\u003e\n              {isLoading ? \"Updating...\" : \"Update Password\"}\n            \u003c/Button\u003e\n          \u003c/form\u003e\n        \u003c/Form\u003e\n\n        \u003cdiv className=\"space-y-4\"\u003e\n          \u003ch3 className=\"text-sm font-medium\"\u003eTwo-Factor Authentication\u003c/h3\u003e\n          \u003cdiv className=\"flex items-center justify-between\"\u003e\n            \u003cdiv className=\"space-y-0.5\"\u003e\n              \u003cLabel htmlFor=\"twoFactorAuth\"\u003eEnable Two-Factor Authentication\u003c/Label\u003e\n              \u003cp className=\"text-xs text-muted-foreground\"\u003eAdd an extra layer of security to your account\u003c/p\u003e\n            \u003c/div\u003e\n            \u003cSwitch\n              id=\"twoFactorAuth\"\n              checked={twoFactorEnabled}\n              onCheckedChange={handleToggleTwoFactor}\n              disabled={isLoading}\n            /\u003e\n          \u003c/div\u003e\n          {twoFactorEnabled \u0026\u0026 (\n            \u003cdiv className=\"rounded-md bg-muted p-4\"\u003e\n              \u003cp className=\"text-sm\"\u003e\n                Two-factor authentication is enabled. You will receive a verification code via email when signing in.\n              \u003c/p\u003e\n            \u003c/div\u003e\n          )}\n        \u003c/div\u003e\n\n        \u003cdiv className=\"space-y-4\"\u003e\n          \u003ch3 className=\"text-sm font-medium\"\u003eSession Management\u003c/h3\u003e\n          \u003cdiv className=\"rounded-md border p-4\"\u003e\n            \u003cdiv className=\"flex items-center justify-between\"\u003e\n              \u003cdiv\u003e\n                \u003cp className=\"text-sm font-medium\"\u003eActive Sessions\u003c/p\u003e\n                \u003cp className=\"text-xs text-muted-foreground\"\u003eYou are currently logged in on 2 devices\u003c/p\u003e\n              \u003c/div\u003e\n              \u003cButton variant=\"outline\" size=\"sm\"\u003e\n                Manage Sessions\n              \u003c/Button\u003e\n            \u003c/div\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/CardContent\u003e\n      \u003cCardFooter className=\"flex justify-between\"\u003e\n        \u003cButton variant=\"outline\" className=\"text-red-500\"\u003e\n          Delete Account\n        \u003c/Button\u003e\n        \u003cButton variant=\"outline\"\u003eDownload Personal Data\u003c/Button\u003e\n      \u003c/CardFooter\u003e\n    \u003c/Card\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"components/users/user-management.tsx\" isMerged=\"true\"\n\"use client\"\n\nimport { useState } from \"react\"\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\"\nimport { Input } from \"@/components/ui/input\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\"\nimport { MoreHorizontalIcon, SearchIcon } from \"lucide-react\"\n\n// Mock users data\nconst initialUsers = [\n  {\n    id: 1,\n    name: \"Emma Wilson\",\n    email: \"emma@example.com\",\n    role: \"admin\",\n    status: \"active\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    lastActive: \"2023-11-28T10:30:00Z\",\n  },\n  {\n    id: 2,\n    name: \"Jackson Lee\",\n    email: \"jackson@example.com\",\n    role: \"editor\",\n    status: \"active\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    lastActive: \"2023-11-27T14:45:00Z\",\n  },\n  {\n    id: 3,\n    name: \"Sophia Chen\",\n    email: \"sophia@example.com\",\n    role: \"editor\",\n    status: \"active\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    lastActive: \"2023-11-28T09:15:00Z\",\n  },\n  {\n    id: 4,\n    name: \"Liam Johnson\",\n    email: \"liam@example.com\",\n    role: \"viewer\",\n    status: \"active\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    lastActive: \"2023-11-26T11:20:00Z\",\n  },\n  {\n    id: 5,\n    name: \"Olivia Martinez\",\n    email: \"olivia@example.com\",\n    role: \"editor\",\n    status: \"inactive\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    lastActive: \"2023-11-20T16:30:00Z\",\n  },\n  {\n    id: 6,\n    name: \"Noah Williams\",\n    email: \"noah@example.com\",\n    role: \"viewer\",\n    status: \"pending\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    lastActive: null,\n  },\n]\n\nexport function UserManagement() {\n  const [users, setUsers] = useState(initialUsers)\n  const [searchQuery, setSearchQuery] = useState(\"\")\n  const [roleFilter, setRoleFilter] = useState(\"all\")\n  const [statusFilter, setStatusFilter] = useState(\"all\")\n\n  const filteredUsers = users.filter((user) =\u003e {\n    const matchesSearch =\n      user.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n      user.email.toLowerCase().includes(searchQuery.toLowerCase())\n\n    const matchesRole = roleFilter === \"all\" || user.role === roleFilter\n    const matchesStatus = statusFilter === \"all\" || user.status === statusFilter\n\n    return matchesSearch \u0026\u0026 matchesRole \u0026\u0026 matchesStatus\n  })\n\n  const handleRoleChange = (userId, newRole) =\u003e {\n    setUsers(users.map((user) =\u003e (user.id === userId ? { ...user, role: newRole } : user)))\n  }\n\n  const handleStatusChange = (userId, newStatus) =\u003e {\n    setUsers(users.map((user) =\u003e (user.id === userId ? { ...user, status: newStatus } : user)))\n  }\n\n  const getRoleBadgeVariant = (role) =\u003e {\n    switch (role) {\n      case \"admin\":\n        return \"default\"\n      case \"editor\":\n        return \"secondary\"\n      case \"viewer\":\n        return \"outline\"\n      default:\n        return \"outline\"\n    }\n  }\n\n  const getStatusBadgeVariant = (status) =\u003e {\n    switch (status) {\n      case \"active\":\n        return \"success\"\n      case \"inactive\":\n        return \"secondary\"\n      case \"pending\":\n        return \"warning\"\n      default:\n        return \"outline\"\n    }\n  }\n\n  const formatLastActive = (lastActive) =\u003e {\n    if (!lastActive) return \"Never\"\n\n    const date = new Date(lastActive)\n    return date.toLocaleDateString() + \" \" + date.toLocaleTimeString()\n  }\n\n  return (\n    \u003cCard\u003e\n      \u003cCardHeader\u003e\n        \u003cCardTitle\u003eUser Management\u003c/CardTitle\u003e\n        \u003cCardDescription\u003eManage users and their permissions in your organization\u003c/CardDescription\u003e\n      \u003c/CardHeader\u003e\n      \u003cCardContent\u003e\n        \u003cdiv className=\"mb-4 flex flex-col gap-4 sm:flex-row sm:items-center sm:justify-between\"\u003e\n          \u003cdiv className=\"flex items-center gap-2\"\u003e\n            \u003cdiv className=\"relative\"\u003e\n              \u003cSearchIcon className=\"absolute left-2.5 top-2.5 h-4 w-4 text-muted-foreground\" /\u003e\n              \u003cInput\n                type=\"search\"\n                placeholder=\"Search users...\"\n                className=\"pl-8\"\n                value={searchQuery}\n                onChange={(e) =\u003e setSearchQuery(e.target.value)}\n              /\u003e\n            \u003c/div\u003e\n          \u003c/div\u003e\n          \u003cdiv className=\"flex flex-col gap-2 sm:flex-row\"\u003e\n            \u003cSelect value={roleFilter} onValueChange={setRoleFilter}\u003e\n              \u003cSelectTrigger className=\"w-[180px]\"\u003e\n                \u003cSelectValue placeholder=\"Filter by role\" /\u003e\n              \u003c/SelectTrigger\u003e\n              \u003cSelectContent\u003e\n                \u003cSelectItem value=\"all\"\u003eAll Roles\u003c/SelectItem\u003e\n                \u003cSelectItem value=\"admin\"\u003eAdmin\u003c/SelectItem\u003e\n                \u003cSelectItem value=\"editor\"\u003eEditor\u003c/SelectItem\u003e\n                \u003cSelectItem value=\"viewer\"\u003eViewer\u003c/SelectItem\u003e\n              \u003c/SelectContent\u003e\n            \u003c/Select\u003e\n            \u003cSelect value={statusFilter} onValueChange={setStatusFilter}\u003e\n              \u003cSelectTrigger className=\"w-[180px]\"\u003e\n                \u003cSelectValue placeholder=\"Filter by status\" /\u003e\n              \u003c/SelectTrigger\u003e\n              \u003cSelectContent\u003e\n                \u003cSelectItem value=\"all\"\u003eAll Statuses\u003c/SelectItem\u003e\n                \u003cSelectItem value=\"active\"\u003eActive\u003c/SelectItem\u003e\n                \u003cSelectItem value=\"inactive\"\u003eInactive\u003c/SelectItem\u003e\n                \u003cSelectItem value=\"pending\"\u003ePending\u003c/SelectItem\u003e\n              \u003c/SelectContent\u003e\n            \u003c/Select\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n        \u003cdiv className=\"rounded-md border\"\u003e\n          \u003cTable\u003e\n            \u003cTableHeader\u003e\n              \u003cTableRow\u003e\n                \u003cTableHead\u003eUser\u003c/TableHead\u003e\n                \u003cTableHead\u003eRole\u003c/TableHead\u003e\n                \u003cTableHead\u003eStatus\u003c/TableHead\u003e\n                \u003cTableHead\u003eLast Active\u003c/TableHead\u003e\n                \u003cTableHead className=\"text-right\"\u003eActions\u003c/TableHead\u003e\n              \u003c/TableRow\u003e\n            \u003c/TableHeader\u003e\n            \u003cTableBody\u003e\n              {filteredUsers.length === 0 ? (\n                \u003cTableRow\u003e\n                  \u003cTableCell colSpan={5} className=\"text-center\"\u003e\n                    No users found\n                  \u003c/TableCell\u003e\n                \u003c/TableRow\u003e\n              ) : (\n                filteredUsers.map((user) =\u003e (\n                  \u003cTableRow key={user.id}\u003e\n                    \u003cTableCell\u003e\n                      \u003cdiv className=\"flex items-center gap-3\"\u003e\n                        \u003cAvatar\u003e\n                          \u003cAvatarImage src={user.avatar} alt={user.name} /\u003e\n                          \u003cAvatarFallback\u003e\n                            {user.name\n                              .split(\" \")\n                              .map((n) =\u003e n[0])\n                              .join(\"\")}\n                          \u003c/AvatarFallback\u003e\n                        \u003c/Avatar\u003e\n                        \u003cdiv\u003e\n                          \u003cp className=\"font-medium\"\u003e{user.name}\u003c/p\u003e\n                          \u003cp className=\"text-sm text-muted-foreground\"\u003e{user.email}\u003c/p\u003e\n                        \u003c/div\u003e\n                      \u003c/div\u003e\n                    \u003c/TableCell\u003e\n                    \u003cTableCell\u003e\n                      \u003cBadge variant={getRoleBadgeVariant(user.role)}\u003e\n                        {user.role.charAt(0).toUpperCase() + user.role.slice(1)}\n                      \u003c/Badge\u003e\n                    \u003c/TableCell\u003e\n                    \u003cTableCell\u003e\n                      \u003cBadge variant={getStatusBadgeVariant(user.status)}\u003e\n                        {user.status.charAt(0).toUpperCase() + user.status.slice(1)}\n                      \u003c/Badge\u003e\n                    \u003c/TableCell\u003e\n                    \u003cTableCell\u003e{formatLastActive(user.lastActive)}\u003c/TableCell\u003e\n                    \u003cTableCell className=\"text-right\"\u003e\n                      \u003cDropdownMenu\u003e\n                        \u003cDropdownMenuTrigger asChild\u003e\n                          \u003cButton variant=\"ghost\" size=\"sm\"\u003e\n                            \u003cMoreHorizontalIcon className=\"h-4 w-4\" /\u003e\n                            \u003cspan className=\"sr-only\"\u003eOpen menu\u003c/span\u003e\n                          \u003c/Button\u003e\n                        \u003c/DropdownMenuTrigger\u003e\n                        \u003cDropdownMenuContent align=\"end\"\u003e\n                          \u003cDropdownMenuLabel\u003eActions\u003c/DropdownMenuLabel\u003e\n                          \u003cDropdownMenuItem\u003eView Profile\u003c/DropdownMenuItem\u003e\n                          \u003cDropdownMenuSeparator /\u003e\n                          \u003cDropdownMenuLabel\u003eChange Role\u003c/DropdownMenuLabel\u003e\n                          \u003cDropdownMenuItem onClick={() =\u003e handleRoleChange(user.id, \"admin\")}\u003e\n                            Make Admin\n                          \u003c/DropdownMenuItem\u003e\n                          \u003cDropdownMenuItem onClick={() =\u003e handleRoleChange(user.id, \"editor\")}\u003e\n                            Make Editor\n                          \u003c/DropdownMenuItem\u003e\n                          \u003cDropdownMenuItem onClick={() =\u003e handleRoleChange(user.id, \"viewer\")}\u003e\n                            Make Viewer\n                          \u003c/DropdownMenuItem\u003e\n                          \u003cDropdownMenuSeparator /\u003e\n                          \u003cDropdownMenuLabel\u003eChange Status\u003c/DropdownMenuLabel\u003e\n                          \u003cDropdownMenuItem onClick={() =\u003e handleStatusChange(user.id, \"active\")}\u003e\n                            Set Active\n                          \u003c/DropdownMenuItem\u003e\n                          \u003cDropdownMenuItem onClick={() =\u003e handleStatusChange(user.id, \"inactive\")}\u003e\n                            Set Inactive\n                          \u003c/DropdownMenuItem\u003e\n                          \u003cDropdownMenuSeparator /\u003e\n                          \u003cDropdownMenuItem className=\"text-red-600\"\u003eDelete User\u003c/DropdownMenuItem\u003e\n                        \u003c/DropdownMenuContent\u003e\n                      \u003c/DropdownMenu\u003e\n                    \u003c/TableCell\u003e\n                  \u003c/TableRow\u003e\n                ))\n              )}\n            \u003c/TableBody\u003e\n          \u003c/Table\u003e\n        \u003c/div\u003e\n      \u003c/CardContent\u003e\n    \u003c/Card\u003e\n  )\n}\n\n[V0_FILE]typescriptreact:file=\"lib/auth.ts\" isMerged=\"true\"\n// This is a mock implementation for demonstration purposes\n// In a real application, you would use a proper authentication library like NextAuth.js\n\nimport { jwtVerify, SignJWT } from \"jose\"\n\n// Mock user data\nconst users = [\n  {\n    id: 1,\n    name: \"Admin User\",\n    email: \"admin@example.com\",\n    password: \"admin123\", // In a real app, this would be hashed\n    role: \"admin\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    bio: \"Task management system administrator\",\n    jobTitle: \"Project Manager\",\n    company: \"Acme Inc.\",\n  },\n  {\n    id: 2,\n    name: \"Editor User\",\n    email: \"editor@example.com\",\n    password: \"editor123\", // In a real app, this would be hashed\n    role: \"editor\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    bio: \"Frontend developer working on the task management system\",\n    jobTitle: \"Senior Developer\",\n    company: \"Acme Inc.\",\n  },\n  {\n    id: 3,\n    name: \"Viewer User\",\n    email: \"viewer@example.com\",\n    password: \"viewer123\", // In a real app, this would be hashed\n    role: \"viewer\",\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    bio: \"Team member using the task management system\",\n    jobTitle: \"Content Writer\",\n    company: \"Acme Inc.\",\n  },\n]\n\n// Secret key for JWT\nconst JWT_SECRET = new TextEncoder().encode(process.env.JWT_SECRET || \"your-secret-key\")\n\n// Login user\nexport async function loginUser(email: string, password: string) {\n  // Find user by email\n  const user = users.find((u) =\u003e u.email === email)\n\n  // Check if user exists and password matches\n  if (!user || user.password !== password) {\n    throw new Error(\"Invalid credentials\")\n  }\n\n  // Create JWT token\n  const token = await new SignJWT({ userId: user.id, role: user.role })\n    .setProtectedHeader({ alg: \"HS256\" })\n    .setIssuedAt()\n    .setExpirationTime(\"24h\")\n    .sign(JWT_SECRET)\n\n  // Store token in localStorage (in a real app, use cookies for better security)\n  if (typeof window !== \"undefined\") {\n    localStorage.setItem(\"auth-token\", token)\n  }\n\n  return { user: { id: user.id, name: user.name, email: user.email, role: user.role } }\n}\n\n// Register user\nexport async function registerUser(name: string, email: string, password: string) {\n  // Check if user already exists\n  if (users.find((u) =\u003e u.email === email)) {\n    throw new Error(\"User already exists\")\n  }\n\n  // Create new user\n  const newUser = {\n    id: users.length + 1,\n    name,\n    email,\n    password, // In a real app, this would be hashed\n    role: \"viewer\", // Default role for new users\n    avatar: \"/placeholder.svg?height=40\u0026width=40\",\n    bio: \"\",\n    jobTitle: \"\",\n    company: \"\",\n  }\n\n  // Add user to the mock database\n  users.push(newUser)\n\n  // Create JWT token\n  const token = await new SignJWT({ userId: newUser.id, role: newUser.role })\n    .setProtectedHeader({ alg: \"HS256\" })\n    .setIssuedAt()\n    .setExpirationTime(\"24h\")\n    .sign(JWT_SECRET)\n\n  // Store token in localStorage (in a real app, use cookies for better security)\n  if (typeof window !== \"undefined\") {\n    localStorage.setItem(\"auth-token\", token)\n  }\n\n  return { user: { id: newUser.id, name: newUser.name, email: newUser.email, role: newUser.role } }\n}\n\n// Get user session\nexport async function getUserSession() {\n  // In a server component, we would verify the session cookie\n  // For this demo, we'll simulate a logged-in user\n\n  // In a client component, we would get the token from localStorage\n  let token\n  if (typeof window !== \"undefined\") {\n    token = localStorage.getItem(\"auth-token\")\n  }\n\n  if (!token) {\n    // For demo purposes, return a mock user\n    return users[0]\n  }\n\n  try {\n    // Verify token\n    const { payload } = await jwtVerify(token, JWT_SECRET)\n    const userId = payload.userId as number\n\n    // Find user\n    const user = users.find((u) =\u003e u.id === userId)\n    if (!user) {\n      return null\n    }\n\n    return user\n  } catch (error) {\n    console.error(\"Error verifying token:\", error)\n    return null\n  }\n}\n\n// Logout user\nexport function logoutUser() {\n  if (typeof window !== \"undefined\") {\n    localStorage.removeItem(\"auth-token\")\n  }\n}\n\n[V0_FILE]typescriptreact:file=\"lib/utils.ts\" isMerged=\"true\"\nimport { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n\n// Format bytes to human-readable format\nexport function formatBytes(bytes: number, decimals = 2) {\n  if (bytes === 0) return \"0 Bytes\"\n\n  const k = 1024\n  const dm = decimals \u003c 0 ? 0 : decimals\n  const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"]\n\n  const i = Math.floor(Math.log(bytes) / Math.log(k))\n\n  return Number.parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + \" \" + sizes[i]\n}\n\n[V0_FILE]typescriptreact:file=\"tailwind.config.js\" isMerged=\"true\"\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  darkMode: [\"class\"],\n  content: [\n    \"./pages/**/*.{ts,tsx}\",\n    \"./components/**/*.{ts,tsx}\",\n    \"./app/**/*.{ts,tsx}\",\n    \"./src/**/*.{ts,tsx}\",\n    \"*.{js,ts,jsx,tsx,mdx}\",\n  ],\n  theme: {\n    container: {\n      center: true,\n      padding: \"2rem\",\n      screens: {\n        \"2xl\": \"1400px\",\n      },\n    },\n    extend: {\n      colors: {\n        border: \"hsl(var(--border))\",\n        input: \"hsl(var(--input))\",\n        ring: \"hsl(var(--ring))\",\n        background: \"hsl(var(--background))\",\n        foreground: \"hsl(var(--foreground))\",\n        primary: {\n          DEFAULT: \"hsl(var(--primary))\",\n          foreground: \"hsl(var(--primary-foreground))\",\n        },\n        secondary: {\n          DEFAULT: \"hsl(var(--secondary))\",\n          foreground: \"hsl(var(--secondary-foreground))\",\n        },\n        destructive: {\n          DEFAULT: \"hsl(var(--destructive))\",\n          foreground: \"hsl(var(--destructive-foreground))\",\n        },\n        muted: {\n          DEFAULT: \"hsl(var(--muted))\",\n          foreground: \"hsl(var(--muted-foreground))\",\n        },\n        accent: {\n          DEFAULT: \"hsl(var(--accent))\",\n          foreground: \"hsl(var(--accent-foreground))\",\n        },\n        popover: {\n          DEFAULT: \"hsl(var(--popover))\",\n          foreground: \"hsl(var(--popover-foreground))\",\n        },\n        card: {\n          DEFAULT: \"hsl(var(--card))\",\n          foreground: \"hsl(var(--card-foreground))\",\n        },\n        success: {\n          DEFAULT: \"#10b981\",\n          foreground: \"#ffffff\",\n        },\n        warning: {\n          DEFAULT: \"#f59e0b\",\n          foreground: \"#ffffff\",\n        },\n      },\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: { height: 0 },\n          to: { height: \"var(--radix-accordion-content-height)\" },\n        },\n        \"accordion-up\": {\n          from: { height: \"var(--radix-accordion-content-height)\" },\n          to: { height: 0 },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\")],\n}\n\n[V0_FILE]typescriptreact:file=\"components/ui/chart.tsx\" isQuickEdit=\"true\" isMerged=\"true\"\nexport {\n  Area,\n  AreaChart,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n  Bar,\n  BarChart,\n  CartesianGrid,\n  Legend,\n  Cell,\n  Pie,\n  PieChart,\n} from \"recharts\"\n\n[V0_FILE]javascript:file=\"server.js\"\nimport express from \"express\"\nimport cors from \"cors\"\nimport dotenv from \"dotenv\"\nimport mongoose from \"mongoose\"\nimport { createServer } from \"http\"\nimport { Server } from \"socket.io\"\nimport cookieParser from \"cookie-parser\"\nimport path from \"path\"\nimport { fileURLToPath } from \"url\"\n\n// Import routes\nimport authRoutes from \"./routes/auth.js\"\nimport userRoutes from \"./routes/users.js\"\nimport taskRoutes from \"./routes/tasks.js\"\nimport commentRoutes from \"./routes/comments.js\"\nimport reportRoutes from \"./routes/reports.js\"\nimport notificationRoutes from \"./routes/notifications.js\"\n\n// Import socket handler\nimport setupSocketHandlers from \"./socket/socketHandlers.js\"\n\n// Import middleware\nimport { errorHandler } from \"./middleware/errorHandler.js\"\n\n// Configure environment variables\ndotenv.config()\n\n// Create Express app\nconst app = express()\nconst PORT = process.env.PORT || 5000\n\n// Create HTTP server\nconst httpServer = createServer(app)\n\n// Setup Socket.io\nconst io = new Server(httpServer, {\n  cors: {\n    origin: process.env.FRONTEND_URL || \"http://localhost:3000\",\n    methods: [\"GET\", \"POST\"],\n    credentials: true,\n  },\n})\n\n// Connect to MongoDB\nmongoose\n  .connect(process.env.MONGODB_URI)\n  .then(() =\u003e console.log(\"Connected to MongoDB\"))\n  .catch((err) =\u003e {\n    console.error(\"MongoDB connection error:\", err)\n    process.exit(1)\n  })\n\n// Middleware\napp.use(\n  cors({\n    origin: process.env.FRONTEND_URL || \"http://localhost:3000\",\n    credentials: true,\n  }),\n)\napp.use(express.json())\napp.use(express.urlencoded({ extended: true }))\napp.use(cookieParser())\n\n// Set up socket handlers\nsetupSocketHandlers(io)\n\n// Make io accessible to route handlers\napp.use((req, res, next) =\u003e {\n  req.io = io\n  next()\n})\n\n// API routes\napp.use(\"/api/auth\", authRoutes)\napp.use(\"/api/users\", userRoutes)\napp.use(\"/api/tasks\", taskRoutes)\napp.use(\"/api/comments\", commentRoutes)\napp.use(\"/api/reports\", reportRoutes)\napp.use(\"/api/notifications\", notificationRoutes)\n\n// Serve uploaded files\nconst __dirname = path.dirname(fileURLToPath(import.meta.url))\napp.use(\"/uploads\", express.static(path.join(__dirname, \"uploads\")))\n\n// Error handling middleware\napp.use(errorHandler)\n\n// Start server\nhttpServer.listen(PORT, () =\u003e {\n  console.log(`Server running on port ${PORT}`)\n})\n\nexport default app\n\n[V0_FILE]javascript:file=\"models/User.js\"\nimport mongoose from \"mongoose\"\nimport bcrypt from \"bcrypt\"\n\nconst userSchema = new mongoose.Schema(\n  {\n    name: {\n      type: String,\n      required: [true, \"Name is required\"],\n      trim: true,\n    },\n    email: {\n      type: String,\n      required: [true, \"Email is required\"],\n      unique: true,\n      lowercase: true,\n      trim: true,\n      match: [/^\\S+@\\S+\\.\\S+$/, \"Please use a valid email address\"],\n    },\n    password: {\n      type: String,\n      required: [true, \"Password is required\"],\n      minlength: [8, \"Password must be at least 8 characters long\"],\n    },\n    role: {\n      type: String,\n      enum: [\"admin\", \"editor\", \"viewer\"],\n      default: \"viewer\",\n    },\n    avatar: {\n      type: String,\n      default: \"\",\n    },\n    bio: {\n      type: String,\n      default: \"\",\n    },\n    jobTitle: {\n      type: String,\n      default: \"\",\n    },\n    company: {\n      type: String,\n      default: \"\",\n    },\n    status: {\n      type: String,\n      enum: [\"active\", \"inactive\", \"pending\"],\n      default: \"active\",\n    },\n    notificationPreferences: {\n      emailNotifications: {\n        type: Boolean,\n        default: true,\n      },\n      pushNotifications: {\n        type: Boolean,\n        default: true,\n      },\n      taskAssigned: {\n        type: Boolean,\n        default: true,\n      },\n      taskUpdated: {\n        type: Boolean,\n        default: true,\n      },\n      taskCompleted: {\n        type: Boolean,\n        default: true,\n      },\n      commentAdded: {\n        type: Boolean,\n        default: true,\n      },\n      deadlineReminder: {\n        type: Boolean,\n        default: true,\n      },\n      weeklyDigest: {\n        type: Boolean,\n        default: false,\n      },\n    },\n    twoFactorEnabled: {\n      type: Boolean,\n      default: false,\n    },\n    resetPasswordToken: String,\n    resetPasswordExpires: Date,\n    lastActive: {\n      type: Date,\n      default: Date.now,\n    },\n    createdAt: {\n      type: Date,\n      default: Date.now,\n    },\n    updatedAt: {\n      type: Date,\n      default: Date.now,\n    },\n  },\n  {\n    timestamps: true,\n  },\n)\n\n// Pre-save hook to hash password\nuserSchema.pre(\"save\", async function (next) {\n  // Only hash the password if it's modified or new\n  if (!this.isModified(\"password\")) return next()\n\n  try {\n    // Generate salt\n    const salt = await bcrypt.genSalt(10)\n    // Hash password\n    this.password = await bcrypt.hash(this.password, salt)\n    next()\n  } catch (error) {\n    next(error)\n  }\n})\n\n// Method to compare passwords\nuserSchema.methods.comparePassword = async function (candidatePassword) {\n  return await bcrypt.compare(candidatePassword, this.password)\n}\n\n// Method to return user data without sensitive information\nuserSchema.methods.toJSON = function () {\n  const user = this.toObject()\n  delete user.password\n  delete user.resetPasswordToken\n  delete user.resetPasswordExpires\n  return user\n}\n\nconst User = mongoose.model(\"User\", userSchema)\n\nexport default User\n\n[V0_FILE]javascript:file=\"models/Task.js\"\nimport mongoose from \"mongoose\"\n\nconst subtaskSchema = new mongoose.Schema(\n  {\n    title: {\n      type: String,\n      required: true,\n      trim: true,\n    },\n    completed: {\n      type: Boolean,\n      default: false,\n    },\n    createdAt: {\n      type: Date,\n      default: Date.now,\n    },\n    updatedAt: {\n      type: Date,\n      default: Date.now,\n    },\n  },\n  {\n    timestamps: true,\n  },\n)\n\nconst taskSchema = new mongoose.Schema(\n  {\n    title: {\n      type: String,\n      required: [true, \"Task title is required\"],\n      trim: true,\n    },\n    description: {\n      type: String,\n      trim: true,\n    },\n    status: {\n      type: String,\n      enum: [\"to-do\", \"in-progress\", \"in-review\", \"completed\"],\n      default: \"to-do\",\n    },\n    priority: {\n      type: String,\n      enum: [\"high\", \"medium\", \"low\"],\n      default: \"medium\",\n    },\n    dueDate: {\n      type: Date,\n    },\n    assignee: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"User\",\n    },\n    creator: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"User\",\n      required: true,\n    },\n    tags: [\n      {\n        type: String,\n        trim: true,\n      },\n    ],\n    subtasks: [subtaskSchema],\n    attachments: [\n      {\n        name: String,\n        path: String,\n        type: String,\n        size: Number,\n        uploadedAt: {\n          type: Date,\n          default: Date.now,\n        },\n      },\n    ],\n    progress: {\n      type: Number,\n      default: 0,\n      min: 0,\n      max: 100,\n    },\n    watchers: [\n      {\n        type: mongoose.Schema.Types.ObjectId,\n        ref: \"User\",\n      },\n    ],\n    createdAt: {\n      type: Date,\n      default: Date.now,\n    },\n    updatedAt: {\n      type: Date,\n      default: Date.now,\n    },\n  },\n  {\n    timestamps: true,\n  },\n)\n\n// Method to calculate progress based on subtasks\ntaskSchema.methods.calculateProgress = function () {\n  if (this.subtasks.length === 0) return 0\n\n  const completedCount = this.subtasks.filter((subtask) =\u003e subtask.completed).length\n  return Math.round((completedCount / this.subtasks.length) * 100)\n}\n\n// Pre-save hook to update progress\ntaskSchema.pre(\"save\", function (next) {\n  if (this.subtasks \u0026\u0026 this.subtasks.length \u003e 0) {\n    this.progress = this.calculateProgress()\n  }\n  next()\n})\n\n// Create indexes for better query performance\ntaskSchema.index({ status: 1 })\ntaskSchema.index({ priority: 1 })\ntaskSchema.index({ assignee: 1 })\ntaskSchema.index({ dueDate: 1 })\ntaskSchema.index({ creator: 1 })\ntaskSchema.index({ tags: 1 })\n\nconst Task = mongoose.model(\"Task\", taskSchema)\n\nexport default Task\n\n[V0_FILE]javascript:file=\"models/Comment.js\"\nimport mongoose from \"mongoose\"\n\nconst commentSchema = new mongoose.Schema(\n  {\n    task: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"Task\",\n      required: true,\n    },\n    user: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"User\",\n      required: true,\n    },\n    content: {\n      type: String,\n      required: [true, \"Comment content is required\"],\n      trim: true,\n    },\n    mentions: [\n      {\n        type: mongoose.Schema.Types.ObjectId,\n        ref: \"User\",\n      },\n    ],\n    attachments: [\n      {\n        name: String,\n        path: String,\n        type: String,\n        size: Number,\n        uploadedAt: {\n          type: Date,\n          default: Date.now,\n        },\n      },\n    ],\n    createdAt: {\n      type: Date,\n      default: Date.now,\n    },\n    updatedAt: {\n      type: Date,\n      default: Date.now,\n    },\n  },\n  {\n    timestamps: true,\n  },\n)\n\n// Create indexes for better query performance\ncommentSchema.index({ task: 1 })\ncommentSchema.index({ user: 1 })\ncommentSchema.index({ createdAt: -1 })\n\nconst Comment = mongoose.model(\"Comment\", commentSchema)\n\nexport default Comment\n\n[V0_FILE]javascript:file=\"models/Notification.js\"\nimport mongoose from \"mongoose\"\n\nconst notificationSchema = new mongoose.Schema(\n  {\n    recipient: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"User\",\n      required: true,\n    },\n    sender: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"User\",\n    },\n    type: {\n      type: String,\n      enum: [\n        \"task_assigned\",\n        \"task_updated\",\n        \"task_completed\",\n        \"comment_added\",\n        \"deadline_reminder\",\n        \"mention\",\n        \"system\",\n      ],\n      required: true,\n    },\n    title: {\n      type: String,\n      required: true,\n    },\n    message: {\n      type: String,\n      required: true,\n    },\n    read: {\n      type: Boolean,\n      default: false,\n    },\n    relatedTask: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"Task\",\n    },\n    relatedComment: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"Comment\",\n    },\n    createdAt: {\n      type: Date,\n      default: Date.now,\n    },\n  },\n  {\n    timestamps: true,\n  },\n)\n\n// Create indexes for better query performance\nnotificationSchema.index({ recipient: 1, read: 1 })\nnotificationSchema.index({ createdAt: -1 })\n\nconst Notification = mongoose.model(\"Notification\", notificationSchema)\n\nexport default Notification\n\n[V0_FILE]javascript:file=\"middleware/auth.js\"\nimport jwt from \"jsonwebtoken\"\nimport User from \"../models/User.js\"\nimport { createError } from \"../utils/error.js\"\n\n// Verify JWT token\nexport const verifyToken = async (req, res, next) =\u003e {\n  try {\n    // Get token from cookies or authorization header\n    const token =\n      req.cookies.token ||\n      (req.headers.authorization \u0026\u0026 req.headers.authorization.startsWith(\"Bearer\")\n        ? req.headers.authorization.split(\" \")[1]\n        : null)\n\n    if (!token) {\n      return next(createError(401, \"You are not authenticated\"))\n    }\n\n    // Verify token\n    const decoded = jwt.verify(token, process.env.JWT_SECRET)\n\n    // Find user\n    const user = await User.findById(decoded.id)\n    if (!user) {\n      return next(createError(404, \"User not found\"))\n    }\n\n    // Check if user is active\n    if (user.status !== \"active\") {\n      return next(createError(403, \"Your account is not active\"))\n    }\n\n    // Update last active timestamp\n    user.lastActive = new Date()\n    await user.save()\n\n    // Attach user to request\n    req.user = user\n    next()\n  } catch (err) {\n    if (err.name === \"JsonWebTokenError\") {\n      return next(createError(401, \"Invalid token\"))\n    }\n    if (err.name === \"TokenExpiredError\") {\n      return next(createError(401, \"Token expired\"))\n    }\n    next(err)\n  }\n}\n\n// Check if user is admin\nexport const verifyAdmin = (req, res, next) =\u003e {\n  if (req.user.role !== \"admin\") {\n    return next(createError(403, \"You are not authorized to perform this action\"))\n  }\n  next()\n}\n\n// Check if user is admin or editor\nexport const verifyAdminOrEditor = (req, res, next) =\u003e {\n  if (req.user.role !== \"admin\" \u0026\u0026 req.user.role !== \"editor\") {\n    return next(createError(403, \"You are not authorized to perform this action\"))\n  }\n  next()\n}\n\n// Check if user is the owner of the resource or an admin\nexport const verifyOwnerOrAdmin = (resourceModel) =\u003e {\n  return async (req, res, next) =\u003e {\n    try {\n      const resourceId = req.params.id\n      const resource = await resourceModel.findById(resourceId)\n\n      if (!resource) {\n        return next(createError(404, \"Resource not found\"))\n      }\n\n      // Check if user is admin or the owner\n      const isOwner = resource.creator \u0026\u0026 resource.creator.toString() === req.user._id.toString()\n      const isAssignee = resource.assignee \u0026\u0026 resource.assignee.toString() === req.user._id.toString()\n\n      if (req.user.role === \"admin\" || isOwner || isAssignee) {\n        req.resource = resource\n        return next()\n      }\n\n      return next(createError(403, \"You are not authorized to perform this action\"))\n    } catch (err) {\n      next(err)\n    }\n  }\n}\n\n[V0_FILE]javascript:file=\"middleware/errorHandler.js\"\n// Error handling middleware\nexport const errorHandler = (err, req, res, next) =\u003e {\n  const statusCode = err.statusCode || 500\n  const message = err.message || \"Internal Server Error\"\n\n  console.error(`[ERROR] ${statusCode} - ${message}`)\n  if (process.env.NODE_ENV === \"development\") {\n    console.error(err.stack)\n  }\n\n  res.status(statusCode).json({\n    success: false,\n    status: statusCode,\n    message,\n    stack: process.env.NODE_ENV === \"development\" ? err.stack : {},\n  })\n}\n\n[V0_FILE]javascript:file=\"middleware/upload.js\"\nimport multer from \"multer\"\nimport path from \"path\"\nimport fs from \"fs\"\nimport { fileURLToPath } from \"url\"\nimport { createError } from \"../utils/error.js\"\n\n// Get directory name\nconst __dirname = path.dirname(fileURLToPath(import.meta.url))\n\n// Create uploads directory if it doesn't exist\nconst uploadsDir = path.join(__dirname, \"../uploads\")\nif (!fs.existsSync(uploadsDir)) {\n  fs.mkdirSync(uploadsDir, { recursive: true })\n}\n\n// Configure storage\nconst storage = multer.diskStorage({\n  destination: (req, file, cb) =\u003e {\n    // Create subdirectory based on file type\n    let dir = \"general\"\n\n    if (file.mimetype.startsWith(\"image/\")) {\n      dir = \"images\"\n    } else if (file.mimetype.includes(\"pdf\") || file.mimetype.includes(\"document\")) {\n      dir = \"documents\"\n    }\n\n    const fullPath = path.join(uploadsDir, dir)\n\n    // Create directory if it doesn't exist\n    if (!fs.existsSync(fullPath)) {\n      fs.mkdirSync(fullPath, { recursive: true })\n    }\n\n    cb(null, path.join(\"uploads\", dir))\n  },\n  filename: (req, file, cb) =\u003e {\n    // Generate unique filename\n    const uniqueSuffix = Date.now() + \"-\" + Math.round(Math.random() * 1e9)\n    const ext = path.extname(file.originalname)\n    cb(null, file.fieldname + \"-\" + uniqueSuffix + ext)\n  },\n})\n\n// File filter\nconst fileFilter = (req, file, cb) =\u003e {\n  // Accept images, documents, and common file types\n  const allowedFileTypes = /jpeg|jpg|png|gif|pdf|doc|docx|xls|xlsx|ppt|pptx|txt|csv|zip|rar/\n  const extname = allowedFileTypes.test(path.extname(file.originalname).toLowerCase())\n  const mimetype = allowedFileTypes.test(file.mimetype)\n\n  if (extname \u0026\u0026 mimetype) {\n    return cb(null, true)\n  } else {\n    cb(createError(400, \"Only certain file types are allowed\"))\n  }\n}\n\n// Configure multer\nconst upload = multer({\n  storage,\n  fileFilter,\n  limits: {\n    fileSize: 10 * 1024 * 1024, // 10MB\n  },\n})\n\nexport default upload\n\n[V0_FILE]javascript:file=\"routes/auth.js\"\nimport express from \"express\"\nimport jwt from \"jsonwebtoken\"\nimport User from \"../models/User.js\"\nimport { verifyToken } from \"../middleware/auth.js\"\nimport { createError } from \"../utils/error.js\"\nimport { sendEmail } from \"../utils/email.js\"\nimport crypto from \"crypto\"\n\nconst router = express.Router()\n\n// Register a new user\nrouter.post(\"/register\", async (req, res, next) =\u003e {\n  try {\n    const { name, email, password } = req.body\n\n    // Check if user already exists\n    const existingUser = await User.findOne({ email })\n    if (existingUser) {\n      return next(createError(400, \"User with this email already exists\"))\n    }\n\n    // Create new user\n    const newUser = new User({\n      name,\n      email,\n      password,\n    })\n\n    // Save user to database\n    const savedUser = await newUser.save()\n\n    // Generate JWT token\n    const token = jwt.sign({ id: savedUser._id, role: savedUser.role }, process.env.JWT_SECRET, { expiresIn: \"7d\" })\n\n    // Set token as cookie\n    res.cookie(\"token\", token, {\n      httpOnly: true,\n      secure: process.env.NODE_ENV === \"production\",\n      maxAge: 7 * 24 * 60 * 60 * 1000, // 7 days\n    })\n\n    // Send welcome email\n    sendEmail({\n      to: savedUser.email,\n      subject: \"Welcome to Task Management App\",\n      text: `Hello ${savedUser.name},\\n\\nWelcome to our Task Management App! Your account has been created successfully.\\n\\nBest regards,\\nThe Task Management Team`,\n    })\n\n    res.status(201).json({\n      success: true,\n      message: \"User registered successfully\",\n      user: savedUser,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Login user\nrouter.post(\"/login\", async (req, res, next) =\u003e {\n  try {\n    const { email, password } = req.body\n\n    // Find user by email\n    const user = await User.findOne({ email })\n    if (!user) {\n      return next(createError(404, \"User not found\"))\n    }\n\n    // Check if user is active\n    if (user.status !== \"active\") {\n      return next(createError(403, \"Your account is not active\"))\n    }\n\n    // Check password\n    const isPasswordValid = await user.comparePassword(password)\n    if (!isPasswordValid) {\n      return next(createError(401, \"Invalid credentials\"))\n    }\n\n    // Generate JWT token\n    const token = jwt.sign({ id: user._id, role: user.role }, process.env.JWT_SECRET, { expiresIn: \"7d\" })\n\n    // Set token as cookie\n    res.cookie(\"token\", token, {\n      httpOnly: true,\n      secure: process.env.NODE_ENV === \"production\",\n      maxAge: 7 * 24 * 60 * 60 * 1000, // 7 days\n    })\n\n    // Update last active timestamp\n    user.lastActive = new Date()\n    await user.save()\n\n    res.status(200).json({\n      success: true,\n      message: \"Login successful\",\n      user,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Logout user\nrouter.post(\"/logout\", (req, res) =\u003e {\n  res.clearCookie(\"token\")\n  res.status(200).json({\n    success: true,\n    message: \"Logout successful\",\n  })\n})\n\n// Get current user\nrouter.get(\"/me\", verifyToken, (req, res) =\u003e {\n  res.status(200).json({\n    success: true,\n    user: req.user,\n  })\n})\n\n// Forgot password\nrouter.post(\"/forgot-password\", async (req, res, next) =\u003e {\n  try {\n    const { email } = req.body\n\n    // Find user by email\n    const user = await User.findOne({ email })\n    if (!user) {\n      return next(createError(404, \"User not found\"))\n    }\n\n    // Generate reset token\n    const resetToken = crypto.randomBytes(32).toString(\"hex\")\n\n    // Hash token and set to resetPasswordToken field\n    user.resetPasswordToken = crypto.createHash(\"sha256\").update(resetToken).digest(\"hex\")\n\n    // Set token expiry\n    user.resetPasswordExpires = Date.now() + 30 * 60 * 1000 // 30 minutes\n\n    // Save user\n    await user.save()\n\n    // Create reset URL\n    const resetUrl = `${process.env.FRONTEND_URL}/reset-password/${resetToken}`\n\n    // Send email\n    sendEmail({\n      to: user.email,\n      subject: \"Password Reset Request\",\n      text: `You are receiving this email because you (or someone else) has requested the reset of a password. Please click on the following link, or paste this into your browser to complete the process:\\n\\n${resetUrl}\\n\\nIf you did not request this, please ignore this email and your password will remain unchanged.\\n`,\n    })\n\n    res.status(200).json({\n      success: true,\n      message: \"Password reset email sent\",\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Reset password\nrouter.post(\"/reset-password/:token\", async (req, res, next) =\u003e {\n  try {\n    const { password } = req.body\n\n    // Get token from params\n    const resetToken = req.params.token\n\n    // Hash token\n    const hashedToken = crypto.createHash(\"sha256\").update(resetToken).digest(\"hex\")\n\n    // Find user by token and check if token is expired\n    const user = await User.findOne({\n      resetPasswordToken: hashedToken,\n      resetPasswordExpires: { $gt: Date.now() },\n    })\n\n    if (!user) {\n      return next(createError(400, \"Password reset token is invalid or has expired\"))\n    }\n\n    // Set new password\n    user.password = password\n    user.resetPasswordToken = undefined\n    user.resetPasswordExpires = undefined\n\n    // Save user\n    await user.save()\n\n    // Send confirmation email\n    sendEmail({\n      to: user.email,\n      subject: \"Password Reset Confirmation\",\n      text: `Hello ${user.name},\\n\\nThis is a confirmation that the password for your account ${user.email} has just been changed.\\n`,\n    })\n\n    res.status(200).json({\n      success: true,\n      message: \"Password reset successful\",\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// OAuth login with Google\nrouter.post(\"/google\", async (req, res, next) =\u003e {\n  try {\n    const { token, profile } = req.body\n\n    // Verify token with Google (in a real app)\n    // For demo purposes, we'll assume the token is valid\n\n    // Check if user exists\n    let user = await User.findOne({ email: profile.email })\n\n    if (!user) {\n      // Create new user\n      user = new User({\n        name: profile.name,\n        email: profile.email,\n        password: crypto.randomBytes(16).toString(\"hex\"), // Random password\n        avatar: profile.picture,\n      })\n\n      await user.save()\n    }\n\n    // Generate JWT token\n    const jwtToken = jwt.sign({ id: user._id, role: user.role }, process.env.JWT_SECRET, { expiresIn: \"7d\" })\n\n    // Set token as cookie\n    res.cookie(\"token\", jwtToken, {\n      httpOnly: true,\n      secure: process.env.NODE_ENV === \"production\",\n      maxAge: 7 * 24 * 60 * 60 * 1000, // 7 days\n    })\n\n    // Update last active timestamp\n    user.lastActive = new Date()\n    await user.save()\n\n    res.status(200).json({\n      success: true,\n      message: \"Login successful\",\n      user,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// OAuth login with GitHub\nrouter.post(\"/github\", async (req, res, next) =\u003e {\n  try {\n    const { token, profile } = req.body\n\n    // Verify token with GitHub (in a real app)\n    // For demo purposes, we'll assume the token is valid\n\n    // Check if user exists\n    let user = await User.findOne({ email: profile.email })\n\n    if (!user) {\n      // Create new user\n      user = new User({\n        name: profile.name,\n        email: profile.email,\n        password: crypto.randomBytes(16).toString(\"hex\"), // Random password\n        avatar: profile.avatar_url,\n      })\n\n      await user.save()\n    }\n\n    // Generate JWT token\n    const jwtToken = jwt.sign({ id: user._id, role: user.role }, process.env.JWT_SECRET, { expiresIn: \"7d\" })\n\n    // Set token as cookie\n    res.cookie(\"token\", jwtToken, {\n      httpOnly: true,\n      secure: process.env.NODE_ENV === \"production\",\n      maxAge: 7 * 24 * 60 * 60 * 1000, // 7 days\n    })\n\n    // Update last active timestamp\n    user.lastActive = new Date()\n    await user.save()\n\n    res.status(200).json({\n      success: true,\n      message: \"Login successful\",\n      user,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\nexport default router\n\n[V0_FILE]javascript:file=\"routes/users.js\"\nimport express from \"express\"\nimport User from \"../models/User.js\"\nimport Task from \"../models/Task.js\"\nimport { verifyToken, verifyAdmin } from \"../middleware/auth.js\"\nimport { createError } from \"../utils/error.js\"\nimport upload from \"../middleware/upload.js\"\n\nconst router = express.Router()\n\n// Get all users (admin only)\nrouter.get(\"/\", verifyToken, verifyAdmin, async (req, res, next) =\u003e {\n  try {\n    const { role, status, search, sort, page = 1, limit = 10 } = req.query\n\n    // Build query\n    const query = {}\n\n    // Filter by role\n    if (role \u0026\u0026 role !== \"all\") {\n      query.role = role\n    }\n\n    // Filter by status\n    if (status \u0026\u0026 status !== \"all\") {\n      query.status = status\n    }\n\n    // Search by name or email\n    if (search) {\n      query.$or = [{ name: { $regex: search, $options: \"i\" } }, { email: { $regex: search, $options: \"i\" } }]\n    }\n\n    // Count total documents\n    const total = await User.countDocuments(query)\n\n    // Build sort options\n    let sortOptions = { createdAt: -1 } // Default sort\n    if (sort) {\n      const [field, order] = sort.split(\":\")\n      sortOptions = { [field]: order === \"asc\" ? 1 : -1 }\n    }\n\n    // Fetch users with pagination\n    const users = await User.find(query)\n      .sort(sortOptions)\n      .skip((page - 1) * limit)\n      .limit(Number.parseInt(limit))\n\n    res.status(200).json({\n      success: true,\n      count: users.length,\n      total,\n      totalPages: Math.ceil(total / limit),\n      currentPage: Number.parseInt(page),\n      users,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Get user by ID\nrouter.get(\"/:id\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Check if user is admin or requesting their own profile\n    if (req.user.role !== \"admin\" \u0026\u0026 req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to access this resource\"))\n    }\n\n    const user = await User.findById(req.params.id)\n    if (!user) {\n      return next(createError(404, \"User not found\"))\n    }\n\n    res.status(200).json({\n      success: true,\n      user,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Update user\nrouter.put(\"/:id\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Check if user is admin or updating their own profile\n    if (req.user.role !== \"admin\" \u0026\u0026 req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to update this user\"))\n    }\n\n    const { name, email, bio, jobTitle, company, notificationPreferences } = req.body\n\n    // Find user\n    const user = await User.findById(req.params.id)\n    if (!user) {\n      return next(createError(404, \"User not found\"))\n    }\n\n    // Update fields\n    if (name) user.name = name\n    if (bio) user.bio = bio\n    if (jobTitle) user.jobTitle = jobTitle\n    if (company) user.company = company\n    if (notificationPreferences)\n      user.notificationPreferences = {\n        ...user.notificationPreferences,\n        ...notificationPreferences,\n      }\n\n    // Only admin can update email or role\n    if (req.user.role === \"admin\") {\n      if (email \u0026\u0026 email !== user.email) {\n        // Check if email is already in use\n        const existingUser = await User.findOne({ email })\n        if (existingUser) {\n          return next(createError(400, \"Email is already in use\"))\n        }\n        user.email = email\n      }\n\n      if (req.body.role) user.role = req.body.role\n      if (req.body.status) user.status = req.body.status\n    }\n\n    // Save user\n    const updatedUser = await user.save()\n\n    res.status(200).json({\n      success: true,\n      message: \"User updated successfully\",\n      user: updatedUser,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Update user avatar\nrouter.put(\"/:id/avatar\", verifyToken, upload.single(\"avatar\"), async (req, res, next) =\u003e {\n  try {\n    // Check if user is updating their own avatar\n    if (req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to update this user\"))\n    }\n\n    if (!req.file) {\n      return next(createError(400, \"No file uploaded\"))\n    }\n\n    // Find user\n    const user = await User.findById(req.params.id)\n    if (!user) {\n      return next(createError(404, \"User not found\"))\n    }\n\n    // Update avatar\n    user.avatar = `/${req.file.path}`\n\n    // Save user\n    const updatedUser = await user.save()\n\n    res.status(200).json({\n      success: true,\n      message: \"Avatar updated successfully\",\n      user: updatedUser,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Change password\nrouter.put(\"/:id/password\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Check if user is changing their own password\n    if (req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to change this user's password\"))\n    }\n\n    const { currentPassword, newPassword } = req.body\n\n    // Find user\n    const user = await User.findById(req.params.id)\n    if (!user) {\n      return next(createError(404, \"User not found\"))\n    }\n\n    // Check current password\n    const isPasswordValid = await user.comparePassword(currentPassword)\n    if (!isPasswordValid) {\n      return next(createError(401, \"Current password is incorrect\"))\n    }\n\n    // Update password\n    user.password = newPassword\n\n    // Save user\n    await user.save()\n\n    res.status(200).json({\n      success: true,\n      message: \"Password changed successfully\",\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Toggle two-factor authentication\nrouter.put(\"/:id/two-factor\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Check if user is updating their own settings\n    if (req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to update this user\"))\n    }\n\n    // Find user\n    const user = await User.findById(req.params.id)\n    if (!user) {\n      return next(createError(404, \"User not found\"))\n    }\n\n    // Toggle two-factor authentication\n    user.twoFactorEnabled = !user.twoFactorEnabled\n\n    // Save user\n    const updatedUser = await user.save()\n\n    res.status(200).json({\n      success: true,\n      message: `Two-factor authentication ${updatedUser.twoFactorEnabled ? \"enabled\" : \"disabled\"}`,\n      user: updatedUser,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Delete user (admin only)\nrouter.delete(\"/:id\", verifyToken, verifyAdmin, async (req, res, next) =\u003e {\n  try {\n    // Find user\n    const user = await User.findById(req.params.id)\n    if (!user) {\n      return next(createError(404, \"User not found\"))\n    }\n\n    // Check if user is trying to delete themselves\n    if (req.user._id.toString() === req.params.id) {\n      return next(createError(400, \"You cannot delete your own account\"))\n    }\n\n    // Delete user\n    await User.findByIdAndDelete(req.params.id)\n\n    // Update tasks assigned to this user\n    await Task.updateMany({ assignee: req.params.id }, { $unset: { assignee: 1 } })\n\n    res.status(200).json({\n      success: true,\n      message: \"User deleted successfully\",\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Get user tasks\nrouter.get(\"/:id/tasks\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Check if user is admin or requesting their own tasks\n    if (req.user.role !== \"admin\" \u0026\u0026 req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to access this resource\"))\n    }\n\n    const { status, priority, sort, page = 1, limit = 10 } = req.query\n\n    // Build query\n    const query = { assignee: req.params.id }\n\n    // Filter by status\n    if (status \u0026\u0026 status !== \"all\") {\n      query.status = status\n    }\n\n    // Filter by priority\n    if (priority \u0026\u0026 priority !== \"all\") {\n      query.priority = priority\n    }\n\n    // Count total documents\n    const total = await Task.countDocuments(query)\n\n    // Build sort options\n    let sortOptions = { createdAt: -1 } // Default sort\n    if (sort) {\n      const [field, order] = sort.split(\":\")\n      sortOptions = { [field]: order === \"asc\" ? 1 : -1 }\n    }\n\n    // Fetch tasks with pagination\n    const tasks = await Task.find(query)\n      .populate(\"assignee\", \"name email avatar\")\n      .populate(\"creator\", \"name email avatar\")\n      .sort(sortOptions)\n      .skip((page - 1) * limit)\n      .limit(Number.parseInt(limit))\n\n    res.status(200).json({\n      success: true,\n      count: tasks.length,\n      total,\n      totalPages: Math.ceil(total / limit),\n      currentPage: Number.parseInt(page),\n      tasks,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\nexport default router\n\n[V0_FILE]javascript:file=\"routes/tasks.js\"\nimport express from \"express\"\nimport Task from \"../models/Task.js\"\nimport User from \"../models/User.js\"\nimport Comment from \"../models/Comment.js\"\nimport Notification from \"../models/Notification.js\"\nimport { verifyToken, verifyAdminOrEditor, verifyOwnerOrAdmin } from \"../middleware/auth.js\"\nimport { createError } from \"../utils/error.js\"\nimport upload from \"../middleware/upload.js\"\nimport { sendEmail } from \"../utils/email.js\"\n\nconst router = express.Router()\n\n// Create a new task\nrouter.post(\"/\", verifyToken, verifyAdminOrEditor, async (req, res, next) =\u003e {\n  try {\n    const { title, description, status, priority, dueDate, assignee, tags, subtasks } = req.body\n\n    // Create new task\n    const newTask = new Task({\n      title,\n      description,\n      status: status || \"to-do\",\n      priority: priority || \"medium\",\n      dueDate,\n      assignee,\n      creator: req.user._id,\n      tags: tags || [],\n      subtasks: subtasks || [],\n    })\n\n    // Save task\n    const savedTask = await newTask.save()\n\n    // If task is assigned to someone, send notification\n    if (assignee) {\n      // Create notification\n      const notification = new Notification({\n        recipient: assignee,\n        sender: req.user._id,\n        type: \"task_assigned\",\n        title: \"New Task Assigned\",\n        message: `You have been assigned a new task: ${title}`,\n        relatedTask: savedTask._id,\n      })\n\n      await notification.save()\n\n      // Send real-time notification\n      if (req.io) {\n        req.io.to(assignee.toString()).emit(\"notification\", notification)\n      }\n\n      // Get assignee details\n      const assigneeUser = await User.findById(assignee)\n\n      // Send email notification if user has email notifications enabled\n      if (\n        assigneeUser \u0026\u0026\n        assigneeUser.notificationPreferences.emailNotifications \u0026\u0026\n        assigneeUser.notificationPreferences.taskAssigned\n      ) {\n        sendEmail({\n          to: assigneeUser.email,\n          subject: \"New Task Assigned\",\n          text: `Hello ${assigneeUser.name},\\n\\nYou have been assigned a new task: ${title}\\n\\nDue Date: ${dueDate ? new Date(dueDate).toLocaleDateString() : \"Not set\"}\\nPriority: ${priority || \"Medium\"}\\n\\nDescription:\\n${description || \"No description provided\"}\\n\\nBest regards,\\nThe Task Management Team`,\n        })\n      }\n    }\n\n    res.status(201).json({\n      success: true,\n      message: \"Task created successfully\",\n      task: savedTask,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Get all tasks\nrouter.get(\"/\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { status, priority, assignee, creator, search, tags, dueDate, sort, page = 1, limit = 10 } = req.query\n\n    // Build query\n    const query = {}\n\n    // Filter by status\n    if (status \u0026\u0026 status !== \"all\") {\n      query.status = status\n    }\n\n    // Filter by priority\n    if (priority \u0026\u0026 priority !== \"all\") {\n      query.priority = priority\n    }\n\n    // Filter by assignee\n    if (assignee) {\n      query.assignee = assignee\n    }\n\n    // Filter by creator\n    if (creator) {\n      query.creator = creator\n    }\n\n    // Filter by tags\n    if (tags) {\n      query.tags = { $in: tags.split(\",\") }\n    }\n\n    // Filter by due date\n    if (dueDate) {\n      const today = new Date()\n      today.setHours(0, 0, 0, 0)\n\n      if (dueDate === \"overdue\") {\n        query.dueDate = { $lt: today }\n        query.status = { $ne: \"completed\" }\n      } else if (dueDate === \"today\") {\n        const tomorrow = new Date(today)\n        tomorrow.setDate(tomorrow.getDate() + 1)\n        query.dueDate = { $gte: today, $lt: tomorrow }\n      } else if (dueDate === \"week\") {\n        const nextWeek = new Date(today)\n        nextWeek.setDate(nextWeek.getDate() + 7)\n        query.dueDate = { $gte: today, $lt: nextWeek }\n      }\n    }\n\n    // Search by title or description\n    if (search) {\n      query.$or = [{ title: { $regex: search, $options: \"i\" } }, { description: { $regex: search, $options: \"i\" } }]\n    }\n\n    // Viewers can only see tasks assigned to them or created by them\n    if (req.user.role === \"viewer\") {\n      query.$or = [{ assignee: req.user._id }, { creator: req.user._id }, { watchers: req.user._id }]\n    }\n\n    // Count total documents\n    const total = await Task.countDocuments(query)\n\n    // Build sort options\n    let sortOptions = { createdAt: -1 } // Default sort\n    if (sort) {\n      const [field, order] = sort.split(\":\")\n      sortOptions = { [field]: order === \"asc\" ? 1 : -1 }\n    }\n\n    // Fetch tasks with pagination\n    const tasks = await Task.find(query)\n      .populate(\"assignee\", \"name email avatar\")\n      .populate(\"creator\", \"name email avatar\")\n      .sort(sortOptions)\n      .skip((page - 1) * limit)\n      .limit(Number.parseInt(limit))\n\n    res.status(200).json({\n      success: true,\n      count: tasks.length,\n      total,\n      totalPages: Math.ceil(total / limit),\n      currentPage: Number.parseInt(page),\n      tasks,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Get task by ID\nrouter.get(\"/:id\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const task = await Task.findById(req.params.id)\n      .populate(\"assignee\", \"name email avatar\")\n      .populate(\"creator\", \"name email avatar\")\n      .populate(\"watchers\", \"name email avatar\")\n\n    if (!task) {\n      return next(createError(404, \"Task not found\"))\n    }\n\n    // Check if user has access to this task\n    if (\n      req.user.role === \"viewer\" \u0026\u0026\n      task.assignee?._id.toString() !== req.user._id.toString() \u0026\u0026\n      task.creator._id.toString() !== req.user._id.toString() \u0026\u0026\n      !task.watchers.some((watcher) =\u003e watcher._id.toString() === req.user._id.toString())\n    ) {\n      return next(createError(403, \"You are not authorized to access this task\"))\n    }\n\n    res.status(200).json({\n      success: true,\n      task,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Update task\nrouter.put(\"/:id\", verifyToken, verifyOwnerOrAdmin(Task), async (req, res, next) =\u003e {\n  try {\n    const { title, description, status, priority, dueDate, assignee, tags, subtasks, progress } = req.body\n\n    const task = req.resource // From verifyOwnerOrAdmin middleware\n\n    // Store old assignee for notification\n    const oldAssignee = task.assignee\n\n    // Update fields\n    if (title) task.title = title\n    if (description !== undefined) task.description = description\n    if (status) task.status = status\n    if (priority) task.priority = priority\n    if (dueDate !== undefined) task.dueDate = dueDate\n    if (assignee !== undefined) task.assignee = assignee\n    if (tags) task.tags = tags\n    if (subtasks) task.subtasks = subtasks\n    if (progress !== undefined) task.progress = progress\n\n    // Save task\n    const updatedTask = await task.save()\n\n    // If assignee has changed, send notification to new assignee\n    if (assignee \u0026\u0026 (!oldAssignee || oldAssignee.toString() !== assignee.toString())) {\n      // Create notification\n      const notification = new Notification({\n        recipient: assignee,\n        sender: req.user._id,\n        type: \"task_assigned\",\n        title: \"Task Assigned\",\n        message: `You have been assigned to the task: ${task.title}`,\n        relatedTask: task._id,\n      })\n\n      await notification.save()\n\n      // Send real-time notification\n      if (req.io) {\n        req.io.to(assignee.toString()).emit(\"notification\", notification)\n      }\n\n      // Get assignee details\n      const assigneeUser = await User.findById(assignee)\n\n      // Send email notification if user has email notifications enabled\n      if (\n        assigneeUser \u0026\u0026\n        assigneeUser.notificationPreferences.emailNotifications \u0026\u0026\n        assigneeUser.notificationPreferences.taskAssigned\n      ) {\n        sendEmail({\n          to: assigneeUser.email,\n          subject: \"Task Assigned\",\n          text: `Hello ${assigneeUser.name},\\n\\nYou have been assigned to the task: ${task.title}\\n\\nDue Date: ${task.dueDate ? new Date(task.dueDate).toLocaleDateString() : \"Not set\"}\\nPriority: ${task.priority}\\n\\nDescription:\\n${task.description || \"No description provided\"}\\n\\nBest regards,\\nThe Task Management Team`,\n        })\n      }\n    }\n\n    // If status has changed to completed, send notification to creator\n    if (status === \"completed\" \u0026\u0026 task.status !== \"completed\") {\n      // Create notification for creator\n      const notification = new Notification({\n        recipient: task.creator,\n        sender: req.user._id,\n        type: \"task_completed\",\n        title: \"Task Completed\",\n        message: `The task \"${task.title}\" has been marked as completed`,\n        relatedTask: task._id,\n      })\n\n      await notification.save()\n\n      // Send real-time notification\n      if (req.io) {\n        req.io.to(task.creator.toString()).emit(\"notification\", notification)\n      }\n\n      // Get creator details\n      const creatorUser = await User.findById(task.creator)\n\n      // Send email notification if user has email notifications enabled\n      if (\n        creatorUser \u0026\u0026\n        creatorUser.notificationPreferences.emailNotifications \u0026\u0026\n        creatorUser.notificationPreferences.taskCompleted\n      ) {\n        sendEmail({\n          to: creatorUser.email,\n          subject: \"Task Completed\",\n          text: `Hello ${creatorUser.name},\\n\\nThe task \"${task.title}\" has been marked as completed.\\n\\nBest regards,\\nThe Task Management Team`,\n        })\n      }\n    }\n\n    // If task has been updated, notify assignee\n    if (task.assignee \u0026\u0026 task.assignee.toString() !== req.user._id.toString()) {\n      // Create notification\n      const notification = new Notification({\n        recipient: task.assignee,\n        sender: req.user._id,\n        type: \"task_updated\",\n        title: \"Task Updated\",\n        message: `The task \"${task.title}\" has been updated`,\n        relatedTask: task._id,\n      })\n\n      await notification.save()\n\n      // Send real-time notification\n      if (req.io) {\n        req.io.to(task.assignee.toString()).emit(\"notification\", notification)\n      }\n\n      // Get assignee details\n      const assigneeUser = await User.findById(task.assignee)\n\n      // Send email notification if user has email notifications enabled\n      if (\n        assigneeUser \u0026\u0026\n        assigneeUser.notificationPreferences.emailNotifications \u0026\u0026\n        assigneeUser.notificationPreferences.taskUpdated\n      ) {\n        sendEmail({\n          to: assigneeUser.email,\n          subject: \"Task Updated\",\n          text: `Hello ${assigneeUser.name},\\n\\nThe task \"${task.title}\" has been updated.\\n\\nBest regards,\\nThe Task Management Team`,\n        })\n      }\n    }\n\n    res.status(200).json({\n      success: true,\n      message: \"Task updated successfully\",\n      task: updatedTask,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Delete task\nrouter.delete(\"/:id\", verifyToken, verifyOwnerOrAdmin(Task), async (req, res, next) =\u003e {\n  try {\n    const task = req.resource // From verifyOwnerOrAdmin middleware\n\n    // Delete task\n    await Task.findByIdAndDelete(req.params.id)\n\n    // Delete associated comments\n    await Comment.deleteMany({ task: req.params.id })\n\n    // Delete associated notifications\n    await Notification.deleteMany({ relatedTask: req.params.id })\n\n    res.status(200).json({\n      success: true,\n      message: \"Task deleted successfully\",\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Add attachment to task\nrouter.post(\n  \"/:id/attachments\",\n  verifyToken,\n  verifyOwnerOrAdmin(Task),\n  upload.single(\"file\"),\n  async (req, res, next) =\u003e {\n    try {\n      if (!req.file) {\n        return next(createError(400, \"No file uploaded\"))\n      }\n\n      const task = req.resource // From verifyOwnerOrAdmin middleware\n\n      // Add attachment\n      task.attachments.push({\n        name: req.file.originalname,\n        path: `/${req.file.path}`,\n        type: req.file.mimetype,\n        size: req.file.size,\n      })\n\n      // Save task\n      const updatedTask = await task.save()\n\n      res.status(200).json({\n        success: true,\n        message: \"Attachment added successfully\",\n        task: updatedTask,\n      })\n    } catch (err) {\n      next(err)\n    }\n  },\n)\n\n// Delete attachment from task\nrouter.delete(\"/:id/attachments/:attachmentId\", verifyToken, verifyOwnerOrAdmin(Task), async (req, res, next) =\u003e {\n  try {\n    const task = req.resource // From verifyOwnerOrAdmin middleware\n\n    // Remove attachment\n    task.attachments = task.attachments.filter((attachment) =\u003e attachment._id.toString() !== req.params.attachmentId)\n\n    // Save task\n    const updatedTask = await task.save()\n\n    res.status(200).json({\n      success: true,\n      message: \"Attachment deleted successfully\",\n      task: updatedTask,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Add watcher to task\nrouter.post(\"/:id/watchers\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const task = await Task.findById(req.params.id)\n    if (!task) {\n      return next(createError(404, \"Task not found\"))\n    }\n\n    // Add user to watchers if not already watching\n    if (!task.watchers.includes(req.user._id)) {\n      task.watchers.push(req.user._id)\n      await task.save()\n    }\n\n    res.status(200).json({\n      success: true,\n      message: \"You are now watching this task\",\n      task,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Remove watcher from task\nrouter.delete(\"/:id/watchers\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const task = await Task.findById(req.params.id)\n    if (!task) {\n      return next(createError(404, \"Task not found\"))\n    }\n\n    // Remove user from watchers\n    task.watchers = task.watchers.filter((watcher) =\u003e watcher.toString() !== req.user._id.toString())\n\n    await task.save()\n\n    res.status(200).json({\n      success: true,\n      message: \"You are no longer watching this task\",\n      task,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\nexport default router\n\n[V0_FILE]javascript:file=\"routes/comments.js\" isFixed=\"true\" isQuickEdit=\"true\"\nimport express from \"express\"\nimport Comment from \"../models/Comment.js\"\nimport Task from \"../models/Task.js\"\nimport User from \"../models/User.js\"\nimport Notification from \"../models/Notification.js\"\nimport { verifyToken } from \"../middleware/auth.js\"\nimport { createError } from \"../utils/error.js\"\nimport upload from \"../middleware/upload.js\"\nimport { sendEmail } from \"../utils/email.js\"\n\nconst router = express.Router()\n\n// Create a new comment\nrouter.post(\"/\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { taskId, content, mentions } = req.body\n\n    // Check if task exists\n    const task = await Task.findById(taskId)\n    if (!task) {\n      return next(createError(404, \"Task not found\"))\n    }\n\n    // Create new comment\n    const newComment = new Comment({\n      task: taskId,\n      user: req.user._id,\n      content,\n      mentions: mentions || [],\n    })\n\n    // Save comment\n    const savedComment = await newComment.save()\n\n    // Populate user data\n    await savedComment.populate(\"user\", \"name email avatar\")\n\n    // Notify task assignee and creator about the comment\n    const notifyUsers = new Set()\n\n    // Add task assignee if exists and is not the commenter\n    if (task.assignee \u0026\u0026 task.assignee.toString() !== req.user._id.toString()) {\n      notifyUsers.add(task.assignee.toString())\n    }\n\n    // Add task creator if not the commenter\n    if (task.creator.toString() !== req.user._id.toString()) {\n      notifyUsers.add(task.creator.toString())\n    }\n\n    // Add watchers if not the commenter\n    task.watchers.forEach((watcher) =\u003e {\n      if (watcher.toString() !== req.user._id.toString()) {\n        notifyUsers.add(watcher.toString())\n      }\n    })\n\n    // Add mentioned users\n    if (mentions \u0026\u0026 mentions.length \u003e 0) {\n      mentions.forEach((userId) =\u003e notifyUsers.add(userId))\n    }\n\n    // Send notifications\n    for (const userId of notifyUsers) {\n      // Create notification\n      const notification = new Notification({\n        recipient: userId,\n        sender: req.user._id,\n        type: \"comment_added\",\n        title: \"New Comment\",\n        message: `${req.user.name} commented on task: ${task.title}`,\n        relatedTask: taskId,\n        relatedComment: savedComment._id,\n      })\n\n      await notification.save()\n\n      // Send real-time notification\n      if (req.io) {\n        req.io.to(userId).emit(\"notification\", notification)\n      }\n\n      // Get user details\n      const user = await User.findById(userId)\n\n      // Send email notification if user has email notifications enabled\n      if (user \u0026\u0026 user.notificationPreferences.emailNotifications \u0026\u0026 user.notificationPreferences.commentAdded) {\n        sendEmail({\n          to: user.email,\n          subject: \"New Comment on Task\",\n          text: `Hello ${user.name},\\n\\n${req.user.name} commented on the task \"${task.title}\":\\n\\n\"${content}\"\\n\\nBest regards,\\nThe Task Management Team`,\n        })\n      }\n    }\n\n    res.status(201).json({\n      success: true,\n      message: \"Comment added successfully\",\n      comment: savedComment,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Get comments for a task\nrouter.get(\"/task/:taskId\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { page = 1, limit = 10 } = req.query\n\n    // Check if task exists\n    const task = await Task.findById(req.params.taskId)\n    if (!task) {\n      return next(createError(404, \"Task not found\"))\n    }\n\n    // Check if user has access to this task\n    if (\n      req.user.role === \"viewer\" \u0026\u0026\n      task.assignee?.toString() !== req.user._id.toString() \u0026\u0026\n      task.creator.toString() !== req.user._id.toString() \u0026\u0026\n      !task.watchers.some((watcher) =\u003e watcher.toString() === req.user._id.toString())\n    ) {\n      return next(createError(403, \"You are not authorized to access this task\"))\n    }\n\n    // Count total comments\n    const total = await Comment.countDocuments({ task: req.params.taskId })\n\n    // Fetch comments with pagination\n    const comments = await Comment.find({ task: req.params.taskId })\n      .populate(\"user\", \"name email avatar\")\n      .sort({ createdAt: -1 })\n      .skip((page - 1) * limit)\n      .limit(Number.parseInt(limit))\n\n    res.status(200).json({\n      success: true,\n      count: comments.length,\n      total,\n      totalPages: Math.ceil(total / limit),\n      currentPage: Number.parseInt(page),\n      comments,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Update comment\nrouter.put(\"/:id\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { content, mentions } = req.body\n\n    // Find comment\n    const comment = await Comment.findById(req.params.id)\n    if (!comment) {\n      return next(createError(404, \"Comment not found\"))\n    }\n\n    // Check if user is the comment author\n    if (comment.user.toString() !== req.user._id.toString() \u0026\u0026 req.user.role !== \"admin\") {\n      return next(createError(403, \"You are not authorized to update this comment\"))\n    }\n\n    // Update fields\n    if (content) comment.content = content\n    if (mentions) comment.mentions = mentions\n\n    // Save comment\n    const updatedComment = await comment.save()\n\n    // Populate user data\n    await updatedComment.populate(\"user\", \"name email avatar\")\n\n    res.status(200).json({\n      success: true,\n      message: \"Comment updated successfully\",\n      comment: updatedComment,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Delete comment\nrouter.delete(\"/:id\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Find comment\n    const comment = await Comment.findById(req.params.id)\n    if (!comment) {\n      return next(createError(404, \"Comment not found\"))\n    }\n\n    // Check if user is the comment author or admin\n    if (comment.user.toString() !== req.user._id.toString() \u0026\u0026 req.user.role !== \"admin\") {\n      return next(createError(403, \"You are not authorized to delete this comment\"))\n    }\n\n    // Delete comment\n    await Comment.findByIdAndDelete(req.params.id)\n\n    // Delete associated notifications\n    await Notification.deleteMany({ relatedComment: req.params.id })\n\n    res.status(200).json({\n      success: true,\n      message: \"Comment deleted successfully\",\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Add attachment to comment\nrouter.post(\"/:id/attachments\", verifyToken, upload.single(\"file\"), async (req, res, next) =\u003e {\n  try {\n    if (!req.file) {\n      return next(createError(400, \"No file uploaded\"))\n    }\n\n    // Find comment\n    const comment = await Comment.findById(req.params.id)\n    if (!comment) {\n      return next(createError(404, \"Comment not found\"))\n    }\n\n    // Check if user is the comment author\n    if (comment.user.toString() !== req.user._id.toString() \u0026\u0026 req.user.role !== \"admin\") {\n      return next(createError(403, \"You are not authorized to update this comment\"))\n    }\n\n    // Add attachment\n    comment.attachments.push({\n      name: req.file.originalname,\n      path: `/${req.file.path}`,\n      type: req.file.mimetype,\n      size: req.file.size,\n    })\n\n    // Save comment\n    const updatedComment = await comment.save()\n\n    res.status(200).json({\n      success: true,\n      message: \"Attachment added successfully\",\n      comment: updatedComment,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\nexport default router\n\n[V0_FILE]javascript:file=\"routes/reports.js\"\nimport express from \"express\"\nimport Task from \"../models/Task.js\"\nimport User from \"../models/User.js\"\nimport { verifyToken, verifyAdminOrEditor } from \"../middleware/auth.js\"\nimport { generatePDF, generateCSV } from \"../utils/export.js\"\n\nconst router = express.Router()\n\n// Get task completion report\nrouter.get(\"/task-completion\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { startDate, endDate, format } = req.query\n\n    // Parse dates\n    const start = startDate ? new Date(startDate) : new Date(Date.now() - 30 * 24 * 60 * 60 * 1000) // Default to last 30 days\n    const end = endDate ? new Date(endDate) : new Date()\n\n    // Set end date to end of day\n    end.setHours(23, 59, 59, 999)\n\n    // Aggregate tasks by status and date\n    const tasksByStatus = await Task.aggregate([\n      {\n        $match: {\n          updatedAt: { $gte: start, $lte: end },\n        },\n      },\n      {\n        $group: {\n          _id: {\n            status: \"$status\",\n            date: { $dateToString: { format: \"%Y-%m-%d\", date: \"$updatedAt\" } },\n          },\n          count: { $sum: 1 },\n        },\n      },\n      {\n        $sort: { \"_id.date\": 1 },\n      },\n    ])\n\n    // Transform data for chart\n    const dates = [...new Set(tasksByStatus.map((item) =\u003e item._id.date))].sort()\n\n    const chartData = dates.map((date) =\u003e {\n      const dataPoint = { date }\n      ;[\"to-do\", \"in-progress\", \"in-review\", \"completed\"].forEach((status) =\u003e {\n        const statusData = tasksByStatus.find((item) =\u003e item._id.date === date \u0026\u0026 item._id.status === status)\n        dataPoint[status] = statusData ? statusData.count : 0\n      })\n\n      return dataPoint\n    })\n\n    // If format is specified, export data\n    if (format === \"pdf\") {\n      const pdfBuffer = await generatePDF(\"Task Completion Report\", chartData)\n\n      res.setHeader(\"Content-Type\", \"application/pdf\")\n      res.setHeader(\"Content-Disposition\", \"attachment; filename=task-completion-report.pdf\")\n      return res.send(pdfBuffer)\n    }\n\n    if (format === \"csv\") {\n      const csvData = await generateCSV(chartData)\n\n      res.setHeader(\"Content-Type\", \"text/csv\")\n      res.setHeader(\"Content-Disposition\", \"attachment; filename=task-completion-report.csv\")\n      return res.send(csvData)\n    }\n\n    res.status(200).json({\n      success: true,\n      data: chartData,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Get team performance report\nrouter.get(\"/team-performance\", verifyToken, verifyAdminOrEditor, async (req, res, next) =\u003e {\n  try {\n    const { startDate, endDate, format } = req.query\n\n    // Parse dates\n    const start = startDate ? new Date(startDate) : new Date(Date.now() - 30 * 24 * 60 * 60 * 1000) // Default to last 30 days\n    const end = endDate ? new Date(endDate) : new Date()\n\n    // Set end date to end of day\n    end.setHours(23, 59, 59, 999)\n\n    // Aggregate tasks by assignee\n    const tasksByAssignee = await Task.aggregate([\n      {\n        $match: {\n          assignee: { $exists: true, $ne: null },\n          updatedAt: { $gte: start, $lte: end },\n        },\n      },\n      {\n        $group: {\n          _id: {\n            assignee: \"$assignee\",\n            status: \"$status\",\n          },\n          count: { $sum: 1 },\n        },\n      },\n    ])\n\n    // Get user details\n    const userIds = [...new Set(tasksByAssignee.map((item) =\u003e item._id.assignee))]\n    const users = await User.find({ _id: { $in: userIds } }, \"name email avatar\")\n\n    // Transform data for chart\n    const chartData = users.map((user) =\u003e {\n      const userData = {\n        name: user.name,\n        email: user.email,\n        avatar: user.avatar,\n      }\n      ;[\"to-do\", \"in-progress\", \"in-review\", \"completed\"].forEach((status) =\u003e {\n        const statusData = tasksByAssignee.find(\n          (item) =\u003e item._id.assignee.toString() === user._id.toString() \u0026\u0026 item._id.status === status,\n        )\n        userData[status] = statusData ? statusData.count : 0\n      })\n\n      // Calculate total tasks\n      userData.total = Object.values(userData)\n        .filter((value) =\u003e typeof value === \"number\")\n        .reduce((sum, value) =\u003e sum + value, 0)\n\n      // Calculate completion rate\n      userData.completionRate = userData.total \u003e 0 ? Math.round((userData.completed / userData.total) * 100) : 0\n\n      return userData\n    })\n\n    // Sort by completion rate\n    chartData.sort((a, b) =\u003e b.completionRate - a.completionRate)\n\n    // If format is specified, export data\n    if (format === \"pdf\") {\n      const pdfBuffer = await generatePDF(\"Team Performance Report\", chartData)\n\n      res.setHeader(\"Content-Type\", \"application/pdf\")\n      res.setHeader(\"Content-Disposition\", \"attachment; filename=team-performance-report.pdf\")\n      return res.send(pdfBuffer)\n    }\n\n    if (format === \"csv\") {\n      const csvData = await generateCSV(chartData)\n\n      res.setHeader(\"Content-Type\", \"text/csv\")\n      res.setHeader(\"Content-Disposition\", \"attachment; filename=team-performance-report.csv\")\n      return res.send(csvData)\n    }\n\n    res.status(200).json({\n      success: true,\n      data: chartData,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Get priority distribution report\nrouter.get(\"/priority-distribution\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { format } = req.query\n\n    // Aggregate tasks by priority\n    const tasksByPriority = await Task.aggregate([\n      {\n        $group: {\n          _id: \"$priority\",\n          count: { $sum: 1 },\n        },\n      },\n    ])\n\n    // Transform data for chart\n    const chartData = tasksByPriority.map((item) =\u003e ({\n      priority: item._id,\n      count: item.count,\n    }))\n\n    // If format is specified, export data\n    if (format === \"pdf\") {\n      const pdfBuffer = await generatePDF(\"Priority Distribution Report\", chartData)\n\n      res.setHeader(\"Content-Type\", \"application/pdf\")\n      res.setHeader(\"Content-Disposition\", \"attachment; filename=priority-distribution-report.pdf\")\n      return res.send(pdfBuffer)\n    }\n\n    if (format === \"csv\") {\n      const csvData = await generateCSV(chartData)\n\n      res.setHeader(\"Content-Type\", \"text/csv\")\n      res.setHeader(\"Content-Disposition\", \"attachment; filename=priority-distribution-report.csv\")\n      return res.send(csvData)\n    }\n\n    res.status(200).json({\n      success: true,\n      data: chartData,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Get overdue tasks report\nrouter.get(\"/overdue-tasks\", verifyToken, verifyAdminOrEditor, async (req, res, next) =\u003e {\n  try {\n    const { format } = req.query\n\n    // Get current date\n    const today = new Date()\n    today.setHours(0, 0, 0, 0)\n\n    // Find overdue tasks\n    const overdueTasks = await Task.find({\n      dueDate: { $lt: today },\n      status: { $ne: \"completed\" },\n    })\n      .populate(\"assignee\", \"name email avatar\")\n      .populate(\"creator\", \"name email avatar\")\n      .sort({ dueDate: 1 })\n\n    // Transform data for export\n    const reportData = overdueTasks.map((task) =\u003e ({\n      id: task._id,\n      title: task.title,\n      priority: task.priority,\n      status: task.status,\n      dueDate: task.dueDate ? task.dueDate.toLocaleDateString() : \"Not set\",\n      assignee: task.assignee ? task.assignee.name : \"Unassigned\",\n      creator: task.creator ? task.creator.name : \"Unknown\",\n      daysOverdue: Math.ceil((today - new Date(task.dueDate)) / (1000 * 60 * 60 * 24)),\n    }))\n\n    // If format is specified, export data\n    if (format === \"pdf\") {\n      const pdfBuffer = await generatePDF(\"Overdue Tasks Report\", reportData)\n\n      res.setHeader(\"Content-Type\", \"application/pdf\")\n      res.setHeader(\"Content-Disposition\", \"attachment; filename=overdue-tasks-report.pdf\")\n      return res.send(pdfBuffer)\n    }\n\n    if (format === \"csv\") {\n      const csvData = await generateCSV(reportData)\n\n      res.setHeader(\"Content-Type\", \"text/csv\")\n      res.setHeader(\"Content-Disposition\", \"attachment; filename=overdue-tasks-report.csv\")\n      return res.send(csvData)\n    }\n\n    res.status(200).json({\n      success: true,\n      count: reportData.length,\n      data: reportData,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\nexport default router\n\n[V0_FILE]javascript:file=\"routes/notifications.js\"\nimport express from \"express\"\nimport Notification from \"../models/Notification.js\"\nimport { verifyToken } from \"../middleware/auth.js\"\nimport { createError } from \"../utils/error.js\"\n\nconst router = express.Router()\n\n// Get user notifications\nrouter.get(\"/\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { read, page = 1, limit = 10 } = req.query\n\n    // Build query\n    const query = { recipient: req.user._id }\n\n    // Filter by read status\n    if (read === \"true\") {\n      query.read = true\n    } else if (read === \"false\") {\n      query.read = false\n    }\n\n    // Count total notifications\n    const total = await Notification.countDocuments(query)\n\n    // Fetch notifications with pagination\n    const notifications = await Notification.find(query)\n      .populate(\"sender\", \"name email avatar\")\n      .populate(\"relatedTask\", \"title\")\n      .sort({ createdAt: -1 })\n      .skip((page - 1) * limit)\n      .limit(Number.parseInt(limit))\n\n    res.status(200).json({\n      success: true,\n      count: notifications.length,\n      total,\n      totalPages: Math.ceil(total / limit),\n      currentPage: Number.parseInt(page),\n      unreadCount: await Notification.countDocuments({ recipient: req.user._id, read: false }),\n      notifications,\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Mark notification as read\nrouter.put(\"/:id/read\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Find notification\n    const notification = await Notification.findById(req.params.id)\n    if (!notification) {\n      return next(createError(404, \"Notification not found\"))\n    }\n\n    // Check if user is the recipient\n    if (notification.recipient.toString() !== req.user._id.toString()) {\n      return next(createError(403, \"You are not authorized to update this notification\"))\n    }\n\n    // Mark as read\n    notification.read = true\n\n    // Save notification\n    await notification.save()\n\n    res.status(200).json({\n      success: true,\n      message: \"Notification marked as read\",\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Mark all notifications as read\nrouter.put(\"/read-all\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Update all unread notifications for the user\n    await Notification.updateMany({ recipient: req.user._id, read: false }, { $set: { read: true } })\n\n    res.status(200).json({\n      success: true,\n      message: \"All notifications marked as read\",\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Delete notification\nrouter.delete(\"/:id\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Find notification\n    const notification = await Notification.findById(req.params.id)\n    if (!notification) {\n      return next(createError(404, \"Notification not found\"))\n    }\n\n    // Check if user is the recipient\n    if (notification.recipient.toString() !== req.user._id.toString()) {\n      return next(createError(403, \"You are not authorized to delete this notification\"))\n    }\n\n    // Delete notification\n    await Notification.findByIdAndDelete(req.params.id)\n\n    res.status(200).json({\n      success: true,\n      message: \"Notification deleted successfully\",\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\n// Delete all notifications\nrouter.delete(\"/\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Delete all notifications for the user\n    await Notification.deleteMany({ recipient: req.user._id })\n\n    res.status(200).json({\n      success: true,\n      message: \"All notifications deleted successfully\",\n    })\n  } catch (err) {\n    next(err)\n  }\n})\n\nexport default router\n\n[V0_FILE]javascript:file=\"socket/socketHandlers.js\"\nimport jwt from \"jsonwebtoken\"\nimport User from \"../models/User.js\"\n\nconst setupSocketHandlers = (io) =\u003e {\n  // Middleware for authentication\n  io.use(async (socket, next) =\u003e {\n    try {\n      const token =\n        socket.handshake.auth.token ||\n        (socket.handshake.headers.authorization \u0026\u0026 socket.handshake.headers.authorization.startsWith(\"Bearer\")\n          ? socket.handshake.headers.authorization.split(\" \")[1]\n          : null)\n\n      if (!token) {\n        return next(new Error(\"Authentication error\"))\n      }\n\n      // Verify token\n      const decoded = jwt.verify(token, process.env.JWT_SECRET)\n\n      // Find user\n      const user = await User.findById(decoded.id)\n      if (!user || user.status !== \"active\") {\n        return next(new Error(\"Authentication error\"))\n      }\n\n      // Attach user to socket\n      socket.user = user\n      next()\n    } catch (err) {\n      next(new Error(\"Authentication error\"))\n    }\n  })\n\n  io.on(\"connection\", (socket) =\u003e {\n    console.log(`User connected: ${socket.user._id}`)\n\n    // Join user's room for private notifications\n    socket.join(socket.user._id.toString())\n\n    // Handle task updates\n    socket.on(\"task:update\", (taskId) =\u003e {\n      // Broadcast to all clients except sender\n      socket.broadcast.emit(\"task:updated\", taskId)\n    })\n\n    // Handle new comments\n    socket.on(\"comment:new\", (taskId) =\u003e {\n      // Broadcast to all clients except sender\n      socket.broadcast.emit(\"comment:added\", taskId)\n    })\n\n    // Handle user typing in comments\n    socket.on(\"typing\", (data) =\u003e {\n      // Broadcast to all clients except sender\n      socket.broadcast.emit(\"user:typing\", {\n        taskId: data.taskId,\n        user: {\n          id: socket.user._id,\n          name: socket.user.name,\n        },\n      })\n    })\n\n    // Handle disconnection\n    socket.on(\"disconnect\", () =\u003e {\n      console.log(`User disconnected: ${socket.user._id}`)\n    })\n  })\n}\n\nexport default setupSocketHandlers\n\n[V0_FILE]javascript:file=\"utils/error.js\"\n// Create custom error with status code\nexport const createError = (statusCode, message) =\u003e {\n  const error = new Error(message)\n  error.statusCode = statusCode\n  return error\n}\n\n[V0_FILE]javascript:file=\"utils/email.js\"\nimport nodemailer from \"nodemailer\"\n\n// Configure email transporter\nconst transporter = nodemailer.createTransport({\n  host: process.env.EMAIL_HOST || \"smtp.example.com\",\n  port: process.env.EMAIL_PORT || 587,\n  secure: process.env.EMAIL_SECURE === \"true\",\n  auth: {\n    user: process.env.EMAIL_USER || \"user@example.com\",\n    pass: process.env.EMAIL_PASS || \"password\",\n  },\n})\n\n// Send email\nexport const sendEmail = async ({ to, subject, text, html }) =\u003e {\n  try {\n    // Skip sending emails in development mode if no email config\n    if (process.env.NODE_ENV === \"development\" \u0026\u0026 !process.env.EMAIL_HOST) {\n      console.log(\"Email sending skipped in development mode\")\n      console.log({ to, subject, text })\n      return\n    }\n\n    const mailOptions = {\n      from: process.env.EMAIL_FROM || \"Task Management \u003cnoreply@taskmanagement.com\u003e\",\n      to,\n      subject,\n      text,\n      html,\n    }\n\n    const info = await transporter.sendMail(mailOptions)\n    console.log(\"Email sent:\", info.messageId)\n    return info\n  } catch (error) {\n    console.error(\"Error sending email:\", error)\n    throw error\n  }\n}\n\n// Send deadline reminder emails\nexport const sendDeadlineReminders = async (tasks, users) =\u003e {\n  for (const task of tasks) {\n    // Get assignee\n    const assignee = users.find(\n      (user) =\u003e\n        user._id.toString() === task.assignee.toString() \u0026\u0026\n        user.notificationPreferences.emailNotifications \u0026\u0026\n        user.notificationPreferences.deadlineReminder,\n    )\n\n    if (assignee) {\n      await sendEmail({\n        to: assignee.email,\n        subject: \"Task Deadline Reminder\",\n        text: `Hello ${assignee.name},\\n\\nThis is a reminder that the task \"${task.title}\" is due soon (${new Date(task.dueDate).toLocaleDateString()}).\\n\\nBest regards,\\nThe Task Management Team`,\n      })\n    }\n  }\n}\n\n[V0_FILE]javascript:file=\"utils/export.js\"\nimport PDFDocument from \"pdfkit\"\nimport { Parser } from \"json2csv\"\n\n// Generate PDF report\nexport const generatePDF = (title, data) =\u003e {\n  return new Promise((resolve, reject) =\u003e {\n    try {\n      // Create PDF document\n      const doc = new PDFDocument()\n      const buffers = []\n\n      // Collect PDF data chunks\n      doc.on(\"data\", (buffer) =\u003e buffers.push(buffer))\n      doc.on(\"end\", () =\u003e resolve(Buffer.concat(buffers)))\n\n      // Add title\n      doc.fontSize(20).text(title, { align: \"center\" })\n      doc.moveDown()\n\n      // Add date\n      doc.fontSize(12).text(`Generated on: ${new Date().toLocaleDateString()}`, { align: \"center\" })\n      doc.moveDown(2)\n\n      // Add data table\n      if (data.length \u003e 0) {\n        // Get column headers\n        const headers = Object.keys(data[0])\n\n        // Calculate column widths\n        const columnWidth = 500 / headers.length\n\n        // Draw header row\n        doc.fontSize(10).font(\"Helvetica-Bold\")\n        headers.forEach((header, i) =\u003e {\n          const x = 50 + i * columnWidth\n          doc.text(header.charAt(0).toUpperCase() + header.slice(1).replace(/([A-Z])/g, \" $1\"), x, doc.y, {\n            width: columnWidth,\n            align: \"left\",\n          })\n        })\n\n        doc.moveDown()\n        doc.font(\"Helvetica\")\n\n        // Draw data rows\n        data.forEach((row) =\u003e {\n          const y = doc.y\n\n          headers.forEach((header, i) =\u003e {\n            const x = 50 + i * columnWidth\n            doc.text(row[header] !== undefined ? row[header].toString() : \"\", x, y, {\n              width: columnWidth,\n              align: \"left\",\n            })\n          })\n\n          doc.moveDown()\n        })\n      } else {\n        doc.text(\"No data available\", { align: \"center\" })\n      }\n\n      // Finalize PDF\n      doc.end()\n    } catch (err) {\n      reject(err)\n    }\n  })\n}\n\n// Generate CSV report\nexport const generateCSV = (data) =\u003e {\n  return new Promise((resolve, reject) =\u003e {\n    try {\n      if (data.length === 0) {\n        return resolve(\"No data available\")\n      }\n\n      // Configure CSV parser\n      const json2csvParser = new Parser()\n\n      // Convert JSON to CSV\n      const csv = json2csvParser.parse(data)\n\n      resolve(csv)\n    } catch (err) {\n      reject(err)\n    }\n  })\n}\n\n[V0_FILE]javascript:file=\"utils/scheduler.js\" isFixed=\"true\" isQuickEdit=\"true\"\nimport cron from \"node-cron\"\nimport Task from \"../models/Task.js\"\nimport User from \"../models/User.js\"\nimport Notification from \"../models/Notification.js\"\nimport { sendDeadlineReminders } from \"./email.js\"\nimport { sendEmail } from \"./email.js\" // Import sendEmail\n\n// Schedule deadline reminders\nexport const scheduleDeadlineReminders = () =\u003e {\n  // Run every day at 9:00 AM\n  cron.schedule(\"0 9 * * *\", async () =\u003e {\n    try {\n      console.log(\"Running deadline reminder scheduler...\")\n\n      // Get current date\n      const today = new Date()\n      today.setHours(0, 0, 0, 0)\n\n      // Get tomorrow's date\n      const tomorrow = new Date(today)\n      tomorrow.setDate(tomorrow.getDate() + 1)\n\n      // Get tasks due tomorrow\n      const tasks = await Task.find({\n        dueDate: {\n          $gte: tomorrow,\n          $lt: new Date(tomorrow.getTime() + 24 * 60 * 60 * 1000),\n        },\n        status: { $ne: \"completed\" },\n      }).populate(\"assignee\")\n\n      if (tasks.length === 0) {\n        console.log(\"No tasks due tomorrow\")\n        return\n      }\n\n      console.log(`Found ${tasks.length} tasks due tomorrow`)\n\n      // Get all users\n      const users = await User.find({\n        _id: { $in: tasks.map((task) =\u003e task.assignee) },\n      })\n\n      // Create notifications\n      const notifications = tasks.map((task) =\u003e ({\n        recipient: task.assignee,\n        type: \"deadline_reminder\",\n        title: \"Task Due Tomorrow\",\n        message: `The task \"${task.title}\" is due tomorrow`,\n        relatedTask: task._id,\n      }))\n\n      // Save notifications\n      await Notification.insertMany(notifications)\n\n      // Send email reminders\n      await sendDeadlineReminders(tasks, users)\n\n      console.log(\"Deadline reminders sent successfully\")\n    } catch (err) {\n      console.error(\"Error sending deadline reminders:\", err)\n    }\n  })\n}\n\n// Schedule weekly digest emails\nexport const scheduleWeeklyDigest = () =\u003e {\n  // Run every Monday at 8:00 AM\n  cron.schedule(\"0 8 * * 1\", async () =\u003e {\n    try {\n      console.log(\"Running weekly digest scheduler...\")\n\n      // Get users who have enabled weekly digest\n      const users = await User.find({\n        \"notificationPreferences.weeklyDigest\": true,\n        \"notificationPreferences.emailNotifications\": true,\n      })\n\n      if (users.length === 0) {\n        console.log(\"No users have enabled weekly digest\")\n        return\n      }\n\n      console.log(`Sending weekly digest to ${users.length} users`)\n\n      // Get date range for the past week\n      const endDate = new Date()\n      const startDate = new Date()\n      startDate.setDate(startDate.getDate() - 7)\n\n      // Process each user\n      for (const user of users) {\n        // Get tasks assigned to user\n        const assignedTasks = await Task.find({\n          assignee: user._id,\n          updatedAt: { $gte: startDate, $lte: endDate },\n        })\n\n        // Get tasks created by user\n        const createdTasks = await Task.find({\n          creator: user._id,\n          updatedAt: { $gte: startDate, $lte: endDate },\n        })\n\n        // Count tasks by status\n        const tasksByStatus = {\n          completed: assignedTasks.filter((task) =\u003e task.status === \"completed\").length,\n          inProgress: assignedTasks.filter((task) =\u003e task.status === \"in-progress\").length,\n          inReview: assignedTasks.filter((task) =\u003e task.status === \"in-review\").length,\n          toDo: assignedTasks.filter((task) =\u003e task.status === \"to-do\").length,\n        }\n\n        // Get overdue tasks\n        const today = new Date()\n        today.setHours(0, 0, 0, 0)\n\n        const overdueTasks = await Task.find({\n          assignee: user._id,\n          dueDate: { $lt: today },\n          status: { $ne: \"completed\" },\n        })\n\n        // Send digest email\n        await sendEmail({\n          to: user.email,\n          subject: \"Your Weekly Task Digest\",\n          text: `Hello ${user.name},\\n\\nHere's your weekly task summary:\\n\\nTasks Assigned to You: ${assignedTasks.length}\\n- Completed: ${tasksByStatus.completed}\\n- In Progress: ${tasksByStatus.inProgress}\\n- In Review: ${tasksByStatus.inReview}\\n- To Do: ${tasksByStatus.toDo}\\n\\nTasks Created by You: ${createdTasks.length}\\n\\nOverdue Tasks: ${overdueTasks.length}\\n\\nBest regards,\\nThe Task Management Team`,\n        })\n      }\n\n      console.log(\"Weekly digest emails sent successfully\")\n    } catch (err) {\n      console.error(\"Error sending weekly digest emails:\", err)\n    }\n  })\n}\n\n[V0_FILE]javascript:file=\"package.json\" isFixed=\"true\" isQuickEdit=\"true\"\n{\n  \"name\": \"task-management-backend\",\n  \"version\": \"1.0.0\",\n  \"description\": \"Backend for Task Management Application\",\n  \"main\": \"server.js\",\n  \"type\": \"module\",\n  \"private\": true,\n  \"scripts\": {\n    \"start\": \"node server.js\",\n    \"dev\": \"nodemon server.js\",\n    \"test\": \"jest\"\n  },\n  \"dependencies\": {\n    \"bcrypt\": \"^5.1.1\",\n    \"cookie-parser\": \"^1.4.6\",\n    \"cors\": \"^2.8.5\",\n    \"dotenv\": \"^16.3.1\",\n    \"express\": \"^4.18.2\",\n    \"jose\": \"^5.1.1\",\n    \"json2csv\": \"^6.0.0-alpha.2\",\n    \"jsonwebtoken\": \"^9.0.2\",\n    \"mongoose\": \"^8.0.1\",\n    \"multer\": \"^1.4.5-lts.1\",\n    \"node-cron\": \"^3.0.3\",\n    \"nodemailer\": \"^6.9.7\",\n    \"pdfkit\": \"^0.14.0\",\n    \"socket.io\": \"^4.7.2\",\n    \"@hookform/resolvers\": \"^3.9.1\",\n    \"@radix-ui/react-accordion\": \"^1.2.2\",\n    \"@radix-ui/react-alert-dialog\": \"^1.1.4\",\n    \"@radix-ui/react-aspect-ratio\": \"^1.1.1\",\n    \"@radix-ui/react-avatar\": \"^1.1.2\",\n    \"@radix-ui/react-checkbox\": \"^1.1.3\",\n    \"@radix-ui/react-collapsible\": \"^1.1.2\",\n    \"@radix-ui/react-context-menu\": \"^2.2.4\",\n    \"@radix-ui/react-dialog\": \"^1.1.4\",\n    \"@radix-ui/react-dropdown-menu\": \"^2.1.4\",\n    \"@radix-ui/react-hover-card\": \"^1.1.4\",\n    \"@radix-ui/react-label\": \"^2.1.1\",\n    \"@radix-ui/react-menubar\": \"^1.1.4\",\n    \"@radix-ui/react-navigation-menu\": \"^1.2.3\",\n    \"@radix-ui/react-popover\": \"^1.1.4\",\n    \"@radix-ui/react-progress\": \"^1.1.1\",\n    \"@radix-ui/react-radio-group\": \"^1.2.2\",\n    \"@radix-ui/react-scroll-area\": \"^1.2.2\",\n    \"@radix-ui/react-select\": \"^2.1.4\",\n    \"@radix-ui/react-separator\": \"^1.1.1\",\n    \"@radix-ui/react-slider\": \"^1.2.2\",\n    \"@radix-ui/react-slot\": \"^1.1.1\",\n    \"@radix-ui/react-switch\": \"^1.1.2\",\n    \"@radix-ui/react-tabs\": \"^1.1.2\",\n    \"@radix-ui/react-toast\": \"^1.2.4\",\n    \"@radix-ui/react-toggle\": \"^1.1.1\",\n    \"@radix-ui/react-toggle-group\": \"^1.1.1\",\n    \"@radix-ui/react-tooltip\": \"^1.1.6\",\n    \"autoprefixer\": \"^10.4.20\",\n    \"class-variance-authority\": \"^0.7.1\",\n    \"clsx\": \"^2.1.1\",\n    \"cmdk\": \"1.0.4\",\n    \"date-fns\": \"4.1.0\",\n    \"embla-carousel-react\": \"8.5.1\",\n    \"input-otp\": \"1.4.1\",\n    \"lucide-react\": \"^0.454.0\",\n    \"next\": \"14.2.16\",\n    \"next-themes\": \"^0.4.4\",\n    \"react\": \"^19\",\n    \"react-day-picker\": \"8.10.1\",\n    \"react-dom\": \"^19\",\n    \"react-hook-form\": \"^7.54.1\",\n    \"react-resizable-panels\": \"^2.1.7\",\n    \"recharts\": \"2.15.0\",\n    \"sonner\": \"^1.7.1\",\n    \"tailwind-merge\": \"^2.5.5\",\n    \"tailwindcss-animate\": \"^1.0.7\",\n    \"vaul\": \"^0.9.6\",\n    \"zod\": \"^3.24.1\"\n  },\n  \"devDependencies\": {\n    \"jest\": \"^29.7.0\",\n    \"nodemon\": \"^3.0.1\",\n    \"supertest\": \"^6.3.3\",\n    \"@types/node\": \"^22\",\n    \"@types/react\": \"^18\",\n    \"@types/react-dom\": \"^18\",\n    \"postcss\": \"^8\",\n    \"tailwindcss\": \"^3.4.17\",\n    \"typescript\": \"^5\"\n  },\n  \"engines\": {\n    \"node\": \"\u003e=18.0.0\"\n  }\n}\n\n[V0_FILE]javascript:file=\".env.example\"\n# Server Configuration\nPORT=5000\nNODE_ENV=development\nFRONTEND_URL=http://localhost:3000\n\n# MongoDB Configuration\nMONGODB_URI=mongodb://localhost:27017/task-management\n\n# JWT Configuration\nJWT_SECRET=your_jwt_secret_key\n\n# Email Configuration\nEMAIL_HOST=smtp.example.com\nEMAIL_PORT=587\nEMAIL_SECURE=false\nEMAIL_USER=user@example.com\nEMAIL_PASS=password\nEMAIL_FROM=Task Management \u003cnoreply@taskmanagement.com\u003e\n\n# File Upload Configuration\nUPLOAD_PATH=uploads\n"])</script><script>self.__next_f.push([1,"9c:T16dfe,"])</script><script>self.__next_f.push([1,"[V0_FILE]js:file=\"server.js\"\nimport express from 'express';\nimport cors from 'cors';\nimport dotenv from 'dotenv';\nimport mongoose from 'mongoose';\nimport { createServer } from 'http';\nimport { Server } from 'socket.io';\nimport cookieParser from 'cookie-parser';\nimport path from 'path';\nimport { fileURLToPath } from 'url';\n\n// Import routes\nimport authRoutes from './routes/auth.js';\nimport userRoutes from './routes/users.js';\nimport taskRoutes from './routes/tasks.js';\nimport commentRoutes from './routes/comments.js';\nimport reportRoutes from './routes/reports.js';\nimport notificationRoutes from './routes/notifications.js';\n\n// Import socket handler\nimport setupSocketHandlers from './socket/socketHandlers.js';\n\n// Import middleware\nimport { errorHandler } from './middleware/errorHandler.js';\n\n// Configure environment variables\ndotenv.config();\n\n// Create Express app\nconst app = express();\nconst PORT = process.env.PORT || 5000;\n\n// Create HTTP server\nconst httpServer = createServer(app);\n\n// Setup Socket.io\nconst io = new Server(httpServer, {\n  cors: {\n    origin: process.env.FRONTEND_URL || 'http://localhost:3000',\n    methods: ['GET', 'POST'],\n    credentials: true\n  }\n});\n\n// Connect to MongoDB\nmongoose.connect(process.env.MONGODB_URI)\n  .then(() =\u003e console.log('Connected to MongoDB'))\n  .catch(err =\u003e {\n    console.error('MongoDB connection error:', err);\n    process.exit(1);\n  });\n\n// Middleware\napp.use(cors({\n  origin: process.env.FRONTEND_URL || 'http://localhost:3000',\n  credentials: true\n}));\napp.use(express.json());\napp.use(express.urlencoded({ extended: true }));\napp.use(cookieParser());\n\n// Set up socket handlers\nsetupSocketHandlers(io);\n\n// Make io accessible to route handlers\napp.use((req, res, next) =\u003e {\n  req.io = io;\n  next();\n});\n\n// API routes\napp.use('/api/auth', authRoutes);\napp.use('/api/users', userRoutes);\napp.use('/api/tasks', taskRoutes);\napp.use('/api/comments', commentRoutes);\napp.use('/api/reports', reportRoutes);\napp.use('/api/notifications', notificationRoutes);\n\n// Serve uploaded files\nconst __dirname = path.dirname(fileURLToPath(import.meta.url));\napp.use('/uploads', express.static(path.join(__dirname, 'uploads')));\n\n// Error handling middleware\napp.use(errorHandler);\n\n// Start server\nhttpServer.listen(PORT, () =\u003e {\n  console.log(`Server running on port ${PORT}`);\n});\n\nexport default app;\n[V0_FILE]js:file=\"models/User.js\"\nimport mongoose from 'mongoose';\nimport bcrypt from 'bcrypt';\n\nconst userSchema = new mongoose.Schema({\n  name: {\n    type: String,\n    required: [true, 'Name is required'],\n    trim: true\n  },\n  email: {\n    type: String,\n    required: [true, 'Email is required'],\n    unique: true,\n    lowercase: true,\n    trim: true,\n    match: [/^\\S+@\\S+\\.\\S+$/, 'Please use a valid email address']\n  },\n  password: {\n    type: String,\n    required: [true, 'Password is required'],\n    minlength: [8, 'Password must be at least 8 characters long']\n  },\n  role: {\n    type: String,\n    enum: ['admin', 'editor', 'viewer'],\n    default: 'viewer'\n  },\n  avatar: {\n    type: String,\n    default: ''\n  },\n  bio: {\n    type: String,\n    default: ''\n  },\n  jobTitle: {\n    type: String,\n    default: ''\n  },\n  company: {\n    type: String,\n    default: ''\n  },\n  status: {\n    type: String,\n    enum: ['active', 'inactive', 'pending'],\n    default: 'active'\n  },\n  notificationPreferences: {\n    emailNotifications: {\n      type: Boolean,\n      default: true\n    },\n    pushNotifications: {\n      type: Boolean,\n      default: true\n    },\n    taskAssigned: {\n      type: Boolean,\n      default: true\n    },\n    taskUpdated: {\n      type: Boolean,\n      default: true\n    },\n    taskCompleted: {\n      type: Boolean,\n      default: true\n    },\n    commentAdded: {\n      type: Boolean,\n      default: true\n    },\n    deadlineReminder: {\n      type: Boolean,\n      default: true\n    },\n    weeklyDigest: {\n      type: Boolean,\n      default: false\n    }\n  },\n  twoFactorEnabled: {\n    type: Boolean,\n    default: false\n  },\n  resetPasswordToken: String,\n  resetPasswordExpires: Date,\n  lastActive: {\n    type: Date,\n    default: Date.now\n  },\n  createdAt: {\n    type: Date,\n    default: Date.now\n  },\n  updatedAt: {\n    type: Date,\n    default: Date.now\n  }\n}, {\n  timestamps: true\n});\n\n// Pre-save hook to hash password\nuserSchema.pre('save', async function(next) {\n  // Only hash the password if it's modified or new\n  if (!this.isModified('password')) return next();\n  \n  try {\n    // Generate salt\n    const salt = await bcrypt.genSalt(10);\n    // Hash password\n    this.password = await bcrypt.hash(this.password, salt);\n    next();\n  } catch (error) {\n    next(error);\n  }\n});\n\n// Method to compare passwords\nuserSchema.methods.comparePassword = async function(candidatePassword) {\n  return await bcrypt.compare(candidatePassword, this.password);\n};\n\n// Method to return user data without sensitive information\nuserSchema.methods.toJSON = function() {\n  const user = this.toObject();\n  delete user.password;\n  delete user.resetPasswordToken;\n  delete user.resetPasswordExpires;\n  return user;\n};\n\nconst User = mongoose.model('User', userSchema);\n\nexport default User;\n[V0_FILE]js:file=\"models/Task.js\"\nimport mongoose from 'mongoose';\n\nconst subtaskSchema = new mongoose.Schema({\n  title: {\n    type: String,\n    required: true,\n    trim: true\n  },\n  completed: {\n    type: Boolean,\n    default: false\n  },\n  createdAt: {\n    type: Date,\n    default: Date.now\n  },\n  updatedAt: {\n    type: Date,\n    default: Date.now\n  }\n}, {\n  timestamps: true\n});\n\nconst taskSchema = new mongoose.Schema({\n  title: {\n    type: String,\n    required: [true, 'Task title is required'],\n    trim: true\n  },\n  description: {\n    type: String,\n    trim: true\n  },\n  status: {\n    type: String,\n    enum: ['to-do', 'in-progress', 'in-review', 'completed'],\n    default: 'to-do'\n  },\n  priority: {\n    type: String,\n    enum: ['high', 'medium', 'low'],\n    default: 'medium'\n  },\n  dueDate: {\n    type: Date\n  },\n  assignee: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'User'\n  },\n  creator: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'User',\n    required: true\n  },\n  tags: [{\n    type: String,\n    trim: true\n  }],\n  subtasks: [subtaskSchema],\n  attachments: [{\n    name: String,\n    path: String,\n    type: String,\n    size: Number,\n    uploadedAt: {\n      type: Date,\n      default: Date.now\n    }\n  }],\n  progress: {\n    type: Number,\n    default: 0,\n    min: 0,\n    max: 100\n  },\n  watchers: [{\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'User'\n  }],\n  createdAt: {\n    type: Date,\n    default: Date.now\n  },\n  updatedAt: {\n    type: Date,\n    default: Date.now\n  }\n}, {\n  timestamps: true\n});\n\n// Method to calculate progress based on subtasks\ntaskSchema.methods.calculateProgress = function() {\n  if (this.subtasks.length === 0) return 0;\n  \n  const completedCount = this.subtasks.filter(subtask =\u003e subtask.completed).length;\n  return Math.round((completedCount / this.subtasks.length) * 100);\n};\n\n// Pre-save hook to update progress\ntaskSchema.pre('save', function(next) {\n  if (this.subtasks \u0026\u0026 this.subtasks.length \u003e 0) {\n    this.progress = this.calculateProgress();\n  }\n  next();\n});\n\n// Create indexes for better query performance\ntaskSchema.index({ status: 1 });\ntaskSchema.index({ priority: 1 });\ntaskSchema.index({ assignee: 1 });\ntaskSchema.index({ dueDate: 1 });\ntaskSchema.index({ creator: 1 });\ntaskSchema.index({ tags: 1 });\n\nconst Task = mongoose.model('Task', taskSchema);\n\nexport default Task;\n[V0_FILE]js:file=\"models/Comment.js\"\nimport mongoose from 'mongoose';\n\nconst commentSchema = new mongoose.Schema({\n  task: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'Task',\n    required: true\n  },\n  user: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'User',\n    required: true\n  },\n  content: {\n    type: String,\n    required: [true, 'Comment content is required'],\n    trim: true\n  },\n  mentions: [{\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'User'\n  }],\n  attachments: [{\n    name: String,\n    path: String,\n    type: String,\n    size: Number,\n    uploadedAt: {\n      type: Date,\n      default: Date.now\n    }\n  }],\n  createdAt: {\n    type: Date,\n    default: Date.now\n  },\n  updatedAt: {\n    type: Date,\n    default: Date.now\n  }\n}, {\n  timestamps: true\n});\n\n// Create indexes for better query performance\ncommentSchema.index({ task: 1 });\ncommentSchema.index({ user: 1 });\ncommentSchema.index({ createdAt: -1 });\n\nconst Comment = mongoose.model('Comment', commentSchema);\n\nexport default Comment;\n[V0_FILE]js:file=\"models/Notification.js\"\nimport mongoose from 'mongoose';\n\nconst notificationSchema = new mongoose.Schema({\n  recipient: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'User',\n    required: true\n  },\n  sender: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'User'\n  },\n  type: {\n    type: String,\n    enum: [\n      'task_assigned',\n      'task_updated',\n      'task_completed',\n      'comment_added',\n      'deadline_reminder',\n      'mention',\n      'system'\n    ],\n    required: true\n  },\n  title: {\n    type: String,\n    required: true\n  },\n  message: {\n    type: String,\n    required: true\n  },\n  read: {\n    type: Boolean,\n    default: false\n  },\n  relatedTask: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'Task'\n  },\n  relatedComment: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'Comment'\n  },\n  createdAt: {\n    type: Date,\n    default: Date.now\n  }\n}, {\n  timestamps: true\n});\n\n// Create indexes for better query performance\nnotificationSchema.index({ recipient: 1, read: 1 });\nnotificationSchema.index({ createdAt: -1 });\n\nconst Notification = mongoose.model('Notification', notificationSchema);\n\nexport default Notification;\n[V0_FILE]js:file=\"middleware/auth.js\"\nimport jwt from 'jsonwebtoken';\nimport User from '../models/User.js';\nimport { createError } from '../utils/error.js';\n\n// Verify JWT token\nexport const verifyToken = async (req, res, next) =\u003e {\n  try {\n    // Get token from cookies or authorization header\n    const token = req.cookies.token || \n                 (req.headers.authorization \u0026\u0026 req.headers.authorization.startsWith('Bearer') \n                  ? req.headers.authorization.split(' ')[1] : null);\n    \n    if (!token) {\n      return next(createError(401, 'You are not authenticated'));\n    }\n    \n    // Verify token\n    const decoded = jwt.verify(token, process.env.JWT_SECRET);\n    \n    // Find user\n    const user = await User.findById(decoded.id);\n    if (!user) {\n      return next(createError(404, 'User not found'));\n    }\n    \n    // Check if user is active\n    if (user.status !== 'active') {\n      return next(createError(403, 'Your account is not active'));\n    }\n    \n    // Update last active timestamp\n    user.lastActive = new Date();\n    await user.save();\n    \n    // Attach user to request\n    req.user = user;\n    next();\n  } catch (err) {\n    if (err.name === 'JsonWebTokenError') {\n      return next(createError(401, 'Invalid token'));\n    }\n    if (err.name === 'TokenExpiredError') {\n      return next(createError(401, 'Token expired'));\n    }\n    next(err);\n  }\n};\n\n// Check if user is admin\nexport const verifyAdmin = (req, res, next) =\u003e {\n  if (req.user.role !== 'admin') {\n    return next(createError(403, 'You are not authorized to perform this action'));\n  }\n  next();\n};\n\n// Check if user is admin or editor\nexport const verifyAdminOrEditor = (req, res, next) =\u003e {\n  if (req.user.role !== 'admin' \u0026\u0026 req.user.role !== 'editor') {\n    return next(createError(403, 'You are not authorized to perform this action'));\n  }\n  next();\n};\n\n// Check if user is the owner of the resource or an admin\nexport const verifyOwnerOrAdmin = (resourceModel) =\u003e {\n  return async (req, res, next) =\u003e {\n    try {\n      const resourceId = req.params.id;\n      const resource = await resourceModel.findById(resourceId);\n      \n      if (!resource) {\n        return next(createError(404, 'Resource not found'));\n      }\n      \n      // Check if user is admin or the owner\n      const isOwner = resource.creator \u0026\u0026 resource.creator.toString() === req.user._id.toString();\n      const isAssignee = resource.assignee \u0026\u0026 resource.assignee.toString() === req.user._id.toString();\n      \n      if (req.user.role === 'admin' || isOwner || isAssignee) {\n        req.resource = resource;\n        return next();\n      }\n      \n      return next(createError(403, 'You are not authorized to perform this action'));\n    } catch (err) {\n      next(err);\n    }\n  };\n};\n[V0_FILE]js:file=\"middleware/errorHandler.js\"\n// Error handling middleware\nexport const errorHandler = (err, req, res, next) =\u003e {\n  const statusCode = err.statusCode || 500;\n  const message = err.message || 'Internal Server Error';\n  \n  console.error(`[ERROR] ${statusCode} - ${message}`);\n  if (process.env.NODE_ENV === 'development') {\n    console.error(err.stack);\n  }\n  \n  res.status(statusCode).json({\n    success: false,\n    status: statusCode,\n    message,\n    stack: process.env.NODE_ENV === 'development' ? err.stack : {}\n  });\n};\n[V0_FILE]js:file=\"middleware/upload.js\"\nimport multer from 'multer';\nimport path from 'path';\nimport fs from 'fs';\nimport { fileURLToPath } from 'url';\nimport { createError } from '../utils/error.js';\n\n// Get directory name\nconst __dirname = path.dirname(fileURLToPath(import.meta.url));\n\n// Create uploads directory if it doesn't exist\nconst uploadsDir = path.join(__dirname, '../uploads');\nif (!fs.existsSync(uploadsDir)) {\n  fs.mkdirSync(uploadsDir, { recursive: true });\n}\n\n// Configure storage\nconst storage = multer.diskStorage({\n  destination: (req, file, cb) =\u003e {\n    // Create subdirectory based on file type\n    let dir = 'general';\n    \n    if (file.mimetype.startsWith('image/')) {\n      dir = 'images';\n    } else if (file.mimetype.includes('pdf') || file.mimetype.includes('document')) {\n      dir = 'documents';\n    }\n    \n    const fullPath = path.join(uploadsDir, dir);\n    \n    // Create directory if it doesn't exist\n    if (!fs.existsSync(fullPath)) {\n      fs.mkdirSync(fullPath, { recursive: true });\n    }\n    \n    cb(null, path.join('uploads', dir));\n  },\n  filename: (req, file, cb) =\u003e {\n    // Generate unique filename\n    const uniqueSuffix = Date.now() + '-' + Math.round(Math.random() * 1E9);\n    const ext = path.extname(file.originalname);\n    cb(null, file.fieldname + '-' + uniqueSuffix + ext);\n  }\n});\n\n// File filter\nconst fileFilter = (req, file, cb) =\u003e {\n  // Accept images, documents, and common file types\n  const allowedFileTypes = /jpeg|jpg|png|gif|pdf|doc|docx|xls|xlsx|ppt|pptx|txt|csv|zip|rar/;\n  const extname = allowedFileTypes.test(path.extname(file.originalname).toLowerCase());\n  const mimetype = allowedFileTypes.test(file.mimetype);\n  \n  if (extname \u0026\u0026 mimetype) {\n    return cb(null, true);\n  } else {\n    cb(createError(400, 'Only certain file types are allowed'));\n  }\n};\n\n// Configure multer\nconst upload = multer({\n  storage,\n  fileFilter,\n  limits: {\n    fileSize: 10 * 1024 * 1024 // 10MB\n  }\n});\n\nexport default upload;\n[V0_FILE]js:file=\"routes/auth.js\"\nimport express from 'express';\nimport jwt from 'jsonwebtoken';\nimport User from '../models/User.js';\nimport { verifyToken } from '../middleware/auth.js';\nimport { createError } from '../utils/error.js';\nimport { sendEmail } from '../utils/email.js';\nimport crypto from 'crypto';\n\nconst router = express.Router();\n\n// Register a new user\nrouter.post('/register', async (req, res, next) =\u003e {\n  try {\n    const { name, email, password } = req.body;\n    \n    // Check if user already exists\n    const existingUser = await User.findOne({ email });\n    if (existingUser) {\n      return next(createError(400, 'User with this email already exists'));\n    }\n    \n    // Create new user\n    const newUser = new User({\n      name,\n      email,\n      password\n    });\n    \n    // Save user to database\n    const savedUser = await newUser.save();\n    \n    // Generate JWT token\n    const token = jwt.sign(\n      { id: savedUser._id, role: savedUser.role },\n      process.env.JWT_SECRET,\n      { expiresIn: '7d' }\n    );\n    \n    // Set token as cookie\n    res.cookie('token', token, {\n      httpOnly: true,\n      secure: process.env.NODE_ENV === 'production',\n      maxAge: 7 * 24 * 60 * 60 * 1000 // 7 days\n    });\n    \n    // Send welcome email\n    sendEmail({\n      to: savedUser.email,\n      subject: 'Welcome to Task Management App',\n      text: `Hello ${savedUser.name},\\n\\nWelcome to our Task Management App! Your account has been created successfully.\\n\\nBest regards,\\nThe Task Management Team`\n    });\n    \n    res.status(201).json({\n      success: true,\n      message: 'User registered successfully',\n      user: savedUser\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Login user\nrouter.post('/login', async (req, res, next) =\u003e {\n  try {\n    const { email, password } = req.body;\n    \n    // Find user by email\n    const user = await User.findOne({ email });\n    if (!user) {\n      return next(createError(404, 'User not found'));\n    }\n    \n    // Check if user is active\n    if (user.status !== 'active') {\n      return next(createError(403, 'Your account is not active'));\n    }\n    \n    // Check password\n    const isPasswordValid = await user.comparePassword(password);\n    if (!isPasswordValid) {\n      return next(createError(401, 'Invalid credentials'));\n    }\n    \n    // Generate JWT token\n    const token = jwt.sign(\n      { id: user._id, role: user.role },\n      process.env.JWT_SECRET,\n      { expiresIn: '7d' }\n    );\n    \n    // Set token as cookie\n    res.cookie('token', token, {\n      httpOnly: true,\n      secure: process.env.NODE_ENV === 'production',\n      maxAge: 7 * 24 * 60 * 60 * 1000 // 7 days\n    });\n    \n    // Update last active timestamp\n    user.lastActive = new Date();\n    await user.save();\n    \n    res.status(200).json({\n      success: true,\n      message: 'Login successful',\n      user\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Logout user\nrouter.post('/logout', (req, res) =\u003e {\n  res.clearCookie('token');\n  res.status(200).json({\n    success: true,\n    message: 'Logout successful'\n  });\n});\n\n// Get current user\nrouter.get('/me', verifyToken, (req, res) =\u003e {\n  res.status(200).json({\n    success: true,\n    user: req.user\n  });\n});\n\n// Forgot password\nrouter.post('/forgot-password', async (req, res, next) =\u003e {\n  try {\n    const { email } = req.body;\n    \n    // Find user by email\n    const user = await User.findOne({ email });\n    if (!user) {\n      return next(createError(404, 'User not found'));\n    }\n    \n    // Generate reset token\n    const resetToken = crypto.randomBytes(32).toString('hex');\n    \n    // Hash token and set to resetPasswordToken field\n    user.resetPasswordToken = crypto\n      .createHash('sha256')\n      .update(resetToken)\n      .digest('hex');\n    \n    // Set token expiry\n    user.resetPasswordExpires = Date.now() + 30 * 60 * 1000; // 30 minutes\n    \n    // Save user\n    await user.save();\n    \n    // Create reset URL\n    const resetUrl = `${process.env.FRONTEND_URL}/reset-password/${resetToken}`;\n    \n    // Send email\n    sendEmail({\n      to: user.email,\n      subject: 'Password Reset Request',\n      text: `You are receiving this email because you (or someone else) has requested the reset of a password. Please click on the following link, or paste this into your browser to complete the process:\\n\\n${resetUrl}\\n\\nIf you did not request this, please ignore this email and your password will remain unchanged.\\n`\n    });\n    \n    res.status(200).json({\n      success: true,\n      message: 'Password reset email sent'\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Reset password\nrouter.post('/reset-password/:token', async (req, res, next) =\u003e {\n  try {\n    const { password } = req.body;\n    \n    // Get token from params\n    const resetToken = req.params.token;\n    \n    // Hash token\n    const hashedToken = crypto\n      .createHash('sha256')\n      .update(resetToken)\n      .digest('hex');\n    \n    // Find user by token and check if token is expired\n    const user = await User.findOne({\n      resetPasswordToken: hashedToken,\n      resetPasswordExpires: { $gt: Date.now() }\n    });\n    \n    if (!user) {\n      return next(createError(400, 'Password reset token is invalid or has expired'));\n    }\n    \n    // Set new password\n    user.password = password;\n    user.resetPasswordToken = undefined;\n    user.resetPasswordExpires = undefined;\n    \n    // Save user\n    await user.save();\n    \n    // Send confirmation email\n    sendEmail({\n      to: user.email,\n      subject: 'Password Reset Confirmation',\n      text: `Hello ${user.name},\\n\\nThis is a confirmation that the password for your account ${user.email} has just been changed.\\n`\n    });\n    \n    res.status(200).json({\n      success: true,\n      message: 'Password reset successful'\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// OAuth login with Google\nrouter.post('/google', async (req, res, next) =\u003e {\n  try {\n    const { token, profile } = req.body;\n    \n    // Verify token with Google (in a real app)\n    // For demo purposes, we'll assume the token is valid\n    \n    // Check if user exists\n    let user = await User.findOne({ email: profile.email });\n    \n    if (!user) {\n      // Create new user\n      user = new User({\n        name: profile.name,\n        email: profile.email,\n        password: crypto.randomBytes(16).toString('hex'), // Random password\n        avatar: profile.picture\n      });\n      \n      await user.save();\n    }\n    \n    // Generate JWT token\n    const jwtToken = jwt.sign(\n      { id: user._id, role: user.role },\n      process.env.JWT_SECRET,\n      { expiresIn: '7d' }\n    );\n    \n    // Set token as cookie\n    res.cookie('token', jwtToken, {\n      httpOnly: true,\n      secure: process.env.NODE_ENV === 'production',\n      maxAge: 7 * 24 * 60 * 60 * 1000 // 7 days\n    });\n    \n    // Update last active timestamp\n    user.lastActive = new Date();\n    await user.save();\n    \n    res.status(200).json({\n      success: true,\n      message: 'Login successful',\n      user\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// OAuth login with GitHub\nrouter.post('/github', async (req, res, next) =\u003e {\n  try {\n    const { token, profile } = req.body;\n    \n    // Verify token with GitHub (in a real app)\n    // For demo purposes, we'll assume the token is valid\n    \n    // Check if user exists\n    let user = await User.findOne({ email: profile.email });\n    \n    if (!user) {\n      // Create new user\n      user = new User({\n        name: profile.name,\n        email: profile.email,\n        password: crypto.randomBytes(16).toString('hex'), // Random password\n        avatar: profile.avatar_url\n      });\n      \n      await user.save();\n    }\n    \n    // Generate JWT token\n    const jwtToken = jwt.sign(\n      { id: user._id, role: user.role },\n      process.env.JWT_SECRET,\n      { expiresIn: '7d' }\n    );\n    \n    // Set token as cookie\n    res.cookie('token', jwtToken, {\n      httpOnly: true,\n      secure: process.env.NODE_ENV === 'production',\n      maxAge: 7 * 24 * 60 * 60 * 1000 // 7 days\n    });\n    \n    // Update last active timestamp\n    user.lastActive = new Date();\n    await user.save();\n    \n    res.status(200).json({\n      success: true,\n      message: 'Login successful',\n      user\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\nexport default router;\n[V0_FILE]js:file=\"routes/users.js\"\nimport express from 'express';\nimport User from '../models/User.js';\nimport Task from '../models/Task.js';\nimport { verifyToken, verifyAdmin } from '../middleware/auth.js';\nimport { createError } from '../utils/error.js';\nimport upload from '../middleware/upload.js';\n\nconst router = express.Router();\n\n// Get all users (admin only)\nrouter.get('/', verifyToken, verifyAdmin, async (req, res, next) =\u003e {\n  try {\n    const { role, status, search, sort, page = 1, limit = 10 } = req.query;\n    \n    // Build query\n    const query = {};\n    \n    // Filter by role\n    if (role \u0026\u0026 role !== 'all') {\n      query.role = role;\n    }\n    \n    // Filter by status\n    if (status \u0026\u0026 status !== 'all') {\n      query.status = status;\n    }\n    \n    // Search by name or email\n    if (search) {\n      query.$or = [\n        { name: { $regex: search, $options: 'i' } },\n        { email: { $regex: search, $options: 'i' } }\n      ];\n    }\n    \n    // Count total documents\n    const total = await User.countDocuments(query);\n    \n    // Build sort options\n    let sortOptions = { createdAt: -1 }; // Default sort\n    if (sort) {\n      const [field, order] = sort.split(':');\n      sortOptions = { [field]: order === 'asc' ? 1 : -1 };\n    }\n    \n    // Fetch users with pagination\n    const users = await User.find(query)\n      .sort(sortOptions)\n      .skip((page - 1) * limit)\n      .limit(parseInt(limit));\n    \n    res.status(200).json({\n      success: true,\n      count: users.length,\n      total,\n      totalPages: Math.ceil(total / limit),\n      currentPage: parseInt(page),\n      users\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Get user by ID\nrouter.get('/:id', verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Check if user is admin or requesting their own profile\n    if (req.user.role !== 'admin' \u0026\u0026 req.user._id.toString() !== req.params.id) {\n      return next(createError(403, 'You are not authorized to access this resource'));\n    }\n    \n    const user = await User.findById(req.params.id);\n    if (!user) {\n      return next(createError(404, 'User not found'));\n    }\n    \n    res.status(200).json({\n      success: true,\n      user\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Update user\nrouter.put('/:id', verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Check if user is admin or updating their own profile\n    if (req.user.role !== 'admin' \u0026\u0026 req.user._id.toString() !== req.params.id) {\n      return next(createError(403, 'You are not authorized to update this user'));\n    }\n    \n    const { name, email, bio, jobTitle, company, notificationPreferences } = req.body;\n    \n    // Find user\n    const user = await User.findById(req.params.id);\n    if (!user) {\n      return next(createError(404, 'User not found'));\n    }\n    \n    // Update fields\n    if (name) user.name = name;\n    if (bio) user.bio = bio;\n    if (jobTitle) user.jobTitle = jobTitle;\n    if (company) user.company = company;\n    if (notificationPreferences) user.notificationPreferences = {\n      ...user.notificationPreferences,\n      ...notificationPreferences\n    };\n    \n    // Only admin can update email or role\n    if (req.user.role === 'admin') {\n      if (email \u0026\u0026 email !== user.email) {\n        // Check if email is already in use\n        const existingUser = await User.findOne({ email });\n        if (existingUser) {\n          return next(createError(400, 'Email is already in use'));\n        }\n        user.email = email;\n      }\n      \n      if (req.body.role) user.role = req.body.role;\n      if (req.body.status) user.status = req.body.status;\n    }\n    \n    // Save user\n    const updatedUser = await user.save();\n    \n    res.status(200).json({\n      success: true,\n      message: 'User updated successfully',\n      user: updatedUser\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Update user avatar\nrouter.put('/:id/avatar', verifyToken, upload.single('avatar'), async (req, res, next) =\u003e {\n  try {\n    // Check if user is updating their own avatar\n    if (req.user._id.toString() !== req.params.id) {\n      return next(createError(403, 'You are not authorized to update this user'));\n    }\n    \n    if (!req.file) {\n      return next(createError(400, 'No file uploaded'));\n    }\n    \n    // Find user\n    const user = await User.findById(req.params.id);\n    if (!user) {\n      return next(createError(404, 'User not found'));\n    }\n    \n    // Update avatar\n    user.avatar = `/${req.file.path}`;\n    \n    // Save user\n    const updatedUser = await user.save();\n    \n    res.status(200).json({\n      success: true,\n      message: 'Avatar updated successfully',\n      user: updatedUser\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Change password\nrouter.put('/:id/password', verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Check if user is changing their own password\n    if (req.user._id.toString() !== req.params.id) {\n      return next(createError(403, 'You are not authorized to change this user\\'s password'));\n    }\n    \n    const { currentPassword, newPassword } = req.body;\n    \n    // Find user\n    const user = await User.findById(req.params.id);\n    if (!user) {\n      return next(createError(404, 'User not found'));\n    }\n    \n    // Check current password\n    const isPasswordValid = await user.comparePassword(currentPassword);\n    if (!isPasswordValid) {\n      return next(createError(401, 'Current password is incorrect'));\n    }\n    \n    // Update password\n    user.password = newPassword;\n    \n    // Save user\n    await user.save();\n    \n    res.status(200).json({\n      success: true,\n      message: 'Password changed successfully'\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Toggle two-factor authentication\nrouter.put('/:id/two-factor', verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Check if user is updating their own settings\n    if (req.user._id.toString() !== req.params.id) {\n      return next(createError(403, 'You are not authorized to update this user'));\n    }\n    \n    // Find user\n    const user = await User.findById(req.params.id);\n    if (!user) {\n      return next(createError(404, 'User not found'));\n    }\n    \n    // Toggle two-factor authentication\n    user.twoFactorEnabled = !user.twoFactorEnabled;\n    \n    // Save user\n    const updatedUser = await user.save();\n    \n    res.status(200).json({\n      success: true,\n      message: `Two-factor authentication ${updatedUser.twoFactorEnabled ? 'enabled' : 'disabled'}`,\n      user: updatedUser\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Delete user (admin only)\nrouter.delete('/:id', verifyToken, verifyAdmin, async (req, res, next) =\u003e {\n  try {\n    // Find user\n    const user = await User.findById(req.params.id);\n    if (!user) {\n      return next(createError(404, 'User not found'));\n    }\n    \n    // Check if user is trying to delete themselves\n    if (req.user._id.toString() === req.params.id) {\n      return next(createError(400, 'You cannot delete your own account'));\n    }\n    \n    // Delete user\n    await User.findByIdAndDelete(req.params.id);\n    \n    // Update tasks assigned to this user\n    await Task.updateMany(\n      { assignee: req.params.id },\n      { $unset: { assignee: 1 } }\n    );\n    \n    res.status(200).json({\n      success: true,\n      message: 'User deleted successfully'\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Get user tasks\nrouter.get('/:id/tasks', verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Check if user is admin or requesting their own tasks\n    if (req.user.role !== 'admin' \u0026\u0026 req.user._id.toString() !== req.params.id) {\n      return next(createError(403, 'You are not authorized to access this resource'));\n    }\n    \n    const { status, priority, sort, page = 1, limit = 10 } = req.query;\n    \n    // Build query\n    const query = { assignee: req.params.id };\n    \n    // Filter by status\n    if (status \u0026\u0026 status !== 'all') {\n      query.status = status;\n    }\n    \n    // Filter by priority\n    if (priority \u0026\u0026 priority !== 'all') {\n      query.priority = priority;\n    }\n    \n    // Count total documents\n    const total = await Task.countDocuments(query);\n    \n    // Build sort options\n    let sortOptions = { createdAt: -1 }; // Default sort\n    if (sort) {\n      const [field, order] = sort.split(':');\n      sortOptions = { [field]: order === 'asc' ? 1 : -1 };\n    }\n    \n    // Fetch tasks with pagination\n    const tasks = await Task.find(query)\n      .populate('assignee', 'name email avatar')\n      .populate('creator', 'name email avatar')\n      .sort(sortOptions)\n      .skip((page - 1) * limit)\n      .limit(parseInt(limit));\n    \n    res.status(200).json({\n      success: true,\n      count: tasks.length,\n      total,\n      totalPages: Math.ceil(total / limit),\n      currentPage: parseInt(page),\n      tasks\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\nexport default router;\n[V0_FILE]js:file=\"routes/tasks.js\"\nimport express from 'express';\nimport Task from '../models/Task.js';\nimport User from '../models/User.js';\nimport Comment from '../models/Comment.js';\nimport Notification from '../models/Notification.js';\nimport { verifyToken, verifyAdminOrEditor, verifyOwnerOrAdmin } from '../middleware/auth.js';\nimport { createError } from '../utils/error.js';\nimport upload from '../middleware/upload.js';\nimport { sendEmail } from '../utils/email.js';\n\nconst router = express.Router();\n\n// Create a new task\nrouter.post('/', verifyToken, verifyAdminOrEditor, async (req, res, next) =\u003e {\n  try {\n    const { title, description, status, priority, dueDate, assignee, tags, subtasks } = req.body;\n    \n    // Create new task\n    const newTask = new Task({\n      title,\n      description,\n      status: status || 'to-do',\n      priority: priority || 'medium',\n      dueDate,\n      assignee,\n      creator: req.user._id,\n      tags: tags || [],\n      subtasks: subtasks || []\n    });\n    \n    // Save task\n    const savedTask = await newTask.save();\n    \n    // If task is assigned to someone, send notification\n    if (assignee) {\n      // Create notification\n      const notification = new Notification({\n        recipient: assignee,\n        sender: req.user._id,\n        type: 'task_assigned',\n        title: 'New Task Assigned',\n        message: `You have been assigned a new task: ${title}`,\n        relatedTask: savedTask._id\n      });\n      \n      await notification.save();\n      \n      // Send real-time notification\n      if (req.io) {\n        req.io.to(assignee.toString()).emit('notification', notification);\n      }\n      \n      // Get assignee details\n      const assigneeUser = await User.findById(assignee);\n      \n      // Send email notification if user has email notifications enabled\n      if (assigneeUser \u0026\u0026 assigneeUser.notificationPreferences.emailNotifications \u0026\u0026 \n          assigneeUser.notificationPreferences.taskAssigned) {\n        sendEmail({\n          to: assigneeUser.email,\n          subject: 'New Task Assigned',\n          text: `Hello ${assigneeUser.name},\\n\\nYou have been assigned a new task: ${title}\\n\\nDue Date: ${dueDate ? new Date(dueDate).toLocaleDateString() : 'Not set'}\\nPriority: ${priority || 'Medium'}\\n\\nDescription:\\n${description || 'No description provided'}\\n\\nBest regards,\\nThe Task Management Team`\n        });\n      }\n    }\n    \n    res.status(201).json({\n      success: true,\n      message: 'Task created successfully',\n      task: savedTask\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Get all tasks\nrouter.get('/', verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { status, priority, assignee, creator, search, tags, dueDate, sort, page = 1, limit = 10 } = req.query;\n    \n    // Build query\n    const query = {};\n    \n    // Filter by status\n    if (status \u0026\u0026 status !== 'all') {\n      query.status = status;\n    }\n    \n    // Filter by priority\n    if (priority \u0026\u0026 priority !== 'all') {\n      query.priority = priority;\n    }\n    \n    // Filter by assignee\n    if (assignee) {\n      query.assignee = assignee;\n    }\n    \n    // Filter by creator\n    if (creator) {\n      query.creator = creator;\n    }\n    \n    // Filter by tags\n    if (tags) {\n      query.tags = { $in: tags.split(',') };\n    }\n    \n    // Filter by due date\n    if (dueDate) {\n      const today = new Date();\n      today.setHours(0, 0, 0, 0);\n      \n      if (dueDate === 'overdue') {\n        query.dueDate = { $lt: today };\n        query.status = { $ne: 'completed' };\n      } else if (dueDate === 'today') {\n        const tomorrow = new Date(today);\n        tomorrow.setDate(tomorrow.getDate() + 1);\n        query.dueDate = { $gte: today, $lt: tomorrow };\n      } else if (dueDate === 'week') {\n        const nextWeek = new Date(today);\n        nextWeek.setDate(nextWeek.getDate() + 7);\n        query.dueDate = { $gte: today, $lt: nextWeek };\n      }\n    }\n    \n    // Search by title or description\n    if (search) {\n      query.$or = [\n        { title: { $regex: search, $options: 'i' } },\n        { description: { $regex: search, $options: 'i' } }\n      ];\n    }\n    \n    // Viewers can only see tasks assigned to them or created by them\n    if (req.user.role === 'viewer') {\n      query.$or = [\n        { assignee: req.user._id },\n        { creator: req.user._id },\n        { watchers: req.user._id }\n      ];\n    }\n    \n    // Count total documents\n    const total = await Task.countDocuments(query);\n    \n    // Build sort options\n    let sortOptions = { createdAt: -1 }; // Default sort\n    if (sort) {\n      const [field, order] = sort.split(':');\n      sortOptions = { [field]: order === 'asc' ? 1 : -1 };\n    }\n    \n    // Fetch tasks with pagination\n    const tasks = await Task.find(query)\n      .populate('assignee', 'name email avatar')\n      .populate('creator', 'name email avatar')\n      .sort(sortOptions)\n      .skip((page - 1) * limit)\n      .limit(parseInt(limit));\n    \n    res.status(200).json({\n      success: true,\n      count: tasks.length,\n      total,\n      totalPages: Math.ceil(total / limit),\n      currentPage: parseInt(page),\n      tasks\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Get task by ID\nrouter.get('/:id', verifyToken, async (req, res, next) =\u003e {\n  try {\n    const task = await Task.findById(req.params.id)\n      .populate('assignee', 'name email avatar')\n      .populate('creator', 'name email avatar')\n      .populate('watchers', 'name email avatar');\n    \n    if (!task) {\n      return next(createError(404, 'Task not found'));\n    }\n    \n    // Check if user has access to this task\n    if (req.user.role === 'viewer' \u0026\u0026 \n        task.assignee?._id.toString() !== req.user._id.toString() \u0026\u0026 \n        task.creator._id.toString() !== req.user._id.toString() \u0026\u0026\n        !task.watchers.some(watcher =\u003e watcher._id.toString() === req.user._id.toString())) {\n      return next(createError(403, 'You are not authorized to access this task'));\n    }\n    \n    res.status(200).json({\n      success: true,\n      task\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Update task\nrouter.put('/:id', verifyToken, verifyOwnerOrAdmin(Task), async (req, res, next) =\u003e {\n  try {\n    const { title, description, status, priority, dueDate, assignee, tags, subtasks, progress } = req.body;\n    \n    const task = req.resource; // From verifyOwnerOrAdmin middleware\n    \n    // Store old assignee for notification\n    const oldAssignee = task.assignee;\n    \n    // Update fields\n    if (title) task.title = title;\n    if (description !== undefined) task.description = description;\n    if (status) task.status = status;\n    if (priority) task.priority = priority;\n    if (dueDate !== undefined) task.dueDate = dueDate;\n    if (assignee !== undefined) task.assignee = assignee;\n    if (tags) task.tags = tags;\n    if (subtasks) task.subtasks = subtasks;\n    if (progress !== undefined) task.progress = progress;\n    \n    // Save task\n    const updatedTask = await task.save();\n    \n    // If assignee has changed, send notification to new assignee\n    if (assignee \u0026\u0026 (!oldAssignee || oldAssignee.toString() !== assignee.toString())) {\n      // Create notification\n      const notification = new Notification({\n        recipient: assignee,\n        sender: req.user._id,\n        type: 'task_assigned',\n        title: 'Task Assigned',\n        message: `You have been assigned to the task: ${task.title}`,\n        relatedTask: task._id\n      });\n      \n      await notification.save();\n      \n      // Send real-time notification\n      if (req.io) {\n        req.io.to(assignee.toString()).emit('notification', notification);\n      }\n      \n      // Get assignee details\n      const assigneeUser = await User.findById(assignee);\n      \n      // Send email notification if user has email notifications enabled\n      if (assigneeUser \u0026\u0026 assigneeUser.notificationPreferences.emailNotifications \u0026\u0026 \n          assigneeUser.notificationPreferences.taskAssigned) {\n        sendEmail({\n          to: assigneeUser.email,\n          subject: 'Task Assigned',\n          text: `Hello ${assigneeUser.name},\\n\\nYou have been assigned to the task: ${task.title}\\n\\nDue Date: ${task.dueDate ? new Date(task.dueDate).toLocaleDateString() : 'Not set'}\\nPriority: ${task.priority}\\n\\nDescription:\\n${task.description || 'No description provided'}\\n\\nBest regards,\\nThe Task Management Team`\n        });\n      }\n    }\n    \n    // If status has changed to completed, send notification to creator\n    if (status === 'completed' \u0026\u0026 task.status !== 'completed') {\n      // Create notification for creator\n      const notification = new Notification({\n        recipient: task.creator,\n        sender: req.user._id,\n        type: 'task_completed',\n        title: 'Task Completed',\n        message: `The task \"${task.title}\" has been marked as completed`,\n        relatedTask: task._id\n      });\n      \n      await notification.save();\n      \n      // Send real-time notification\n      if (req.io) {\n        req.io.to(task.creator.toString()).emit('notification', notification);\n      }\n      \n      // Get creator details\n      const creatorUser = await User.findById(task.creator);\n      \n      // Send email notification if user has email notifications enabled\n      if (creatorUser \u0026\u0026 creatorUser.notificationPreferences.emailNotifications \u0026\u0026 \n          creatorUser.notificationPreferences.taskCompleted) {\n        sendEmail({\n          to: creatorUser.email,\n          subject: 'Task Completed',\n          text: `Hello ${creatorUser.name},\\n\\nThe task \"${task.title}\" has been marked as completed.\\n\\nBest regards,\\nThe Task Management Team`\n        });\n      }\n    }\n    \n    // If task has been updated, notify assignee\n    if (task.assignee \u0026\u0026 task.assignee.toString() !== req.user._id.toString()) {\n      // Create notification\n      const notification = new Notification({\n        recipient: task.assignee,\n        sender: req.user._id,\n        type: 'task_updated',\n        title: 'Task Updated',\n        message: `The task \"${task.title}\" has been updated`,\n        relatedTask: task._id\n      });\n      \n      await notification.save();\n      \n      // Send real-time notification\n      if (req.io) {\n        req.io.to(task.assignee.toString()).emit('notification', notification);\n      }\n      \n      // Get assignee details\n      const assigneeUser = await User.findById(task.assignee);\n      \n      // Send email notification if user has email notifications enabled\n      if (assigneeUser \u0026\u0026 assigneeUser.notificationPreferences.emailNotifications \u0026\u0026 \n          assigneeUser.notificationPreferences.taskUpdated) {\n        sendEmail({\n          to: assigneeUser.email,\n          subject: 'Task Updated',\n          text: `Hello ${assigneeUser.name},\\n\\nThe task \"${task.title}\" has been updated.\\n\\nBest regards,\\nThe Task Management Team`\n        });\n      }\n    }\n    \n    res.status(200).json({\n      success: true,\n      message: 'Task updated successfully',\n      task: updatedTask\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Delete task\nrouter.delete('/:id', verifyToken, verifyOwnerOrAdmin(Task), async (req, res, next) =\u003e {\n  try {\n    const task = req.resource; // From verifyOwnerOrAdmin middleware\n    \n    // Delete task\n    await Task.findByIdAndDelete(req.params.id);\n    \n    // Delete associated comments\n    await Comment.deleteMany({ task: req.params.id });\n    \n    // Delete associated notifications\n    await Notification.deleteMany({ relatedTask: req.params.id });\n    \n    res.status(200).json({\n      success: true,\n      message: 'Task deleted successfully'\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Add attachment to task\nrouter.post('/:id/attachments', verifyToken, verifyOwnerOrAdmin(Task), upload.single('file'), async (req, res, next) =\u003e {\n  try {\n    if (!req.file) {\n      return next(createError(400, 'No file uploaded'));\n    }\n    \n    const task = req.resource; // From verifyOwnerOrAdmin middleware\n    \n    // Add attachment\n    task.attachments.push({\n      name: req.file.originalname,\n      path: `/${req.file.path}`,\n      type: req.file.mimetype,\n      size: req.file.size\n    });\n    \n    // Save task\n    const updatedTask = await task.save();\n    \n    res.status(200).json({\n      success: true,\n      message: 'Attachment added successfully',\n      task: updatedTask\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Delete attachment from task\nrouter.delete('/:id/attachments/:attachmentId', verifyToken, verifyOwnerOrAdmin(Task), async (req, res, next) =\u003e {\n  try {\n    const task = req.resource; // From verifyOwnerOrAdmin middleware\n    \n    // Remove attachment\n    task.attachments = task.attachments.filter(\n      attachment =\u003e attachment._id.toString() !== req.params.attachmentId\n    );\n    \n    // Save task\n    const updatedTask = await task.save();\n    \n    res.status(200).json({\n      success: true,\n      message: 'Attachment deleted successfully',\n      task: updatedTask\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Add watcher to task\nrouter.post('/:id/watchers', verifyToken, async (req, res, next) =\u003e {\n  try {\n    const task = await Task.findById(req.params.id);\n    if (!task) {\n      return next(createError(404, 'Task not found'));\n    }\n    \n    // Add user to watchers if not already watching\n    if (!task.watchers.includes(req.user._id)) {\n      task.watchers.push(req.user._id);\n      await task.save();\n    }\n    \n    res.status(200).json({\n      success: true,\n      message: 'You are now watching this task',\n      task\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Remove watcher from task\nrouter.delete('/:id/watchers', verifyToken, async (req, res, next) =\u003e {\n  try {\n    const task = await Task.findById(req.params.id);\n    if (!task) {\n      return next(createError(404, 'Task not found'));\n    }\n    \n    // Remove user from watchers\n    task.watchers = task.watchers.filter(\n      watcher =\u003e watcher.toString() !== req.user._id.toString()\n    );\n    \n    await task.save();\n    \n    res.status(200).json({\n      success: true,\n      message: 'You are no longer watching this task',\n      task\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\nexport default router;\n[V0_FILE]js:file=\"routes/comments.js\"\nimport express from 'express';\nimport Comment from '../models/Comment.js';\nimport Task from '../models/Task.js';\nimport User from '../models/User.js';\nimport Notification from '../models/Notification.js';\nimport { verifyToken } from '../middleware/auth.js';\nimport { createError } from '../utils/error.js';\nimport upload from '../middleware/upload.js';\nimport { sendEmail } from '../utils/email.js';\n\nconst router = express.Router();\n\n// Create a new comment\nrouter.post('/', verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { taskId, content, mentions } = req.body;\n    \n    // Check if task exists\n    const task = await Task.findById(taskId);\n    if (!task) {\n      return next(createError(404, 'Task not found'));\n    }\n    \n    // Create new comment\n    const newComment = new Comment({\n      task: taskId,\n      user: req.user._id,\n      content,\n      mentions: mentions || []\n    });\n    \n    // Save comment\n    const savedComment = await newComment.save();\n    \n    // Populate user data\n    await savedComment.populate('user', 'name email avatar');\n    \n    // Notify task assignee and creator about the comment\n    const notifyUsers = new Set();\n    \n    // Add task assignee if exists and is not the commenter\n    if (task.assignee \u0026\u0026 task.assignee.toString() !== req.user._id.toString()) {\n      notifyUsers.add(task.assignee.toString());\n    }\n    \n    // Add task creator if not the commenter\n    if (task.creator.toString() !== req.user._id.toString()) {\n      notifyUsers.add(task.creator.toString());\n    }\n    \n    // Add watchers if not the commenter\n    task.watchers.forEach(watcher =\u003e {\n      if (watcher.toString() !== req.user._id.toString()) {\n        notifyUsers.add(watcher.toString());\n      }\n    });\n    \n    // Add mentioned users\n    if (mentions \u0026\u0026 mentions.length \u003e 0) {\n      mentions.forEach(userId =\u003e notifyUsers.add(userId));\n    }\n    \n    // Send notifications\n    for (const userId of notifyUsers) {\n      // Create notification\n      const notification = new Notification({\n        recipient: userId,\n        sender: req.user._id,\n        type: 'comment_added',\n        title: 'New Comment',\n        message: `${req.user.name} commented on task: ${task.title}`,\n        relatedTask: taskId,\n        relatedComment: savedComment._id\n      });\n      \n      await notification.save();\n      \n      // Send real-time notification\n      if (req.io) {\n        req.io.to(userId).emit('notification', notification);\n      }\n      \n      // Get user details\n      const user = await User.findById(userId);\n      \n      // Send email notification if user has email notifications enabled\n      if (user \u0026\u0026 user.notificationPreferences.emailNotifications \u0026\u0026 \n          user.notificationPreferences.commentAdded) {\n        sendEmail({\n          to: user.email,\n          subject: 'New Comment on Task',\n          text: `Hello ${user.name},\\n\\n${req.user.name} commented on the task \"${task.title}\":\\n\\n\"${content}\"\\n\\nBest regards,\\nThe Task Management Team`\n        });\n      }\n    }\n    \n    res.status(201).json({\n      success: true,\n      message: 'Comment added successfully',\n      comment: savedComment\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Get comments for a task\nrouter.get('/task/:taskId', verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { page = 1, limit = 10 } = req.query;\n    \n    // Check if task exists\n    const task = await Task.findById(req.params.taskId);\n    if (!task) {\n      return next(createError(404, 'Task not found'));\n    }\n    \n    // Check if user has access to this task\n    if (req.user.role === 'viewer' \u0026\u0026 \n        task.assignee?.toString() !== req.user._id.toString() \u0026\u0026 \n        task.creator.toString() !== req.user._id.toString() \u0026\u0026\n        !task.watchers.some(watcher =\u003e watcher.toString() === req.user._id.toString())) {\n      return next(createError(403, 'You are not authorized to access this task'));\n    }\n    \n    // Count total comments\n    const total = await Comment.countDocuments({ task: req.params.taskId });\n    \n    // Fetch comments with pagination\n    const comments = await Comment.find({ task: req.params.taskId })\n      .populate('user', 'name email avatar')\n      .sort({ createdAt: -1 })\n      .skip((page - 1) * limit)\n      .limit(parseInt(limit));\n    \n    res.status(200).json({\n      success: true,\n      count: comments.length,\n      total,\n      totalPages: Math.ceil(total / limit),\n      currentPage: parseInt(page),\n      comments\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Update comment\nrouter.put('/:id', verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { content, mentions } = req.body;\n    \n    // Find comment\n    const comment = await Comment.findById(req.params.id);\n    if (!comment) {\n      return next(createError(404, 'Comment not found'));\n    }\n    \n    // Check if user is the comment author\n    if (comment.user.toString() !== req.user._id.toString() \u0026\u0026 req.user.role !== 'admin') {\n      return next(createError(403, 'You are not authorized to update this comment'));\n    }\n    \n    // Update fields\n    if (content) comment.content = content;\n    if (mentions) comment.mentions = mentions;\n    \n    // Save comment\n    const updatedComment = await comment.save();\n    \n    // Populate user data\n    await updatedComment.populate('user', 'name email avatar');\n    \n    res.status(200).json({\n      success: true,\n      message: 'Comment updated successfully',\n      comment: updatedComment\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Delete comment\nrouter.delete('/:id', verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Find comment\n    const comment = await Comment.findById(req.params.id);\n    if (!comment) {\n      return next(createError(404, 'Comment not found'));\n    }\n    \n    // Check if user is the  {\n      return next(createError(404, 'Comment not found'));\n    }\n    \n    // Check if user is the comment author or admin\n    if (comment.user.toString() !== req.user._id.toString() \u0026\u0026 req.user.role !== 'admin') {\n      return next(createError(403, 'You are not authorized to delete this comment'));\n    }\n    \n    // Delete comment\n    await Comment.findByIdAndDelete(req.params.id);\n    \n    // Delete associated notifications\n    await Notification.deleteMany({ relatedComment: req.params.id });\n    \n    res.status(200).json({\n      success: true,\n      message: 'Comment deleted successfully'\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Add attachment to comment\nrouter.post('/:id/attachments', verifyToken, upload.single('file'), async (req, res, next) =\u003e {\n  try {\n    if (!req.file) {\n      return next(createError(400, 'No file uploaded'));\n    }\n    \n    // Find comment\n    const comment = await Comment.findById(req.params.id);\n    if (!comment) {\n      return next(createError(404, 'Comment not found'));\n    }\n    \n    // Check if user is the comment author\n    if (comment.user.toString() !== req.user._id.toString() \u0026\u0026 req.user.role !== 'admin') {\n      return next(createError(403, 'You are not authorized to update this comment'));\n    }\n    \n    // Add attachment\n    comment.attachments.push({\n      name: req.file.originalname,\n      path: `/${req.file.path}`,\n      type: req.file.mimetype,\n      size: req.file.size\n    });\n    \n    // Save comment\n    const updatedComment = await comment.save();\n    \n    res.status(200).json({\n      success: true,\n      message: 'Attachment added successfully',\n      comment: updatedComment\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\nexport default router;\n[V0_FILE]js:file=\"routes/comments.js\" isFixed\nimport express from 'express';\nimport Comment from '../models/Comment.js';\nimport Task from '../models/Task.js';\nimport User from '../models/User.js';\nimport Notification from '../models/Notification.js';\nimport { verifyToken } from '../middleware/auth.js';\nimport { createError } from '../utils/error.js';\nimport upload from '../middleware/upload.js';\nimport { sendEmail } from '../utils/email.js';\n\nconst router = express.Router();\n\n// Create a new comment\nrouter.post('/', verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { taskId, content, mentions } = req.body;\n    \n    // Check if task exists\n    const task = await Task.findById(taskId);\n    if (!task) {\n      return next(createError(404, 'Task not found'));\n    }\n    \n    // Create new comment\n    const newComment = new Comment({\n      task: taskId,\n      user: req.user._id,\n      content,\n      mentions: mentions || []\n    });\n    \n    // Save comment\n    const savedComment = await newComment.save();\n    \n    // Populate user data\n    await savedComment.populate('user', 'name email avatar');\n    \n    // Notify task assignee and creator about the comment\n    const notifyUsers = new Set();\n    \n    // Add task assignee if exists and is not the commenter\n    if (task.assignee \u0026\u0026 task.assignee.toString() !== req.user._id.toString()) {\n      notifyUsers.add(task.assignee.toString());\n    }\n    \n    // Add task creator if not the commenter\n    if (task.creator.toString() !== req.user._id.toString()) {\n      notifyUsers.add(task.creator.toString());\n    }\n    \n    // Add watchers if not the commenter\n    task.watchers.forEach(watcher =\u003e {\n      if (watcher.toString() !== req.user._id.toString()) {\n        notifyUsers.add(watcher.toString());\n      }\n    });\n    \n    // Add mentioned users\n    if (mentions \u0026\u0026 mentions.length \u003e 0) {\n      mentions.forEach(userId =\u003e notifyUsers.add(userId));\n    }\n    \n    // Send notifications\n    for (const userId of notifyUsers) {\n      // Create notification\n      const notification = new Notification({\n        recipient: userId,\n        sender: req.user._id,\n        type: 'comment_added',\n        title: 'New Comment',\n        message: `${req.user.name} commented on task: ${task.title}`,\n        relatedTask: taskId,\n        relatedComment: savedComment._id\n      });\n      \n      await notification.save();\n      \n      // Send real-time notification\n      if (req.io) {\n        req.io.to(userId).emit('notification', notification);\n      }\n      \n      // Get user details\n      const user = await User.findById(userId);\n      \n      // Send email notification if user has email notifications enabled\n      if (user \u0026\u0026 user.notificationPreferences.emailNotifications \u0026\u0026 \n          user.notificationPreferences.commentAdded) {\n        sendEmail({\n          to: user.email,\n          subject: 'New Comment on Task',\n          text: `Hello ${user.name},\\n\\n${req.user.name} commented on the task \"${task.title}\":\\n\\n\"${content}\"\\n\\nBest regards,\\nThe Task Management Team`\n        });\n      }\n    }\n    \n    res.status(201).json({\n      success: true,\n      message: 'Comment added successfully',\n      comment: savedComment\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Get comments for a task\nrouter.get('/task/:taskId', verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { page = 1, limit = 10 } = req.query;\n    \n    // Check if task exists\n    const task = await Task.findById(req.params.taskId);\n    if (!task) {\n      return next(createError(404, 'Task not found'));\n    }\n    \n    // Check if user has access to this task\n    if (req.user.role === 'viewer' \u0026\u0026 \n        task.assignee?.toString() !== req.user._id.toString() \u0026\u0026 \n        task.creator.toString() !== req.user._id.toString() \u0026\u0026\n        !task.watchers.some(watcher =\u003e watcher.toString() === req.user._id.toString())) {\n      return next(createError(403, 'You are not authorized to access this task'));\n    }\n    \n    // Count total comments\n    const total = await Comment.countDocuments({ task: req.params.taskId });\n    \n    // Fetch comments with pagination\n    const comments = await Comment.find({ task: req.params.taskId })\n      .populate('user', 'name email avatar')\n      .sort({ createdAt: -1 })\n      .skip((page - 1) * limit)\n      .limit(parseInt(limit));\n    \n    res.status(200).json({\n      success: true,\n      count: comments.length,\n      total,\n      totalPages: Math.ceil(total / limit),\n      currentPage: parseInt(page),\n      comments\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Update comment\nrouter.put('/:id', verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { content, mentions } = req.body;\n    \n    // Find comment\n    const comment = await Comment.findById(req.params.id);\n    if (!comment) {\n      return next(createError(404, 'Comment not found'));\n    }\n    \n    // Check if user is the comment author\n    if (comment.user.toString() !== req.user._id.toString() \u0026\u0026 req.user.role !== 'admin') {\n      return next(createError(403, 'You are not authorized to update this comment'));\n    }\n    \n    // Update fields\n    if (content) comment.content = content;\n    if (mentions) comment.mentions = mentions;\n    \n    // Save comment\n    const updatedComment = await comment.save();\n    \n    // Populate user data\n    await updatedComment.populate('user', 'name email avatar');\n    \n    res.status(200).json({\n      success: true,\n      message: 'Comment updated successfully',\n      comment: updatedComment\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Delete comment\nrouter.delete('/:id', verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Find comment\n    let comment = await Comment.findById(req.params.id);\n    if (!comment) {\n      return next(createError(404, 'Comment not found'));\n    }\n    \n    // Check if user is the comment author or admin\n    if (comment.user.toString() !== req.user._id.toString() \u0026\u0026 req.user.role !== 'admin') {\n      return next(createError(403, 'You are not authorized to delete this comment'));\n    }\n    \n    // Delete comment\n    await Comment.findByIdAndDelete(req.params.id);\n    \n    // Delete associated notifications\n    await Notification.deleteMany({ relatedComment: req.params.id });\n    \n    res.status(200).json({\n      success: true,\n      message: 'Comment deleted successfully'\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Add attachment to comment\nrouter.post('/:id/attachments', verifyToken, upload.single('file'), async (req, res, next) =\u003e {\n  try {\n    if (!req.file) {\n      return next(createError(400, 'No file uploaded'));\n    }\n    \n    // Find comment\n    const comment = await Comment.findById(req.params.id);\n    if (!comment) {\n      return next(createError(404, 'Comment not found'));\n    }\n    \n    // Check if user is the comment author\n    if (comment.user.toString() !== req.user._id.toString() \u0026\u0026 req.user.role !== 'admin') {\n      return next(createError(403, 'You are not authorized to update this comment'));\n    }\n    \n    // Add attachment\n    comment.attachments.push({\n      name: req.file.originalname,\n      path: `/${req.file.path}`,\n      type: req.file.mimetype,\n      size: req.file.size\n    });\n    \n    // Save comment\n    const updatedComment = await comment.save();\n    \n    res.status(200).json({\n      success: true,\n      message: 'Attachment added successfully',\n      comment: updatedComment\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\nexport default router;\n[V0_FILE]js:file=\"routes/reports.js\"\nimport express from 'express';\nimport Task from '../models/Task.js';\nimport User from '../models/User.js';\nimport { verifyToken, verifyAdminOrEditor } from '../middleware/auth.js';\nimport { createError } from '../utils/error.js';\nimport { generatePDF, generateCSV } from '../utils/export.js';\n\nconst router = express.Router();\n\n// Get task completion report\nrouter.get('/task-completion', verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { startDate, endDate, format } = req.query;\n    \n    // Parse dates\n    const start = startDate ? new Date(startDate) : new Date(Date.now() - 30 * 24 * 60 * 60 * 1000); // Default to last 30 days\n    const end = endDate ? new Date(endDate) : new Date();\n    \n    // Set end date to end of day\n    end.setHours(23, 59, 59, 999);\n    \n    // Aggregate tasks by status and date\n    const tasksByStatus = await Task.aggregate([\n      {\n        $match: {\n          updatedAt: { $gte: start, $lte: end }\n        }\n      },\n      {\n        $group: {\n          _id: {\n            status: '$status',\n            date: { $dateToString: { format: '%Y-%m-%d', date: '$updatedAt' } }\n          },\n          count: { $sum: 1 }\n        }\n      },\n      {\n        $sort: { '_id.date': 1 }\n      }\n    ]);\n    \n    // Transform data for chart\n    const dates = [...new Set(tasksByStatus.map(item =\u003e item._id.date))].sort();\n    \n    const chartData = dates.map(date =\u003e {\n      const dataPoint = { date };\n      \n      ['to-do', 'in-progress', 'in-review', 'completed'].forEach(status =\u003e {\n        const statusData = tasksByStatus.find(item =\u003e \n          item._id.date === date \u0026\u0026 item._id.status === status\n        );\n        dataPoint[status] = statusData ? statusData.count : 0;\n      });\n      \n      return dataPoint;\n    });\n    \n    // If format is specified, export data\n    if (format === 'pdf') {\n      const pdfBuffer = await generatePDF('Task Completion Report', chartData);\n      \n      res.setHeader('Content-Type', 'application/pdf');\n      res.setHeader('Content-Disposition', 'attachment; filename=task-completion-report.pdf');\n      return res.send(pdfBuffer);\n    }\n    \n    if (format === 'csv') {\n      const csvData = await generateCSV(chartData);\n      \n      res.setHeader('Content-Type', 'text/csv');\n      res.setHeader('Content-Disposition', 'attachment; filename=task-completion-report.csv');\n      return res.send(csvData);\n    }\n    \n    res.status(200).json({\n      success: true,\n      data: chartData\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Get team performance report\nrouter.get('/team-performance', verifyToken, verifyAdminOrEditor, async (req, res, next) =\u003e {\n  try {\n    const { startDate, endDate, format } = req.query;\n    \n    // Parse dates\n    const start = startDate ? new Date(startDate) : new Date(Date.now() - 30 * 24 * 60 * 60 * 1000); // Default to last 30 days\n    const end = endDate ? new Date(endDate) : new Date();\n    \n    // Set end date to end of day\n    end.setHours(23, 59, 59, 999);\n    \n    // Aggregate tasks by assignee\n    const tasksByAssignee = await Task.aggregate([\n      {\n        $match: {\n          assignee: { $exists: true, $ne: null },\n          updatedAt: { $gte: start, $lte: end }\n        }\n      },\n      {\n        $group: {\n          _id: {\n            assignee: '$assignee',\n            status: '$status'\n          },\n          count: { $sum: 1 }\n        }\n      }\n    ]);\n    \n    // Get user details\n    const userIds = [...new Set(tasksByAssignee.map(item =\u003e item._id.assignee))];\n    const users = await User.find({ _id: { $in: userIds } }, 'name email avatar');\n    \n    // Transform data for chart\n    const chartData = users.map(user =\u003e {\n      const userData = {\n        name: user.name,\n        email: user.email,\n        avatar: user.avatar\n      };\n      \n      ['to-do', 'in-progress', 'in-review', 'completed'].forEach(status =\u003e {\n        const statusData = tasksByAssignee.find(item =\u003e \n          item._id.assignee.toString() === user._id.toString() \u0026\u0026 \n          item._id.status === status\n        );\n        userData[status] = statusData ? statusData.count : 0;\n      });\n      \n      // Calculate total tasks\n      userData.total = Object.values(userData)\n        .filter(value =\u003e typeof value === 'number')\n        .reduce((sum, value) =\u003e sum + value, 0);\n      \n      // Calculate completion rate\n      userData.completionRate = userData.total \u003e 0 \n        ? Math.round((userData.completed / userData.total) * 100) \n        : 0;\n      \n      return userData;\n    });\n    \n    // Sort by completion rate\n    chartData.sort((a, b) =\u003e b.completionRate - a.completionRate);\n    \n    // If format is specified, export data\n    if (format === 'pdf') {\n      const pdfBuffer = await generatePDF('Team Performance Report', chartData);\n      \n      res.setHeader('Content-Type', 'application/pdf');\n      res.setHeader('Content-Disposition', 'attachment; filename=team-performance-report.pdf');\n      return res.send(pdfBuffer);\n    }\n    \n    if (format === 'csv') {\n      const csvData = await generateCSV(chartData);\n      \n      res.setHeader('Content-Type', 'text/csv');\n      res.setHeader('Content-Disposition', 'attachment; filename=team-performance-report.csv');\n      return res.send(csvData);\n    }\n    \n    res.status(200).json({\n      success: true,\n      data: chartData\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Get priority distribution report\nrouter.get('/priority-distribution', verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { format } = req.query;\n    \n    // Aggregate tasks by priority\n    const tasksByPriority = await Task.aggregate([\n      {\n        $group: {\n          _id: '$priority',\n          count: { $sum: 1 }\n        }\n      }\n    ]);\n    \n    // Transform data for chart\n    const chartData = tasksByPriority.map(item =\u003e ({\n      priority: item._id,\n      count: item.count\n    }));\n    \n    // If format is specified, export data\n    if (format === 'pdf') {\n      const pdfBuffer = await generatePDF('Priority Distribution Report', chartData);\n      \n      res.setHeader('Content-Type', 'application/pdf');\n      res.setHeader('Content-Disposition', 'attachment; filename=priority-distribution-report.pdf');\n      return res.send(pdfBuffer);\n    }\n    \n    if (format === 'csv') {\n      const csvData = await generateCSV(chartData);\n      \n      res.setHeader('Content-Type', 'text/csv');\n      res.setHeader('Content-Disposition', 'attachment; filename=priority-distribution-report.csv');\n      return res.send(csvData);\n    }\n    \n    res.status(200).json({\n      success: true,\n      data: chartData\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Get overdue tasks report\nrouter.get('/overdue-tasks', verifyToken, verifyAdminOrEditor, async (req, res, next) =\u003e {\n  try {\n    const { format } = req.query;\n    \n    // Get current date\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    \n    // Find overdue tasks\n    const overdueTasks = await Task.find({\n      dueDate: { $lt: today },\n      status: { $ne: 'completed' }\n    })\n    .populate('assignee', 'name email avatar')\n    .populate('creator', 'name email avatar')\n    .sort({ dueDate: 1 });\n    \n    // Transform data for export\n    const reportData = overdueTasks.map(task =\u003e ({\n      id: task._id,\n      title: task.title,\n      priority: task.priority,\n      status: task.status,\n      dueDate: task.dueDate ? task.dueDate.toLocaleDateString() : 'Not set',\n      assignee: task.assignee ? task.assignee.name : 'Unassigned',\n      creator: task.creator ? task.creator.name : 'Unknown',\n      daysOverdue: Math.ceil((today - new Date(task.dueDate)) / (1000 * 60 * 60 * 24))\n    }));\n    \n    // If format is specified, export data\n    if (format === 'pdf') {\n      const pdfBuffer = await generatePDF('Overdue Tasks Report', reportData);\n      \n      res.setHeader('Content-Type', 'application/pdf');\n      res.setHeader('Content-Disposition', 'attachment; filename=overdue-tasks-report.pdf');\n      return res.send(pdfBuffer);\n    }\n    \n    if (format === 'csv') {\n      const csvData = await generateCSV(reportData);\n      \n      res.setHeader('Content-Type', 'text/csv');\n      res.setHeader('Content-Disposition', 'attachment; filename=overdue-tasks-report.csv');\n      return res.send(csvData);\n    }\n    \n    res.status(200).json({\n      success: true,\n      count: reportData.length,\n      data: reportData\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\nexport default router;\n[V0_FILE]js:file=\"routes/notifications.js\"\nimport express from 'express';\nimport Notification from '../models/Notification.js';\nimport { verifyToken } from '../middleware/auth.js';\nimport { createError } from '../utils/error.js';\n\nconst router = express.Router();\n\n// Get user notifications\nrouter.get('/', verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { read, page = 1, limit = 10 } = req.query;\n    \n    // Build query\n    const query = { recipient: req.user._id };\n    \n    // Filter by read status\n    if (read === 'true') {\n      query.read = true;\n    } else if (read === 'false') {\n      query.read = false;\n    }\n    \n    // Count total notifications\n    const total = await Notification.countDocuments(query);\n    \n    // Fetch notifications with pagination\n    const notifications = await Notification.find(query)\n      .populate('sender', 'name email avatar')\n      .populate('relatedTask', 'title')\n      .sort({ createdAt: -1 })\n      .skip((page - 1) * limit)\n      .limit(parseInt(limit));\n    \n    res.status(200).json({\n      success: true,\n      count: notifications.length,\n      total,\n      totalPages: Math.ceil(total / limit),\n      currentPage: parseInt(page),\n      unreadCount: await Notification.countDocuments({ recipient: req.user._id, read: false }),\n      notifications\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Mark notification as read\nrouter.put('/:id/read', verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Find notification\n    const notification = await Notification.findById(req.params.id);\n    if (!notification) {\n      return next(createError(404, 'Notification not found'));\n    }\n    \n    // Check if user is the recipient\n    if (notification.recipient.toString() !== req.user._id.toString()) {\n      return next(createError(403, 'You are not authorized to update this notification'));\n    }\n    \n    // Mark as read\n    notification.read = true;\n    \n    // Save notification\n    await notification.save();\n    \n    res.status(200).json({\n      success: true,\n      message: 'Notification marked as read'\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Mark all notifications as read\nrouter.put('/read-all', verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Update all unread notifications for the user\n    await Notification.updateMany(\n      { recipient: req.user._id, read: false },\n      { $set: { read: true } }\n    );\n    \n    res.status(200).json({\n      success: true,\n      message: 'All notifications marked as read'\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Delete notification\nrouter.delete('/:id', verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Find notification\n    const notification = await Notification.findById(req.params.id);\n    if (!notification) {\n      return next(createError(404, 'Notification not found'));\n    }\n    \n    // Check if user is the recipient\n    if (notification.recipient.toString() !== req.user._id.toString()) {\n      return next(createError(403, 'You are not authorized to delete this notification'));\n    }\n    \n    // Delete notification\n    await Notification.findByIdAndDelete(req.params.id);\n    \n    res.status(200).json({\n      success: true,\n      message: 'Notification deleted successfully'\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Delete all notifications\nrouter.delete('/', verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Delete all notifications for the user\n    await Notification.deleteMany({ recipient: req.user._id });\n    \n    res.status(200).json({\n      success: true,\n      message: 'All notifications deleted successfully'\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\nexport default router;\n[V0_FILE]js:file=\"socket/socketHandlers.js\"\nimport jwt from 'jsonwebtoken';\nimport User from '../models/User.js';\n\nconst setupSocketHandlers = (io) =\u003e {\n  // Middleware for authentication\n  io.use(async (socket, next) =\u003e {\n    try {\n      const token = socket.handshake.auth.token || \n                   (socket.handshake.headers.authorization \u0026\u0026 \n                    socket.handshake.headers.authorization.startsWith('Bearer') \n                    ? socket.handshake.headers.authorization.split(' ')[1] : null);\n      \n      if (!token) {\n        return next(new Error('Authentication error'));\n      }\n      \n      // Verify token\n      const decoded = jwt.verify(token, process.env.JWT_SECRET);\n      \n      // Find user\n      const user = await User.findById(decoded.id);\n      if (!user || user.status !== 'active') {\n        return next(new Error('Authentication error'));\n      }\n      \n      // Attach user to socket\n      socket.user = user;\n      next();\n    } catch (err) {\n      next(new Error('Authentication error'));\n    }\n  });\n  \n  io.on('connection', (socket) =\u003e {\n    console.log(`User connected: ${socket.user._id}`);\n    \n    // Join user's room for private notifications\n    socket.join(socket.user._id.toString());\n    \n    // Handle task updates\n    socket.on('task:update', (taskId) =\u003e {\n      // Broadcast to all clients except sender\n      socket.broadcast.emit('task:updated', taskId);\n    });\n    \n    // Handle new comments\n    socket.on('comment:new', (taskId) =\u003e {\n      // Broadcast to all clients except sender\n      socket.broadcast.emit('comment:added', taskId);\n    });\n    \n    // Handle user typing in comments\n    socket.on('typing', (data) =\u003e {\n      // Broadcast to all clients except sender\n      socket.broadcast.emit('user:typing', {\n        taskId: data.taskId,\n        user: {\n          id: socket.user._id,\n          name: socket.user.name\n        }\n      });\n    });\n    \n    // Handle disconnection\n    socket.on('disconnect', () =\u003e {\n      console.log(`User disconnected: ${socket.user._id}`);\n    });\n  });\n};\n\nexport default setupSocketHandlers;\n[V0_FILE]js:file=\"utils/error.js\"\n// Create custom error with status code\nexport const createError = (statusCode, message) =\u003e {\n  const error = new Error(message);\n  error.statusCode = statusCode;\n  return error;\n};\n[V0_FILE]js:file=\"utils/email.js\"\nimport nodemailer from 'nodemailer';\n\n// Configure email transporter\nconst transporter = nodemailer.createTransport({\n  host: process.env.EMAIL_HOST || 'smtp.example.com',\n  port: process.env.EMAIL_PORT || 587,\n  secure: process.env.EMAIL_SECURE === 'true',\n  auth: {\n    user: process.env.EMAIL_USER || 'user@example.com',\n    pass: process.env.EMAIL_PASS || 'password'\n  }\n});\n\n// Send email\nexport const sendEmail = async ({ to, subject, text, html }) =\u003e {\n  try {\n    // Skip sending emails in development mode if no email config\n    if (process.env.NODE_ENV === 'development' \u0026\u0026 !process.env.EMAIL_HOST) {\n      console.log('Email sending skipped in development mode');\n      console.log({ to, subject, text });\n      return;\n    }\n    \n    const mailOptions = {\n      from: process.env.EMAIL_FROM || 'Task Management \u003cnoreply@taskmanagement.com\u003e',\n      to,\n      subject,\n      text,\n      html\n    };\n    \n    const info = await transporter.sendMail(mailOptions);\n    console.log('Email sent:', info.messageId);\n    return info;\n  } catch (error) {\n    console.error('Error sending email:', error);\n    throw error;\n  }\n};\n\n// Send deadline reminder emails\nexport const sendDeadlineReminders = async (tasks, users) =\u003e {\n  for (const task of tasks) {\n    // Get assignee\n    const assignee = users.find(user =\u003e \n      user._id.toString() === task.assignee.toString() \u0026\u0026\n      user.notificationPreferences.emailNotifications \u0026\u0026\n      user.notificationPreferences.deadlineReminder\n    );\n    \n    if (assignee) {\n      await sendEmail({\n        to: assignee.email,\n        subject: 'Task Deadline Reminder',\n        text: `Hello ${assignee.name},\\n\\nThis is a reminder that the task \"${task.title}\" is due soon (${new Date(task.dueDate).toLocaleDateString()}).\\n\\nBest regards,\\nThe Task Management Team`\n      });\n    }\n  }\n};\n[V0_FILE]js:file=\"utils/export.js\"\nimport PDFDocument from 'pdfkit';\nimport { Parser } from 'json2csv';\n\n// Generate PDF report\nexport const generatePDF = (title, data) =\u003e {\n  return new Promise((resolve, reject) =\u003e {\n    try {\n      // Create PDF document\n      const doc = new PDFDocument();\n      const buffers = [];\n      \n      // Collect PDF data chunks\n      doc.on('data', buffer =\u003e buffers.push(buffer));\n      doc.on('end', () =\u003e resolve(Buffer.concat(buffers)));\n      \n      // Add title\n      doc.fontSize(20).text(title, { align: 'center' });\n      doc.moveDown();\n      \n      // Add date\n      doc.fontSize(12).text(`Generated on: ${new Date().toLocaleDateString()}`, { align: 'center' });\n      doc.moveDown(2);\n      \n      // Add data table\n      if (data.length \u003e 0) {\n        // Get column headers\n        const headers = Object.keys(data[0]);\n        \n        // Calculate column widths\n        const columnWidth = 500 / headers.length;\n        \n        // Draw header row\n        doc.fontSize(10).font('Helvetica-Bold');\n        headers.forEach((header, i) =\u003e {\n          const x = 50 + (i * columnWidth);\n          doc.text(\n            header.charAt(0).toUpperCase() + header.slice(1).replace(/([A-Z])/g, ' $1'),\n            x,\n            doc.y,\n            { width: columnWidth, align: 'left' }\n          );\n        });\n        \n        doc.moveDown();\n        doc.font('Helvetica');\n        \n        // Draw data rows\n        data.forEach(row =\u003e {\n          const y = doc.y;\n          \n          headers.forEach((header, i) =\u003e {\n            const x = 50 + (i * columnWidth);\n            doc.text(\n              row[header] !== undefined ? row[header].toString() : '',\n              x,\n              y,\n              { width: columnWidth, align: 'left' }\n            );\n          });\n          \n          doc.moveDown();\n        });\n      } else {\n        doc.text('No data available', { align: 'center' });\n      }\n      \n      // Finalize PDF\n      doc.end();\n    } catch (err) {\n      reject(err);\n    }\n  });\n};\n\n// Generate CSV report\nexport const generateCSV = (data) =\u003e {\n  return new Promise((resolve, reject) =\u003e {\n    try {\n      if (data.length === 0) {\n        return resolve('No data available');\n      }\n      \n      // Configure CSV parser\n      const json2csvParser = new Parser();\n      \n      // Convert JSON to CSV\n      const csv = json2csvParser.parse(data);\n      \n      resolve(csv);\n    } catch (err) {\n      reject(err);\n    }\n  });\n};\n[V0_FILE]js:file=\"utils/scheduler.js\"\nimport cron from 'node-cron';\nimport Task from '../models/Task.js';\nimport User from '../models/User.js';\nimport Notification from '../models/Notification.js';\nimport { sendDeadlineReminders } from './email.js';\n\n// Schedule deadline reminders\nexport const scheduleDeadlineReminders = () =\u003e {\n  // Run every day at 9:00 AM\n  cron.schedule('0 9 * * *', async () =\u003e {\n    try {\n      console.log('Running deadline reminder scheduler...');\n      \n      // Get current date\n      const today = new Date();\n      today.setHours(0, 0, 0, 0);\n      \n      // Get tomorrow's date\n      const tomorrow = new Date(today);\n      tomorrow.setDate(tomorrow.getDate() + 1);\n      \n      // Get tasks due tomorrow\n      const tasks = await Task.find({\n        dueDate: {\n          $gte: tomorrow,\n          $lt: new Date(tomorrow.getTime() + 24 * 60 * 60 * 1000)\n        },\n        status: { $ne: 'completed' }\n      }).populate('assignee');\n      \n      if (tasks.length === 0) {\n        console.log('No tasks due tomorrow');\n        return;\n      }\n      \n      console.log(`Found ${tasks.length} tasks due tomorrow`);\n      \n      // Get all users\n      const users = await User.find({\n        _id: { $in: tasks.map(task =\u003e task.assignee) }\n      });\n      \n      // Create notifications\n      const notifications = tasks.map(task =\u003e ({\n        recipient: task.assignee,\n        type: 'deadline_reminder',\n        title: 'Task Due Tomorrow',\n        message: `The task \"${task.title}\" is due tomorrow`,\n        relatedTask: task._id\n      }));\n      \n      // Save notifications\n      await Notification.insertMany(notifications);\n      \n      // Send email reminders\n      await sendDeadlineReminders(tasks, users);\n      \n      console.log('Deadline reminders sent successfully');\n    } catch (err) {\n      console.error('Error sending deadline reminders:', err);\n    }\n  });\n};\n\n// Schedule weekly digest emails\nexport const scheduleWeeklyDigest = () =\u003e {\n  // Run every Monday at 8:00 AM\n  cron.schedule('0 8 * * 1', async () =\u003e {\n    try {\n      console.log('Running weekly digest scheduler...');\n      \n      // Get users who have enabled weekly digest\n      const users = await User.find({\n        'notificationPreferences.weeklyDigest': true,\n        'notificationPreferences.emailNotifications': true\n      });\n      \n      if (users.length === 0) {\n        console.log('No users have enabled weekly digest');\n        return;\n      }\n      \n      console.log(`Sending weekly digest to ${users.length} users`);\n      \n      // Get date range for the past week\n      const endDate = new Date();\n      const startDate = new Date();\n      startDate.setDate(startDate.getDate() - 7);\n      \n      // Process each user\n      for (const user of users) {\n        // Get tasks assigned to user\n        const assignedTasks = await Task.find({\n          assignee: user._id,\n          updatedAt: { $gte: startDate, $lte: endDate }\n        });\n        \n        // Get tasks created by user\n        const createdTasks = await Task.find({\n          creator: user._id,\n          updatedAt: { $gte: startDate, $lte: endDate }\n        });\n        \n        // Count tasks by status\n        const tasksByStatus = {\n          completed: assignedTasks.filter(task =\u003e task.status === 'completed').length,\n          inProgress: assignedTasks.filter(task =\u003e task.status === 'in-progress').length,\n          inReview: assignedTasks.filter(task =\u003e task.status === 'in-review').length,\n          toDo: assignedTasks.filter(task =\u003e task.status === 'to-do').length\n        };\n        \n        // Get overdue tasks\n        const today = new Date();\n        today.setHours(0, 0, 0, 0);\n        \n        const overdueTasks = await Task.find({\n          assignee: user._id,\n          dueDate: { $lt: today },\n          status: { $ne: 'completed' }\n        });\n        \n        // Send digest email\n        await sendEmail({\n          to: user.email,\n          subject: 'Your Weekly Task Digest',\n          text: `Hello ${user.name},\\n\\nHere's your weekly task summary:\\n\\nTasks Assigned to You: ${assignedTasks.length}\\n- Completed: ${tasksByStatus.completed}\\n- In Progress: ${tasksByStatus.inProgress}\\n- In Review: ${tasksByStatus.inReview}\\n- To Do: ${tasksByStatus.toDo}\\n\\nTasks Created by You: ${createdTasks.length}\\n\\nOverdue Tasks: ${overdueTasks.length}\\n\\nBest regards,\\nThe Task Management Team`\n        });\n      }\n      \n      console.log('Weekly digest emails sent successfully');\n    } catch (err) {\n      console.error('Error sending weekly digest emails:', err);\n    }\n  });\n};\n[V0_FILE]js:file=\"utils/scheduler.js\" isFixed\nimport cron from 'node-cron';\nimport Task from '../models/Task.js';\nimport User from '../models/User.js';\nimport Notification from '../models/Notification.js';\nimport { sendDeadlineReminders } from './email.js';\nimport { sendEmail } from './email.js'; // Import sendEmail\n\n// Schedule deadline reminders\nexport const scheduleDeadlineReminders = () =\u003e {\n  // Run every day at 9:00 AM\n  cron.schedule('0 9 * * *', async () =\u003e {\n    try {\n      console.log('Running deadline reminder scheduler...');\n      \n      // Get current date\n      const today = new Date();\n      today.setHours(0, 0, 0, 0);\n      \n      // Get tomorrow's date\n      const tomorrow = new Date(today);\n      tomorrow.setDate(tomorrow.getDate() + 1);\n      \n      // Get tasks due tomorrow\n      const tasks = await Task.find({\n        dueDate: {\n          $gte: tomorrow,\n          $lt: new Date(tomorrow.getTime() + 24 * 60 * 60 * 1000)\n        },\n        status: { $ne: 'completed' }\n      }).populate('assignee');\n      \n      if (tasks.length === 0) {\n        console.log('No tasks due tomorrow');\n        return;\n      }\n      \n      console.log(`Found ${tasks.length} tasks due tomorrow`);\n      \n      // Get all users\n      const users = await User.find({\n        _id: { $in: tasks.map(task =\u003e task.assignee) }\n      });\n      \n      // Create notifications\n      const notifications = tasks.map(task =\u003e ({\n        recipient: task.assignee,\n        type: 'deadline_reminder',\n        title: 'Task Due Tomorrow',\n        message: `The task \"${task.title}\" is due tomorrow`,\n        relatedTask: task._id\n      }));\n      \n      // Save notifications\n      await Notification.insertMany(notifications);\n      \n      // Send email reminders\n      await sendDeadlineReminders(tasks, users);\n      \n      console.log('Deadline reminders sent successfully');\n    } catch (err) {\n      console.error('Error sending deadline reminders:', err);\n    }\n  });\n};\n\n// Schedule weekly digest emails\nexport const scheduleWeeklyDigest = () =\u003e {\n  // Run every Monday at 8:00 AM\n  cron.schedule('0 8 * * 1', async () =\u003e {\n    try {\n      console.log('Running weekly digest scheduler...');\n      \n      // Get users who have enabled weekly digest\n      const users = await User.find({\n        'notificationPreferences.weeklyDigest': true,\n        'notificationPreferences.emailNotifications': true\n      });\n      \n      if (users.length === 0) {\n        console.log('No users have enabled weekly digest');\n        return;\n      }\n      \n      console.log(`Sending weekly digest to ${users.length} users`);\n      \n      // Get date range for the past week\n      const endDate = new Date();\n      const startDate = new Date();\n      startDate.setDate(startDate.getDate() - 7);\n      \n      // Process each user\n      for (const user of users) {\n        // Get tasks assigned to user\n        const assignedTasks = await Task.find({\n          assignee: user._id,\n          updatedAt: { $gte: startDate, $lte: endDate }\n        });\n        \n        // Get tasks created by user\n        const createdTasks = await Task.find({\n          creator: user._id,\n          updatedAt: { $gte: startDate, $lte: endDate }\n        });\n        \n        // Count tasks by status\n        const tasksByStatus = {\n          completed: assignedTasks.filter(task =\u003e task.status === 'completed').length,\n          inProgress: assignedTasks.filter(task =\u003e task.status === 'in-progress').length,\n          inReview: assignedTasks.filter(task =\u003e task.status === 'in-review').length,\n          toDo: assignedTasks.filter(task =\u003e task.status === 'to-do').length\n        };\n        \n        // Get overdue tasks\n        const today = new Date();\n        today.setHours(0, 0, 0, 0);\n        \n        const overdueTasks = await Task.find({\n          assignee: user._id,\n          dueDate: { $lt: today },\n          status: { $ne: 'completed' }\n        });\n        \n        // Send digest email\n        await sendEmail({\n          to: user.email,\n          subject: 'Your Weekly Task Digest',\n          text: `Hello ${user.name},\\n\\nHere's your weekly task summary:\\n\\nTasks Assigned to You: ${assignedTasks.length}\\n- Completed: ${tasksByStatus.completed}\\n- In Progress: ${tasksByStatus.inProgress}\\n- In Review: ${tasksByStatus.inReview}\\n- To Do: ${tasksByStatus.toDo}\\n\\nTasks Created by You: ${createdTasks.length}\\n\\nOverdue Tasks: ${overdueTasks.length}\\n\\nBest regards,\\nThe Task Management Team`\n        });\n      }\n      \n      console.log('Weekly digest emails sent successfully');\n    } catch (err) {\n      console.error('Error sending weekly digest emails:', err);\n    }\n  });\n};\n[V0_FILE]js:file=\"package.json\"\n{\n  \"name\": \"task-management-backend\",\n  \"version\": \"1.0.0\",\n  \"description\": \"Backend for Task Management Application\",\n  \"main\": \"server.js\",\n  \"type\": \"module\",\n  \"scripts\": {\n    \"start\": \"node server.js\",\n    \"dev\": \"nodemon server.js\",\n    \"test\": \"jest\"\n  },\n  \"dependencies\": {\n    \"bcrypt\": \"^5.1.1\",\n    \"cookie-parser\": \"^1.4.6\",\n    \"cors\": \"^2.8.5\",\n    \"dotenv\": \"^16.3.1\",\n    \"express\": \"^4.18.2\",\n    \"jose\": \"^5.1.1\",\n    \"json2csv\": \"^6.0.0-alpha.2\",\n    \"jsonwebtoken\": \"^9.0.2\",\n    \"mongoose\": \"^8.0.1\",\n    \"multer\": \"^1.4.5-lts.1\",\n    \"node-cron\": \"^3.0.3\",\n    \"nodemailer\": \"^6.9.7\",\n    \"pdfkit\": \"^0.14.0\",\n    \"socket.io\": \"^4.7.2\"\n  },\n  \"devDependencies\": {\n    \"jest\": \"^29.7.0\",\n    \"nodemon\": \"^3.0.1\",\n    \"supertest\": \"^6.3.3\"\n  },\n  \"engines\": {\n    \"node\": \"\u003e=18.0.0\"\n  }\n}\n[V0_FILE]js:file=\"package.json\" isFixed\n{\n  \"name\": \"task-management-backend\",\n  \"version\": \"1.0.0\",\n  \"description\": \"Backend for Task Management Application\",\n  \"main\": \"server.js\",\n  \"type\": \"module\",\n  \"private\": true,\n  \"scripts\": {\n    \"start\": \"node server.js\",\n    \"dev\": \"nodemon server.js\",\n    \"test\": \"jest\"\n  },\n  \"dependencies\": {\n    \"bcrypt\": \"^5.1.1\",\n    \"cookie-parser\": \"^1.4.6\",\n    \"cors\": \"^2.8.5\",\n    \"dotenv\": \"^16.3.1\",\n    \"express\": \"^4.18.2\",\n    \"jose\": \"^5.1.1\",\n    \"json2csv\": \"^6.0.0-alpha.2\",\n    \"jsonwebtoken\": \"^9.0.2\",\n    \"mongoose\": \"^8.0.1\",\n    \"multer\": \"^1.4.5-lts.1\",\n    \"node-cron\": \"^3.0.3\",\n    \"nodemailer\": \"^6.9.7\",\n    \"pdfkit\": \"^0.14.0\",\n    \"socket.io\": \"^4.7.2\",\n    \"@hookform/resolvers\": \"^3.9.1\",\n    \"@radix-ui/react-accordion\": \"^1.2.2\",\n    \"@radix-ui/react-alert-dialog\": \"^1.1.4\",\n    \"@radix-ui/react-aspect-ratio\": \"^1.1.1\",\n    \"@radix-ui/react-avatar\": \"^1.1.2\",\n    \"@radix-ui/react-checkbox\": \"^1.1.3\",\n    \"@radix-ui/react-collapsible\": \"^1.1.2\",\n    \"@radix-ui/react-context-menu\": \"^2.2.4\",\n    \"@radix-ui/react-dialog\": \"^1.1.4\",\n    \"@radix-ui/react-dropdown-menu\": \"^2.1.4\",\n    \"@radix-ui/react-hover-card\": \"^1.1.4\",\n    \"@radix-ui/react-label\": \"^2.1.1\",\n    \"@radix-ui/react-menubar\": \"^1.1.4\",\n    \"@radix-ui/react-navigation-menu\": \"^1.2.3\",\n    \"@radix-ui/react-popover\": \"^1.1.4\",\n    \"@radix-ui/react-progress\": \"^1.1.1\",\n    \"@radix-ui/react-radio-group\": \"^1.2.2\",\n    \"@radix-ui/react-scroll-area\": \"^1.2.2\",\n    \"@radix-ui/react-select\": \"^2.1.4\",\n    \"@radix-ui/react-separator\": \"^1.1.1\",\n    \"@radix-ui/react-slider\": \"^1.2.2\",\n    \"@radix-ui/react-slot\": \"^1.1.1\",\n    \"@radix-ui/react-switch\": \"^1.1.2\",\n    \"@radix-ui/react-tabs\": \"^1.1.2\",\n    \"@radix-ui/react-toast\": \"^1.2.4\",\n    \"@radix-ui/react-toggle\": \"^1.1.1\",\n    \"@radix-ui/react-toggle-group\": \"^1.1.1\",\n    \"@radix-ui/react-tooltip\": \"^1.1.6\",\n    \"autoprefixer\": \"^10.4.20\",\n    \"class-variance-authority\": \"^0.7.1\",\n    \"clsx\": \"^2.1.1\",\n    \"cmdk\": \"1.0.4\",\n    \"date-fns\": \"4.1.0\",\n    \"embla-carousel-react\": \"8.5.1\",\n    \"input-otp\": \"1.4.1\",\n    \"lucide-react\": \"^0.454.0\",\n    \"next\": \"14.2.16\",\n    \"next-themes\": \"^0.4.4\",\n    \"react\": \"^19\",\n    \"react-day-picker\": \"8.10.1\",\n    \"react-dom\": \"^19\",\n    \"react-hook-form\": \"^7.54.1\",\n    \"react-resizable-panels\": \"^2.1.7\",\n    \"recharts\": \"2.15.0\",\n    \"sonner\": \"^1.7.1\",\n    \"tailwind-merge\": \"^2.5.5\",\n    \"tailwindcss-animate\": \"^1.0.7\",\n    \"vaul\": \"^0.9.6\",\n    \"zod\": \"^3.24.1\"\n  },\n  \"devDependencies\": {\n    \"jest\": \"^29.7.0\",\n    \"nodemon\": \"^3.0.1\",\n    \"supertest\": \"^6.3.3\",\n    \"@types/node\": \"^22\",\n    \"@types/react\": \"^18\",\n    \"@types/react-dom\": \"^18\",\n    \"postcss\": \"^8\",\n    \"tailwindcss\": \"^3.4.17\",\n    \"typescript\": \"^5\"\n  },\n  \"engines\": {\n    \"node\": \"\u003e=18.0.0\"\n  }\n}\n[V0_FILE]js:file=\".env.example\"\n# Server Configuration\nPORT=5000\nNODE_ENV=development\nFRONTEND_URL=http://localhost:3000\n\n# MongoDB Configuration\nMONGODB_URI=mongodb://localhost:27017/task-management\n\n# JWT Configuration\nJWT_SECRET=your_jwt_secret_key\n\n# Email Configuration\nEMAIL_HOST=smtp.example.com\nEMAIL_PORT=587\nEMAIL_SECURE=false\nEMAIL_USER=user@example.com\nEMAIL_PASS=password\nEMAIL_FROM=Task Management \u003cnoreply@taskmanagement.com\u003e\n\n# File Upload Configuration\nUPLOAD_PATH=uploads"])</script><script>self.__next_f.push([1,"9d:Td43,"])</script><script>self.__next_f.push([1,"// This is a simplified demo of some backend functionality\n\n// Mock database for demonstration\nconst mockTasks = [\n  {\n    id: \"task-1\",\n    title: \"Create new landing page\",\n    status: \"in-progress\",\n    priority: \"high\",\n    assignee: \"Emma Wilson\",\n    dueDate: \"2023-12-15\"\n  },\n  {\n    id: \"task-2\",\n    title: \"Update user authentication flow\",\n    status: \"to-do\",\n    priority: \"medium\",\n    assignee: \"Jackson Lee\",\n    dueDate: \"2023-12-20\"\n  },\n  {\n    id: \"task-3\",\n    title: \"Fix mobile responsiveness issues\",\n    status: \"in-review\",\n    priority: \"high\",\n    assignee: \"Liam Johnson\",\n    dueDate: \"2023-12-05\"\n  }\n];\n\n// Simulate JWT verification\nfunction verifyToken(token) {\n  // In a real app, this would verify the JWT signature\n  console.log(\"Verifying token:\", token);\n  return { id: \"user-1\", role: \"admin\" };\n}\n\n// Simulate task filtering API endpoint\nfunction getFilteredTasks(filters, user) {\n  console.log(`User ${user.id} with role ${user.role} requesting tasks`);\n  console.log(\"Applying filters:\", filters);\n  \n  let filteredTasks = [...mockTasks];\n  \n  // Apply status filter\n  if (filters.status \u0026\u0026 filters.status !== 'all') {\n    filteredTasks = filteredTasks.filter(task =\u003e task.status === filters.status);\n  }\n  \n  // Apply priority filter\n  if (filters.priority \u0026\u0026 filters.priority !== 'all') {\n    filteredTasks = filteredTasks.filter(task =\u003e task.priority === filters.priority);\n  }\n  \n  // Apply assignee filter\n  if (filters.assignee) {\n    filteredTasks = filteredTasks.filter(task =\u003e task.assignee === filters.assignee);\n  }\n  \n  console.log(`Found ${filteredTasks.length} tasks matching filters`);\n  return filteredTasks;\n}\n\n// Simulate creating a new task\nfunction createTask(taskData, user) {\n  console.log(`User ${user.id} creating new task`);\n  \n  // Check authorization\n  if (user.role !== 'admin' \u0026\u0026 user.role !== 'editor') {\n    throw new Error('Unauthorized: Only admins and editors can create tasks');\n  }\n  \n  // Validate required fields\n  if (!taskData.title) {\n    throw new Error('Task title is required');\n  }\n  \n  // Create new task\n  const newTask = {\n    id: `task-${mockTasks.length + 1}`,\n    title: taskData.title,\n    status: taskData.status || 'to-do',\n    priority: taskData.priority || 'medium',\n    assignee: taskData.assignee,\n    dueDate: taskData.dueDate,\n    createdBy: user.id,\n    createdAt: new Date().toISOString()\n  };\n  \n  console.log(\"Created new task:\", newTask);\n  return newTask;\n}\n\n// Demo execution\nconsole.log(\"=== Task Management API Demo ===\\n\");\n\n// Simulate authentication\nconst token = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\";\nconst user = verifyToken(token);\n\n// Demo 1: Get filtered tasks\nconsole.log(\"DEMO 1: Filtering tasks\");\nconst filters = { status: 'in-progress', priority: 'high' };\nconst filteredTasks = getFilteredTasks(filters, user);\nconsole.log(\"Filtered tasks:\", JSON.stringify(filteredTasks, null, 2));\nconsole.log(\"\\n---\\n\");\n\n// Demo 2: Create a new task\nconsole.log(\"DEMO 2: Creating a new task\");\ntry {\n  const newTaskData = {\n    title: \"Implement notification system\",\n    status: \"to-do\",\n    priority: \"high\",\n    assignee: \"Sophia Chen\",\n    dueDate: \"2023-12-25\"\n  };\n  \n  const newTask = createTask(newTaskData, user);\n  console.log(\"Task created successfully:\", JSON.stringify(newTask, null, 2));\n} catch (error) {\n  console.error(\"Error creating task:\", error.message);\n}"])</script><script>self.__next_f.push([1,"9e:Td43,"])</script><script>self.__next_f.push([1,"// This is a simplified demo of some backend functionality\n\n// Mock database for demonstration\nconst mockTasks = [\n  {\n    id: \"task-1\",\n    title: \"Create new landing page\",\n    status: \"in-progress\",\n    priority: \"high\",\n    assignee: \"Emma Wilson\",\n    dueDate: \"2023-12-15\"\n  },\n  {\n    id: \"task-2\",\n    title: \"Update user authentication flow\",\n    status: \"to-do\",\n    priority: \"medium\",\n    assignee: \"Jackson Lee\",\n    dueDate: \"2023-12-20\"\n  },\n  {\n    id: \"task-3\",\n    title: \"Fix mobile responsiveness issues\",\n    status: \"in-review\",\n    priority: \"high\",\n    assignee: \"Liam Johnson\",\n    dueDate: \"2023-12-05\"\n  }\n];\n\n// Simulate JWT verification\nfunction verifyToken(token) {\n  // In a real app, this would verify the JWT signature\n  console.log(\"Verifying token:\", token);\n  return { id: \"user-1\", role: \"admin\" };\n}\n\n// Simulate task filtering API endpoint\nfunction getFilteredTasks(filters, user) {\n  console.log(`User ${user.id} with role ${user.role} requesting tasks`);\n  console.log(\"Applying filters:\", filters);\n  \n  let filteredTasks = [...mockTasks];\n  \n  // Apply status filter\n  if (filters.status \u0026\u0026 filters.status !== 'all') {\n    filteredTasks = filteredTasks.filter(task =\u003e task.status === filters.status);\n  }\n  \n  // Apply priority filter\n  if (filters.priority \u0026\u0026 filters.priority !== 'all') {\n    filteredTasks = filteredTasks.filter(task =\u003e task.priority === filters.priority);\n  }\n  \n  // Apply assignee filter\n  if (filters.assignee) {\n    filteredTasks = filteredTasks.filter(task =\u003e task.assignee === filters.assignee);\n  }\n  \n  console.log(`Found ${filteredTasks.length} tasks matching filters`);\n  return filteredTasks;\n}\n\n// Simulate creating a new task\nfunction createTask(taskData, user) {\n  console.log(`User ${user.id} creating new task`);\n  \n  // Check authorization\n  if (user.role !== 'admin' \u0026\u0026 user.role !== 'editor') {\n    throw new Error('Unauthorized: Only admins and editors can create tasks');\n  }\n  \n  // Validate required fields\n  if (!taskData.title) {\n    throw new Error('Task title is required');\n  }\n  \n  // Create new task\n  const newTask = {\n    id: `task-${mockTasks.length + 1}`,\n    title: taskData.title,\n    status: taskData.status || 'to-do',\n    priority: taskData.priority || 'medium',\n    assignee: taskData.assignee,\n    dueDate: taskData.dueDate,\n    createdBy: user.id,\n    createdAt: new Date().toISOString()\n  };\n  \n  console.log(\"Created new task:\", newTask);\n  return newTask;\n}\n\n// Demo execution\nconsole.log(\"=== Task Management API Demo ===\\n\");\n\n// Simulate authentication\nconst token = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\";\nconst user = verifyToken(token);\n\n// Demo 1: Get filtered tasks\nconsole.log(\"DEMO 1: Filtering tasks\");\nconst filters = { status: 'in-progress', priority: 'high' };\nconst filteredTasks = getFilteredTasks(filters, user);\nconsole.log(\"Filtered tasks:\", JSON.stringify(filteredTasks, null, 2));\nconsole.log(\"\\n---\\n\");\n\n// Demo 2: Create a new task\nconsole.log(\"DEMO 2: Creating a new task\");\ntry {\n  const newTaskData = {\n    title: \"Implement notification system\",\n    status: \"to-do\",\n    priority: \"high\",\n    assignee: \"Sophia Chen\",\n    dueDate: \"2023-12-25\"\n  };\n  \n  const newTask = createTask(newTaskData, user);\n  console.log(\"Task created successfully:\", JSON.stringify(newTask, null, 2));\n} catch (error) {\n  console.error(\"Error creating task:\", error.message);\n}"])</script><script>self.__next_f.push([1,"9f:T92d,"])</script><script>self.__next_f.push([1,"import express from \"express\";\nimport cors from \"cors\";\nimport dotenv from \"dotenv\";\nimport mongoose from \"mongoose\";\nimport { createServer } from \"http\";\nimport { Server } from \"socket.io\";\nimport cookieParser from \"cookie-parser\";\nimport path from \"path\";\nimport { fileURLToPath } from \"url\";\n\n// Import routes\nimport authRoutes from \"./routes/auth.js\";\nimport userRoutes from \"./routes/users.js\";\nimport taskRoutes from \"./routes/tasks.js\";\nimport commentRoutes from \"./routes/comments.js\";\nimport reportRoutes from \"./routes/reports.js\";\nimport notificationRoutes from \"./routes/notifications.js\";\n\n// Import socket handler\nimport setupSocketHandlers from \"./socket/socketHandlers.js\";\n\n// Import middleware\nimport { errorHandler } from \"./middleware/errorHandler.js\";\n\n// Configure environment variables\ndotenv.config();\n\n// Create Express app\nconst app = express();\nconst PORT = process.env.PORT || 5000;\n\n// Create HTTP server\nconst httpServer = createServer(app);\n\n// Setup Socket.io\nconst io = new Server(httpServer, {\n  cors: {\n    origin: process.env.FRONTEND_URL || \"http://localhost:3000\",\n    methods: [\"GET\", \"POST\"],\n    credentials: true,\n  },\n});\n\n// Connect to MongoDB\nmongoose\n  .connect(process.env.MONGODB_URI)\n  .then(() =\u003e console.log(\"Connected to MongoDB\"))\n  .catch((err) =\u003e {\n    console.error(\"MongoDB connection error:\", err);\n    process.exit(1);\n  });\n\n// Middleware\napp.use(\n  cors({\n    origin: process.env.FRONTEND_URL || \"http://localhost:3000\",\n    credentials: true,\n  }),\n);\napp.use(express.json());\napp.use(express.urlencoded({ extended: true }));\napp.use(cookieParser());\n\n// Set up socket handlers\nsetupSocketHandlers(io);\n\n// Make io accessible to route handlers\napp.use((req, res, next) =\u003e {\n  req.io = io;\n  next();\n});\n\n// API routes\napp.use(\"/api/auth\", authRoutes);\napp.use(\"/api/users\", userRoutes);\napp.use(\"/api/tasks\", taskRoutes);\napp.use(\"/api/comments\", commentRoutes);\napp.use(\"/api/reports\", reportRoutes);\napp.use(\"/api/notifications\", notificationRoutes);\n\n// Serve uploaded files\nconst __dirname = path.dirname(fileURLToPath(import.meta.url));\napp.use(\"/uploads\", express.static(path.join(__dirname, \"uploads\")));\n\n// Error handling middleware\napp.use(errorHandler);\n\n// Start server\nhttpServer.listen(PORT, () =\u003e {\n  console.log(`Server running on port ${PORT}`);\n});\n\nexport default app;"])</script><script>self.__next_f.push([1,"a0:T92d,"])</script><script>self.__next_f.push([1,"import express from \"express\";\nimport cors from \"cors\";\nimport dotenv from \"dotenv\";\nimport mongoose from \"mongoose\";\nimport { createServer } from \"http\";\nimport { Server } from \"socket.io\";\nimport cookieParser from \"cookie-parser\";\nimport path from \"path\";\nimport { fileURLToPath } from \"url\";\n\n// Import routes\nimport authRoutes from \"./routes/auth.js\";\nimport userRoutes from \"./routes/users.js\";\nimport taskRoutes from \"./routes/tasks.js\";\nimport commentRoutes from \"./routes/comments.js\";\nimport reportRoutes from \"./routes/reports.js\";\nimport notificationRoutes from \"./routes/notifications.js\";\n\n// Import socket handler\nimport setupSocketHandlers from \"./socket/socketHandlers.js\";\n\n// Import middleware\nimport { errorHandler } from \"./middleware/errorHandler.js\";\n\n// Configure environment variables\ndotenv.config();\n\n// Create Express app\nconst app = express();\nconst PORT = process.env.PORT || 5000;\n\n// Create HTTP server\nconst httpServer = createServer(app);\n\n// Setup Socket.io\nconst io = new Server(httpServer, {\n  cors: {\n    origin: process.env.FRONTEND_URL || \"http://localhost:3000\",\n    methods: [\"GET\", \"POST\"],\n    credentials: true,\n  },\n});\n\n// Connect to MongoDB\nmongoose\n  .connect(process.env.MONGODB_URI)\n  .then(() =\u003e console.log(\"Connected to MongoDB\"))\n  .catch((err) =\u003e {\n    console.error(\"MongoDB connection error:\", err);\n    process.exit(1);\n  });\n\n// Middleware\napp.use(\n  cors({\n    origin: process.env.FRONTEND_URL || \"http://localhost:3000\",\n    credentials: true,\n  }),\n);\napp.use(express.json());\napp.use(express.urlencoded({ extended: true }));\napp.use(cookieParser());\n\n// Set up socket handlers\nsetupSocketHandlers(io);\n\n// Make io accessible to route handlers\napp.use((req, res, next) =\u003e {\n  req.io = io;\n  next();\n});\n\n// API routes\napp.use(\"/api/auth\", authRoutes);\napp.use(\"/api/users\", userRoutes);\napp.use(\"/api/tasks\", taskRoutes);\napp.use(\"/api/comments\", commentRoutes);\napp.use(\"/api/reports\", reportRoutes);\napp.use(\"/api/notifications\", notificationRoutes);\n\n// Serve uploaded files\nconst __dirname = path.dirname(fileURLToPath(import.meta.url));\napp.use(\"/uploads\", express.static(path.join(__dirname, \"uploads\")));\n\n// Error handling middleware\napp.use(errorHandler);\n\n// Start server\nhttpServer.listen(PORT, () =\u003e {\n  console.log(`Server running on port ${PORT}`);\n});\n\nexport default app;"])</script><script>self.__next_f.push([1,"a1:Tb1e,"])</script><script>self.__next_f.push([1,"import mongoose from \"mongoose\";\nimport bcrypt from \"bcrypt\";\n\nconst userSchema = new mongoose.Schema(\n  {\n    name: {\n      type: String,\n      required: [true, \"Name is required\"],\n      trim: true,\n    },\n    email: {\n      type: String,\n      required: [true, \"Email is required\"],\n      unique: true,\n      lowercase: true,\n      trim: true,\n      match: [/^\\S+@\\S+\\.\\S+$/, \"Please use a valid email address\"],\n    },\n    password: {\n      type: String,\n      required: [true, \"Password is required\"],\n      minlength: [8, \"Password must be at least 8 characters long\"],\n    },\n    role: {\n      type: String,\n      enum: [\"admin\", \"editor\", \"viewer\"],\n      default: \"viewer\",\n    },\n    avatar: {\n      type: String,\n      default: \"\",\n    },\n    bio: {\n      type: String,\n      default: \"\",\n    },\n    jobTitle: {\n      type: String,\n      default: \"\",\n    },\n    company: {\n      type: String,\n      default: \"\",\n    },\n    status: {\n      type: String,\n      enum: [\"active\", \"inactive\", \"pending\"],\n      default: \"active\",\n    },\n    notificationPreferences: {\n      emailNotifications: {\n        type: Boolean,\n        default: true,\n      },\n      pushNotifications: {\n        type: Boolean,\n        default: true,\n      },\n      taskAssigned: {\n        type: Boolean,\n        default: true,\n      },\n      taskUpdated: {\n        type: Boolean,\n        default: true,\n      },\n      taskCompleted: {\n        type: Boolean,\n        default: true,\n      },\n      commentAdded: {\n        type: Boolean,\n        default: true,\n      },\n      deadlineReminder: {\n        type: Boolean,\n        default: true,\n      },\n      weeklyDigest: {\n        type: Boolean,\n        default: false,\n      },\n    },\n    twoFactorEnabled: {\n      type: Boolean,\n      default: false,\n    },\n    resetPasswordToken: String,\n    resetPasswordExpires: Date,\n    lastActive: {\n      type: Date,\n      default: Date.now,\n    },\n  },\n  {\n    timestamps: true,\n  },\n);\n\n// Pre-save hook to hash password\nuserSchema.pre(\"save\", async function (next) {\n  // Only hash the password if it's modified or new\n  if (!this.isModified(\"password\")) return next();\n\n  try {\n    // Generate salt\n    const salt = await bcrypt.genSalt(10);\n    // Hash password\n    this.password = await bcrypt.hash(this.password, salt);\n    next();\n  } catch (error) {\n    next(error);\n  }\n});\n\n// Method to compare passwords\nuserSchema.methods.comparePassword = async function (candidatePassword) {\n  return await bcrypt.compare(candidatePassword, this.password);\n};\n\n// Method to return user data without sensitive information\nuserSchema.methods.toJSON = function () {\n  const user = this.toObject();\n  delete user.password;\n  delete user.resetPasswordToken;\n  delete user.resetPasswordExpires;\n  return user;\n};\n\nconst User = mongoose.model(\"User\", userSchema);\n\nexport default User;"])</script><script>self.__next_f.push([1,"a2:Tb1e,"])</script><script>self.__next_f.push([1,"import mongoose from \"mongoose\";\nimport bcrypt from \"bcrypt\";\n\nconst userSchema = new mongoose.Schema(\n  {\n    name: {\n      type: String,\n      required: [true, \"Name is required\"],\n      trim: true,\n    },\n    email: {\n      type: String,\n      required: [true, \"Email is required\"],\n      unique: true,\n      lowercase: true,\n      trim: true,\n      match: [/^\\S+@\\S+\\.\\S+$/, \"Please use a valid email address\"],\n    },\n    password: {\n      type: String,\n      required: [true, \"Password is required\"],\n      minlength: [8, \"Password must be at least 8 characters long\"],\n    },\n    role: {\n      type: String,\n      enum: [\"admin\", \"editor\", \"viewer\"],\n      default: \"viewer\",\n    },\n    avatar: {\n      type: String,\n      default: \"\",\n    },\n    bio: {\n      type: String,\n      default: \"\",\n    },\n    jobTitle: {\n      type: String,\n      default: \"\",\n    },\n    company: {\n      type: String,\n      default: \"\",\n    },\n    status: {\n      type: String,\n      enum: [\"active\", \"inactive\", \"pending\"],\n      default: \"active\",\n    },\n    notificationPreferences: {\n      emailNotifications: {\n        type: Boolean,\n        default: true,\n      },\n      pushNotifications: {\n        type: Boolean,\n        default: true,\n      },\n      taskAssigned: {\n        type: Boolean,\n        default: true,\n      },\n      taskUpdated: {\n        type: Boolean,\n        default: true,\n      },\n      taskCompleted: {\n        type: Boolean,\n        default: true,\n      },\n      commentAdded: {\n        type: Boolean,\n        default: true,\n      },\n      deadlineReminder: {\n        type: Boolean,\n        default: true,\n      },\n      weeklyDigest: {\n        type: Boolean,\n        default: false,\n      },\n    },\n    twoFactorEnabled: {\n      type: Boolean,\n      default: false,\n    },\n    resetPasswordToken: String,\n    resetPasswordExpires: Date,\n    lastActive: {\n      type: Date,\n      default: Date.now,\n    },\n  },\n  {\n    timestamps: true,\n  },\n);\n\n// Pre-save hook to hash password\nuserSchema.pre(\"save\", async function (next) {\n  // Only hash the password if it's modified or new\n  if (!this.isModified(\"password\")) return next();\n\n  try {\n    // Generate salt\n    const salt = await bcrypt.genSalt(10);\n    // Hash password\n    this.password = await bcrypt.hash(this.password, salt);\n    next();\n  } catch (error) {\n    next(error);\n  }\n});\n\n// Method to compare passwords\nuserSchema.methods.comparePassword = async function (candidatePassword) {\n  return await bcrypt.compare(candidatePassword, this.password);\n};\n\n// Method to return user data without sensitive information\nuserSchema.methods.toJSON = function () {\n  const user = this.toObject();\n  delete user.password;\n  delete user.resetPasswordToken;\n  delete user.resetPasswordExpires;\n  return user;\n};\n\nconst User = mongoose.model(\"User\", userSchema);\n\nexport default User;"])</script><script>self.__next_f.push([1,"a3:T91e,"])</script><script>self.__next_f.push([1,"import mongoose from \"mongoose\";\n\nconst subtaskSchema = new mongoose.Schema(\n  {\n    title: {\n      type: String,\n      required: true,\n      trim: true,\n    },\n    completed: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  {\n    timestamps: true,\n  },\n);\n\nconst taskSchema = new mongoose.Schema(\n  {\n    title: {\n      type: String,\n      required: [true, \"Task title is required\"],\n      trim: true,\n    },\n    description: {\n      type: String,\n      trim: true,\n    },\n    status: {\n      type: String,\n      enum: [\"to-do\", \"in-progress\", \"in-review\", \"completed\"],\n      default: \"to-do\",\n    },\n    priority: {\n      type: String,\n      enum: [\"high\", \"medium\", \"low\"],\n      default: \"medium\",\n    },\n    dueDate: {\n      type: Date,\n    },\n    assignee: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"User\",\n    },\n    creator: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"User\",\n      required: true,\n    },\n    tags: [\n      {\n        type: String,\n        trim: true,\n      },\n    ],\n    subtasks: [subtaskSchema],\n    attachments: [\n      {\n        name: String,\n        path: String,\n        type: String,\n        size: Number,\n        uploadedAt: {\n          type: Date,\n          default: Date.now,\n        },\n      },\n    ],\n    progress: {\n      type: Number,\n      default: 0,\n      min: 0,\n      max: 100,\n    },\n    watchers: [\n      {\n        type: mongoose.Schema.Types.ObjectId,\n        ref: \"User\",\n      },\n    ],\n  },\n  {\n    timestamps: true,\n  },\n);\n\n// Method to calculate progress based on subtasks\ntaskSchema.methods.calculateProgress = function () {\n  if (this.subtasks.length === 0) return 0;\n\n  const completedCount = this.subtasks.filter((subtask) =\u003e subtask.completed).length;\n  return Math.round((completedCount / this.subtasks.length) * 100);\n};\n\n// Pre-save hook to update progress\ntaskSchema.pre(\"save\", function (next) {\n  if (this.subtasks \u0026\u0026 this.subtasks.length \u003e 0) {\n    this.progress = this.calculateProgress();\n  }\n  next();\n});\n\n// Create indexes for better query performance\ntaskSchema.index({ status: 1 });\ntaskSchema.index({ priority: 1 });\ntaskSchema.index({ assignee: 1 });\ntaskSchema.index({ dueDate: 1 });\ntaskSchema.index({ creator: 1 });\ntaskSchema.index({ tags: 1 });\n\nconst Task = mongoose.model(\"Task\", taskSchema);\n\nexport default Task;"])</script><script>self.__next_f.push([1,"a4:T91e,"])</script><script>self.__next_f.push([1,"import mongoose from \"mongoose\";\n\nconst subtaskSchema = new mongoose.Schema(\n  {\n    title: {\n      type: String,\n      required: true,\n      trim: true,\n    },\n    completed: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  {\n    timestamps: true,\n  },\n);\n\nconst taskSchema = new mongoose.Schema(\n  {\n    title: {\n      type: String,\n      required: [true, \"Task title is required\"],\n      trim: true,\n    },\n    description: {\n      type: String,\n      trim: true,\n    },\n    status: {\n      type: String,\n      enum: [\"to-do\", \"in-progress\", \"in-review\", \"completed\"],\n      default: \"to-do\",\n    },\n    priority: {\n      type: String,\n      enum: [\"high\", \"medium\", \"low\"],\n      default: \"medium\",\n    },\n    dueDate: {\n      type: Date,\n    },\n    assignee: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"User\",\n    },\n    creator: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"User\",\n      required: true,\n    },\n    tags: [\n      {\n        type: String,\n        trim: true,\n      },\n    ],\n    subtasks: [subtaskSchema],\n    attachments: [\n      {\n        name: String,\n        path: String,\n        type: String,\n        size: Number,\n        uploadedAt: {\n          type: Date,\n          default: Date.now,\n        },\n      },\n    ],\n    progress: {\n      type: Number,\n      default: 0,\n      min: 0,\n      max: 100,\n    },\n    watchers: [\n      {\n        type: mongoose.Schema.Types.ObjectId,\n        ref: \"User\",\n      },\n    ],\n  },\n  {\n    timestamps: true,\n  },\n);\n\n// Method to calculate progress based on subtasks\ntaskSchema.methods.calculateProgress = function () {\n  if (this.subtasks.length === 0) return 0;\n\n  const completedCount = this.subtasks.filter((subtask) =\u003e subtask.completed).length;\n  return Math.round((completedCount / this.subtasks.length) * 100);\n};\n\n// Pre-save hook to update progress\ntaskSchema.pre(\"save\", function (next) {\n  if (this.subtasks \u0026\u0026 this.subtasks.length \u003e 0) {\n    this.progress = this.calculateProgress();\n  }\n  next();\n});\n\n// Create indexes for better query performance\ntaskSchema.index({ status: 1 });\ntaskSchema.index({ priority: 1 });\ntaskSchema.index({ assignee: 1 });\ntaskSchema.index({ dueDate: 1 });\ntaskSchema.index({ creator: 1 });\ntaskSchema.index({ tags: 1 });\n\nconst Task = mongoose.model(\"Task\", taskSchema);\n\nexport default Task;"])</script><script>self.__next_f.push([1,"a5:T4a5,import mongoose from \"mongoose\";\n\nconst notificationSchema = new mongoose.Schema(\n  {\n    recipient: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"User\",\n      required: true,\n    },\n    sender: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"User\",\n    },\n    type: {\n      type: String,\n      enum: [\n        \"task_assigned\",\n        \"task_updated\",\n        \"task_completed\",\n        \"comment_added\",\n        \"deadline_reminder\",\n        \"mention\",\n        \"system\",\n      ],\n      required: true,\n    },\n    title: {\n      type: String,\n      required: true,\n    },\n    message: {\n      type: String,\n      required: true,\n    },\n    read: {\n      type: Boolean,\n      default: false,\n    },\n    relatedTask: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"Task\",\n    },\n    relatedComment: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"Comment\",\n    },\n  },\n  {\n    timestamps: true,\n  },\n);\n\n// Create indexes for better query performance\nnotificationSchema.index({ recipient: 1, read: 1 });\nnotificationSchema.index({ createdAt: -1 });\n\nconst Notification = mongoose.model(\"Notification\", notificationSchema);\n\nexport default Notification;a6:T4a5,import mongoose from \"mongoose\";\n\nconst notificationSchema = new mongoose.Schema(\n  {\n    recipient: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"User\",\n      required: true,\n    },\n    sender: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"User\",\n    },\n    type: {\n      type: String,\n      enum: [\n        \"task_assigned\",\n        \"task_updated\",\n        \"task_completed\",\n        \"comment_added\",\n        \"deadline_reminder\",\n        \"mention\",\n        \"system\",\n      ],\n      required: true,\n    },\n    title: {\n      type: String,\n      required: true,\n    },\n    message: {\n      type: String,\n      required: true,\n    },\n    read: {\n      type: Boolean,\n      default: false,\n    },\n    relatedTask: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"Task\",\n    },\n    relatedComment: {\n      type: mon"])</script><script>self.__next_f.push([1,"goose.Schema.Types.ObjectId,\n      ref: \"Comment\",\n    },\n  },\n  {\n    timestamps: true,\n  },\n);\n\n// Create indexes for better query performance\nnotificationSchema.index({ recipient: 1, read: 1 });\nnotificationSchema.index({ createdAt: -1 });\n\nconst Notification = mongoose.model(\"Notification\", notificationSchema);\n\nexport default Notification;a7:Ta6a,"])</script><script>self.__next_f.push([1,"import jwt from \"jsonwebtoken\";\nimport User from \"../models/User.js\";\nimport { createError } from \"../utils/error.js\";\n\n// Verify JWT token\nexport const verifyToken = async (req, res, next) =\u003e {\n  try {\n    // Get token from cookies or authorization header\n    const token =\n      req.cookies.token ||\n      (req.headers.authorization \u0026\u0026 req.headers.authorization.startsWith(\"Bearer\")\n        ? req.headers.authorization.split(\" \")[1]\n        : null);\n\n    if (!token) {\n      return next(createError(401, \"You are not authenticated\"));\n    }\n\n    // Verify token\n    const decoded = jwt.verify(token, process.env.JWT_SECRET);\n\n    // Find user\n    const user = await User.findById(decoded.id);\n    if (!user) {\n      return next(createError(404, \"User not found\"));\n    }\n\n    // Check if user is active\n    if (user.status !== \"active\") {\n      return next(createError(403, \"Your account is not active\"));\n    }\n\n    // Update last active timestamp\n    user.lastActive = new Date();\n    await user.save();\n\n    // Attach user to request\n    req.user = user;\n    next();\n  } catch (err) {\n    if (err.name === \"JsonWebTokenError\") {\n      return next(createError(401, \"Invalid token\"));\n    }\n    if (err.name === \"TokenExpiredError\") {\n      return next(createError(401, \"Token expired\"));\n    }\n    next(err);\n  }\n};\n\n// Check if user is admin\nexport const verifyAdmin = (req, res, next) =\u003e {\n  if (req.user.role !== \"admin\") {\n    return next(createError(403, \"You are not authorized to perform this action\"));\n  }\n  next();\n};\n\n// Check if user is admin or editor\nexport const verifyAdminOrEditor = (req, res, next) =\u003e {\n  if (req.user.role !== \"admin\" \u0026\u0026 req.user.role !== \"editor\") {\n    return next(createError(403, \"You are not authorized to perform this action\"));\n  }\n  next();\n};\n\n// Check if user is the owner of the resource or an admin\nexport const verifyOwnerOrAdmin = (resourceModel) =\u003e {\n  return async (req, res, next) =\u003e {\n    try {\n      const resourceId = req.params.id;\n      const resource = await resourceModel.findById(resourceId);\n\n      if (!resource) {\n        return next(createError(404, \"Resource not found\"));\n      }\n\n      // Check if user is admin or the owner\n      const isOwner = resource.creator \u0026\u0026 resource.creator.toString() === req.user._id.toString();\n      const isAssignee = resource.assignee \u0026\u0026 resource.assignee.toString() === req.user._id.toString();\n\n      if (req.user.role === \"admin\" || isOwner || isAssignee) {\n        req.resource = resource;\n        return next();\n      }\n\n      return next(createError(403, \"You are not authorized to perform this action\"));\n    } catch (err) {\n      next(err);\n    }\n  };\n};"])</script><script>self.__next_f.push([1,"a8:Ta6a,"])</script><script>self.__next_f.push([1,"import jwt from \"jsonwebtoken\";\nimport User from \"../models/User.js\";\nimport { createError } from \"../utils/error.js\";\n\n// Verify JWT token\nexport const verifyToken = async (req, res, next) =\u003e {\n  try {\n    // Get token from cookies or authorization header\n    const token =\n      req.cookies.token ||\n      (req.headers.authorization \u0026\u0026 req.headers.authorization.startsWith(\"Bearer\")\n        ? req.headers.authorization.split(\" \")[1]\n        : null);\n\n    if (!token) {\n      return next(createError(401, \"You are not authenticated\"));\n    }\n\n    // Verify token\n    const decoded = jwt.verify(token, process.env.JWT_SECRET);\n\n    // Find user\n    const user = await User.findById(decoded.id);\n    if (!user) {\n      return next(createError(404, \"User not found\"));\n    }\n\n    // Check if user is active\n    if (user.status !== \"active\") {\n      return next(createError(403, \"Your account is not active\"));\n    }\n\n    // Update last active timestamp\n    user.lastActive = new Date();\n    await user.save();\n\n    // Attach user to request\n    req.user = user;\n    next();\n  } catch (err) {\n    if (err.name === \"JsonWebTokenError\") {\n      return next(createError(401, \"Invalid token\"));\n    }\n    if (err.name === \"TokenExpiredError\") {\n      return next(createError(401, \"Token expired\"));\n    }\n    next(err);\n  }\n};\n\n// Check if user is admin\nexport const verifyAdmin = (req, res, next) =\u003e {\n  if (req.user.role !== \"admin\") {\n    return next(createError(403, \"You are not authorized to perform this action\"));\n  }\n  next();\n};\n\n// Check if user is admin or editor\nexport const verifyAdminOrEditor = (req, res, next) =\u003e {\n  if (req.user.role !== \"admin\" \u0026\u0026 req.user.role !== \"editor\") {\n    return next(createError(403, \"You are not authorized to perform this action\"));\n  }\n  next();\n};\n\n// Check if user is the owner of the resource or an admin\nexport const verifyOwnerOrAdmin = (resourceModel) =\u003e {\n  return async (req, res, next) =\u003e {\n    try {\n      const resourceId = req.params.id;\n      const resource = await resourceModel.findById(resourceId);\n\n      if (!resource) {\n        return next(createError(404, \"Resource not found\"));\n      }\n\n      // Check if user is admin or the owner\n      const isOwner = resource.creator \u0026\u0026 resource.creator.toString() === req.user._id.toString();\n      const isAssignee = resource.assignee \u0026\u0026 resource.assignee.toString() === req.user._id.toString();\n\n      if (req.user.role === \"admin\" || isOwner || isAssignee) {\n        req.resource = resource;\n        return next();\n      }\n\n      return next(createError(403, \"You are not authorized to perform this action\"));\n    } catch (err) {\n      next(err);\n    }\n  };\n};"])</script><script>self.__next_f.push([1,"a9:T783,import multer from \"multer\";\nimport path from \"path\";\nimport fs from \"fs\";\nimport { fileURLToPath } from \"url\";\nimport { createError } from \"../utils/error.js\";\n\n// Get directory name\nconst __dirname = path.dirname(fileURLToPath(import.meta.url));\n\n// Create uploads directory if it doesn't exist\nconst uploadsDir = path.join(__dirname, \"../uploads\");\nif (!fs.existsSync(uploadsDir)) {\n  fs.mkdirSync(uploadsDir, { recursive: true });\n}\n\n// Configure storage\nconst storage = multer.diskStorage({\n  destination: (req, file, cb) =\u003e {\n    // Create subdirectory based on file type\n    let dir = \"general\";\n\n    if (file.mimetype.startsWith(\"image/\")) {\n      dir = \"images\";\n    } else if (file.mimetype.includes(\"pdf\") || file.mimetype.includes(\"document\")) {\n      dir = \"documents\";\n    }\n\n    const fullPath = path.join(uploadsDir, dir);\n\n    // Create directory if it doesn't exist\n    if (!fs.existsSync(fullPath)) {\n      fs.mkdirSync(fullPath, { recursive: true });\n    }\n\n    cb(null, path.join(\"uploads\", dir));\n  },\n  filename: (req, file, cb) =\u003e {\n    // Generate unique filename\n    const uniqueSuffix = Date.now() + \"-\" + Math.round(Math.random() * 1e9);\n    const ext = path.extname(file.originalname);\n    cb(null, file.fieldname + \"-\" + uniqueSuffix + ext);\n  },\n});\n\n// File filter\nconst fileFilter = (req, file, cb) =\u003e {\n  // Accept images, documents, and common file types\n  const allowedFileTypes = /jpeg|jpg|png|gif|pdf|doc|docx|xls|xlsx|ppt|pptx|txt|csv|zip|rar/;\n  const extname = allowedFileTypes.test(path.extname(file.originalname).toLowerCase());\n  const mimetype = allowedFileTypes.test(file.mimetype);\n\n  if (extname \u0026\u0026 mimetype) {\n    return cb(null, true);\n  } else {\n    cb(createError(400, \"Only certain file types are allowed\"));\n  }\n};\n\n// Configure multer\nconst upload = multer({\n  storage,\n  fileFilter,\n  limits: {\n    fileSize: 10 * 1024 * 1024, // 10MB\n  },\n});\n\nexport default upload;aa:T783,import multer from \"multer\";\nimport path from \"path\";\nimport fs from \"fs\";\nimport { fileURLToPath } from \"url"])</script><script>self.__next_f.push([1,"\";\nimport { createError } from \"../utils/error.js\";\n\n// Get directory name\nconst __dirname = path.dirname(fileURLToPath(import.meta.url));\n\n// Create uploads directory if it doesn't exist\nconst uploadsDir = path.join(__dirname, \"../uploads\");\nif (!fs.existsSync(uploadsDir)) {\n  fs.mkdirSync(uploadsDir, { recursive: true });\n}\n\n// Configure storage\nconst storage = multer.diskStorage({\n  destination: (req, file, cb) =\u003e {\n    // Create subdirectory based on file type\n    let dir = \"general\";\n\n    if (file.mimetype.startsWith(\"image/\")) {\n      dir = \"images\";\n    } else if (file.mimetype.includes(\"pdf\") || file.mimetype.includes(\"document\")) {\n      dir = \"documents\";\n    }\n\n    const fullPath = path.join(uploadsDir, dir);\n\n    // Create directory if it doesn't exist\n    if (!fs.existsSync(fullPath)) {\n      fs.mkdirSync(fullPath, { recursive: true });\n    }\n\n    cb(null, path.join(\"uploads\", dir));\n  },\n  filename: (req, file, cb) =\u003e {\n    // Generate unique filename\n    const uniqueSuffix = Date.now() + \"-\" + Math.round(Math.random() * 1e9);\n    const ext = path.extname(file.originalname);\n    cb(null, file.fieldname + \"-\" + uniqueSuffix + ext);\n  },\n});\n\n// File filter\nconst fileFilter = (req, file, cb) =\u003e {\n  // Accept images, documents, and common file types\n  const allowedFileTypes = /jpeg|jpg|png|gif|pdf|doc|docx|xls|xlsx|ppt|pptx|txt|csv|zip|rar/;\n  const extname = allowedFileTypes.test(path.extname(file.originalname).toLowerCase());\n  const mimetype = allowedFileTypes.test(file.mimetype);\n\n  if (extname \u0026\u0026 mimetype) {\n    return cb(null, true);\n  } else {\n    cb(createError(400, \"Only certain file types are allowed\"));\n  }\n};\n\n// Configure multer\nconst upload = multer({\n  storage,\n  fileFilter,\n  limits: {\n    fileSize: 10 * 1024 * 1024, // 10MB\n  },\n});\n\nexport default upload;ab:T1a8a,"])</script><script>self.__next_f.push([1,"import express from \"express\";\nimport jwt from \"jsonwebtoken\";\nimport User from \"../models/User.js\";\nimport { verifyToken } from \"../middleware/auth.js\";\nimport { createError } from \"../utils/error.js\";\nimport { sendEmail } from \"../utils/email.js\";\nimport crypto from \"crypto\";\n\nconst router = express.Router();\n\n// Register a new user\nrouter.post(\"/register\", async (req, res, next) =\u003e {\n  try {\n    const { name, email, password } = req.body;\n\n    // Check if user already exists\n    const existingUser = await User.findOne({ email });\n    if (existingUser) {\n      return next(createError(400, \"User with this email already exists\"));\n    }\n\n    // Create new user\n    const newUser = new User({\n      name,\n      email,\n      password,\n    });\n\n    // Save user to database\n    const savedUser = await newUser.save();\n\n    // Generate JWT token\n    const token = jwt.sign({ id: savedUser._id, role: savedUser.role }, process.env.JWT_SECRET, { expiresIn: \"7d\" });\n\n    // Set token as cookie\n    res.cookie(\"token\", token, {\n      httpOnly: true,\n      secure: process.env.NODE_ENV === \"production\",\n      maxAge: 7 * 24 * 60 * 60 * 1000, // 7 days\n    });\n\n    // Send welcome email\n    sendEmail({\n      to: savedUser.email,\n      subject: \"Welcome to Task Management App\",\n      text: `Hello ${savedUser.name},\n\nWelcome to our Task Management App! Your account has been created successfully.\n\nBest regards,\nThe Task Management Team`,\n    });\n\n    res.status(201).json({\n      success: true,\n      message: \"User registered successfully\",\n      user: savedUser,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Login user\nrouter.post(\"/login\", async (req, res, next) =\u003e {\n  try {\n    const { email, password } = req.body;\n\n    // Find user by email\n    const user = await User.findOne({ email });\n    if (!user) {\n      return next(createError(404, \"User not found\"));\n    }\n\n    // Check if user is active\n    if (user.status !== \"active\") {\n      return next(createError(403, \"Your account is not active\"));\n    }\n\n    // Check password\n    const isPasswordValid = await user.comparePassword(password);\n    if (!isPasswordValid) {\n      return next(createError(401, \"Invalid credentials\"));\n    }\n\n    // Generate JWT token\n    const token = jwt.sign({ id: user._id, role: user.role }, process.env.JWT_SECRET, { expiresIn: \"7d\" });\n\n    // Set token as cookie\n    res.cookie(\"token\", token, {\n      httpOnly: true,\n      secure: process.env.NODE_ENV === \"production\",\n      maxAge: 7 * 24 * 60 * 60 * 1000, // 7 days\n    });\n\n    // Update last active timestamp\n    user.lastActive = new Date();\n    await user.save();\n\n    res.status(200).json({\n      success: true,\n      message: \"Login successful\",\n      user,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Logout user\nrouter.post(\"/logout\", (req, res) =\u003e {\n  res.clearCookie(\"token\");\n  res.status(200).json({\n    success: true,\n    message: \"Logout successful\",\n  });\n});\n\n// Get current user\nrouter.get(\"/me\", verifyToken, (req, res) =\u003e {\n  res.status(200).json({\n    success: true,\n    user: req.user,\n  });\n});\n\n// Forgot password\nrouter.post(\"/forgot-password\", async (req, res, next) =\u003e {\n  try {\n    const { email } = req.body;\n\n    // Find user by email\n    const user = await User.findOne({ email });\n    if (!user) {\n      return next(createError(404, \"User not found\"));\n    }\n\n    // Generate reset token\n    const resetToken = crypto.randomBytes(32).toString(\"hex\");\n\n    // Hash token and set to resetPasswordToken field\n    user.resetPasswordToken = crypto.createHash(\"sha256\").update(resetToken).digest(\"hex\");\n\n    // Set token expiry\n    user.resetPasswordExpires = Date.now() + 30 * 60 * 1000; // 30 minutes\n\n    // Save user\n    await user.save();\n\n    // Create reset URL\n    const resetUrl = `${process.env.FRONTEND_URL}/reset-password/${resetToken}`;\n\n    // Send email\n    sendEmail({\n      to: user.email,\n      subject: \"Password Reset Request\",\n      text: `You are receiving this email because you (or someone else) has requested the reset of a password. Please click on the following link, or paste this into your browser to complete the process:\n\n${resetUrl}\n\nIf you did not request this, please ignore this email and your password will remain unchanged.\n`,\n    });\n\n    res.status(200).json({\n      success: true,\n      message: \"Password reset email sent\",\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Reset password\nrouter.post(\"/reset-password/:token\", async (req, res, next) =\u003e {\n  try {\n    const { password } = req.body;\n\n    // Get token from params\n    const resetToken = req.params.token;\n\n    // Hash token\n    const hashedToken = crypto.createHash(\"sha256\").update(resetToken).digest(\"hex\");\n\n    // Find user by token and check if token is expired\n    const user = await User.findOne({\n      resetPasswordToken: hashedToken,\n      resetPasswordExpires: { $gt: Date.now() },\n    });\n\n    if (!user) {\n      return next(createError(400, \"Password reset token is invalid or has expired\"));\n    }\n\n    // Set new password\n    user.password = password;\n    user.resetPasswordToken = undefined;\n    user.resetPasswordExpires = undefined;\n\n    // Save user\n    await user.save();\n\n    // Send confirmation email\n    sendEmail({\n      to: user.email,\n      subject: \"Password Reset Confirmation\",\n      text: `Hello ${user.name},\n\nThis is a confirmation that the password for your account ${user.email} has just been changed.\n`,\n    });\n\n    res.status(200).json({\n      success: true,\n      message: \"Password reset successful\",\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// OAuth login with Google\nrouter.post(\"/google\", async (req, res, next) =\u003e {\n  try {\n    const { token, profile } = req.body;\n\n    // Verify token with Google (in a real app)\n    // For demo purposes, we'll assume the token is valid\n\n    // Check if user exists\n    let user = await User.findOne({ email: profile.email });\n\n    if (!user) {\n      // Create new user\n      user = new User({\n        name: profile.name,\n        email: profile.email,\n        password: crypto.randomBytes(16).toString(\"hex\"), // Random password\n        avatar: profile.picture,\n      });\n\n      await user.save();\n    }\n\n    // Generate JWT token\n    const jwtToken = jwt.sign({ id: user._id, role: user.role }, process.env.JWT_SECRET, { expiresIn: \"7d\" });\n\n    // Set token as cookie\n    res.cookie(\"token\", jwtToken, {\n      httpOnly: true,\n      secure: process.env.NODE_ENV === \"production\",\n      maxAge: 7 * 24 * 60 * 60 * 1000, // 7 days\n    });\n\n    // Update last active timestamp\n    user.lastActive = new Date();\n    await user.save();\n\n    res.status(200).json({\n      success: true,\n      message: \"Login successful\",\n      user,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\nexport default router;"])</script><script>self.__next_f.push([1,"ac:T1a8a,"])</script><script>self.__next_f.push([1,"import express from \"express\";\nimport jwt from \"jsonwebtoken\";\nimport User from \"../models/User.js\";\nimport { verifyToken } from \"../middleware/auth.js\";\nimport { createError } from \"../utils/error.js\";\nimport { sendEmail } from \"../utils/email.js\";\nimport crypto from \"crypto\";\n\nconst router = express.Router();\n\n// Register a new user\nrouter.post(\"/register\", async (req, res, next) =\u003e {\n  try {\n    const { name, email, password } = req.body;\n\n    // Check if user already exists\n    const existingUser = await User.findOne({ email });\n    if (existingUser) {\n      return next(createError(400, \"User with this email already exists\"));\n    }\n\n    // Create new user\n    const newUser = new User({\n      name,\n      email,\n      password,\n    });\n\n    // Save user to database\n    const savedUser = await newUser.save();\n\n    // Generate JWT token\n    const token = jwt.sign({ id: savedUser._id, role: savedUser.role }, process.env.JWT_SECRET, { expiresIn: \"7d\" });\n\n    // Set token as cookie\n    res.cookie(\"token\", token, {\n      httpOnly: true,\n      secure: process.env.NODE_ENV === \"production\",\n      maxAge: 7 * 24 * 60 * 60 * 1000, // 7 days\n    });\n\n    // Send welcome email\n    sendEmail({\n      to: savedUser.email,\n      subject: \"Welcome to Task Management App\",\n      text: `Hello ${savedUser.name},\n\nWelcome to our Task Management App! Your account has been created successfully.\n\nBest regards,\nThe Task Management Team`,\n    });\n\n    res.status(201).json({\n      success: true,\n      message: \"User registered successfully\",\n      user: savedUser,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Login user\nrouter.post(\"/login\", async (req, res, next) =\u003e {\n  try {\n    const { email, password } = req.body;\n\n    // Find user by email\n    const user = await User.findOne({ email });\n    if (!user) {\n      return next(createError(404, \"User not found\"));\n    }\n\n    // Check if user is active\n    if (user.status !== \"active\") {\n      return next(createError(403, \"Your account is not active\"));\n    }\n\n    // Check password\n    const isPasswordValid = await user.comparePassword(password);\n    if (!isPasswordValid) {\n      return next(createError(401, \"Invalid credentials\"));\n    }\n\n    // Generate JWT token\n    const token = jwt.sign({ id: user._id, role: user.role }, process.env.JWT_SECRET, { expiresIn: \"7d\" });\n\n    // Set token as cookie\n    res.cookie(\"token\", token, {\n      httpOnly: true,\n      secure: process.env.NODE_ENV === \"production\",\n      maxAge: 7 * 24 * 60 * 60 * 1000, // 7 days\n    });\n\n    // Update last active timestamp\n    user.lastActive = new Date();\n    await user.save();\n\n    res.status(200).json({\n      success: true,\n      message: \"Login successful\",\n      user,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Logout user\nrouter.post(\"/logout\", (req, res) =\u003e {\n  res.clearCookie(\"token\");\n  res.status(200).json({\n    success: true,\n    message: \"Logout successful\",\n  });\n});\n\n// Get current user\nrouter.get(\"/me\", verifyToken, (req, res) =\u003e {\n  res.status(200).json({\n    success: true,\n    user: req.user,\n  });\n});\n\n// Forgot password\nrouter.post(\"/forgot-password\", async (req, res, next) =\u003e {\n  try {\n    const { email } = req.body;\n\n    // Find user by email\n    const user = await User.findOne({ email });\n    if (!user) {\n      return next(createError(404, \"User not found\"));\n    }\n\n    // Generate reset token\n    const resetToken = crypto.randomBytes(32).toString(\"hex\");\n\n    // Hash token and set to resetPasswordToken field\n    user.resetPasswordToken = crypto.createHash(\"sha256\").update(resetToken).digest(\"hex\");\n\n    // Set token expiry\n    user.resetPasswordExpires = Date.now() + 30 * 60 * 1000; // 30 minutes\n\n    // Save user\n    await user.save();\n\n    // Create reset URL\n    const resetUrl = `${process.env.FRONTEND_URL}/reset-password/${resetToken}`;\n\n    // Send email\n    sendEmail({\n      to: user.email,\n      subject: \"Password Reset Request\",\n      text: `You are receiving this email because you (or someone else) has requested the reset of a password. Please click on the following link, or paste this into your browser to complete the process:\n\n${resetUrl}\n\nIf you did not request this, please ignore this email and your password will remain unchanged.\n`,\n    });\n\n    res.status(200).json({\n      success: true,\n      message: \"Password reset email sent\",\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Reset password\nrouter.post(\"/reset-password/:token\", async (req, res, next) =\u003e {\n  try {\n    const { password } = req.body;\n\n    // Get token from params\n    const resetToken = req.params.token;\n\n    // Hash token\n    const hashedToken = crypto.createHash(\"sha256\").update(resetToken).digest(\"hex\");\n\n    // Find user by token and check if token is expired\n    const user = await User.findOne({\n      resetPasswordToken: hashedToken,\n      resetPasswordExpires: { $gt: Date.now() },\n    });\n\n    if (!user) {\n      return next(createError(400, \"Password reset token is invalid or has expired\"));\n    }\n\n    // Set new password\n    user.password = password;\n    user.resetPasswordToken = undefined;\n    user.resetPasswordExpires = undefined;\n\n    // Save user\n    await user.save();\n\n    // Send confirmation email\n    sendEmail({\n      to: user.email,\n      subject: \"Password Reset Confirmation\",\n      text: `Hello ${user.name},\n\nThis is a confirmation that the password for your account ${user.email} has just been changed.\n`,\n    });\n\n    res.status(200).json({\n      success: true,\n      message: \"Password reset successful\",\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// OAuth login with Google\nrouter.post(\"/google\", async (req, res, next) =\u003e {\n  try {\n    const { token, profile } = req.body;\n\n    // Verify token with Google (in a real app)\n    // For demo purposes, we'll assume the token is valid\n\n    // Check if user exists\n    let user = await User.findOne({ email: profile.email });\n\n    if (!user) {\n      // Create new user\n      user = new User({\n        name: profile.name,\n        email: profile.email,\n        password: crypto.randomBytes(16).toString(\"hex\"), // Random password\n        avatar: profile.picture,\n      });\n\n      await user.save();\n    }\n\n    // Generate JWT token\n    const jwtToken = jwt.sign({ id: user._id, role: user.role }, process.env.JWT_SECRET, { expiresIn: \"7d\" });\n\n    // Set token as cookie\n    res.cookie(\"token\", jwtToken, {\n      httpOnly: true,\n      secure: process.env.NODE_ENV === \"production\",\n      maxAge: 7 * 24 * 60 * 60 * 1000, // 7 days\n    });\n\n    // Update last active timestamp\n    user.lastActive = new Date();\n    await user.save();\n\n    res.status(200).json({\n      success: true,\n      message: \"Login successful\",\n      user,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\nexport default router;"])</script><script>self.__next_f.push([1,"ad:T223a,"])</script><script>self.__next_f.push([1,"import express from \"express\";\nimport User from \"../models/User.js\";\nimport Task from \"../models/Task.js\";\nimport { verifyToken, verifyAdmin } from \"../middleware/auth.js\";\nimport { createError } from \"../utils/error.js\";\nimport upload from \"../middleware/upload.js\";\n\nconst router = express.Router();\n\n// Get all users (admin only)\nrouter.get(\"/\", verifyToken, verifyAdmin, async (req, res, next) =\u003e {\n  try {\n    const { role, status, search, sort, page = 1, limit = 10 } = req.query;\n\n    // Build query\n    const query = {};\n\n    // Filter by role\n    if (role \u0026\u0026 role !== \"all\") {\n      query.role = role;\n    }\n\n    // Filter by status\n    if (status \u0026\u0026 status !== \"all\") {\n      query.status = status;\n    }\n\n    // Search by name or email\n    if (search) {\n      query.$or = [{ name: { $regex: search, $options: \"i\" } }, { email: { $regex: search, $options: \"i\" } }];\n    }\n\n    // Count total documents\n    const total = await User.countDocuments(query);\n\n    // Build sort options\n    let sortOptions = { createdAt: -1 }; // Default sort\n    if (sort) {\n      const [field, order] = sort.split(\":\");\n      sortOptions = { [field]: order === \"asc\" ? 1 : -1 };\n    }\n\n    // Fetch users with pagination\n    const users = await User.find(query)\n      .sort(sortOptions)\n      .skip((page - 1) * limit)\n      .limit(Number.parseInt(limit));\n\n    res.status(200).json({\n      success: true,\n      count: users.length,\n      total,\n      totalPages: Math.ceil(total / limit),\n      currentPage: Number.parseInt(page),\n      users,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Get user by ID\nrouter.get(\"/:id\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Check if user is admin or requesting their own profile\n    if (req.user.role !== \"admin\" \u0026\u0026 req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to access this resource\"));\n    }\n\n    const user = await User.findById(req.params.id);\n    if (!user) {\n      return next(createError(404, \"User not found\"));\n    }\n\n    res.status(200).json({\n      success: true,\n      user,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Update user\nrouter.put(\"/:id\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Check if user is admin or updating their own profile\n    if (req.user.role !== \"admin\" \u0026\u0026 req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to update this user\"));\n    }\n\n    const { name, email, bio, jobTitle, company, notificationPreferences } = req.body;\n\n    // Find user\n    const user = await User.findById(req.params.id);\n    if (!user) {\n      return next(createError(404, \"User not found\"));\n    }\n\n    // Update fields\n    if (name) user.name = name;\n    if (bio) user.bio = bio;\n    if (jobTitle) user.jobTitle = jobTitle;\n    if (company) user.company = company;\n    if (notificationPreferences)\n      user.notificationPreferences = {\n        ...user.notificationPreferences,\n        ...notificationPreferences,\n      };\n\n    // Only admin can update email or role\n    if (req.user.role === \"admin\") {\n      if (email \u0026\u0026 email !== user.email) {\n        // Check if email is already in use\n        const existingUser = await User.findOne({ email });\n        if (existingUser) {\n          return next(createError(400, \"Email is already in use\"));\n        }\n        user.email = email;\n      }\n\n      if (req.body.role) user.role = req.body.role;\n      if (req.body.status) user.status = req.body.status;\n    }\n\n    // Save user\n    const updatedUser = await user.save();\n\n    res.status(200).json({\n      success: true,\n      message: \"User updated successfully\",\n      user: updatedUser,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Update user avatar\nrouter.put(\"/:id/avatar\", verifyToken, upload.single(\"avatar\"), async (req, res, next) =\u003e {\n  try {\n    // Check if user is updating their own avatar\n    if (req.user._id.toString  next) =\u003e {\n  try {\n    // Check if user is updating their own avatar\n    if (req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to update this user\"));\n    }\n\n    if (!req.file) {\n      return next(createError(400, \"No file uploaded\"));\n    }\n\n    // Find user\n    const user = await User.findById(req.params.id);\n    if (!user) {\n      return next(createError(404, \"User not found\"));\n    }\n\n    // Update avatar\n    user.avatar = `/${req.file.path}`;\n\n    // Save user\n    const updatedUser = await user.save();\n\n    res.status(200).json({\n      success: true,\n      message: \"Avatar updated successfully\",\n      user: updatedUser,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Change password\nrouter.put(\"/:id/password\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Check if user is changing their own password\n    if (req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to change this user's password\"));\n    }\n\n    const { currentPassword, newPassword } = req.body;\n\n    // Find user\n    const user = await User.findById(req.params.id);\n    if (!user) {\n      return next(createError(404, \"User not found\"));\n    }\n\n    // Check current password\n    const isPasswordValid = await user.comparePassword(currentPassword);\n    if (!isPasswordValid) {\n      return next(createError(401, \"Current password is incorrect\"));\n    }\n\n    // Update password\n    user.password = newPassword;\n\n    // Save user\n    await user.save();\n\n    res.status(200).json({\n      success: true,\n      message: \"Password changed successfully\",\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Toggle two-factor authentication\nrouter.put(\"/:id/two-factor\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Check if user is updating their own settings\n    if (req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to update this user\"));\n    }\n\n    // Find user\n    const user = await User.findById(req.params.id);\n    if (!user) {\n      return next(createError(404, \"User not found\"));\n    }\n\n    // Toggle two-factor authentication\n    user.twoFactorEnabled = !user.twoFactorEnabled;\n\n    // Save user\n    const updatedUser = await user.save();\n\n    res.status(200).json({\n      success: true,\n      message: `Two-factor authentication ${updatedUser.twoFactorEnabled ? \"enabled\" : \"disabled\"}`,\n      user: updatedUser,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Delete user (admin only)\nrouter.delete(\"/:id\", verifyToken, verifyAdmin, async (req, res, next) =\u003e {\n  try {\n    // Find user\n    const user = await User.findById(req.params.id);\n    if (!user) {\n      return next(createError(404, \"User not found\"));\n    }\n\n    // Check if user is trying to delete themselves\n    if (req.user._id.toString() === req.params.id) {\n      return next(createError(400, \"You cannot delete your own account\"));\n    }\n\n    // Delete user\n    await User.findByIdAndDelete(req.params.id);\n\n    // Update tasks assigned to this user\n    await Task.updateMany({ assignee: req.params.id }, { $unset: { assignee: 1 } });\n\n    res.status(200).json({\n      success: true,\n      message: \"User deleted successfully\",\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Get user tasks\nrouter.get(\"/:id/tasks\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Check if user is admin or requesting their own tasks\n    if (req.user.role !== \"admin\" \u0026\u0026 req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to access this resource\"));\n    }\n\n    const { status, priority, sort, page = 1, limit = 10 } = req.query;\n\n    // Build query\n    const query = { assignee: req.params.id };\n\n    // Filter by status\n    if (status \u0026\u0026 status !== \"all\") {\n      query.status = status;\n    }\n\n    // Filter by priority\n    if (priority \u0026\u0026 priority !== \"all\") {\n      query.priority = priority;\n    }\n\n    // Count total documents\n    const total = await Task.countDocuments(query);\n\n    // Build sort options\n    let sortOptions = { createdAt: -1 }; // Default sort\n    if (sort) {\n      const [field, order] = sort.split(\":\");\n      sortOptions = { [field]: order === \"asc\" ? 1 : -1 };\n    }\n\n    // Fetch tasks with pagination\n    const tasks = await Task.find(query)\n      .populate(\"assignee\", \"name email avatar\")\n      .populate(\"creator\", \"name email avatar\")\n      .sort(sortOptions)\n      .skip((page - 1) * limit)\n      .limit(Number.parseInt(limit));\n\n    res.status(200).json({\n      success: true,\n      count: tasks.length,\n      total,\n      totalPages: Math.ceil(total / limit),\n      currentPage: Number.parseInt(page),\n      tasks,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\nexport default router;"])</script><script>self.__next_f.push([1,"ae:T223a,"])</script><script>self.__next_f.push([1,"import express from \"express\";\nimport User from \"../models/User.js\";\nimport Task from \"../models/Task.js\";\nimport { verifyToken, verifyAdmin } from \"../middleware/auth.js\";\nimport { createError } from \"../utils/error.js\";\nimport upload from \"../middleware/upload.js\";\n\nconst router = express.Router();\n\n// Get all users (admin only)\nrouter.get(\"/\", verifyToken, verifyAdmin, async (req, res, next) =\u003e {\n  try {\n    const { role, status, search, sort, page = 1, limit = 10 } = req.query;\n\n    // Build query\n    const query = {};\n\n    // Filter by role\n    if (role \u0026\u0026 role !== \"all\") {\n      query.role = role;\n    }\n\n    // Filter by status\n    if (status \u0026\u0026 status !== \"all\") {\n      query.status = status;\n    }\n\n    // Search by name or email\n    if (search) {\n      query.$or = [{ name: { $regex: search, $options: \"i\" } }, { email: { $regex: search, $options: \"i\" } }];\n    }\n\n    // Count total documents\n    const total = await User.countDocuments(query);\n\n    // Build sort options\n    let sortOptions = { createdAt: -1 }; // Default sort\n    if (sort) {\n      const [field, order] = sort.split(\":\");\n      sortOptions = { [field]: order === \"asc\" ? 1 : -1 };\n    }\n\n    // Fetch users with pagination\n    const users = await User.find(query)\n      .sort(sortOptions)\n      .skip((page - 1) * limit)\n      .limit(Number.parseInt(limit));\n\n    res.status(200).json({\n      success: true,\n      count: users.length,\n      total,\n      totalPages: Math.ceil(total / limit),\n      currentPage: Number.parseInt(page),\n      users,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Get user by ID\nrouter.get(\"/:id\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Check if user is admin or requesting their own profile\n    if (req.user.role !== \"admin\" \u0026\u0026 req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to access this resource\"));\n    }\n\n    const user = await User.findById(req.params.id);\n    if (!user) {\n      return next(createError(404, \"User not found\"));\n    }\n\n    res.status(200).json({\n      success: true,\n      user,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Update user\nrouter.put(\"/:id\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Check if user is admin or updating their own profile\n    if (req.user.role !== \"admin\" \u0026\u0026 req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to update this user\"));\n    }\n\n    const { name, email, bio, jobTitle, company, notificationPreferences } = req.body;\n\n    // Find user\n    const user = await User.findById(req.params.id);\n    if (!user) {\n      return next(createError(404, \"User not found\"));\n    }\n\n    // Update fields\n    if (name) user.name = name;\n    if (bio) user.bio = bio;\n    if (jobTitle) user.jobTitle = jobTitle;\n    if (company) user.company = company;\n    if (notificationPreferences)\n      user.notificationPreferences = {\n        ...user.notificationPreferences,\n        ...notificationPreferences,\n      };\n\n    // Only admin can update email or role\n    if (req.user.role === \"admin\") {\n      if (email \u0026\u0026 email !== user.email) {\n        // Check if email is already in use\n        const existingUser = await User.findOne({ email });\n        if (existingUser) {\n          return next(createError(400, \"Email is already in use\"));\n        }\n        user.email = email;\n      }\n\n      if (req.body.role) user.role = req.body.role;\n      if (req.body.status) user.status = req.body.status;\n    }\n\n    // Save user\n    const updatedUser = await user.save();\n\n    res.status(200).json({\n      success: true,\n      message: \"User updated successfully\",\n      user: updatedUser,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Update user avatar\nrouter.put(\"/:id/avatar\", verifyToken, upload.single(\"avatar\"), async (req, res, next) =\u003e {\n  try {\n    // Check if user is updating their own avatar\n    if (req.user._id.toString  next) =\u003e {\n  try {\n    // Check if user is updating their own avatar\n    if (req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to update this user\"));\n    }\n\n    if (!req.file) {\n      return next(createError(400, \"No file uploaded\"));\n    }\n\n    // Find user\n    const user = await User.findById(req.params.id);\n    if (!user) {\n      return next(createError(404, \"User not found\"));\n    }\n\n    // Update avatar\n    user.avatar = `/${req.file.path}`;\n\n    // Save user\n    const updatedUser = await user.save();\n\n    res.status(200).json({\n      success: true,\n      message: \"Avatar updated successfully\",\n      user: updatedUser,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Change password\nrouter.put(\"/:id/password\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Check if user is changing their own password\n    if (req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to change this user's password\"));\n    }\n\n    const { currentPassword, newPassword } = req.body;\n\n    // Find user\n    const user = await User.findById(req.params.id);\n    if (!user) {\n      return next(createError(404, \"User not found\"));\n    }\n\n    // Check current password\n    const isPasswordValid = await user.comparePassword(currentPassword);\n    if (!isPasswordValid) {\n      return next(createError(401, \"Current password is incorrect\"));\n    }\n\n    // Update password\n    user.password = newPassword;\n\n    // Save user\n    await user.save();\n\n    res.status(200).json({\n      success: true,\n      message: \"Password changed successfully\",\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Toggle two-factor authentication\nrouter.put(\"/:id/two-factor\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Check if user is updating their own settings\n    if (req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to update this user\"));\n    }\n\n    // Find user\n    const user = await User.findById(req.params.id);\n    if (!user) {\n      return next(createError(404, \"User not found\"));\n    }\n\n    // Toggle two-factor authentication\n    user.twoFactorEnabled = !user.twoFactorEnabled;\n\n    // Save user\n    const updatedUser = await user.save();\n\n    res.status(200).json({\n      success: true,\n      message: `Two-factor authentication ${updatedUser.twoFactorEnabled ? \"enabled\" : \"disabled\"}`,\n      user: updatedUser,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Delete user (admin only)\nrouter.delete(\"/:id\", verifyToken, verifyAdmin, async (req, res, next) =\u003e {\n  try {\n    // Find user\n    const user = await User.findById(req.params.id);\n    if (!user) {\n      return next(createError(404, \"User not found\"));\n    }\n\n    // Check if user is trying to delete themselves\n    if (req.user._id.toString() === req.params.id) {\n      return next(createError(400, \"You cannot delete your own account\"));\n    }\n\n    // Delete user\n    await User.findByIdAndDelete(req.params.id);\n\n    // Update tasks assigned to this user\n    await Task.updateMany({ assignee: req.params.id }, { $unset: { assignee: 1 } });\n\n    res.status(200).json({\n      success: true,\n      message: \"User deleted successfully\",\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Get user tasks\nrouter.get(\"/:id/tasks\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Check if user is admin or requesting their own tasks\n    if (req.user.role !== \"admin\" \u0026\u0026 req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to access this resource\"));\n    }\n\n    const { status, priority, sort, page = 1, limit = 10 } = req.query;\n\n    // Build query\n    const query = { assignee: req.params.id };\n\n    // Filter by status\n    if (status \u0026\u0026 status !== \"all\") {\n      query.status = status;\n    }\n\n    // Filter by priority\n    if (priority \u0026\u0026 priority !== \"all\") {\n      query.priority = priority;\n    }\n\n    // Count total documents\n    const total = await Task.countDocuments(query);\n\n    // Build sort options\n    let sortOptions = { createdAt: -1 }; // Default sort\n    if (sort) {\n      const [field, order] = sort.split(\":\");\n      sortOptions = { [field]: order === \"asc\" ? 1 : -1 };\n    }\n\n    // Fetch tasks with pagination\n    const tasks = await Task.find(query)\n      .populate(\"assignee\", \"name email avatar\")\n      .populate(\"creator\", \"name email avatar\")\n      .sort(sortOptions)\n      .skip((page - 1) * limit)\n      .limit(Number.parseInt(limit));\n\n    res.status(200).json({\n      success: true,\n      count: tasks.length,\n      total,\n      totalPages: Math.ceil(total / limit),\n      currentPage: Number.parseInt(page),\n      tasks,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\nexport default router;"])</script><script>self.__next_f.push([1,"af:T21d6,"])</script><script>self.__next_f.push([1,"import express from \"express\";\nimport User from \"../models/User.js\";\nimport Task from \"../models/Task.js\";\nimport { verifyToken, verifyAdmin } from \"../middleware/auth.js\";\nimport { createError } from \"../utils/error.js\";\nimport upload from \"../middleware/upload.js\";\n\nconst router = express.Router();\n\n// Get all users (admin only)\nrouter.get(\"/\", verifyToken, verifyAdmin, async (req, res, next) =\u003e {\n  try {\n    const { role, status, search, sort, page = 1, limit = 10 } = req.query;\n\n    // Build query\n    const query = {};\n\n    // Filter by role\n    if (role \u0026\u0026 role !== \"all\") {\n      query.role = role;\n    }\n\n    // Filter by status\n    if (status \u0026\u0026 status !== \"all\") {\n      query.status = status;\n    }\n\n    // Search by name or email\n    if (search) {\n      query.$or = [{ name: { $regex: search, $options: \"i\" } }, { email: { $regex: search, $options: \"i\" } }];\n    }\n\n    // Count total documents\n    const total = await User.countDocuments(query);\n\n    // Build sort options\n    let sortOptions = { createdAt: -1 }; // Default sort\n    if (sort) {\n      const [field, order] = sort.split(\":\");\n      sortOptions = { [field]: order === \"asc\" ? 1 : -1 };\n    }\n\n    // Fetch users with pagination\n    const users = await User.find(query)\n      .sort(sortOptions)\n      .skip((page - 1) * limit)\n      .limit(Number.parseInt(limit));\n\n    res.status(200).json({\n      success: true,\n      count: users.length,\n      total,\n      totalPages: Math.ceil(total / limit),\n      currentPage: Number.parseInt(page),\n      users,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Get user by ID\nrouter.get(\"/:id\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Check if user is admin or requesting their own profile\n    if (req.user.role !== \"admin\" \u0026\u0026 req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to access this resource\"));\n    }\n\n    const user = await User.findById(req.params.id);\n    if (!user) {\n      return next(createError(404, \"User not found\"));\n    }\n\n    res.status(200).json({\n      success: true,\n      user,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Update user\nrouter.put(\"/:id\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Check if user is admin or updating their own profile\n    if (req.user.role !== \"admin\" \u0026\u0026 req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to update this user\"));\n    }\n\n    const { name, email, bio, jobTitle, company, notificationPreferences } = req.body;\n\n    // Find user\n    const user = await User.findById(req.params.id);\n    if (!user) {\n      return next(createError(404, \"User not found\"));\n    }\n\n    // Update fields\n    if (name) user.name = name;\n    if (bio) user.bio = bio;\n    if (jobTitle) user.jobTitle = jobTitle;\n    if (company) user.company = company;\n    if (notificationPreferences)\n      user.notificationPreferences = {\n        ...user.notificationPreferences,\n        ...notificationPreferences,\n      };\n\n    // Only admin can update email or role\n    if (req.user.role === \"admin\") {\n      if (email \u0026\u0026 email !== user.email) {\n        // Check if email is already in use\n        const existingUser = await User.findOne({ email });\n        if (existingUser) {\n          return next(createError(400, \"Email is already in use\"));\n        }\n        user.email = email;\n      }\n\n      if (req.body.role) user.role = req.body.role;\n      if (req.body.status) user.status = req.body.status;\n    }\n\n    // Save user\n    const updatedUser = await user.save();\n\n    res.status(200).json({\n      success: true,\n      message: \"User updated successfully\",\n      user: updatedUser,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Update user avatar\nrouter.put(\"/:id/avatar\", verifyToken, upload.single(\"avatar\"), async (req, res, next) =\u003e {\n  try {\n    // Check if user is updating their own avatar\n    if (req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to update this user\"));\n    }\n\n    if (!req.file) {\n      return next(createError(400, \"No file uploaded\"));\n    }\n\n    // Find user\n    const user = await User.findById(req.params.id);\n    if (!user) {\n      return next(createError(404, \"User not found\"));\n    }\n\n    // Update avatar\n    user.avatar = `/${req.file.path}`;\n\n    // Save user\n    const updatedUser = await user.save();\n\n    res.status(200).json({\n      success: true,\n      message: \"Avatar updated successfully\",\n      user: updatedUser,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Change password\nrouter.put(\"/:id/password\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Check if user is changing their own password\n    if (req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to change this user's password\"));\n    }\n\n    const { currentPassword, newPassword } = req.body;\n\n    // Find user\n    const user = await User.findById(req.params.id);\n    if (!user) {\n      return next(createError(404, \"User not found\"));\n    }\n\n    // Check current password\n    const isPasswordValid = await user.comparePassword(currentPassword);\n    if (!isPasswordValid) {\n      return next(createError(401, \"Current password is incorrect\"));\n    }\n\n    // Update password\n    user.password = newPassword;\n\n    // Save user\n    await user.save();\n\n    res.status(200).json({\n      success: true,\n      message: \"Password changed successfully\",\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Toggle two-factor authentication\nrouter.put(\"/:id/two-factor\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Check if user is updating their own settings\n    if (req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to update this user\"));\n    }\n\n    // Find user\n    const user = await User.findById(req.params.id);\n    if (!user) {\n      return next(createError(404, \"User not found\"));\n    }\n\n    // Toggle two-factor authentication\n    user.twoFactorEnabled = !user.twoFactorEnabled;\n\n    // Save user\n    const updatedUser = await user.save();\n\n    res.status(200).json({\n      success: true,\n      message: `Two-factor authentication ${updatedUser.twoFactorEnabled ? \"enabled\" : \"disabled\"}`,\n      user: updatedUser,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Delete user (admin only)\nrouter.delete(\"/:id\", verifyToken, verifyAdmin, async (req, res, next) =\u003e {\n  try {\n    // Find user\n    const user = await User.findById(req.params.id);\n    if (!user) {\n      return next(createError(404, \"User not found\"));\n    }\n\n    // Check if user is trying to delete themselves\n    if (req.user._id.toString() === req.params.id) {\n      return next(createError(400, \"You cannot delete your own account\"));\n    }\n\n    // Delete user\n    await User.findByIdAndDelete(req.params.id);\n\n    // Update tasks assigned to this user\n    await Task.updateMany({ assignee: req.params.id }, { $unset: { assignee: 1 } });\n\n    res.status(200).json({\n      success: true,\n      message: \"User deleted successfully\",\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Get user tasks\nrouter.get(\"/:id/tasks\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Check if user is admin or requesting their own tasks\n    if (req.user.role !== \"admin\" \u0026\u0026 req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to access this resource\"));\n    }\n\n    const { status, priority, sort, page = 1, limit = 10 } = req.query;\n\n    // Build query\n    const query = { assignee: req.params.id };\n\n    // Filter by status\n    if (status \u0026\u0026 status !== \"all\") {\n      query.status = status;\n    }\n\n    // Filter by priority\n    if (priority \u0026\u0026 priority !== \"all\") {\n      query.priority = priority;\n    }\n\n    // Count total documents\n    const total = await Task.countDocuments(query);\n\n    // Build sort options\n    let sortOptions = { createdAt: -1 }; // Default sort\n    if (sort) {\n      const [field, order] = sort.split(\":\");\n      sortOptions = { [field]: order === \"asc\" ? 1 : -1 };\n    }\n\n    // Fetch tasks with pagination\n    const tasks = await Task.find(query)\n      .populate(\"assignee\", \"name email avatar\")\n      .populate(\"creator\", \"name email avatar\")\n      .sort(sortOptions)\n      .skip((page - 1) * limit)\n      .limit(Number.parseInt(limit));\n\n    res.status(200).json({\n      success: true,\n      count: tasks.length,\n      total,\n      totalPages: Math.ceil(total / limit),\n      currentPage: Number.parseInt(page),\n      tasks,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\nexport default router;"])</script><script>self.__next_f.push([1,"b0:T21d6,"])</script><script>self.__next_f.push([1,"import express from \"express\";\nimport User from \"../models/User.js\";\nimport Task from \"../models/Task.js\";\nimport { verifyToken, verifyAdmin } from \"../middleware/auth.js\";\nimport { createError } from \"../utils/error.js\";\nimport upload from \"../middleware/upload.js\";\n\nconst router = express.Router();\n\n// Get all users (admin only)\nrouter.get(\"/\", verifyToken, verifyAdmin, async (req, res, next) =\u003e {\n  try {\n    const { role, status, search, sort, page = 1, limit = 10 } = req.query;\n\n    // Build query\n    const query = {};\n\n    // Filter by role\n    if (role \u0026\u0026 role !== \"all\") {\n      query.role = role;\n    }\n\n    // Filter by status\n    if (status \u0026\u0026 status !== \"all\") {\n      query.status = status;\n    }\n\n    // Search by name or email\n    if (search) {\n      query.$or = [{ name: { $regex: search, $options: \"i\" } }, { email: { $regex: search, $options: \"i\" } }];\n    }\n\n    // Count total documents\n    const total = await User.countDocuments(query);\n\n    // Build sort options\n    let sortOptions = { createdAt: -1 }; // Default sort\n    if (sort) {\n      const [field, order] = sort.split(\":\");\n      sortOptions = { [field]: order === \"asc\" ? 1 : -1 };\n    }\n\n    // Fetch users with pagination\n    const users = await User.find(query)\n      .sort(sortOptions)\n      .skip((page - 1) * limit)\n      .limit(Number.parseInt(limit));\n\n    res.status(200).json({\n      success: true,\n      count: users.length,\n      total,\n      totalPages: Math.ceil(total / limit),\n      currentPage: Number.parseInt(page),\n      users,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Get user by ID\nrouter.get(\"/:id\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Check if user is admin or requesting their own profile\n    if (req.user.role !== \"admin\" \u0026\u0026 req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to access this resource\"));\n    }\n\n    const user = await User.findById(req.params.id);\n    if (!user) {\n      return next(createError(404, \"User not found\"));\n    }\n\n    res.status(200).json({\n      success: true,\n      user,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Update user\nrouter.put(\"/:id\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Check if user is admin or updating their own profile\n    if (req.user.role !== \"admin\" \u0026\u0026 req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to update this user\"));\n    }\n\n    const { name, email, bio, jobTitle, company, notificationPreferences } = req.body;\n\n    // Find user\n    const user = await User.findById(req.params.id);\n    if (!user) {\n      return next(createError(404, \"User not found\"));\n    }\n\n    // Update fields\n    if (name) user.name = name;\n    if (bio) user.bio = bio;\n    if (jobTitle) user.jobTitle = jobTitle;\n    if (company) user.company = company;\n    if (notificationPreferences)\n      user.notificationPreferences = {\n        ...user.notificationPreferences,\n        ...notificationPreferences,\n      };\n\n    // Only admin can update email or role\n    if (req.user.role === \"admin\") {\n      if (email \u0026\u0026 email !== user.email) {\n        // Check if email is already in use\n        const existingUser = await User.findOne({ email });\n        if (existingUser) {\n          return next(createError(400, \"Email is already in use\"));\n        }\n        user.email = email;\n      }\n\n      if (req.body.role) user.role = req.body.role;\n      if (req.body.status) user.status = req.body.status;\n    }\n\n    // Save user\n    const updatedUser = await user.save();\n\n    res.status(200).json({\n      success: true,\n      message: \"User updated successfully\",\n      user: updatedUser,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Update user avatar\nrouter.put(\"/:id/avatar\", verifyToken, upload.single(\"avatar\"), async (req, res, next) =\u003e {\n  try {\n    // Check if user is updating their own avatar\n    if (req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to update this user\"));\n    }\n\n    if (!req.file) {\n      return next(createError(400, \"No file uploaded\"));\n    }\n\n    // Find user\n    const user = await User.findById(req.params.id);\n    if (!user) {\n      return next(createError(404, \"User not found\"));\n    }\n\n    // Update avatar\n    user.avatar = `/${req.file.path}`;\n\n    // Save user\n    const updatedUser = await user.save();\n\n    res.status(200).json({\n      success: true,\n      message: \"Avatar updated successfully\",\n      user: updatedUser,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Change password\nrouter.put(\"/:id/password\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Check if user is changing their own password\n    if (req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to change this user's password\"));\n    }\n\n    const { currentPassword, newPassword } = req.body;\n\n    // Find user\n    const user = await User.findById(req.params.id);\n    if (!user) {\n      return next(createError(404, \"User not found\"));\n    }\n\n    // Check current password\n    const isPasswordValid = await user.comparePassword(currentPassword);\n    if (!isPasswordValid) {\n      return next(createError(401, \"Current password is incorrect\"));\n    }\n\n    // Update password\n    user.password = newPassword;\n\n    // Save user\n    await user.save();\n\n    res.status(200).json({\n      success: true,\n      message: \"Password changed successfully\",\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Toggle two-factor authentication\nrouter.put(\"/:id/two-factor\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Check if user is updating their own settings\n    if (req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to update this user\"));\n    }\n\n    // Find user\n    const user = await User.findById(req.params.id);\n    if (!user) {\n      return next(createError(404, \"User not found\"));\n    }\n\n    // Toggle two-factor authentication\n    user.twoFactorEnabled = !user.twoFactorEnabled;\n\n    // Save user\n    const updatedUser = await user.save();\n\n    res.status(200).json({\n      success: true,\n      message: `Two-factor authentication ${updatedUser.twoFactorEnabled ? \"enabled\" : \"disabled\"}`,\n      user: updatedUser,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Delete user (admin only)\nrouter.delete(\"/:id\", verifyToken, verifyAdmin, async (req, res, next) =\u003e {\n  try {\n    // Find user\n    const user = await User.findById(req.params.id);\n    if (!user) {\n      return next(createError(404, \"User not found\"));\n    }\n\n    // Check if user is trying to delete themselves\n    if (req.user._id.toString() === req.params.id) {\n      return next(createError(400, \"You cannot delete your own account\"));\n    }\n\n    // Delete user\n    await User.findByIdAndDelete(req.params.id);\n\n    // Update tasks assigned to this user\n    await Task.updateMany({ assignee: req.params.id }, { $unset: { assignee: 1 } });\n\n    res.status(200).json({\n      success: true,\n      message: \"User deleted successfully\",\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Get user tasks\nrouter.get(\"/:id/tasks\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Check if user is admin or requesting their own tasks\n    if (req.user.role !== \"admin\" \u0026\u0026 req.user._id.toString() !== req.params.id) {\n      return next(createError(403, \"You are not authorized to access this resource\"));\n    }\n\n    const { status, priority, sort, page = 1, limit = 10 } = req.query;\n\n    // Build query\n    const query = { assignee: req.params.id };\n\n    // Filter by status\n    if (status \u0026\u0026 status !== \"all\") {\n      query.status = status;\n    }\n\n    // Filter by priority\n    if (priority \u0026\u0026 priority !== \"all\") {\n      query.priority = priority;\n    }\n\n    // Count total documents\n    const total = await Task.countDocuments(query);\n\n    // Build sort options\n    let sortOptions = { createdAt: -1 }; // Default sort\n    if (sort) {\n      const [field, order] = sort.split(\":\");\n      sortOptions = { [field]: order === \"asc\" ? 1 : -1 };\n    }\n\n    // Fetch tasks with pagination\n    const tasks = await Task.find(query)\n      .populate(\"assignee\", \"name email avatar\")\n      .populate(\"creator\", \"name email avatar\")\n      .sort(sortOptions)\n      .skip((page - 1) * limit)\n      .limit(Number.parseInt(limit));\n\n    res.status(200).json({\n      success: true,\n      count: tasks.length,\n      total,\n      totalPages: Math.ceil(total / limit),\n      currentPage: Number.parseInt(page),\n      tasks,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\nexport default router;"])</script><script>self.__next_f.push([1,"b1:T3671,"])</script><script>self.__next_f.push([1,"import express from \"express\";\nimport Task from \"../models/Task.js\";\nimport User from \"../models/User.js\";\nimport Comment from \"../models/Comment.js\";\nimport Notification from \"../models/Notification.js\";\nimport { verifyToken, verifyAdminOrEditor, verifyOwnerOrAdmin } from \"../middleware/auth.js\";\nimport { createError } from \"../utils/error.js\";\nimport upload from \"../middleware/upload.js\";\nimport { sendEmail } from \"../utils/email.js\";\n\nconst router = express.Router();\n\n// Create a new task\nrouter.post(\"/\", verifyToken, verifyAdminOrEditor, async (req, res, next) =\u003e {\n  try {\n    const { title, description, status, priority, dueDate, assignee, tags, subtasks } = req.body;\n\n    // Create new task\n    const newTask = new Task({\n      title,\n      description,\n      status: status || \"to-do\",\n      priority: priority || \"medium\",\n      dueDate,\n      assignee,\n      creator: req.user._id,\n      tags: tags || [],\n      subtasks: subtasks || [],\n    });\n\n    // Save task\n    const savedTask = await newTask.save();\n\n    // If task is assigned to someone, send notification\n    if (assignee) {\n      // Create notification\n      const notification = new Notification({\n        recipient: assignee,\n        sender: req.user._id,\n        type: \"task_assigned\",\n        title: \"New Task Assigned\",\n        message: `You have been assigned a new task: ${title}`,\n        relatedTask: savedTask._id,\n      });\n\n      await notification.save();\n\n      // Send real-time notification\n      if (req.io) {\n        req.io.to(assignee.toString()).emit(\"notification\", notification);\n      }\n\n      // Get assignee details\n      const assigneeUser = await User.findById(assignee);\n\n      // Send email notification if user has email notifications enabled\n      if (\n        assigneeUser \u0026\u0026\n        assigneeUser.notificationPreferences.emailNotifications \u0026\u0026\n        assigneeUser.notificationPreferences.taskAssigned\n      ) {\n        sendEmail({\n          to: assigneeUser.email,\n          subject: \"New Task Assigned\",\n          text: `Hello ${assigneeUser.name},\n\nYou have been assigned a new task: ${title}\n\nDue Date: ${dueDate ? new Date(dueDate).toLocaleDateString() : \"Not set\"}\nPriority: ${priority || \"Medium\"}\n\nDescription:\n${description || \"No description provided\"}\n\nBest regards,\nThe Task Management Team`,\n        });\n      }\n    }\n\n    res.status(201).json({\n      success: true,\n      message: \"Task created successfully\",\n      task: savedTask,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Get all tasks\nrouter.get(\"/\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { status, priority, assignee, creator, search, tags, dueDate, sort, page = 1, limit = 10 } = req.query;\n\n    // Build query\n    const query = {};\n\n    // Filter by status\n    if (status \u0026\u0026 status !== \"all\") {\n      query.status = status;\n    }\n\n    // Filter by priority\n    if (priority \u0026\u0026 priority !== \"all\") {\n      query.priority = priority;\n    }\n\n    // Filter by assignee\n    if (assignee) {\n      query.assignee = assignee;\n    }\n\n    // Filter by creator\n    if (creator) {\n      query.creator = creator;\n    }\n\n    // Filter by tags\n    if (tags) {\n      query.tags = { $in: tags.split(\",\") };\n    }\n\n    // Filter by due date\n    if (dueDate) {\n      const today = new Date();\n      today.setHours(0, 0, 0, 0);\n\n      if (dueDate === \"overdue\") {\n        query.dueDate = { $lt: today };\n        query.status = { $ne: \"completed\" };\n      } else if (dueDate === \"today\") {\n        const tomorrow = new Date(today);\n        tomorrow.setDate(tomorrow.getDate() + 1);\n        query.dueDate = { $gte: today, $lt: tomorrow };\n      } else if (dueDate === \"week\") {\n        const nextWeek = new Date(today);\n        nextWeek.setDate(nextWeek.getDate() + 7);\n        query.dueDate = { $gte: today, $lt: nextWeek };\n      }\n    }\n\n    // Search by title or description\n    if (search) {\n      query.$or = [{ title: { $regex: search, $options: \"i\" } }, { description: { $regex: search, $options: \"i\" } }];\n    }\n\n    // Viewers can only see tasks assigned to them or created by them\n    if (req.user.role === \"viewer\") {\n      query.$or = [{ assignee: req.user._id }, { creator: req.user._id }, { watchers: req.user._id }];\n    }\n\n    // Count total documents\n    const total = await Task.countDocuments(query);\n\n    // Build sort options\n    let sortOptions = { createdAt: -1 }; // Default sort\n    if (sort) {\n      const [field, order] = sort.split(\":\");\n      sortOptions = { [field]: order === \"asc\" ? 1 : -1 };\n    }\n\n    // Fetch tasks with pagination\n    const tasks = await Task.find(query)\n      .populate(\"assignee\", \"name email avatar\")\n      .populate(\"creator\", \"name email avatar\")\n      .sort(sortOptions)\n      .skip((page - 1) * limit)\n      .limit(Number.parseInt(limit));\n\n    res.status(200).json({\n      success: true,\n      count: tasks.length,\n      total,\n      totalPages: Math.ceil(total / limit),\n      currentPage: Number.parseInt(page),\n      tasks,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Get task by ID\nrouter.get(\"/:id\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const task = await Task.findById(req.params.id)\n      .populate(\"assignee\", \"name email avatar\")\n      .populate(\"creator\", \"name email avatar\")\n      .populate(\"watchers\", \"name email avatar\");\n\n    if (!task) {\n      return next(createError(404, \"Task not found\"));\n    }\n\n    // Check if user has access to this task\n    if (\n      req.user.role === \"viewer\" \u0026\u0026\n      task.assignee?._id.toString() !== req.user._id.toString() \u0026\u0026\n      task.creator._id.toString() !== req.user._id.toString() \u0026\u0026\n      !task.watchers.some((watcher) =\u003e watcher._id.toString() === req.user._id.toString())\n    ) {\n      return next(createError(403, \"You are not authorized to access this task\"));\n    }\n\n    res.status(200).json({\n      success: true,\n      task,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Update task\nrouter.put(\"/:id\", verifyToken, verifyOwnerOrAdmin(Task), async (req, res, next) =\u003e {\n  try {\n    const { title, description, status, priority, dueDate, assignee, tags, subtasks, progress } = req.body;\n\n    const task = req.resource; // From verifyOwnerOrAdmin middleware\n\n    // Store old assignee for notification\n    const oldAssignee = task.assignee;\n\n    // Update fields\n    if (title) task.title = title;\n    if (description !== undefined) task.description = description;\n    if (status) task.status = status;\n    if (priority) task.priority = priority;\n    if (dueDate !== undefined) task.dueDate = dueDate;\n    if (assignee !== undefined) task.assignee = assignee;\n    if (tags) task.tags = tags;\n    if (subtasks) task.subtasks = subtasks;\n    if (progress !== undefined) task.progress = progress;\n\n    // Save task\n    const updatedTask = await task.save();\n\n    // If assignee has changed, send notification to new assignee\n    if (assignee \u0026\u0026 (!oldAssignee || oldAssignee.toString() !== assignee.toString())) {\n      // Create notification\n      const notification = new Notification({\n        recipient: assignee,\n        sender: req.user._id,\n        type: \"task_assigned\",\n        title: \"Task Assigned\",\n        message: `You have been assigned to the task: ${task.title}`,\n        relatedTask: task._id,\n      });\n\n      await notification.save();\n\n      // Send real-time notification\n      if (req.io) {\n        req.io.to(assignee.toString()).emit(\"notification\", notification);\n      }\n\n      // Get assignee details\n      const assigneeUser = await User.findById(assignee);\n\n      // Send email notification if user has email notifications enabled\n      if (\n        assigneeUser \u0026\u0026\n        assigneeUser.notificationPreferences.emailNotifications \u0026\u0026\n        assigneeUser.notificationPreferences.taskAssigned\n      ) {\n        sendEmail({\n          to: assigneeUser.email,\n          subject: \"Task Assigned\",\n          text: `Hello ${assigneeUser.name},\n\nYou have been assigned to the task: ${task.title}\n\nDue Date: ${task.dueDate ? new Date(task.dueDate).toLocaleDateString() : \"Not set\"}\nPriority: ${task.priority}\n\nDescription:\n${task.description || \"No description provided\"}\n\nBest regards,\nThe Task Management Team`,\n        });\n      }\n    }\n\n    // If status has changed to completed, send notification to creator\n    if (status === \"completed\" \u0026\u0026 task.status !== \"completed\") {\n      // Create notification for creator\n      const notification = new Notification({\n        recipient: task.creator,\n        sender: req.user._id,\n        type: \"task_completed\",\n        title: \"Task Completed\",\n        message: `The task \"${task.title}\" has been marked as completed`,\n        relatedTask: task._id,\n      });\n\n      await notification.save();\n\n      // Send real-time notification\n      if (req.io) {\n        req.io.to(task.creator.toString()).emit(\"notification\", notification);\n      }\n\n      // Get creator details\n      const creatorUser = await User.findById(task.creator);\n\n      // Send email notification if user has email notifications enabled\n      if (\n        creatorUser \u0026\u0026\n        creatorUser.notificationPreferences.emailNotifications \u0026\u0026\n        creatorUser.notificationPreferences.taskCompleted\n      ) {\n        sendEmail({\n          to: creatorUser.email,\n          subject: \"Task Completed\",\n          text: `Hello ${creatorUser.name},\n\nThe task \"${task.title}\" has been marked as completed.\n\nBest regards,\nThe Task Management Team`,\n        });\n      }\n    }\n\n    // If task has been updated, notify assignee\n    if (task.assignee \u0026\u0026 task.assignee.toString() !== req.user._id.toString()) {\n      // Create notification\n      const notification = new Notification({\n        recipient: task.assignee,\n        sender: req.user._id,\n        type: \"task_updated\",\n        title: \"Task Updated\",\n        message: `The task \"${task.title}\" has been updated`,\n        relatedTask: task._id,\n      });\n\n      await notification.save();\n\n      // Send real-time notification\n      if (req.io) {\n        req.io.to(task.assignee.toString()).emit(\"notification\", notification);\n      }\n\n      // Get assignee details\n      const assigneeUser = await User.findById(task.assignee);\n\n      // Send email notification if user has email notifications enabled\n      if (\n        assigneeUser \u0026\u0026\n        assigneeUser.notificationPreferences.emailNotifications \u0026\u0026\n        assigneeUser.notificationPreferences.taskUpdated\n      ) {\n        sendEmail({\n          to: assigneeUser.email,\n          subject: \"Task Updated\",\n          text: `Hello ${assigneeUser.name},\n\nThe task \"${task.title}\" has been updated.\n\nBest regards,\nThe Task Management Team`,\n        });\n      }\n    }\n\n    res.status(200).json({\n      success: true,\n      message: \"Task updated successfully\",\n      task: updatedTask,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Delete task\nrouter.delete(\"/:id\", verifyToken, verifyOwnerOrAdmin(Task), async (req, res, next) =\u003e {\n  try {\n    const task = req.resource; // From verifyOwnerOrAdmin middleware\n\n    // Delete task\n    await Task.findByIdAndDelete(req.params.id);\n\n    // Delete associated comments\n    await Comment.deleteMany({ task: req.params.id });\n\n    // Delete associated notifications\n    await Notification.deleteMany({ relatedTask: req.params.id });\n\n    res.status(200).json({\n      success: true,\n      message: \"Task deleted successfully\",\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Add attachment to task\nrouter.post(\n  \"/:id/attachments\",\n  verifyToken,\n  verifyOwnerOrAdmin(Task),\n  upload.single(\"file\"),\n  async (req, res, next) =\u003e {\n    try {\n      if (!req.file) {\n        return next(createError(400, \"No file uploaded\"));\n      }\n\n      const task = req.resource; // From verifyOwnerOrAdmin middleware\n\n      // Add attachment\n      task.attachments.push({\n        name: req.file.originalname,\n        path: `/${req.file.path}`,\n        type: req.file.mimetype,\n        size: req.file.size,\n      });\n\n      // Save task\n      const updatedTask = await task.save();\n\n      res.status(200).json({\n        success: true,\n        message: \"Attachment added successfully\",\n        task: updatedTask,\n      });\n    } catch (err) {\n      next(err);\n    }\n  },\n);\n\n// Delete attachment from task\nrouter.delete(\"/:id/attachments/:attachmentId\", verifyToken, verifyOwnerOrAdmin(Task), async (req, res, next) =\u003e {\n  try {\n    const task = req.resource; // From verifyOwnerOrAdmin middleware\n\n    // Remove attachment\n    task.attachments = task.attachments.filter((attachment) =\u003e attachment._id.toString() !== req.params.attachmentId);\n\n    // Save task\n    const updatedTask = await task.save();\n\n    res.status(200).json({\n      success: true,\n      message: \"Attachment deleted successfully\",\n      task: updatedTask,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Add watcher to task\nrouter.post(\"/:id/watchers\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const task = await Task.findById(req.params.id);\n    if (!task) {\n      return next(createError(404, \"Task not found\"));\n    }\n\n    // Add user to watchers if not already watching\n    if (!task.watchers.includes(req.user._id)) {\n      task.watchers.push(req.user._id);\n      await task.save();\n    }\n\n    res.status(200).json({\n      success: true,\n      message: \"You are now watching this task\",\n      task,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Remove watcher from task\nrouter.delete(\"/:id/watchers\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const task = await Task.findById(req.params.id);\n    if (!task) {\n      return next(createError(404, \"Task not found\"));\n    }\n\n    // Remove user from watchers\n    task.watchers = task.watchers.filter((watcher) =\u003e watcher.toString() !== req.user._id.toString());\n\n    await task.save();\n\n    res.status(200).json({\n      success: true,\n      message: \"You are no longer watching this task\",\n      task,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\nexport default router;"])</script><script>self.__next_f.push([1,"b2:T3671,"])</script><script>self.__next_f.push([1,"import express from \"express\";\nimport Task from \"../models/Task.js\";\nimport User from \"../models/User.js\";\nimport Comment from \"../models/Comment.js\";\nimport Notification from \"../models/Notification.js\";\nimport { verifyToken, verifyAdminOrEditor, verifyOwnerOrAdmin } from \"../middleware/auth.js\";\nimport { createError } from \"../utils/error.js\";\nimport upload from \"../middleware/upload.js\";\nimport { sendEmail } from \"../utils/email.js\";\n\nconst router = express.Router();\n\n// Create a new task\nrouter.post(\"/\", verifyToken, verifyAdminOrEditor, async (req, res, next) =\u003e {\n  try {\n    const { title, description, status, priority, dueDate, assignee, tags, subtasks } = req.body;\n\n    // Create new task\n    const newTask = new Task({\n      title,\n      description,\n      status: status || \"to-do\",\n      priority: priority || \"medium\",\n      dueDate,\n      assignee,\n      creator: req.user._id,\n      tags: tags || [],\n      subtasks: subtasks || [],\n    });\n\n    // Save task\n    const savedTask = await newTask.save();\n\n    // If task is assigned to someone, send notification\n    if (assignee) {\n      // Create notification\n      const notification = new Notification({\n        recipient: assignee,\n        sender: req.user._id,\n        type: \"task_assigned\",\n        title: \"New Task Assigned\",\n        message: `You have been assigned a new task: ${title}`,\n        relatedTask: savedTask._id,\n      });\n\n      await notification.save();\n\n      // Send real-time notification\n      if (req.io) {\n        req.io.to(assignee.toString()).emit(\"notification\", notification);\n      }\n\n      // Get assignee details\n      const assigneeUser = await User.findById(assignee);\n\n      // Send email notification if user has email notifications enabled\n      if (\n        assigneeUser \u0026\u0026\n        assigneeUser.notificationPreferences.emailNotifications \u0026\u0026\n        assigneeUser.notificationPreferences.taskAssigned\n      ) {\n        sendEmail({\n          to: assigneeUser.email,\n          subject: \"New Task Assigned\",\n          text: `Hello ${assigneeUser.name},\n\nYou have been assigned a new task: ${title}\n\nDue Date: ${dueDate ? new Date(dueDate).toLocaleDateString() : \"Not set\"}\nPriority: ${priority || \"Medium\"}\n\nDescription:\n${description || \"No description provided\"}\n\nBest regards,\nThe Task Management Team`,\n        });\n      }\n    }\n\n    res.status(201).json({\n      success: true,\n      message: \"Task created successfully\",\n      task: savedTask,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Get all tasks\nrouter.get(\"/\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { status, priority, assignee, creator, search, tags, dueDate, sort, page = 1, limit = 10 } = req.query;\n\n    // Build query\n    const query = {};\n\n    // Filter by status\n    if (status \u0026\u0026 status !== \"all\") {\n      query.status = status;\n    }\n\n    // Filter by priority\n    if (priority \u0026\u0026 priority !== \"all\") {\n      query.priority = priority;\n    }\n\n    // Filter by assignee\n    if (assignee) {\n      query.assignee = assignee;\n    }\n\n    // Filter by creator\n    if (creator) {\n      query.creator = creator;\n    }\n\n    // Filter by tags\n    if (tags) {\n      query.tags = { $in: tags.split(\",\") };\n    }\n\n    // Filter by due date\n    if (dueDate) {\n      const today = new Date();\n      today.setHours(0, 0, 0, 0);\n\n      if (dueDate === \"overdue\") {\n        query.dueDate = { $lt: today };\n        query.status = { $ne: \"completed\" };\n      } else if (dueDate === \"today\") {\n        const tomorrow = new Date(today);\n        tomorrow.setDate(tomorrow.getDate() + 1);\n        query.dueDate = { $gte: today, $lt: tomorrow };\n      } else if (dueDate === \"week\") {\n        const nextWeek = new Date(today);\n        nextWeek.setDate(nextWeek.getDate() + 7);\n        query.dueDate = { $gte: today, $lt: nextWeek };\n      }\n    }\n\n    // Search by title or description\n    if (search) {\n      query.$or = [{ title: { $regex: search, $options: \"i\" } }, { description: { $regex: search, $options: \"i\" } }];\n    }\n\n    // Viewers can only see tasks assigned to them or created by them\n    if (req.user.role === \"viewer\") {\n      query.$or = [{ assignee: req.user._id }, { creator: req.user._id }, { watchers: req.user._id }];\n    }\n\n    // Count total documents\n    const total = await Task.countDocuments(query);\n\n    // Build sort options\n    let sortOptions = { createdAt: -1 }; // Default sort\n    if (sort) {\n      const [field, order] = sort.split(\":\");\n      sortOptions = { [field]: order === \"asc\" ? 1 : -1 };\n    }\n\n    // Fetch tasks with pagination\n    const tasks = await Task.find(query)\n      .populate(\"assignee\", \"name email avatar\")\n      .populate(\"creator\", \"name email avatar\")\n      .sort(sortOptions)\n      .skip((page - 1) * limit)\n      .limit(Number.parseInt(limit));\n\n    res.status(200).json({\n      success: true,\n      count: tasks.length,\n      total,\n      totalPages: Math.ceil(total / limit),\n      currentPage: Number.parseInt(page),\n      tasks,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Get task by ID\nrouter.get(\"/:id\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const task = await Task.findById(req.params.id)\n      .populate(\"assignee\", \"name email avatar\")\n      .populate(\"creator\", \"name email avatar\")\n      .populate(\"watchers\", \"name email avatar\");\n\n    if (!task) {\n      return next(createError(404, \"Task not found\"));\n    }\n\n    // Check if user has access to this task\n    if (\n      req.user.role === \"viewer\" \u0026\u0026\n      task.assignee?._id.toString() !== req.user._id.toString() \u0026\u0026\n      task.creator._id.toString() !== req.user._id.toString() \u0026\u0026\n      !task.watchers.some((watcher) =\u003e watcher._id.toString() === req.user._id.toString())\n    ) {\n      return next(createError(403, \"You are not authorized to access this task\"));\n    }\n\n    res.status(200).json({\n      success: true,\n      task,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Update task\nrouter.put(\"/:id\", verifyToken, verifyOwnerOrAdmin(Task), async (req, res, next) =\u003e {\n  try {\n    const { title, description, status, priority, dueDate, assignee, tags, subtasks, progress } = req.body;\n\n    const task = req.resource; // From verifyOwnerOrAdmin middleware\n\n    // Store old assignee for notification\n    const oldAssignee = task.assignee;\n\n    // Update fields\n    if (title) task.title = title;\n    if (description !== undefined) task.description = description;\n    if (status) task.status = status;\n    if (priority) task.priority = priority;\n    if (dueDate !== undefined) task.dueDate = dueDate;\n    if (assignee !== undefined) task.assignee = assignee;\n    if (tags) task.tags = tags;\n    if (subtasks) task.subtasks = subtasks;\n    if (progress !== undefined) task.progress = progress;\n\n    // Save task\n    const updatedTask = await task.save();\n\n    // If assignee has changed, send notification to new assignee\n    if (assignee \u0026\u0026 (!oldAssignee || oldAssignee.toString() !== assignee.toString())) {\n      // Create notification\n      const notification = new Notification({\n        recipient: assignee,\n        sender: req.user._id,\n        type: \"task_assigned\",\n        title: \"Task Assigned\",\n        message: `You have been assigned to the task: ${task.title}`,\n        relatedTask: task._id,\n      });\n\n      await notification.save();\n\n      // Send real-time notification\n      if (req.io) {\n        req.io.to(assignee.toString()).emit(\"notification\", notification);\n      }\n\n      // Get assignee details\n      const assigneeUser = await User.findById(assignee);\n\n      // Send email notification if user has email notifications enabled\n      if (\n        assigneeUser \u0026\u0026\n        assigneeUser.notificationPreferences.emailNotifications \u0026\u0026\n        assigneeUser.notificationPreferences.taskAssigned\n      ) {\n        sendEmail({\n          to: assigneeUser.email,\n          subject: \"Task Assigned\",\n          text: `Hello ${assigneeUser.name},\n\nYou have been assigned to the task: ${task.title}\n\nDue Date: ${task.dueDate ? new Date(task.dueDate).toLocaleDateString() : \"Not set\"}\nPriority: ${task.priority}\n\nDescription:\n${task.description || \"No description provided\"}\n\nBest regards,\nThe Task Management Team`,\n        });\n      }\n    }\n\n    // If status has changed to completed, send notification to creator\n    if (status === \"completed\" \u0026\u0026 task.status !== \"completed\") {\n      // Create notification for creator\n      const notification = new Notification({\n        recipient: task.creator,\n        sender: req.user._id,\n        type: \"task_completed\",\n        title: \"Task Completed\",\n        message: `The task \"${task.title}\" has been marked as completed`,\n        relatedTask: task._id,\n      });\n\n      await notification.save();\n\n      // Send real-time notification\n      if (req.io) {\n        req.io.to(task.creator.toString()).emit(\"notification\", notification);\n      }\n\n      // Get creator details\n      const creatorUser = await User.findById(task.creator);\n\n      // Send email notification if user has email notifications enabled\n      if (\n        creatorUser \u0026\u0026\n        creatorUser.notificationPreferences.emailNotifications \u0026\u0026\n        creatorUser.notificationPreferences.taskCompleted\n      ) {\n        sendEmail({\n          to: creatorUser.email,\n          subject: \"Task Completed\",\n          text: `Hello ${creatorUser.name},\n\nThe task \"${task.title}\" has been marked as completed.\n\nBest regards,\nThe Task Management Team`,\n        });\n      }\n    }\n\n    // If task has been updated, notify assignee\n    if (task.assignee \u0026\u0026 task.assignee.toString() !== req.user._id.toString()) {\n      // Create notification\n      const notification = new Notification({\n        recipient: task.assignee,\n        sender: req.user._id,\n        type: \"task_updated\",\n        title: \"Task Updated\",\n        message: `The task \"${task.title}\" has been updated`,\n        relatedTask: task._id,\n      });\n\n      await notification.save();\n\n      // Send real-time notification\n      if (req.io) {\n        req.io.to(task.assignee.toString()).emit(\"notification\", notification);\n      }\n\n      // Get assignee details\n      const assigneeUser = await User.findById(task.assignee);\n\n      // Send email notification if user has email notifications enabled\n      if (\n        assigneeUser \u0026\u0026\n        assigneeUser.notificationPreferences.emailNotifications \u0026\u0026\n        assigneeUser.notificationPreferences.taskUpdated\n      ) {\n        sendEmail({\n          to: assigneeUser.email,\n          subject: \"Task Updated\",\n          text: `Hello ${assigneeUser.name},\n\nThe task \"${task.title}\" has been updated.\n\nBest regards,\nThe Task Management Team`,\n        });\n      }\n    }\n\n    res.status(200).json({\n      success: true,\n      message: \"Task updated successfully\",\n      task: updatedTask,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Delete task\nrouter.delete(\"/:id\", verifyToken, verifyOwnerOrAdmin(Task), async (req, res, next) =\u003e {\n  try {\n    const task = req.resource; // From verifyOwnerOrAdmin middleware\n\n    // Delete task\n    await Task.findByIdAndDelete(req.params.id);\n\n    // Delete associated comments\n    await Comment.deleteMany({ task: req.params.id });\n\n    // Delete associated notifications\n    await Notification.deleteMany({ relatedTask: req.params.id });\n\n    res.status(200).json({\n      success: true,\n      message: \"Task deleted successfully\",\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Add attachment to task\nrouter.post(\n  \"/:id/attachments\",\n  verifyToken,\n  verifyOwnerOrAdmin(Task),\n  upload.single(\"file\"),\n  async (req, res, next) =\u003e {\n    try {\n      if (!req.file) {\n        return next(createError(400, \"No file uploaded\"));\n      }\n\n      const task = req.resource; // From verifyOwnerOrAdmin middleware\n\n      // Add attachment\n      task.attachments.push({\n        name: req.file.originalname,\n        path: `/${req.file.path}`,\n        type: req.file.mimetype,\n        size: req.file.size,\n      });\n\n      // Save task\n      const updatedTask = await task.save();\n\n      res.status(200).json({\n        success: true,\n        message: \"Attachment added successfully\",\n        task: updatedTask,\n      });\n    } catch (err) {\n      next(err);\n    }\n  },\n);\n\n// Delete attachment from task\nrouter.delete(\"/:id/attachments/:attachmentId\", verifyToken, verifyOwnerOrAdmin(Task), async (req, res, next) =\u003e {\n  try {\n    const task = req.resource; // From verifyOwnerOrAdmin middleware\n\n    // Remove attachment\n    task.attachments = task.attachments.filter((attachment) =\u003e attachment._id.toString() !== req.params.attachmentId);\n\n    // Save task\n    const updatedTask = await task.save();\n\n    res.status(200).json({\n      success: true,\n      message: \"Attachment deleted successfully\",\n      task: updatedTask,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Add watcher to task\nrouter.post(\"/:id/watchers\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const task = await Task.findById(req.params.id);\n    if (!task) {\n      return next(createError(404, \"Task not found\"));\n    }\n\n    // Add user to watchers if not already watching\n    if (!task.watchers.includes(req.user._id)) {\n      task.watchers.push(req.user._id);\n      await task.save();\n    }\n\n    res.status(200).json({\n      success: true,\n      message: \"You are now watching this task\",\n      task,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Remove watcher from task\nrouter.delete(\"/:id/watchers\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const task = await Task.findById(req.params.id);\n    if (!task) {\n      return next(createError(404, \"Task not found\"));\n    }\n\n    // Remove user from watchers\n    task.watchers = task.watchers.filter((watcher) =\u003e watcher.toString() !== req.user._id.toString());\n\n    await task.save();\n\n    res.status(200).json({\n      success: true,\n      message: \"You are no longer watching this task\",\n      task,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\nexport default router;"])</script><script>self.__next_f.push([1,"b3:T1c87,"])</script><script>self.__next_f.push([1,"import express from \"express\";\nimport Comment from \"../models/Comment.js\";\nimport Task from \"../models/Task.js\";\nimport User from \"../models/User.js\";\nimport Notification from \"../models/Notification.js\";\nimport { verifyToken } from \"../middleware/auth.js\";\nimport { createError } from \"../utils/error.js\";\nimport upload from \"../middleware/upload.js\";\nimport { sendEmail } from \"../utils/email.js\";\n\nconst router = express.Router();\n\n// Create a new comment\nrouter.post(\"/\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { taskId, content, mentions } = req.body;\n\n    // Check if task exists\n    const task = await Task.findById(taskId);\n    if (!task) {\n      return next(createError(404, \"Task not found\"));\n    }\n\n    // Create new comment\n    const newComment = new Comment({\n      task: taskId,\n      user: req.user._id,\n      content,\n      mentions: mentions || [],\n    });\n\n    // Save comment\n    const savedComment = await newComment.save();\n\n    // Populate user data\n    await savedComment.populate(\"user\", \"name email avatar\");\n\n    // Notify task assignee and creator about the comment\n    const notifyUsers = new Set();\n\n    // Add task assignee if exists and is not the commenter\n    if (task.assignee \u0026\u0026 task.assignee.toString() !== req.user._id.toString()) {\n      notifyUsers.add(task.assignee.toString());\n    }\n\n    // Add task creator if not the commenter\n    if (task.creator.toString() !== req.user._id.toString()) {\n      notifyUsers.add(task.creator.toString());\n    }\n\n    // Add watchers if not the commenter\n    task.watchers.forEach((watcher) =\u003e {\n      if (watcher.toString() !== req.user._id.toString()) {\n        notifyUsers.add(watcher.toString());\n      }\n    });\n\n    // Add mentioned users\n    if (mentions \u0026\u0026 mentions.length \u003e 0) {\n      mentions.forEach((userId) =\u003e notifyUsers.add(userId));\n    }\n\n    // Send notifications\n    for (const userId of notifyUsers) {\n      // Create notification\n      const notification = new Notification({\n        recipient: userId,\n        sender: req.user._id,\n        type: \"comment_added\",\n        title: \"New Comment\",\n        message: `${req.user.name} commented on task: ${task.title}`,\n        relatedTask: taskId,\n        relatedComment: savedComment._id,\n      });\n\n      await notification.save();\n\n      // Send real-time notification\n      if (req.io) {\n        req.io.to(userId).emit(\"notification\", notification);\n      }\n\n      // Get user details\n      const user = await User.findById(userId);\n\n      // Send email notification if user has email notifications enabled\n      if (user \u0026\u0026 user.notificationPreferences.emailNotifications \u0026\u0026 user.notificationPreferences.commentAdded) {\n        sendEmail({\n          to: user.email,\n          subject: \"New Comment on Task\",\n          text: `Hello ${user.name},\n\n${req.user.name} commented on the task \"${task.title}\":\n\n\"${content}\"\n\nBest regards,\nThe Task Management Team`,\n        });\n      }\n    }\n\n    res.status(201).json({\n      success: true,\n      message: \"Comment added successfully\",\n      comment: savedComment,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Get comments for a task\nrouter.get(\"/task/:taskId\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { page = 1, limit = 10 } = req.query;\n\n    // Check if task exists\n    const task = await Task.findById(req.params.taskId);\n    if (!task) {\n      return next(createError(404, \"Task not found\"));\n    }\n\n    // Check if user has access to this task\n    if (\n      req.user.role === \"viewer\" \u0026\u0026\n      task.assignee?.toString() !== req.user._id.toString() \u0026\u0026\n      task.creator.toString() !== req.user._id.toString() \u0026\u0026\n      !task.watchers.some((watcher) =\u003e watcher.toString() === req.user._id.toString())\n    ) {\n      return next(createError(403, \"You are not authorized to access this task\"));\n    }\n\n    // Count total comments\n    const total = await Comment.countDocuments({ task: req.params.taskId });\n\n    // Fetch comments with pagination\n    const comments = await Comment.find({ task: req.params.taskId })\n      .populate(\"user\", \"name email avatar\")\n      .sort({ createdAt: -1 })\n      .skip((page - 1) * limit)\n      .limit(Number.parseInt(limit));\n\n    res.status(200).json({\n      success: true,\n      count: comments.length,\n      total,\n      totalPages: Math.ceil(total / limit),\n      currentPage: Number.parseInt(page),\n      comments,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Update comment\nrouter.put(\"/:id\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { content, mentions } = req.body;\n\n    // Find comment\n    const comment = await Comment.findById(req.params.id);\n    if (!comment) {\n      return next(createError(404, \"Comment not found\"));\n    }\n\n    // Check if user is the comment author\n    if (comment.user.toString() !== req.user._id.toString() \u0026\u0026 req.user.role !== \"admin\") {\n      return next(createError(403, \"You are not authorized to update this comment\"));\n    }\n\n    // Update fields\n    if (content) comment.content = content;\n    if (mentions) comment.mentions = mentions;\n\n    // Save comment\n    const updatedComment = await comment.save();\n\n    // Populate user data\n    await updatedComment.populate(\"user\", \"name email avatar\");\n\n    res.status(200).json({\n      success: true,\n      message: \"Comment updated successfully\",\n      comment: updatedComment,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Delete comment\nrouter.delete(\"/:id\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Find comment\n    const comment = await Comment.findById(req.params.id);\n    if (!comment) {\n      return next(createError(404, \"Comment not found\"));\n    }\n\n    // Check if user is the comment author or admin\n    if (comment.user.toString() !== req.user._id.toString() \u0026\u0026 req.user.role !== \"admin\") {\n      return next(createError(403, \"You are not authorized to delete this comment\"));\n    }\n\n    // Delete comment\n    await Comment.findByIdAndDelete(req.params.id);\n\n    // Delete associated notifications\n    await Notification.deleteMany({ relatedComment: req.params.id });\n\n    res.status(200).json({\n      success: true,\n      message: \"Comment deleted successfully\",\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Add attachment to comment\nrouter.post(\"/:id/attachments\", verifyToken, upload.single(\"file\"), async (req, res, next) =\u003e {\n  try {\n    if (!req.file) {\n      return next(createError(400, \"No file uploaded\"));\n    }\n\n    // Find comment\n    const comment = await Comment.findById(req.params.id);\n    if (!comment) {\n      return next(createError(404, \"Comment not found\"));\n    }\n\n    // Check if user is the comment author\n    if (comment.user.toString() !== req.user._id.toString() \u0026\u0026 req.user.role !== \"admin\") {\n      return next(createError(403, \"You are not authorized to update this comment\"));\n    }\n\n    // Add attachment\n    comment.attachments.push({\n      name: req.file.originalname,\n      path: `/${req.file.path}`,\n      type: req.file.mimetype,\n      size: req.file.size,\n    });\n\n    // Save comment\n    const updatedComment = await comment.save();\n\n    res.status(200).json({\n      success: true,\n      message: \"Attachment added successfully\",\n      comment: updatedComment,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\nexport default router;"])</script><script>self.__next_f.push([1,"b4:T1c87,"])</script><script>self.__next_f.push([1,"import express from \"express\";\nimport Comment from \"../models/Comment.js\";\nimport Task from \"../models/Task.js\";\nimport User from \"../models/User.js\";\nimport Notification from \"../models/Notification.js\";\nimport { verifyToken } from \"../middleware/auth.js\";\nimport { createError } from \"../utils/error.js\";\nimport upload from \"../middleware/upload.js\";\nimport { sendEmail } from \"../utils/email.js\";\n\nconst router = express.Router();\n\n// Create a new comment\nrouter.post(\"/\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { taskId, content, mentions } = req.body;\n\n    // Check if task exists\n    const task = await Task.findById(taskId);\n    if (!task) {\n      return next(createError(404, \"Task not found\"));\n    }\n\n    // Create new comment\n    const newComment = new Comment({\n      task: taskId,\n      user: req.user._id,\n      content,\n      mentions: mentions || [],\n    });\n\n    // Save comment\n    const savedComment = await newComment.save();\n\n    // Populate user data\n    await savedComment.populate(\"user\", \"name email avatar\");\n\n    // Notify task assignee and creator about the comment\n    const notifyUsers = new Set();\n\n    // Add task assignee if exists and is not the commenter\n    if (task.assignee \u0026\u0026 task.assignee.toString() !== req.user._id.toString()) {\n      notifyUsers.add(task.assignee.toString());\n    }\n\n    // Add task creator if not the commenter\n    if (task.creator.toString() !== req.user._id.toString()) {\n      notifyUsers.add(task.creator.toString());\n    }\n\n    // Add watchers if not the commenter\n    task.watchers.forEach((watcher) =\u003e {\n      if (watcher.toString() !== req.user._id.toString()) {\n        notifyUsers.add(watcher.toString());\n      }\n    });\n\n    // Add mentioned users\n    if (mentions \u0026\u0026 mentions.length \u003e 0) {\n      mentions.forEach((userId) =\u003e notifyUsers.add(userId));\n    }\n\n    // Send notifications\n    for (const userId of notifyUsers) {\n      // Create notification\n      const notification = new Notification({\n        recipient: userId,\n        sender: req.user._id,\n        type: \"comment_added\",\n        title: \"New Comment\",\n        message: `${req.user.name} commented on task: ${task.title}`,\n        relatedTask: taskId,\n        relatedComment: savedComment._id,\n      });\n\n      await notification.save();\n\n      // Send real-time notification\n      if (req.io) {\n        req.io.to(userId).emit(\"notification\", notification);\n      }\n\n      // Get user details\n      const user = await User.findById(userId);\n\n      // Send email notification if user has email notifications enabled\n      if (user \u0026\u0026 user.notificationPreferences.emailNotifications \u0026\u0026 user.notificationPreferences.commentAdded) {\n        sendEmail({\n          to: user.email,\n          subject: \"New Comment on Task\",\n          text: `Hello ${user.name},\n\n${req.user.name} commented on the task \"${task.title}\":\n\n\"${content}\"\n\nBest regards,\nThe Task Management Team`,\n        });\n      }\n    }\n\n    res.status(201).json({\n      success: true,\n      message: \"Comment added successfully\",\n      comment: savedComment,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Get comments for a task\nrouter.get(\"/task/:taskId\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { page = 1, limit = 10 } = req.query;\n\n    // Check if task exists\n    const task = await Task.findById(req.params.taskId);\n    if (!task) {\n      return next(createError(404, \"Task not found\"));\n    }\n\n    // Check if user has access to this task\n    if (\n      req.user.role === \"viewer\" \u0026\u0026\n      task.assignee?.toString() !== req.user._id.toString() \u0026\u0026\n      task.creator.toString() !== req.user._id.toString() \u0026\u0026\n      !task.watchers.some((watcher) =\u003e watcher.toString() === req.user._id.toString())\n    ) {\n      return next(createError(403, \"You are not authorized to access this task\"));\n    }\n\n    // Count total comments\n    const total = await Comment.countDocuments({ task: req.params.taskId });\n\n    // Fetch comments with pagination\n    const comments = await Comment.find({ task: req.params.taskId })\n      .populate(\"user\", \"name email avatar\")\n      .sort({ createdAt: -1 })\n      .skip((page - 1) * limit)\n      .limit(Number.parseInt(limit));\n\n    res.status(200).json({\n      success: true,\n      count: comments.length,\n      total,\n      totalPages: Math.ceil(total / limit),\n      currentPage: Number.parseInt(page),\n      comments,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Update comment\nrouter.put(\"/:id\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { content, mentions } = req.body;\n\n    // Find comment\n    const comment = await Comment.findById(req.params.id);\n    if (!comment) {\n      return next(createError(404, \"Comment not found\"));\n    }\n\n    // Check if user is the comment author\n    if (comment.user.toString() !== req.user._id.toString() \u0026\u0026 req.user.role !== \"admin\") {\n      return next(createError(403, \"You are not authorized to update this comment\"));\n    }\n\n    // Update fields\n    if (content) comment.content = content;\n    if (mentions) comment.mentions = mentions;\n\n    // Save comment\n    const updatedComment = await comment.save();\n\n    // Populate user data\n    await updatedComment.populate(\"user\", \"name email avatar\");\n\n    res.status(200).json({\n      success: true,\n      message: \"Comment updated successfully\",\n      comment: updatedComment,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Delete comment\nrouter.delete(\"/:id\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Find comment\n    const comment = await Comment.findById(req.params.id);\n    if (!comment) {\n      return next(createError(404, \"Comment not found\"));\n    }\n\n    // Check if user is the comment author or admin\n    if (comment.user.toString() !== req.user._id.toString() \u0026\u0026 req.user.role !== \"admin\") {\n      return next(createError(403, \"You are not authorized to delete this comment\"));\n    }\n\n    // Delete comment\n    await Comment.findByIdAndDelete(req.params.id);\n\n    // Delete associated notifications\n    await Notification.deleteMany({ relatedComment: req.params.id });\n\n    res.status(200).json({\n      success: true,\n      message: \"Comment deleted successfully\",\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Add attachment to comment\nrouter.post(\"/:id/attachments\", verifyToken, upload.single(\"file\"), async (req, res, next) =\u003e {\n  try {\n    if (!req.file) {\n      return next(createError(400, \"No file uploaded\"));\n    }\n\n    // Find comment\n    const comment = await Comment.findById(req.params.id);\n    if (!comment) {\n      return next(createError(404, \"Comment not found\"));\n    }\n\n    // Check if user is the comment author\n    if (comment.user.toString() !== req.user._id.toString() \u0026\u0026 req.user.role !== \"admin\") {\n      return next(createError(403, \"You are not authorized to update this comment\"));\n    }\n\n    // Add attachment\n    comment.attachments.push({\n      name: req.file.originalname,\n      path: `/${req.file.path}`,\n      type: req.file.mimetype,\n      size: req.file.size,\n    });\n\n    // Save comment\n    const updatedComment = await comment.save();\n\n    res.status(200).json({\n      success: true,\n      message: \"Attachment added successfully\",\n      comment: updatedComment,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\nexport default router;"])</script><script>self.__next_f.push([1,"b5:Te06,"])</script><script>self.__next_f.push([1,"import express from \"express\";\nimport Notification from \"../models/Notification.js\";\nimport { verifyToken } from \"../middleware/auth.js\";\nimport { createError } from \"../utils/error.js\";\n\nconst router = express.Router();\n\n// Get user notifications\nrouter.get(\"/\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { read, page = 1, limit = 10 } = req.query;\n\n    // Build query\n    const query = { recipient: req.user._id };\n\n    // Filter by read status\n    if (read === \"true\") {\n      query.read = true;\n    } else if (read === \"false\") {\n      query.read = false;\n    }\n\n    // Count total notifications\n    const total = await Notification.countDocuments(query);\n\n    // Fetch notifications with pagination\n    const notifications = await Notification.find(query)\n      .populate(\"sender\", \"name email avatar\")\n      .populate(\"relatedTask\", \"title\")\n      .sort({ createdAt: -1 })\n      .skip((page - 1) * limit)\n      .limit(Number.parseInt(limit));\n\n    res.status(200).json({\n      success: true,\n      count: notifications.length,\n      total,\n      totalPages: Math.ceil(total / limit),\n      currentPage: Number.parseInt(page),\n      unreadCount: await Notification.countDocuments({ recipient: req.user._id, read: false }),\n      notifications,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Mark notification as read\nrouter.put(\"/:id/read\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Find notification\n    const notification = await Notification.findById(req.params.id);\n    if (!notification) {\n      return next(createError(404, \"Notification not found\"));\n    }\n\n    // Check if user is the recipient\n    if (notification.recipient.toString() !== req.user._id.toString()) {\n      return next(createError(403, \"You are not authorized to update this notification\"));\n    }\n\n    // Mark as read\n    notification.read = true;\n\n    // Save notification\n    await notification.save();\n\n    res.status(200).json({\n      success: true,\n      message: \"Notification marked as read\",\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Mark all notifications as read\nrouter.put(\"/read-all\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Update all unread notifications for the user\n    await Notification.updateMany({ recipient: req.user._id, read: false }, { $set: { read: true } });\n\n    res.status(200).json({\n      success: true,\n      message: \"All notifications marked as read\",\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Delete notification\nrouter.delete(\"/:id\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Find notification\n    const notification = await Notification.findById(req.params.id);\n    if (!notification) {\n      return next(createError(404, \"Notification not found\"));\n    }\n\n    // Check if user is the recipient\n    if (notification.recipient.toString() !== req.user._id.toString()) {\n      return next(createError(403, \"You are not authorized to delete this notification\"));\n    }\n\n    // Delete notification\n    await Notification.findByIdAndDelete(req.params.id);\n\n    res.status(200).json({\n      success: true,\n      message: \"Notification deleted successfully\",\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Delete all notifications\nrouter.delete(\"/\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Delete all notifications for the user\n    await Notification.deleteMany({ recipient: req.user._id });\n\n    res.status(200).json({\n      success: true,\n      message: \"All notifications deleted successfully\",\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\nexport default router;"])</script><script>self.__next_f.push([1,"b6:Te06,"])</script><script>self.__next_f.push([1,"import express from \"express\";\nimport Notification from \"../models/Notification.js\";\nimport { verifyToken } from \"../middleware/auth.js\";\nimport { createError } from \"../utils/error.js\";\n\nconst router = express.Router();\n\n// Get user notifications\nrouter.get(\"/\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { read, page = 1, limit = 10 } = req.query;\n\n    // Build query\n    const query = { recipient: req.user._id };\n\n    // Filter by read status\n    if (read === \"true\") {\n      query.read = true;\n    } else if (read === \"false\") {\n      query.read = false;\n    }\n\n    // Count total notifications\n    const total = await Notification.countDocuments(query);\n\n    // Fetch notifications with pagination\n    const notifications = await Notification.find(query)\n      .populate(\"sender\", \"name email avatar\")\n      .populate(\"relatedTask\", \"title\")\n      .sort({ createdAt: -1 })\n      .skip((page - 1) * limit)\n      .limit(Number.parseInt(limit));\n\n    res.status(200).json({\n      success: true,\n      count: notifications.length,\n      total,\n      totalPages: Math.ceil(total / limit),\n      currentPage: Number.parseInt(page),\n      unreadCount: await Notification.countDocuments({ recipient: req.user._id, read: false }),\n      notifications,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Mark notification as read\nrouter.put(\"/:id/read\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Find notification\n    const notification = await Notification.findById(req.params.id);\n    if (!notification) {\n      return next(createError(404, \"Notification not found\"));\n    }\n\n    // Check if user is the recipient\n    if (notification.recipient.toString() !== req.user._id.toString()) {\n      return next(createError(403, \"You are not authorized to update this notification\"));\n    }\n\n    // Mark as read\n    notification.read = true;\n\n    // Save notification\n    await notification.save();\n\n    res.status(200).json({\n      success: true,\n      message: \"Notification marked as read\",\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Mark all notifications as read\nrouter.put(\"/read-all\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Update all unread notifications for the user\n    await Notification.updateMany({ recipient: req.user._id, read: false }, { $set: { read: true } });\n\n    res.status(200).json({\n      success: true,\n      message: \"All notifications marked as read\",\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Delete notification\nrouter.delete(\"/:id\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Find notification\n    const notification = await Notification.findById(req.params.id);\n    if (!notification) {\n      return next(createError(404, \"Notification not found\"));\n    }\n\n    // Check if user is the recipient\n    if (notification.recipient.toString() !== req.user._id.toString()) {\n      return next(createError(403, \"You are not authorized to delete this notification\"));\n    }\n\n    // Delete notification\n    await Notification.findByIdAndDelete(req.params.id);\n\n    res.status(200).json({\n      success: true,\n      message: \"Notification deleted successfully\",\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Delete all notifications\nrouter.delete(\"/\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    // Delete all notifications for the user\n    await Notification.deleteMany({ recipient: req.user._id });\n\n    res.status(200).json({\n      success: true,\n      message: \"All notifications deleted successfully\",\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\nexport default router;"])</script><script>self.__next_f.push([1,"b7:T2018,"])</script><script>self.__next_f.push([1,"import express from \"express\";\nimport Task from \"../models/Task.js\";\nimport User from \"../models/User.js\";\nimport { verifyToken, verifyAdminOrEditor } from \"../middleware/auth.js\";\nimport { generatePDF, generateCSV } from \"../utils/export.js\";\n\nconst router = express.Router();\n\n// Get task completion report\nrouter.get(\"/task-completion\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { startDate, endDate, format } = req.query;\n\n    // Parse dates\n    const start = startDate ? new Date(startDate) : new Date(Date.now() - 30 * 24 * 60 * 60 * 1000); // Default to last 30 days\n    const end = endDate ? new Date(endDate) : new Date();\n\n    // Set end date to end of day\n    end.setHours(23, 59, 59, 999);\n\n    // Aggregate tasks by status and date\n    const tasksByStatus = await Task.aggregate([\n      {\n        $match: {\n          updatedAt: { $gte: start, $lte: end },\n        },\n      },\n      {\n        $group: {\n          _id: {\n            status: \"$status\",\n            date: { $dateToString: { format: \"%Y-%m-%d\", date: \"$updatedAt\" } },\n          },\n          count: { $sum: 1 },\n        },\n      },\n      {\n        $sort: { \"_id.date\": 1 },\n      },\n    ]);\n\n    // Transform data for chart\n    const dates = [...new Set(tasksByStatus.map((item) =\u003e item._id.date))].sort();\n\n    const chartData = dates.map((date) =\u003e {\n      const dataPoint = { date };\n      [\"to-do\", \"in-progress\", \"in-review\", \"completed\"].forEach((status) =\u003e {\n        const statusData = tasksByStatus.find((item) =\u003e item._id.date === date \u0026\u0026 item._id.status === status);\n        dataPoint[status] = statusData ? statusData.count : 0;\n      });\n\n      return dataPoint;\n    });\n\n    // If format is specified, export data\n    if (format === \"pdf\") {\n      const pdfBuffer = await generatePDF(\"Task Completion Report\", chartData);\n\n      res.setHeader(\"Content-Type\", \"application/pdf\");\n      res.setHeader(\"Content-Disposition\", \"attachment; filename=task-completion-report.pdf\");\n      return res.send(pdfBuffer);\n    }\n\n    if (format === \"csv\") {\n      const csvData = await generateCSV(chartData);\n\n      res.setHeader(\"Content-Type\", \"text/csv\");\n      res.setHeader(\"Content-Disposition\", \"attachment; filename=task-completion-report.csv\");\n      return res.send(csvData);\n    }\n\n    res.status(200).json({\n      success: true,\n      data: chartData,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Get team performance report\nrouter.get(\"/team-performance\", verifyToken, verifyAdminOrEditor, async (req, res, next) =\u003e {\n  try {\n    const { startDate, endDate, format } = req.query;\n\n    // Parse dates\n    const start = startDate ? new Date(startDate) : new Date(Date.now() - 30 * 24 * 60 * 60 * 1000); // Default to last 30 days\n    const end = endDate ? new Date(endDate) : new Date();\n\n    // Set end date to end of day\n    end.setHours(23, 59, 59, 999);\n\n    // Aggregate tasks by assignee\n    const tasksByAssignee = await Task.aggregate([\n      {\n        $match: {\n          assignee: { $exists: true, $ne: null },\n          updatedAt: { $gte: start, $lte: end },\n        },\n      },\n      {\n        $group: {\n          _id: {\n            assignee: \"$assignee\",\n            status: \"$status\",\n          },\n          count: { $sum: 1 },\n        },\n      },\n    ]);\n\n    // Get user details\n    const userIds = [...new Set(tasksByAssignee.map((item) =\u003e item._id.assignee))];\n    const users = await User.find({ _id: { $in: userIds } }, \"name email avatar\");\n\n    // Transform data for chart\n    const chartData = users.map((user) =\u003e {\n      const userData = {\n        name: user.name,\n        email: user.email,\n        avatar: user.avatar,\n      };\n      [\"to-do\", \"in-progress\", \"in-review\", \"completed\"].forEach((status) =\u003e {\n        const statusData = tasksByAssignee.find(\n          (item) =\u003e item._id.assignee.toString() === user._id.toString() \u0026\u0026 item._id.status === status,\n        );\n        userData[status] = statusData ? statusData.count : 0;\n      });\n\n      // Calculate total tasks\n      userData.total = Object.values(userData)\n        .filter((value) =\u003e typeof value === \"number\")\n        .reduce((sum, value) =\u003e sum + value, 0);\n\n      // Calculate completion rate\n      userData.completionRate = userData.total \u003e 0 ? Math.round((userData.completed / userData.total) * 100) : 0;\n\n      return userData;\n    });\n\n    // Sort by completion rate\n    chartData.sort((a, b) =\u003e b.completionRate - a.completionRate);\n\n    // If format is specified, export data\n    if (format === \"pdf\") {\n      const pdfBuffer = await generatePDF(\"Team Performance Report\", chartData);\n\n      res.setHeader(\"Content-Type\", \"application/pdf\");\n      res.setHeader(\"Content-Disposition\", \"attachment; filename=team-performance-report.pdf\");\n      return res.send(pdfBuffer);\n    }\n\n    if (format === \"csv\") {\n      const csvData = await generateCSV(chartData);\n\n      res.setHeader(\"Content-Type\", \"text/csv\");\n      res.setHeader(\"Content-Disposition\", \"attachment; filename=team-performance-report.csv\");\n      return res.send(csvData);\n    }\n\n    res.status(200).json({\n      success: true,\n      data: chartData,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Get priority distribution report\nrouter.get(\"/priority-distribution\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { format } = req.query;\n\n    // Aggregate tasks by priority\n    const tasksByPriority = await Task.aggregate([\n      {\n        $group: {\n          _id: \"$priority\",\n          count: { $sum: 1 },\n        },\n      },\n    ]);\n\n    // Transform data for chart\n    const chartData = tasksByPriority.map((item) =\u003e ({\n      priority: item._id,\n      count: item.count,\n    }));\n\n    // If format is specified, export data\n    if (format === \"pdf\") {\n      const pdfBuffer = await generatePDF(\"Priority Distribution Report\", chartData);\n\n      res.setHeader(\"Content-Type\", \"application/pdf\");\n      res.setHeader(\"Content-Disposition\", \"attachment; filename=priority-distribution-report.pdf\");\n      return res.send(pdfBuffer);\n    }\n\n    if (format === \"csv\") {\n      const csvData = await generateCSV(chartData);\n\n      res.setHeader(\"Content-Type\", \"text/csv\");\n      res.setHeader(\"Content-Disposition\", \"attachment; filename=priority-distribution-report.csv\");\n      return res.send(csvData);\n    }\n\n    res.status(200).json({\n      success: true,\n      data: chartData,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Get overdue tasks report\nrouter.get(\"/overdue-tasks\", verifyToken, verifyAdminOrEditor, async (req, res, next) =\u003e {\n  try {\n    const { format } = req.query;\n\n    // Get current date\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n\n    // Find overdue tasks\n    const overdueTasks = await Task.find({\n      dueDate: { $lt: today },\n      status: { $ne: \"completed\" },\n    })\n      .populate(\"assignee\", \"name email avatar\")\n      .populate(\"creator\", \"name email avatar\")\n      .sort({ dueDate: 1 });\n\n    // Transform data for export\n    const reportData = overdueTasks.map((task) =\u003e ({\n      id: task._id,\n      title: task.title,\n      priority: task.priority,\n      status: task.status,\n      dueDate: task.dueDate ? task.dueDate.toLocaleDateString() : \"Not set\",\n      assignee: task.assignee ? task.assignee.name : \"Unassigned\",\n      creator: task.creator ? task.creator.name : \"Unknown\",\n      daysOverdue: Math.ceil((today - new Date(task.dueDate)) / (1000 * 60 * 60 * 24)),\n    }));\n\n    // If format is specified, export data\n    if (format === \"pdf\") {\n      const pdfBuffer = await generatePDF(\"Overdue Tasks Report\", reportData);\n\n      res.setHeader(\"Content-Type\", \"application/pdf\");\n      res.setHeader(\"Content-Disposition\", \"attachment; filename=overdue-tasks-report.pdf\");\n      return res.send(pdfBuffer);\n    }\n\n    if (format === \"csv\") {\n      const csvData = await generateCSV(reportData);\n\n      res.setHeader(\"Content-Type\", \"text/csv\");\n      res.setHeader(\"Content-Disposition\", \"attachment; filename=overdue-tasks-report.csv\");\n      return res.send(csvData);\n    }\n\n    res.status(200).json({\n      success: true,\n      count: reportData.length,\n      data: reportData,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\nexport default router;"])</script><script>self.__next_f.push([1,"b8:T2018,"])</script><script>self.__next_f.push([1,"import express from \"express\";\nimport Task from \"../models/Task.js\";\nimport User from \"../models/User.js\";\nimport { verifyToken, verifyAdminOrEditor } from \"../middleware/auth.js\";\nimport { generatePDF, generateCSV } from \"../utils/export.js\";\n\nconst router = express.Router();\n\n// Get task completion report\nrouter.get(\"/task-completion\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { startDate, endDate, format } = req.query;\n\n    // Parse dates\n    const start = startDate ? new Date(startDate) : new Date(Date.now() - 30 * 24 * 60 * 60 * 1000); // Default to last 30 days\n    const end = endDate ? new Date(endDate) : new Date();\n\n    // Set end date to end of day\n    end.setHours(23, 59, 59, 999);\n\n    // Aggregate tasks by status and date\n    const tasksByStatus = await Task.aggregate([\n      {\n        $match: {\n          updatedAt: { $gte: start, $lte: end },\n        },\n      },\n      {\n        $group: {\n          _id: {\n            status: \"$status\",\n            date: { $dateToString: { format: \"%Y-%m-%d\", date: \"$updatedAt\" } },\n          },\n          count: { $sum: 1 },\n        },\n      },\n      {\n        $sort: { \"_id.date\": 1 },\n      },\n    ]);\n\n    // Transform data for chart\n    const dates = [...new Set(tasksByStatus.map((item) =\u003e item._id.date))].sort();\n\n    const chartData = dates.map((date) =\u003e {\n      const dataPoint = { date };\n      [\"to-do\", \"in-progress\", \"in-review\", \"completed\"].forEach((status) =\u003e {\n        const statusData = tasksByStatus.find((item) =\u003e item._id.date === date \u0026\u0026 item._id.status === status);\n        dataPoint[status] = statusData ? statusData.count : 0;\n      });\n\n      return dataPoint;\n    });\n\n    // If format is specified, export data\n    if (format === \"pdf\") {\n      const pdfBuffer = await generatePDF(\"Task Completion Report\", chartData);\n\n      res.setHeader(\"Content-Type\", \"application/pdf\");\n      res.setHeader(\"Content-Disposition\", \"attachment; filename=task-completion-report.pdf\");\n      return res.send(pdfBuffer);\n    }\n\n    if (format === \"csv\") {\n      const csvData = await generateCSV(chartData);\n\n      res.setHeader(\"Content-Type\", \"text/csv\");\n      res.setHeader(\"Content-Disposition\", \"attachment; filename=task-completion-report.csv\");\n      return res.send(csvData);\n    }\n\n    res.status(200).json({\n      success: true,\n      data: chartData,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Get team performance report\nrouter.get(\"/team-performance\", verifyToken, verifyAdminOrEditor, async (req, res, next) =\u003e {\n  try {\n    const { startDate, endDate, format } = req.query;\n\n    // Parse dates\n    const start = startDate ? new Date(startDate) : new Date(Date.now() - 30 * 24 * 60 * 60 * 1000); // Default to last 30 days\n    const end = endDate ? new Date(endDate) : new Date();\n\n    // Set end date to end of day\n    end.setHours(23, 59, 59, 999);\n\n    // Aggregate tasks by assignee\n    const tasksByAssignee = await Task.aggregate([\n      {\n        $match: {\n          assignee: { $exists: true, $ne: null },\n          updatedAt: { $gte: start, $lte: end },\n        },\n      },\n      {\n        $group: {\n          _id: {\n            assignee: \"$assignee\",\n            status: \"$status\",\n          },\n          count: { $sum: 1 },\n        },\n      },\n    ]);\n\n    // Get user details\n    const userIds = [...new Set(tasksByAssignee.map((item) =\u003e item._id.assignee))];\n    const users = await User.find({ _id: { $in: userIds } }, \"name email avatar\");\n\n    // Transform data for chart\n    const chartData = users.map((user) =\u003e {\n      const userData = {\n        name: user.name,\n        email: user.email,\n        avatar: user.avatar,\n      };\n      [\"to-do\", \"in-progress\", \"in-review\", \"completed\"].forEach((status) =\u003e {\n        const statusData = tasksByAssignee.find(\n          (item) =\u003e item._id.assignee.toString() === user._id.toString() \u0026\u0026 item._id.status === status,\n        );\n        userData[status] = statusData ? statusData.count : 0;\n      });\n\n      // Calculate total tasks\n      userData.total = Object.values(userData)\n        .filter((value) =\u003e typeof value === \"number\")\n        .reduce((sum, value) =\u003e sum + value, 0);\n\n      // Calculate completion rate\n      userData.completionRate = userData.total \u003e 0 ? Math.round((userData.completed / userData.total) * 100) : 0;\n\n      return userData;\n    });\n\n    // Sort by completion rate\n    chartData.sort((a, b) =\u003e b.completionRate - a.completionRate);\n\n    // If format is specified, export data\n    if (format === \"pdf\") {\n      const pdfBuffer = await generatePDF(\"Team Performance Report\", chartData);\n\n      res.setHeader(\"Content-Type\", \"application/pdf\");\n      res.setHeader(\"Content-Disposition\", \"attachment; filename=team-performance-report.pdf\");\n      return res.send(pdfBuffer);\n    }\n\n    if (format === \"csv\") {\n      const csvData = await generateCSV(chartData);\n\n      res.setHeader(\"Content-Type\", \"text/csv\");\n      res.setHeader(\"Content-Disposition\", \"attachment; filename=team-performance-report.csv\");\n      return res.send(csvData);\n    }\n\n    res.status(200).json({\n      success: true,\n      data: chartData,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Get priority distribution report\nrouter.get(\"/priority-distribution\", verifyToken, async (req, res, next) =\u003e {\n  try {\n    const { format } = req.query;\n\n    // Aggregate tasks by priority\n    const tasksByPriority = await Task.aggregate([\n      {\n        $group: {\n          _id: \"$priority\",\n          count: { $sum: 1 },\n        },\n      },\n    ]);\n\n    // Transform data for chart\n    const chartData = tasksByPriority.map((item) =\u003e ({\n      priority: item._id,\n      count: item.count,\n    }));\n\n    // If format is specified, export data\n    if (format === \"pdf\") {\n      const pdfBuffer = await generatePDF(\"Priority Distribution Report\", chartData);\n\n      res.setHeader(\"Content-Type\", \"application/pdf\");\n      res.setHeader(\"Content-Disposition\", \"attachment; filename=priority-distribution-report.pdf\");\n      return res.send(pdfBuffer);\n    }\n\n    if (format === \"csv\") {\n      const csvData = await generateCSV(chartData);\n\n      res.setHeader(\"Content-Type\", \"text/csv\");\n      res.setHeader(\"Content-Disposition\", \"attachment; filename=priority-distribution-report.csv\");\n      return res.send(csvData);\n    }\n\n    res.status(200).json({\n      success: true,\n      data: chartData,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Get overdue tasks report\nrouter.get(\"/overdue-tasks\", verifyToken, verifyAdminOrEditor, async (req, res, next) =\u003e {\n  try {\n    const { format } = req.query;\n\n    // Get current date\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n\n    // Find overdue tasks\n    const overdueTasks = await Task.find({\n      dueDate: { $lt: today },\n      status: { $ne: \"completed\" },\n    })\n      .populate(\"assignee\", \"name email avatar\")\n      .populate(\"creator\", \"name email avatar\")\n      .sort({ dueDate: 1 });\n\n    // Transform data for export\n    const reportData = overdueTasks.map((task) =\u003e ({\n      id: task._id,\n      title: task.title,\n      priority: task.priority,\n      status: task.status,\n      dueDate: task.dueDate ? task.dueDate.toLocaleDateString() : \"Not set\",\n      assignee: task.assignee ? task.assignee.name : \"Unassigned\",\n      creator: task.creator ? task.creator.name : \"Unknown\",\n      daysOverdue: Math.ceil((today - new Date(task.dueDate)) / (1000 * 60 * 60 * 24)),\n    }));\n\n    // If format is specified, export data\n    if (format === \"pdf\") {\n      const pdfBuffer = await generatePDF(\"Overdue Tasks Report\", reportData);\n\n      res.setHeader(\"Content-Type\", \"application/pdf\");\n      res.setHeader(\"Content-Disposition\", \"attachment; filename=overdue-tasks-report.pdf\");\n      return res.send(pdfBuffer);\n    }\n\n    if (format === \"csv\") {\n      const csvData = await generateCSV(reportData);\n\n      res.setHeader(\"Content-Type\", \"text/csv\");\n      res.setHeader(\"Content-Disposition\", \"attachment; filename=overdue-tasks-report.csv\");\n      return res.send(csvData);\n    }\n\n    res.status(200).json({\n      success: true,\n      count: reportData.length,\n      data: reportData,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\nexport default router;"])</script><script>self.__next_f.push([1,"b9:T72a,import nodemailer from \"nodemailer\";\n\n// Configure email transporter\nconst transporter = nodemailer.createTransport({\n  host: process.env.EMAIL_HOST || \"smtp.example.com\",\n  port: process.env.EMAIL_PORT || 587,\n  secure: process.env.EMAIL_SECURE === \"true\",\n  auth: {\n    user: process.env.EMAIL_USER || \"user@example.com\",\n    pass: process.env.EMAIL_PASS || \"password\",\n  },\n});\n\n// Send email\nexport const sendEmail = async ({ to, subject, text, html }) =\u003e {\n  try {\n    // Skip sending emails in development mode if no email config\n    if (process.env.NODE_ENV === \"development\" \u0026\u0026 !process.env.EMAIL_HOST) {\n      console.log(\"Email sending skipped in development mode\");\n      console.log({ to, subject, text });\n      return;\n    }\n\n    const mailOptions = {\n      from: process.env.EMAIL_FROM || \"Task Management \u003cnoreply@taskmanagement.com\u003e\",\n      to,\n      subject,\n      text,\n      html,\n    };\n\n    const info = await transporter.sendMail(mailOptions);\n    console.log(\"Email sent:\", info.messageId);\n    return info;\n  } catch (error) {\n    console.error(\"Error sending email:\", error);\n    throw error;\n  }\n};\n\n// Send deadline reminder emails\nexport const sendDeadlineReminders = async (tasks, users) =\u003e {\n  for (const task of tasks) {\n    // Get assignee\n    const assignee = users.find(\n      (user) =\u003e\n        user._id.toString() === task.assignee.toString() \u0026\u0026\n        user.notificationPreferences.emailNotifications \u0026\u0026\n        user.notificationPreferences.deadlineReminder,\n    );\n\n    if (assignee) {\n      await sendEmail({\n        to: assignee.email,\n        subject: \"Task Deadline Reminder\",\n        text: `Hello ${assignee.name},\n\nThis is a reminder that the task \"${task.title}\" is due soon (${new Date(task.dueDate).toLocaleDateString()}).\n\nBest regards,\nThe Task Management Team`,\n      });\n    }\n  }\n};ba:T72a,import nodemailer from \"nodemailer\";\n\n// Configure email transporter\nconst transporter = nodemailer.createTransport({\n  host: process.env.EMAIL_HOST || \"smtp.example.com\",\n  port: process.env.EMAIL_"])</script><script>self.__next_f.push([1,"PORT || 587,\n  secure: process.env.EMAIL_SECURE === \"true\",\n  auth: {\n    user: process.env.EMAIL_USER || \"user@example.com\",\n    pass: process.env.EMAIL_PASS || \"password\",\n  },\n});\n\n// Send email\nexport const sendEmail = async ({ to, subject, text, html }) =\u003e {\n  try {\n    // Skip sending emails in development mode if no email config\n    if (process.env.NODE_ENV === \"development\" \u0026\u0026 !process.env.EMAIL_HOST) {\n      console.log(\"Email sending skipped in development mode\");\n      console.log({ to, subject, text });\n      return;\n    }\n\n    const mailOptions = {\n      from: process.env.EMAIL_FROM || \"Task Management \u003cnoreply@taskmanagement.com\u003e\",\n      to,\n      subject,\n      text,\n      html,\n    };\n\n    const info = await transporter.sendMail(mailOptions);\n    console.log(\"Email sent:\", info.messageId);\n    return info;\n  } catch (error) {\n    console.error(\"Error sending email:\", error);\n    throw error;\n  }\n};\n\n// Send deadline reminder emails\nexport const sendDeadlineReminders = async (tasks, users) =\u003e {\n  for (const task of tasks) {\n    // Get assignee\n    const assignee = users.find(\n      (user) =\u003e\n        user._id.toString() === task.assignee.toString() \u0026\u0026\n        user.notificationPreferences.emailNotifications \u0026\u0026\n        user.notificationPreferences.deadlineReminder,\n    );\n\n    if (assignee) {\n      await sendEmail({\n        to: assignee.email,\n        subject: \"Task Deadline Reminder\",\n        text: `Hello ${assignee.name},\n\nThis is a reminder that the task \"${task.title}\" is due soon (${new Date(task.dueDate).toLocaleDateString()}).\n\nBest regards,\nThe Task Management Team`,\n      });\n    }\n  }\n};bb:T8f9,"])</script><script>self.__next_f.push([1,"import PDFDocument from \"pdfkit\";\nimport { Parser } from \"json2csv\";\n\n// Generate PDF report\nexport const generatePDF = (title, data) =\u003e {\n  return new Promise((resolve, reject) =\u003e {\n    try {\n      // Create PDF document\n      const doc = new PDFDocument();\n      const buffers = [];\n\n      // Collect PDF data chunks\n      doc.on(\"data\", (buffer) =\u003e buffers.push(buffer));\n      doc.on(\"end\", () =\u003e resolve(Buffer.concat(buffers)));\n\n      // Add title\n      doc.fontSize(20).text(title, { align: \"center\" });\n      doc.moveDown();\n\n      // Add date\n      doc.fontSize(12).text(`Generated on: ${new Date().toLocaleDateString()}`, { align: \"center\" });\n      doc.moveDown(2);\n\n      // Add data table\n      if (data.length \u003e 0) {\n        // Get column headers\n        const headers = Object.keys(data[0]);\n\n        // Calculate column widths\n        const columnWidth = 500 / headers.length;\n\n        // Draw header row\n        doc.fontSize(10).font(\"Helvetica-Bold\");\n        headers.forEach((header, i) =\u003e {\n          const x = 50 + i * columnWidth;\n          doc.text(header.charAt(0).toUpperCase() + header.slice(1).replace(/([A-Z])/g, \" $1\"), x, doc.y, {\n            width: columnWidth,\n            align: \"left\",\n          });\n        });\n\n        doc.moveDown();\n        doc.font(\"Helvetica\");\n\n        // Draw data rows\n        data.forEach((row) =\u003e {\n          const y = doc.y;\n\n          headers.forEach((header, i) =\u003e {\n            const x = 50 + i * columnWidth;\n            doc.text(row[header] !== undefined ? row[header].toString() : \"\", x, y, {\n              width: columnWidth,\n              align: \"left\",\n            });\n          });\n\n          doc.moveDown();\n        });\n      } else {\n        doc.text(\"No data available\", { align: \"center\" });\n      }\n\n      // Finalize PDF\n      doc.end();\n    } catch (err) {\n      reject(err);\n    }\n  });\n};\n\n// Generate CSV report\nexport const generateCSV = (data) =\u003e {\n  return new Promise((resolve, reject) =\u003e {\n    try {\n      if (data.length === 0) {\n        return resolve(\"No data available\");\n      }\n\n      // Configure CSV parser\n      const json2csvParser = new Parser();\n\n      // Convert JSON to CSV\n      const csv = json2csvParser.parse(data);\n\n      resolve(csv);\n    } catch (err) {\n      reject(err);\n    }\n  });\n};"])</script><script>self.__next_f.push([1,"bc:T8f9,"])</script><script>self.__next_f.push([1,"import PDFDocument from \"pdfkit\";\nimport { Parser } from \"json2csv\";\n\n// Generate PDF report\nexport const generatePDF = (title, data) =\u003e {\n  return new Promise((resolve, reject) =\u003e {\n    try {\n      // Create PDF document\n      const doc = new PDFDocument();\n      const buffers = [];\n\n      // Collect PDF data chunks\n      doc.on(\"data\", (buffer) =\u003e buffers.push(buffer));\n      doc.on(\"end\", () =\u003e resolve(Buffer.concat(buffers)));\n\n      // Add title\n      doc.fontSize(20).text(title, { align: \"center\" });\n      doc.moveDown();\n\n      // Add date\n      doc.fontSize(12).text(`Generated on: ${new Date().toLocaleDateString()}`, { align: \"center\" });\n      doc.moveDown(2);\n\n      // Add data table\n      if (data.length \u003e 0) {\n        // Get column headers\n        const headers = Object.keys(data[0]);\n\n        // Calculate column widths\n        const columnWidth = 500 / headers.length;\n\n        // Draw header row\n        doc.fontSize(10).font(\"Helvetica-Bold\");\n        headers.forEach((header, i) =\u003e {\n          const x = 50 + i * columnWidth;\n          doc.text(header.charAt(0).toUpperCase() + header.slice(1).replace(/([A-Z])/g, \" $1\"), x, doc.y, {\n            width: columnWidth,\n            align: \"left\",\n          });\n        });\n\n        doc.moveDown();\n        doc.font(\"Helvetica\");\n\n        // Draw data rows\n        data.forEach((row) =\u003e {\n          const y = doc.y;\n\n          headers.forEach((header, i) =\u003e {\n            const x = 50 + i * columnWidth;\n            doc.text(row[header] !== undefined ? row[header].toString() : \"\", x, y, {\n              width: columnWidth,\n              align: \"left\",\n            });\n          });\n\n          doc.moveDown();\n        });\n      } else {\n        doc.text(\"No data available\", { align: \"center\" });\n      }\n\n      // Finalize PDF\n      doc.end();\n    } catch (err) {\n      reject(err);\n    }\n  });\n};\n\n// Generate CSV report\nexport const generateCSV = (data) =\u003e {\n  return new Promise((resolve, reject) =\u003e {\n    try {\n      if (data.length === 0) {\n        return resolve(\"No data available\");\n      }\n\n      // Configure CSV parser\n      const json2csvParser = new Parser();\n\n      // Convert JSON to CSV\n      const csv = json2csvParser.parse(data);\n\n      resolve(csv);\n    } catch (err) {\n      reject(err);\n    }\n  });\n};"])</script><script>self.__next_f.push([1,"bd:T1159,"])</script><script>self.__next_f.push([1,"import cron from \"node-cron\";\nimport Task from \"../models/Task.js\";\nimport User from \"../models/User.js\";\nimport Notification from \"../models/Notification.js\";\nimport { sendDeadlineReminders, sendEmail } from \"./email.js\";\n\n// Schedule deadline reminders\nexport const scheduleDeadlineReminders = () =\u003e {\n  // Run every day at 9:00 AM\n  cron.schedule(\"0 9 * * *\", async () =\u003e {\n    try {\n      console.log(\"Running deadline reminder scheduler...\");\n\n      // Get current date\n      const today = new Date();\n      today.setHours(0, 0, 0, 0);\n\n      // Get tomorrow's date\n      const tomorrow = new Date(today);\n      tomorrow.setDate(tomorrow.getDate() + 1);\n\n      // Get tasks due tomorrow\n      const tasks = await Task.find({\n        dueDate: {\n          $gte: tomorrow,\n          $lt: new Date(tomorrow.getTime() + 24 * 60 * 60 * 1000),\n        },\n        status: { $ne: \"completed\" },\n      }).populate(\"assignee\");\n\n      if (tasks.length === 0) {\n        console.log(\"No tasks due tomorrow\");\n        return;\n      }\n\n      console.log(`Found ${tasks.length} tasks due tomorrow`);\n\n      // Get all users\n      const users = await User.find({\n        _id: { $in: tasks.map((task) =\u003e task.assignee) },\n      });\n\n      // Create notifications\n      const notifications = tasks.map((task) =\u003e ({\n        recipient: task.assignee,\n        type: \"deadline_reminder\",\n        title: \"Task Due Tomorrow\",\n        message: `The task \"${task.title}\" is due tomorrow`,\n        relatedTask: task._id,\n      }));\n\n      // Save notifications\n      await Notification.insertMany(notifications);\n\n      // Send email reminders\n      await sendDeadlineReminders(tasks, users);\n\n      console.log(\"Deadline reminders sent successfully\");\n    } catch (err) {\n      console.error(\"Error sending deadline reminders:\", err);\n    }\n  });\n};\n\n// Schedule weekly digest emails\nexport const scheduleWeeklyDigest = () =\u003e {\n  // Run every Monday at 8:00 AM\n  cron.schedule(\"0 8 * * 1\", async () =\u003e {\n    try {\n      console.log(\"Running weekly digest scheduler...\");\n\n      // Get users who have enabled weekly digest\n      const users = await User.find({\n        \"notificationPreferences.weeklyDigest\": true,\n        \"notificationPreferences.emailNotifications\": true,\n      });\n\n      if (users.length === 0) {\n        console.log(\"No users have enabled weekly digest\");\n        return;\n      }\n\n      console.log(`Sending weekly digest to ${users.length} users`);\n\n      // Get date range for the past week\n      const endDate = new Date();\n      const startDate = new Date();\n      startDate.setDate(startDate.getDate() - 7);\n\n      // Process each user\n      for (const user of users) {\n        // Get tasks assigned to user\n        const assignedTasks = await Task.find({\n          assignee: user._id,\n          updatedAt: { $gte: startDate, $lte: endDate },\n        });\n\n        // Get tasks created by user\n        const createdTasks = await Task.find({\n          creator: user._id,\n          updatedAt: { $gte: startDate, $lte: endDate },\n        });\n\n        // Count tasks by status\n        const tasksByStatus = {\n          completed: assignedTasks.filter((task) =\u003e task.status === \"completed\").length,\n          inProgress: assignedTasks.filter((task) =\u003e task.status === \"in-progress\").length,\n          inReview: assignedTasks.filter((task) =\u003e task.status === \"in-review\").length,\n          toDo: assignedTasks.filter((task) =\u003e task.status === \"to-do\").length,\n        };\n\n        // Get overdue tasks\n        const today = new Date();\n        today.setHours(0, 0, 0, 0);\n\n        const overdueTasks = await Task.find({\n          assignee: user._id,\n          dueDate: { $lt: today },\n          status: { $ne: \"completed\" },\n        });\n\n        // Send digest email\n        await sendEmail({\n          to: user.email,\n          subject: \"Your Weekly Task Digest\",\n          text: `Hello ${user.name},\n\nHere's your weekly task summary:\n\nTasks Assigned to You: ${assignedTasks.length}\n- Completed: ${tasksByStatus.completed}\n- In Progress: ${tasksByStatus.inProgress}\n- In Review: ${tasksByStatus.inReview}\n- To Do: ${tasksByStatus.toDo}\n\nTasks Created by You: ${createdTasks.length}\n\nOverdue Tasks: ${overdueTasks.length}\n\nBest regards,\nThe Task Management Team`,\n        });\n      }\n\n      console.log(\"Weekly digest emails sent successfully\");\n    } catch (err) {\n      console.error(\"Error sending weekly digest emails:\", err);\n    }\n  });\n};"])</script><script>self.__next_f.push([1,"be:T1159,"])</script><script>self.__next_f.push([1,"import cron from \"node-cron\";\nimport Task from \"../models/Task.js\";\nimport User from \"../models/User.js\";\nimport Notification from \"../models/Notification.js\";\nimport { sendDeadlineReminders, sendEmail } from \"./email.js\";\n\n// Schedule deadline reminders\nexport const scheduleDeadlineReminders = () =\u003e {\n  // Run every day at 9:00 AM\n  cron.schedule(\"0 9 * * *\", async () =\u003e {\n    try {\n      console.log(\"Running deadline reminder scheduler...\");\n\n      // Get current date\n      const today = new Date();\n      today.setHours(0, 0, 0, 0);\n\n      // Get tomorrow's date\n      const tomorrow = new Date(today);\n      tomorrow.setDate(tomorrow.getDate() + 1);\n\n      // Get tasks due tomorrow\n      const tasks = await Task.find({\n        dueDate: {\n          $gte: tomorrow,\n          $lt: new Date(tomorrow.getTime() + 24 * 60 * 60 * 1000),\n        },\n        status: { $ne: \"completed\" },\n      }).populate(\"assignee\");\n\n      if (tasks.length === 0) {\n        console.log(\"No tasks due tomorrow\");\n        return;\n      }\n\n      console.log(`Found ${tasks.length} tasks due tomorrow`);\n\n      // Get all users\n      const users = await User.find({\n        _id: { $in: tasks.map((task) =\u003e task.assignee) },\n      });\n\n      // Create notifications\n      const notifications = tasks.map((task) =\u003e ({\n        recipient: task.assignee,\n        type: \"deadline_reminder\",\n        title: \"Task Due Tomorrow\",\n        message: `The task \"${task.title}\" is due tomorrow`,\n        relatedTask: task._id,\n      }));\n\n      // Save notifications\n      await Notification.insertMany(notifications);\n\n      // Send email reminders\n      await sendDeadlineReminders(tasks, users);\n\n      console.log(\"Deadline reminders sent successfully\");\n    } catch (err) {\n      console.error(\"Error sending deadline reminders:\", err);\n    }\n  });\n};\n\n// Schedule weekly digest emails\nexport const scheduleWeeklyDigest = () =\u003e {\n  // Run every Monday at 8:00 AM\n  cron.schedule(\"0 8 * * 1\", async () =\u003e {\n    try {\n      console.log(\"Running weekly digest scheduler...\");\n\n      // Get users who have enabled weekly digest\n      const users = await User.find({\n        \"notificationPreferences.weeklyDigest\": true,\n        \"notificationPreferences.emailNotifications\": true,\n      });\n\n      if (users.length === 0) {\n        console.log(\"No users have enabled weekly digest\");\n        return;\n      }\n\n      console.log(`Sending weekly digest to ${users.length} users`);\n\n      // Get date range for the past week\n      const endDate = new Date();\n      const startDate = new Date();\n      startDate.setDate(startDate.getDate() - 7);\n\n      // Process each user\n      for (const user of users) {\n        // Get tasks assigned to user\n        const assignedTasks = await Task.find({\n          assignee: user._id,\n          updatedAt: { $gte: startDate, $lte: endDate },\n        });\n\n        // Get tasks created by user\n        const createdTasks = await Task.find({\n          creator: user._id,\n          updatedAt: { $gte: startDate, $lte: endDate },\n        });\n\n        // Count tasks by status\n        const tasksByStatus = {\n          completed: assignedTasks.filter((task) =\u003e task.status === \"completed\").length,\n          inProgress: assignedTasks.filter((task) =\u003e task.status === \"in-progress\").length,\n          inReview: assignedTasks.filter((task) =\u003e task.status === \"in-review\").length,\n          toDo: assignedTasks.filter((task) =\u003e task.status === \"to-do\").length,\n        };\n\n        // Get overdue tasks\n        const today = new Date();\n        today.setHours(0, 0, 0, 0);\n\n        const overdueTasks = await Task.find({\n          assignee: user._id,\n          dueDate: { $lt: today },\n          status: { $ne: \"completed\" },\n        });\n\n        // Send digest email\n        await sendEmail({\n          to: user.email,\n          subject: \"Your Weekly Task Digest\",\n          text: `Hello ${user.name},\n\nHere's your weekly task summary:\n\nTasks Assigned to You: ${assignedTasks.length}\n- Completed: ${tasksByStatus.completed}\n- In Progress: ${tasksByStatus.inProgress}\n- In Review: ${tasksByStatus.inReview}\n- To Do: ${tasksByStatus.toDo}\n\nTasks Created by You: ${createdTasks.length}\n\nOverdue Tasks: ${overdueTasks.length}\n\nBest regards,\nThe Task Management Team`,\n        });\n      }\n\n      console.log(\"Weekly digest emails sent successfully\");\n    } catch (err) {\n      console.error(\"Error sending weekly digest emails:\", err);\n    }\n  });\n};"])</script><script>self.__next_f.push([1,"bf:T7c0,import jwt from \"jsonwebtoken\";\nimport User from \"../models/User.js\";\n\nconst setupSocketHandlers = (io) =\u003e {\n  // Middleware for authentication\n  io.use(async (socket, next) =\u003e {\n    try {\n      const token =\n        socket.handshake.auth.token ||\n        (socket.handshake.headers.authorization \u0026\u0026 socket.handshake.headers.authorization.startsWith(\"Bearer\")\n          ? socket.handshake.headers.authorization.split(\" \")[1]\n          : null);\n\n      if (!token) {\n        return next(new Error(\"Authentication error\"));\n      }\n\n      // Verify token\n      const decoded = jwt.verify(token, process.env.JWT_SECRET);\n\n      // Find user\n      const user = await User.findById(decoded.id);\n      if (!user || user.status !== \"active\") {\n        return next(new Error(\"Authentication error\"));\n      }\n\n      // Attach user to socket\n      socket.user = user;\n      next();\n    } catch (err) {\n      next(new Error(\"Authentication error\"));\n    }\n  });\n\n  io.on(\"connection\", (socket) =\u003e {\n    console.log(`User connected: ${socket.user._id}`);\n\n    // Join user's room for private notifications\n    socket.join(socket.user._id.toString());\n\n    // Handle task updates\n    socket.on(\"task:update\", (taskId) =\u003e {\n      // Broadcast to all clients except sender\n      socket.broadcast.emit(\"task:updated\", taskId);\n    });\n\n    // Handle new comments\n    socket.on(\"comment:new\", (taskId) =\u003e {\n      // Broadcast to all clients except sender\n      socket.broadcast.emit(\"comment:added\", taskId);\n    });\n\n    // Handle user typing in comments\n    socket.on(\"typing\", (data) =\u003e {\n      // Broadcast to all clients except sender\n      socket.broadcast.emit(\"user:typing\", {\n        taskId: data.taskId,\n        user: {\n          id: socket.user._id,\n          name: socket.user.name,\n        },\n      });\n    });\n\n    // Handle disconnection\n    socket.on(\"disconnect\", () =\u003e {\n      console.log(`User disconnected: ${socket.user._id}`);\n    });\n  });\n};\n\nexport default setupSocketHandlers;c0:T7c0,import jwt from \"jsonwebtoken\";\nimport User from"])</script><script>self.__next_f.push([1," \"../models/User.js\";\n\nconst setupSocketHandlers = (io) =\u003e {\n  // Middleware for authentication\n  io.use(async (socket, next) =\u003e {\n    try {\n      const token =\n        socket.handshake.auth.token ||\n        (socket.handshake.headers.authorization \u0026\u0026 socket.handshake.headers.authorization.startsWith(\"Bearer\")\n          ? socket.handshake.headers.authorization.split(\" \")[1]\n          : null);\n\n      if (!token) {\n        return next(new Error(\"Authentication error\"));\n      }\n\n      // Verify token\n      const decoded = jwt.verify(token, process.env.JWT_SECRET);\n\n      // Find user\n      const user = await User.findById(decoded.id);\n      if (!user || user.status !== \"active\") {\n        return next(new Error(\"Authentication error\"));\n      }\n\n      // Attach user to socket\n      socket.user = user;\n      next();\n    } catch (err) {\n      next(new Error(\"Authentication error\"));\n    }\n  });\n\n  io.on(\"connection\", (socket) =\u003e {\n    console.log(`User connected: ${socket.user._id}`);\n\n    // Join user's room for private notifications\n    socket.join(socket.user._id.toString());\n\n    // Handle task updates\n    socket.on(\"task:update\", (taskId) =\u003e {\n      // Broadcast to all clients except sender\n      socket.broadcast.emit(\"task:updated\", taskId);\n    });\n\n    // Handle new comments\n    socket.on(\"comment:new\", (taskId) =\u003e {\n      // Broadcast to all clients except sender\n      socket.broadcast.emit(\"comment:added\", taskId);\n    });\n\n    // Handle user typing in comments\n    socket.on(\"typing\", (data) =\u003e {\n      // Broadcast to all clients except sender\n      socket.broadcast.emit(\"user:typing\", {\n        taskId: data.taskId,\n        user: {\n          id: socket.user._id,\n          name: socket.user.name,\n        },\n      });\n    });\n\n    // Handle disconnection\n    socket.on(\"disconnect\", () =\u003e {\n      console.log(`User disconnected: ${socket.user._id}`);\n    });\n  });\n};\n\nexport default setupSocketHandlers;"])</script><script>self.__next_f.push([1,"4f:{\"activeBlock\":{\"id\":\"b_TR4z7KynM4h\",\"meta\":{\"project\":\"Task Management Backend\",\"file\":\"package.json\",\"type\":\"code\",\"isFixed\":\"true\"},\"type\":\"code\",\"messageId\":\"YsHs1I6nndFyLiFBj38VEhFASipiPVCU\",\"remoteInfo\":\"$undefined\",\"language\":\"json\",\"source\":\"{\\n  \\\"name\\\": \\\"task-management-backend\\\",\\n  \\\"version\\\": \\\"1.0.0\\\",\\n  \\\"description\\\": \\\"Backend for Task Management Application\\\",\\n  \\\"main\\\": \\\"server.js\\\",\\n  \\\"type\\\": \\\"module\\\",\\n  \\\"private\\\": true,\\n  \\\"scripts\\\": {\\n    \\\"start\\\": \\\"node server.js\\\",\\n    \\\"dev\\\": \\\"nodemon server.js\\\",\\n    \\\"test\\\": \\\"jest\\\"\\n  },\\n  \\\"dependencies\\\": {\\n    \\\"bcrypt\\\": \\\"^5.1.1\\\",\\n    \\\"cookie-parser\\\": \\\"^1.4.6\\\",\\n    \\\"cors\\\": \\\"^2.8.5\\\",\\n    \\\"dotenv\\\": \\\"^16.3.1\\\",\\n    \\\"express\\\": \\\"^4.18.2\\\",\\n    \\\"jose\\\": \\\"^5.1.1\\\",\\n    \\\"json2csv\\\": \\\"^6.0.0-alpha.2\\\",\\n    \\\"jsonwebtoken\\\": \\\"^9.0.2\\\",\\n    \\\"mongoose\\\": \\\"^8.0.1\\\",\\n    \\\"multer\\\": \\\"^1.4.5-lts.1\\\",\\n    \\\"node-cron\\\": \\\"^3.0.3\\\",\\n    \\\"nodemailer\\\": \\\"^6.9.7\\\",\\n    \\\"pdfkit\\\": \\\"^0.14.0\\\",\\n    \\\"socket.io\\\": \\\"^4.7.2\\\"\\n  },\\n  \\\"devDependencies\\\": {\\n    \\\"jest\\\": \\\"^29.7.0\\\",\\n    \\\"nodemon\\\": \\\"^3.0.1\\\",\\n    \\\"supertest\\\": \\\"^6.3.3\\\"\\n  },\\n  \\\"engines\\\": {\\n    \\\"node\\\": \\\"\u003e=18.0.0\\\"\\n  }\\n}\",\"resultId\":\"$undefined\",\"closed\":true,\"hasSourceBeenEdited\":false,\"latestDeploymentInfo\":\"$undefined\",\"templateVersionId\":\"$undefined\",\"templateCanonId\":\"$undefined\",\"diffInfo\":\"$undefined\",\"env\":\"$undefined\",\"forkedFromBlockId\":\"$undefined\",\"isLoading\":false,\"initial\":true,\"fullscreenOnLoad\":false},\"activeForkKey\":[\"ZB59YFvULEYvdfpLugnBt9bfWL64vdig\",\"za1cMufE0uQvKgohFeMkNcIgXmMZpLMG\",\"rIRPt1rBVHqEKYHvJU3kfE7zHkjvL6v5\",\"hbkpp78Xpw6UJXoj8p2hrM6olNHHjBnN\",\"cBYV9J5punHvaVOangVHCJ68hg05XyaT\",\"GjNQutkUo1US1FQk43pp591fHyTltCRW\",\"LELA1r2uHrlG4glozIzfHZBuAJWNemQV\",\"YsHs1I6nndFyLiFBj38VEhFASipiPVCU\",\"npRSw6ptcTAjSWyDGwuozrxTQoPNF30w\",\"fPRkUBBQ0Wr8b1tsLA9OWuAIiz4q76Hx\"],\"title\":\"React frontend code\",\"messages\":[{\"content\":\"$98\",\"role\":\"user\",\"id\":\"ZB59YFvULEYvdfpLugnBt9bfWL64vdig\",\"attachments\":[],\"parentId\":\"$undefined\",\"type\":\"message\",\"authorId\":\"3TrnvW3giHw6Nukv5CZNo7x6\",\"createdAt\":\"$D2025-03-12T07:42:28.941Z\"},{\"content\":[[0,[[\"p\",{},[\"text\",{},\"I'll help you build a task management web app with React for the frontend. Let's start by creating a structured, scalable frontend application that implements the features you've requested.\"]],[\"Thinking\",{\"closed\":true,\"chars\":1140},[\"p\",{},[\"text\",{},\"Let's plan out the frontend architecture for this task management app:\"]],[\"ol\",{\"start\":1},[\"li\",{\"index\":1},[\"p\",{},[\"text\",{},\"Project Structure:\"]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"text\",{},\"Next.js App Router for routing and organization\"]],[\"li\",{\"index\":2},[\"text\",{},\"Components organized by feature/functionality\"]],[\"li\",{\"index\":3},[\"text\",{},\"Proper state management\"]],[\"li\",{\"index\":4},[\"text\",{},\"Authentication flow\"]],[\"li\",{\"index\":5},[\"text\",{},\"API integration\"]]]],[\"li\",{\"index\":2},[\"p\",{},[\"text\",{},\"Features to implement:\"]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"text\",{},\"Task assignment and prioritization with Kanban board\"]],[\"li\",{\"index\":2},[\"text\",{},\"Deadline tracking\"]],[\"li\",{\"index\":3},[\"text\",{},\"Progress reporting with charts\"]],[\"li\",{\"index\":4},[\"text\",{},\"Role-based permissions\"]],[\"li\",{\"index\":5},[\"text\",{},\"Real-time collaboration\"]],[\"li\",{\"index\":6},[\"text\",{},\"Authentication\"]]]],[\"li\",{\"index\":3},[\"p\",{},[\"text\",{},\"UI Components:\"]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"text\",{},\"Dashboard layout\"]],[\"li\",{\"index\":2},[\"text\",{},\"Kanban board\"]],[\"li\",{\"index\":3},[\"text\",{},\"Task cards\"]],[\"li\",{\"index\":4},[\"text\",{},\"Forms for task creation/editing\"]],[\"li\",{\"index\":5},[\"text\",{},\"User management\"]],[\"li\",{\"index\":6},[\"text\",{},\"Charts for reporting\"]],[\"li\",{\"index\":7},[\"text\",{},\"Authentication forms\"]]]],[\"li\",{\"index\":4},[\"p\",{},[\"text\",{},\"Libraries to use:\"]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"text\",{},\"shadcn/ui for UI components\"]],[\"li\",{\"index\":2},[\"text\",{},\"Tailwind CSS for styling\"]],[\"li\",{\"index\":3},[\"text\",{},\"Recharts for charts\"]],[\"li\",{\"index\":4},[\"text\",{},\"React DnD or similar for Kanban functionality\"]],[\"li\",{\"index\":5},[\"text\",{},\"JWT handling for auth\"]]]]],[\"p\",{},[\"text\",{},\"Let's start with the core structure and implement the main features one by one.\"]]],[\"h3\",{},[\"text\",{},\"Task Management Web App - Frontend Implementation\"]],[\"p\",{},[\"text\",{},\"I'll create a comprehensive React frontend for your task management application using Next.js with the App Router. This implementation will include all the features you requested while following best practices for scalability and security.\"]],[\"Codeblock\",{\"lang\":\"typescriptreact\",\"meta\":{\"type\":\"code-project\",\"id\":\"task-management-app\",\"project\":\"task-management-app\"},\"closed\":true,\"blockId\":\"b_ziXtDRY6T4u\",\"resultId\":\"$undefined\",\"source\":\"$99\",\"remoteInfo\":\"$undefined\",\"latestDeploymentInfo\":\"$undefined\",\"lastDeployedAt\":\"$undefined\",\"lastEditedAt\":\"$undefined\"},\"$9a\"],[\"p\",{},[\"text\",{},\"This completes the frontend implementation for your task management web app. I've created a comprehensive React application using Next.js with the App Router that includes all the features you requested:\"]],[\"h3\",{},[\"text\",{},\"Key Features Implemented:\"]],[\"ol\",{\"start\":1},[\"li\",{\"index\":1},[\"p\",{},[\"strong\",{},[\"text\",{},\"Task Assignment and Prioritization\"]]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"text\",{},\"Kanban board with drag-and-drop functionality\"]],[\"li\",{\"index\":2},[\"text\",{},\"Priority levels (High, Medium, Low) with visual indicators\"]],[\"li\",{\"index\":3},[\"text\",{},\"Task assignment to team members\"]]]],[\"li\",{\"index\":2},[\"p\",{},[\"strong\",{},[\"text\",{},\"Deadline Tracking and Notifications\"]]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"text\",{},\"Due date selection and display\"]],[\"li\",{\"index\":2},[\"text\",{},\"Deadline reminders and overdue task indicators\"]],[\"li\",{\"index\":3},[\"text\",{},\"Notification preferences management\"]]]],[\"li\",{\"index\":3},[\"p\",{},[\"strong\",{},[\"text\",{},\"Progress Reporting\"]]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"text\",{},\"Visual charts for task completion rates\"]],[\"li\",{\"index\":2},[\"text\",{},\"Team performance metrics\"]],[\"li\",{\"index\":3},[\"text\",{},\"Task priority distribution visualization\"]]]],[\"li\",{\"index\":4},[\"p\",{},[\"strong\",{},[\"text\",{},\"Role-Based Permissions\"]]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"text\",{},\"Admin, Editor, and Viewer roles\"]],[\"li\",{\"index\":2},[\"text\",{},\"Permission-based access control\"]],[\"li\",{\"index\":3},[\"text\",{},\"User management interface for admins\"]]]],[\"li\",{\"index\":5},[\"p\",{},[\"strong\",{},[\"text\",{},\"Real-Time Collaboration\"]]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"text\",{},\"Task comments system\"]],[\"li\",{\"index\":2},[\"text\",{},\"File attachment capabilities\"]],[\"li\",{\"index\":3},[\"text\",{},\"Team member visibility\"]]]],[\"li\",{\"index\":6},[\"p\",{},[\"strong\",{},[\"text\",{},\"Secure Authentication and Authorization\"]]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"text\",{},\"JWT-based authentication\"]],[\"li\",{\"index\":2},[\"text\",{},\"Login/registration forms\"]],[\"li\",{\"index\":3},[\"text\",{},\"Password management and security settings\"]]]]],[\"h3\",{},[\"text\",{},\"Technical Implementation:\"]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"strong\",{},[\"text\",{},\"Component Structure\"]],[\"text\",{},\": Organized by feature for better maintainability\"]],[\"li\",{\"index\":2},[\"strong\",{},[\"text\",{},\"State Management\"]],[\"text\",{},\": Using React hooks for local state\"]],[\"li\",{\"index\":3},[\"strong\",{},[\"text\",{},\"UI Components\"]],[\"text\",{},\": Built with shadcn/ui and Tailwind CSS\"]],[\"li\",{\"index\":4},[\"strong\",{},[\"text\",{},\"Data Visualization\"]],[\"text\",{},\": Charts for reporting using Recharts\"]],[\"li\",{\"index\":5},[\"strong\",{},[\"text\",{},\"Form Handling\"]],[\"text\",{},\": Form validation and submission handling\"]],[\"li\",{\"index\":6},[\"strong\",{},[\"text\",{},\"Responsive Design\"]],[\"text\",{},\": Mobile-friendly layouts throughout\"]]],[\"p\",{},[\"text\",{},\"To complete the application, you'll need to implement the backend with Node.js and MongoDB. Would you like me to continue with the backend implementation next?\"]],[\"p\",{},[\"text\",{},\"Please make sure to add the following environment variable to your project:\"]],[\"AddEnvironmentVariables\",{\"names\":[\"JWT_SECRET\"]}]]],[1,{\"title\":\"React frontend code\"}]],\"context\":[],\"isContentLoading\":false,\"role\":\"assistant\",\"id\":\"za1cMufE0uQvKgohFeMkNcIgXmMZpLMG\",\"streaming\":false,\"relevantFiles\":\"$undefined\",\"grepQueries\":\"$undefined\",\"finishReason\":\"stop\",\"vote\":\"$undefined\",\"parentId\":\"ZB59YFvULEYvdfpLugnBt9bfWL64vdig\",\"loadingBlocks\":\"$undefined\",\"type\":\"message\",\"createdAt\":\"$D2025-03-12T07:42:28.942Z\"},{\"content\":\"The environment variable JWT_SECRET has been added to the [Vercel Project]().\",\"role\":\"user\",\"id\":\"rIRPt1rBVHqEKYHvJU3kfE7zHkjvL6v5\",\"attachments\":[],\"parentId\":\"za1cMufE0uQvKgohFeMkNcIgXmMZpLMG\",\"type\":\"added-environment-variables\",\"authorId\":\"3TrnvW3giHw6Nukv5CZNo7x6\",\"createdAt\":\"$D2025-03-12T07:50:26.072Z\"},{\"content\":[[0,[[\"Thinking\",{\"closed\":true,\"chars\":693},[\"p\",{},[\"text\",{},\"Great! The user has confirmed that the JWT_SECRET environment variable has been added to their Vercel project. Now I can proceed with creating the backend implementation for the task management app. I'll focus on building a Node.js backend with MongoDB integration that will support all the features we implemented in the frontend.\"]],[\"p\",{},[\"text\",{},\"For the backend, I'll need to create:\"]],[\"ol\",{\"start\":1},[\"li\",{\"index\":1},[\"text\",{},\"Server setup with Express.js\"]],[\"li\",{\"index\":2},[\"text\",{},\"MongoDB connection and schemas\"]],[\"li\",{\"index\":3},[\"text\",{},\"Authentication middleware with JWT\"]],[\"li\",{\"index\":4},[\"text\",{},\"API routes for tasks, users, comments, etc.\"]],[\"li\",{\"index\":5},[\"text\",{},\"Real-time functionality with Socket.io\"]],[\"li\",{\"index\":6},[\"text\",{},\"File upload handling\"]],[\"li\",{\"index\":7},[\"text\",{},\"Email notification system\"]]],[\"p\",{},[\"text\",{},\"I'll structure the code in a clean, modular way following best practices.\"]]],[\"p\",{},[\"text\",{},\"Great! Now that you have the JWT_SECRET environment variable set up, let's implement the backend for your task management application using Node.js and MongoDB.\"]],[\"Codeblock\",{\"lang\":\"typescriptreact\",\"meta\":{\"type\":\"code-project\",\"id\":\"task-management-app\",\"project\":\"task-management-app\"},\"closed\":true,\"blockId\":\"b_DsBjUrm49AS\",\"resultId\":\"$undefined\",\"source\":\"$9b\",\"remoteInfo\":\"$undefined\",\"latestDeploymentInfo\":\"$undefined\",\"lastDeployedAt\":\"$undefined\",\"lastEditedAt\":\"$undefined\"},\"$9c\"],[\"h2\",{},[\"text\",{},\"Backend Implementation for Task Management App\"]],[\"p\",{},[\"text\",{},\"I've completed the backend implementation for your task management application using Node.js and MongoDB. This backend provides all the necessary APIs and functionality to support the frontend we created earlier. Let me explain the key components of the backend implementation:\"]],[\"h3\",{},[\"text\",{},\"Key Features Implemented:\"]],[\"ol\",{\"start\":1},[\"li\",{\"index\":1},[\"p\",{},[\"strong\",{},[\"text\",{},\"RESTful API Architecture\"]]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"text\",{},\"Complete set of CRUD operations for tasks, users, comments, and notifications\"]],[\"li\",{\"index\":2},[\"text\",{},\"Well-structured routes with proper middleware for authentication and authorization\"]],[\"li\",{\"index\":3},[\"text\",{},\"Error handling middleware for consistent error responses\"]]]],[\"li\",{\"index\":2},[\"p\",{},[\"strong\",{},[\"text\",{},\"Authentication \u0026 Authorization\"]]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"text\",{},\"JWT-based authentication with secure token handling\"]],[\"li\",{\"index\":2},[\"text\",{},\"Role-based access control (admin, editor, viewer)\"]],[\"li\",{\"index\":3},[\"text\",{},\"Password hashing with bcrypt for security\"]],[\"li\",{\"index\":4},[\"text\",{},\"OAuth integration for Google and GitHub login\"]]]],[\"li\",{\"index\":3},[\"p\",{},[\"strong\",{},[\"text\",{},\"Database Models\"]]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"text\",{},\"Mongoose schemas with validation for all entities\"]],[\"li\",{\"index\":2},[\"text\",{},\"Proper relationships between models (tasks, users, comments, notifications)\"]],[\"li\",{\"index\":3},[\"text\",{},\"Indexing for optimized query performance\"]]]],[\"li\",{\"index\":4},[\"p\",{},[\"strong\",{},[\"text\",{},\"Real-time Functionality\"]]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"text\",{},\"Socket.io integration for real-time updates\"]],[\"li\",{\"index\":2},[\"text\",{},\"Live notifications for task assignments, comments, and mentions\"]],[\"li\",{\"index\":3},[\"text\",{},\"Real-time collaboration features\"]]]],[\"li\",{\"index\":5},[\"p\",{},[\"strong\",{},[\"text\",{},\"File Upload \u0026 Management\"]]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"text\",{},\"Secure file upload with Multer\"]],[\"li\",{\"index\":2},[\"text\",{},\"Support for various file types (images, documents, etc.)\"]],[\"li\",{\"index\":3},[\"text\",{},\"Organized file storage structure\"]]]],[\"li\",{\"index\":6},[\"p\",{},[\"strong\",{},[\"text\",{},\"Reporting \u0026 Data Export\"]]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"text\",{},\"Comprehensive reporting APIs for task completion, team performance, etc.\"]],[\"li\",{\"index\":2},[\"text\",{},\"Export functionality to PDF and CSV formats\"]],[\"li\",{\"index\":3},[\"text\",{},\"Aggregation pipelines for data analysis\"]]]],[\"li\",{\"index\":7},[\"p\",{},[\"strong\",{},[\"text\",{},\"Notification System\"]]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"text\",{},\"In-app notifications\"]],[\"li\",{\"index\":2},[\"text\",{},\"Email notifications with Nodemailer\"]],[\"li\",{\"index\":3},[\"text\",{},\"Scheduled reminders for upcoming deadlines\"]]]],[\"li\",{\"index\":8},[\"p\",{},[\"strong\",{},[\"text\",{},\"Scheduled Jobs\"]]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"text\",{},\"Automated deadline reminders\"]],[\"li\",{\"index\":2},[\"text\",{},\"Weekly digest emails\"]],[\"li\",{\"index\":3},[\"text\",{},\"Task status updates\"]]]]],[\"h3\",{},[\"text\",{},\"Integration with Frontend:\"]],[\"p\",{},[\"text\",{},\"To connect the frontend with this backend:\"]],[\"ol\",{\"start\":1},[\"li\",{\"index\":1},[\"p\",{},[\"strong\",{},[\"text\",{},\"Environment Setup\"]],[\"text\",{},\":\"]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"text\",{},\"Create a \"],[\"code\",{},\".env\"],[\"text\",{},\" file based on the \"],[\"code\",{},\".env.example\"],[\"text\",{},\" template\"]],[\"li\",{\"index\":2},[\"text\",{},\"Set your MongoDB connection string, JWT secret, and other configuration\"]]]],[\"li\",{\"index\":2},[\"p\",{},[\"strong\",{},[\"text\",{},\"Running the Backend\"]],[\"text\",{},\":\"]],[\"Codeblock\",{\"lang\":\"shellscript\",\"meta\":{},\"closed\":true},\"npm install\\nnpm run dev\"]],[\"li\",{\"index\":3},[\"p\",{},[\"strong\",{},[\"text\",{},\"API Configuration in Frontend\"]],[\"text\",{},\":\"]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"text\",{},\"Update the API base URL in your frontend to point to your backend server\"]],[\"li\",{\"index\":2},[\"text\",{},\"Ensure the JWT token is properly passed in requests\"]]]],[\"li\",{\"index\":4},[\"p\",{},[\"strong\",{},[\"text\",{},\"Socket.io Connection\"]],[\"text\",{},\":\"]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"text\",{},\"Connect to the WebSocket server from your frontend for real-time updates\"]],[\"li\",{\"index\":2},[\"text\",{},\"Implement event listeners for notifications and updates\"]]]]],[\"h3\",{},[\"text\",{},\"Security Considerations:\"]],[\"p\",{},[\"text\",{},\"The backend implements several security best practices:\"]],[\"ol\",{\"start\":1},[\"li\",{\"index\":1},[\"text\",{},\"Password hashing with bcrypt\"]],[\"li\",{\"index\":2},[\"text\",{},\"JWT for secure authentication\"]],[\"li\",{\"index\":3},[\"text\",{},\"CORS configuration to prevent unauthorized access\"]],[\"li\",{\"index\":4},[\"text\",{},\"Input validation to prevent injection attacks\"]],[\"li\",{\"index\":5},[\"text\",{},\"Role-based access control for authorization\"]],[\"li\",{\"index\":6},[\"text\",{},\"Secure file upload handling\"]]],[\"h3\",{},[\"text\",{},\"Deployment Recommendations:\"]],[\"p\",{},[\"text\",{},\"For deploying this full-stack application:\"]],[\"ol\",{\"start\":1},[\"li\",{\"index\":1},[\"strong\",{},[\"text\",{},\"Backend\"]],[\"text\",{},\": Deploy to a Node.js-friendly platform like Vercel, Heroku, or AWS\"]],[\"li\",{\"index\":2},[\"strong\",{},[\"text\",{},\"Database\"]],[\"text\",{},\": Use MongoDB Atlas for a managed MongoDB solution\"]],[\"li\",{\"index\":3},[\"strong\",{},[\"text\",{},\"Frontend\"]],[\"text\",{},\": Deploy to Vercel or Netlify for optimal performance\"]],[\"li\",{\"index\":4},[\"strong\",{},[\"text\",{},\"Environment Variables\"]],[\"text\",{},\": Securely configure all environment variables in your hosting platform\"]],[\"li\",{\"index\":5},[\"strong\",{},[\"text\",{},\"HTTPS\"]],[\"text\",{},\": Ensure all communication uses HTTPS for security\"]]],[\"p\",{},[\"text\",{},\"This complete implementation provides a solid foundation for your task management application with all the requested features. The modular architecture allows for easy extension and customization as your requirements evolve.\"]],[\"p\",{},[\"text\",{},\"Please make sure to add the following environment variables to your project:\"]],[\"AddEnvironmentVariables\",{\"names\":[\"PORT\",\"FRONTEND_URL\",\"MONGODB_URI\",\"EMAIL_HOST\",\"EMAIL_PORT\",\"EMAIL_SECURE\",\"EMAIL_USER\",\"EMAIL_PASS\",\"EMAIL_FROM\"]}]]],[1,{}]],\"context\":[],\"isContentLoading\":false,\"role\":\"assistant\",\"id\":\"hbkpp78Xpw6UJXoj8p2hrM6olNHHjBnN\",\"streaming\":false,\"relevantFiles\":\"$undefined\",\"grepQueries\":\"$undefined\",\"finishReason\":\"stop\",\"vote\":\"$undefined\",\"parentId\":\"rIRPt1rBVHqEKYHvJU3kfE7zHkjvL6v5\",\"loadingBlocks\":\"$undefined\",\"type\":\"message\",\"createdAt\":\"$D2025-03-12T07:50:26.073Z\"},{\"content\":\"do you support the preview for the code written in nodejs\",\"role\":\"user\",\"id\":\"cBYV9J5punHvaVOangVHCJ68hg05XyaT\",\"attachments\":[],\"parentId\":\"hbkpp78Xpw6UJXoj8p2hrM6olNHHjBnN\",\"type\":\"message\",\"authorId\":\"3TrnvW3giHw6Nukv5CZNo7x6\",\"createdAt\":\"$D2025-03-16T04:50:39.912Z\"},{\"content\":[[0,[[\"Thinking\",{\"closed\":true,\"chars\":236},[\"p\",{},[\"text\",{},\"The user is asking if I support previewing Node.js code. They're likely wondering if they can execute or preview the Node.js backend code I've provided directly in this chat interface, similar to how React components can be previewed.\"]]],[\"p\",{},[\"text\",{},\"Yes, I do support previewing and executing Node.js code! You can run Node.js code directly in our conversation using the Node.js executable block. This allows you to test and see the output of backend code snippets without having to set up a local environment.\"]],[\"p\",{},[\"text\",{},\"Let me demonstrate with a simple example that shows some of the task management backend functionality:\"]],[\"Codeblock\",{\"lang\":\"javascript\",\"meta\":{\"project\":\"Task Management Demo\",\"file\":\"task-demo.js\",\"type\":\"nodejs\"},\"closed\":true,\"blockId\":\"b_licofAqb22B\",\"resultId\":\"$undefined\",\"source\":\"$9d\",\"latestDeploymentInfo\":\"$undefined\",\"lastDeployedAt\":\"$undefined\",\"lastEditedAt\":\"$undefined\"},\"$9e\"],[\"p\",{},[\"text\",{},\"You can click the \\\"Run\\\" button to execute this code and see the output. This is a simplified demonstration, but you can use this feature to test more complex parts of the backend code I provided earlier.\"]],[\"p\",{},[\"text\",{},\"If you'd like to test specific parts of the backend implementation, let me know, and I can create more focused Node.js executable examples for you.\"]]]],[1,{}]],\"context\":[],\"isContentLoading\":false,\"role\":\"assistant\",\"id\":\"GjNQutkUo1US1FQk43pp591fHyTltCRW\",\"streaming\":false,\"relevantFiles\":\"$undefined\",\"grepQueries\":\"$undefined\",\"finishReason\":\"stop\",\"vote\":\"$undefined\",\"parentId\":\"cBYV9J5punHvaVOangVHCJ68hg05XyaT\",\"loadingBlocks\":\"$undefined\",\"type\":\"message\",\"createdAt\":\"$D2025-03-16T04:50:39.913Z\"},{\"content\":\"write the backend of the task managment website in Nodejs completely\",\"role\":\"user\",\"id\":\"LELA1r2uHrlG4glozIzfHZBuAJWNemQV\",\"attachments\":[],\"parentId\":\"GjNQutkUo1US1FQk43pp591fHyTltCRW\",\"type\":\"message\",\"authorId\":\"3TrnvW3giHw6Nukv5CZNo7x6\",\"createdAt\":\"$D2025-03-16T04:51:56.873Z\"},{\"content\":[[0,[[\"Thinking\",{\"closed\":true,\"chars\":591},[\"p\",{},[\"text\",{},\"The user is asking for a complete Node.js backend implementation for the task management website. I'll create a comprehensive backend that includes all the necessary components:\"]],[\"ol\",{\"start\":1},[\"li\",{\"index\":1},[\"text\",{},\"Server setup with Express\"]],[\"li\",{\"index\":2},[\"text\",{},\"MongoDB connection with Mongoose\"]],[\"li\",{\"index\":3},[\"text\",{},\"Authentication with JWT\"]],[\"li\",{\"index\":4},[\"text\",{},\"User management\"]],[\"li\",{\"index\":5},[\"text\",{},\"Task management\"]],[\"li\",{\"index\":6},[\"text\",{},\"Comments and notifications\"]],[\"li\",{\"index\":7},[\"text\",{},\"File uploads\"]],[\"li\",{\"index\":8},[\"text\",{},\"Socket.io for real-time updates\"]]],[\"p\",{},[\"text\",{},\"I'll organize this into a structured project with proper separation of concerns. Since this is a large codebase, I'll focus on creating the most important files and explaining the structure clearly.\"]]],[\"h3\",{},[\"text\",{},\"Complete Node.js Backend for Task Management Website\"]],[\"p\",{},[\"text\",{},\"I'll create a comprehensive backend implementation for your task management application. This will include all the necessary components for a production-ready backend.\"]],[\"p\",{},[\"text\",{},\"Let's start with the main server file and then build out the rest of the application:\"]],[\"Codeblock\",{\"lang\":\"javascript\",\"meta\":{\"project\":\"Task Management Backend\",\"file\":\"server.js\",\"type\":\"code\"},\"closed\":true,\"blockId\":\"b_dQFv16063iB\",\"resultId\":\"$undefined\",\"source\":\"$9f\",\"latestDeploymentInfo\":\"$undefined\",\"lastDeployedAt\":\"$undefined\",\"lastEditedAt\":\"$undefined\"},\"$a0\"],[\"p\",{},[\"text\",{},\"Now, let's create the models for our database:\"]],[\"Codeblock\",{\"lang\":\"javascript\",\"meta\":{\"project\":\"Task Management Backend\",\"file\":\"models/User.js\",\"type\":\"code\"},\"closed\":true,\"blockId\":\"b_aWSIXSqhU7z\",\"resultId\":\"$undefined\",\"source\":\"$a1\",\"latestDeploymentInfo\":\"$undefined\",\"lastDeployedAt\":\"$undefined\",\"lastEditedAt\":\"$undefined\"},\"$a2\"],[\"Codeblock\",{\"lang\":\"javascript\",\"meta\":{\"project\":\"Task Management Backend\",\"file\":\"models/Task.js\",\"type\":\"code\"},\"closed\":true,\"blockId\":\"b_dw1WvYsMPad\",\"resultId\":\"$undefined\",\"source\":\"$a3\",\"latestDeploymentInfo\":\"$undefined\",\"lastDeployedAt\":\"$undefined\",\"lastEditedAt\":\"$undefined\"},\"$a4\"],[\"Codeblock\",{\"lang\":\"javascript\",\"meta\":{\"project\":\"Task Management Backend\",\"file\":\"models/Comment.js\",\"type\":\"code\"},\"closed\":true,\"blockId\":\"b_TaCaAzHRcKS\",\"resultId\":\"$undefined\",\"source\":\"import mongoose from \\\"mongoose\\\";\\n\\nconst commentSchema = new mongoose.Schema(\\n  {\\n    task: {\\n      type: mongoose.Schema.Types.ObjectId,\\n      ref: \\\"Task\\\",\\n      required: true,\\n    },\\n    user: {\\n      type: mongoose.Schema.Types.ObjectId,\\n      ref: \\\"User\\\",\\n      required: true,\\n    },\\n    content: {\\n      type: String,\\n      required: [true, \\\"Comment content is required\\\"],\\n      trim: true,\\n    },\\n    mentions: [\\n      {\\n        type: mongoose.Schema.Types.ObjectId,\\n        ref: \\\"User\\\",\\n      },\\n    ],\\n    attachments: [\\n      {\\n        name: String,\\n        path: String,\\n        type: String,\\n        size: Number,\\n        uploadedAt: {\\n          type: Date,\\n          default: Date.now,\\n        },\\n      },\\n    ],\\n  },\\n  {\\n    timestamps: true,\\n  },\\n);\\n\\n// Create indexes for better query performance\\ncommentSchema.index({ task: 1 });\\ncommentSchema.index({ user: 1 });\\ncommentSchema.index({ createdAt: -1 });\\n\\nconst Comment = mongoose.model(\\\"Comment\\\", commentSchema);\\n\\nexport default Comment;\",\"latestDeploymentInfo\":\"$undefined\",\"lastDeployedAt\":\"$undefined\",\"lastEditedAt\":\"$undefined\"},\"import mongoose from \\\"mongoose\\\";\\n\\nconst commentSchema = new mongoose.Schema(\\n  {\\n    task: {\\n      type: mongoose.Schema.Types.ObjectId,\\n      ref: \\\"Task\\\",\\n      required: true,\\n    },\\n    user: {\\n      type: mongoose.Schema.Types.ObjectId,\\n      ref: \\\"User\\\",\\n      required: true,\\n    },\\n    content: {\\n      type: String,\\n      required: [true, \\\"Comment content is required\\\"],\\n      trim: true,\\n    },\\n    mentions: [\\n      {\\n        type: mongoose.Schema.Types.ObjectId,\\n        ref: \\\"User\\\",\\n      },\\n    ],\\n    attachments: [\\n      {\\n        name: String,\\n        path: String,\\n        type: String,\\n        size: Number,\\n        uploadedAt: {\\n          type: Date,\\n          default: Date.now,\\n        },\\n      },\\n    ],\\n  },\\n  {\\n    timestamps: true,\\n  },\\n);\\n\\n// Create indexes for better query performance\\ncommentSchema.index({ task: 1 });\\ncommentSchema.index({ user: 1 });\\ncommentSchema.index({ createdAt: -1 });\\n\\nconst Comment = mongoose.model(\\\"Comment\\\", commentSchema);\\n\\nexport default Comment;\"],[\"Codeblock\",{\"lang\":\"javascript\",\"meta\":{\"project\":\"Task Management Backend\",\"file\":\"models/Notification.js\",\"type\":\"code\"},\"closed\":true,\"blockId\":\"b_Fe77xFVKTs4\",\"resultId\":\"$undefined\",\"source\":\"$a5\",\"latestDeploymentInfo\":\"$undefined\",\"lastDeployedAt\":\"$undefined\",\"lastEditedAt\":\"$undefined\"},\"$a6\"],[\"p\",{},[\"text\",{},\"Now, let's create the middleware for authentication and error handling:\"]],[\"Codeblock\",{\"lang\":\"javascript\",\"meta\":{\"project\":\"Task Management Backend\",\"file\":\"middleware/auth.js\",\"type\":\"code\"},\"closed\":true,\"blockId\":\"b_4IaEDoUN54E\",\"resultId\":\"$undefined\",\"source\":\"$a7\",\"latestDeploymentInfo\":\"$undefined\",\"lastDeployedAt\":\"$undefined\",\"lastEditedAt\":\"$undefined\"},\"$a8\"],[\"Codeblock\",{\"lang\":\"javascript\",\"meta\":{\"project\":\"Task Management Backend\",\"file\":\"middleware/errorHandler.js\",\"type\":\"code\"},\"closed\":true,\"blockId\":\"b_vgL82lhdt0R\",\"resultId\":\"$undefined\",\"source\":\"// Error handling middleware\\nexport const errorHandler = (err, req, res, next) =\u003e {\\n  const statusCode = err.statusCode || 500;\\n  const message = err.message || \\\"Internal Server Error\\\";\\n\\n  console.error(`[ERROR] ${statusCode} - ${message}`);\\n  if (process.env.NODE_ENV === \\\"development\\\") {\\n    console.error(err.stack);\\n  }\\n\\n  res.status(statusCode).json({\\n    success: false,\\n    status: statusCode,\\n    message,\\n    stack: process.env.NODE_ENV === \\\"development\\\" ? err.stack : {},\\n  });\\n};\",\"latestDeploymentInfo\":\"$undefined\",\"lastDeployedAt\":\"$undefined\",\"lastEditedAt\":\"$undefined\"},\"// Error handling middleware\\nexport const errorHandler = (err, req, res, next) =\u003e {\\n  const statusCode = err.statusCode || 500;\\n  const message = err.message || \\\"Internal Server Error\\\";\\n\\n  console.error(`[ERROR] ${statusCode} - ${message}`);\\n  if (process.env.NODE_ENV === \\\"development\\\") {\\n    console.error(err.stack);\\n  }\\n\\n  res.status(statusCode).json({\\n    success: false,\\n    status: statusCode,\\n    message,\\n    stack: process.env.NODE_ENV === \\\"development\\\" ? err.stack : {},\\n  });\\n};\"],[\"Codeblock\",{\"lang\":\"javascript\",\"meta\":{\"project\":\"Task Management Backend\",\"file\":\"middleware/upload.js\",\"type\":\"code\"},\"closed\":true,\"blockId\":\"b_r7kaWysF38W\",\"resultId\":\"$undefined\",\"source\":\"$a9\",\"latestDeploymentInfo\":\"$undefined\",\"lastDeployedAt\":\"$undefined\",\"lastEditedAt\":\"$undefined\"},\"$aa\"],[\"p\",{},[\"text\",{},\"Now, let's create the route handlers:\"]],[\"Codeblock\",{\"lang\":\"javascript\",\"meta\":{\"project\":\"Task Management Backend\",\"file\":\"routes/auth.js\",\"type\":\"code\"},\"closed\":true,\"blockId\":\"b_LVFWZIx1NAn\",\"resultId\":\"$undefined\",\"source\":\"$ab\",\"latestDeploymentInfo\":\"$undefined\",\"lastDeployedAt\":\"$undefined\",\"lastEditedAt\":\"$undefined\"},\"$ac\"],[\"Codeblock\",{\"lang\":\"javascript\",\"meta\":{\"project\":\"Task Management Backend\",\"file\":\"routes/users.js\",\"type\":\"code\"},\"closed\":true,\"blockId\":\"b_Yz55zBYhKP2\",\"resultId\":\"$undefined\",\"source\":\"$ad\",\"latestDeploymentInfo\":\"$undefined\",\"lastDeployedAt\":\"$undefined\",\"lastEditedAt\":\"$undefined\"},\"$ae\"],[\"p\",{},[\"text\",{},\"I found some issues in the code block.\"]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"text\",{},\"expected \"],[\"code\",{},\")\"],[\"text\",{},\" but instead found \"],[\"code\",{},\"next\"]]],[\"p\",{},[\"text\",{},\"I will fix them.\"]],[\"Codeblock\",{\"lang\":\"javascript\",\"meta\":{\"project\":\"Task Management Backend\",\"file\":\"routes/users.js\",\"type\":\"code\",\"isFixed\":\"true\"},\"closed\":true,\"blockId\":\"b_EhgUWUE9ELV\",\"resultId\":\"$undefined\",\"source\":\"$af\",\"latestDeploymentInfo\":\"$undefined\",\"lastDeployedAt\":\"$undefined\",\"lastEditedAt\":\"$undefined\"},\"$b0\"],[\"Codeblock\",{\"lang\":\"javascript\",\"meta\":{\"project\":\"Task Management Backend\",\"file\":\"routes/tasks.js\",\"type\":\"code\"},\"closed\":true,\"blockId\":\"b_56bCXte5aZW\",\"resultId\":\"$undefined\",\"source\":\"$b1\",\"latestDeploymentInfo\":\"$undefined\",\"lastDeployedAt\":\"$undefined\",\"lastEditedAt\":\"$undefined\"},\"$b2\"],[\"Codeblock\",{\"lang\":\"javascript\",\"meta\":{\"project\":\"Task Management Backend\",\"file\":\"routes/comments.js\",\"type\":\"code\"},\"closed\":true,\"blockId\":\"b_JDRupuXoNDJ\",\"resultId\":\"$undefined\",\"source\":\"$b3\",\"latestDeploymentInfo\":\"$undefined\",\"lastDeployedAt\":\"$undefined\",\"lastEditedAt\":\"$undefined\"},\"$b4\"],[\"Codeblock\",{\"lang\":\"javascript\",\"meta\":{\"project\":\"Task Management Backend\",\"file\":\"routes/notifications.js\",\"type\":\"code\"},\"closed\":true,\"blockId\":\"b_HvByXziVBAQ\",\"resultId\":\"$undefined\",\"source\":\"$b5\",\"latestDeploymentInfo\":\"$undefined\",\"lastDeployedAt\":\"$undefined\",\"lastEditedAt\":\"$undefined\"},\"$b6\"],[\"Codeblock\",{\"lang\":\"javascript\",\"meta\":{\"project\":\"Task Management Backend\",\"file\":\"routes/reports.js\",\"type\":\"code\"},\"closed\":true,\"blockId\":\"b_EiyqaDkSPt5\",\"resultId\":\"$undefined\",\"source\":\"$b7\",\"latestDeploymentInfo\":\"$undefined\",\"lastDeployedAt\":\"$undefined\",\"lastEditedAt\":\"$undefined\"},\"$b8\"],[\"p\",{},[\"text\",{},\"Now, let's create the utility files:\"]],[\"Codeblock\",{\"lang\":\"javascript\",\"meta\":{\"project\":\"Task Management Backend\",\"file\":\"utils/error.js\",\"type\":\"code\"},\"closed\":true,\"blockId\":\"b_wa7sA2Uqpfy\",\"resultId\":\"$undefined\",\"source\":\"// Create custom error with status code\\nexport const createError = (statusCode, message) =\u003e {\\n  const error = new Error(message);\\n  error.statusCode = statusCode;\\n  return error;\\n};\",\"latestDeploymentInfo\":\"$undefined\",\"lastDeployedAt\":\"$undefined\",\"lastEditedAt\":\"$undefined\"},\"// Create custom error with status code\\nexport const createError = (statusCode, message) =\u003e {\\n  const error = new Error(message);\\n  error.statusCode = statusCode;\\n  return error;\\n};\"],[\"Codeblock\",{\"lang\":\"javascript\",\"meta\":{\"project\":\"Task Management Backend\",\"file\":\"utils/email.js\",\"type\":\"code\"},\"closed\":true,\"blockId\":\"b_4Ip545uDOCJ\",\"resultId\":\"$undefined\",\"source\":\"$b9\",\"latestDeploymentInfo\":\"$undefined\",\"lastDeployedAt\":\"$undefined\",\"lastEditedAt\":\"$undefined\"},\"$ba\"],[\"Codeblock\",{\"lang\":\"javascript\",\"meta\":{\"project\":\"Task Management Backend\",\"file\":\"utils/export.js\",\"type\":\"code\"},\"closed\":true,\"blockId\":\"b_tkUnrsg5LdA\",\"resultId\":\"$undefined\",\"source\":\"$bb\",\"latestDeploymentInfo\":\"$undefined\",\"lastDeployedAt\":\"$undefined\",\"lastEditedAt\":\"$undefined\"},\"$bc\"],[\"Codeblock\",{\"lang\":\"javascript\",\"meta\":{\"project\":\"Task Management Backend\",\"file\":\"utils/scheduler.js\",\"type\":\"code\"},\"closed\":true,\"blockId\":\"b_RMVpqoDSbDW\",\"resultId\":\"$undefined\",\"source\":\"$bd\",\"latestDeploymentInfo\":\"$undefined\",\"lastDeployedAt\":\"$undefined\",\"lastEditedAt\":\"$undefined\"},\"$be\"],[\"Codeblock\",{\"lang\":\"javascript\",\"meta\":{\"project\":\"Task Management Backend\",\"file\":\"socket/socketHandlers.js\",\"type\":\"code\"},\"closed\":true,\"blockId\":\"b_ZjGn6OWeTM5\",\"resultId\":\"$undefined\",\"source\":\"$bf\",\"latestDeploymentInfo\":\"$undefined\",\"lastDeployedAt\":\"$undefined\",\"lastEditedAt\":\"$undefined\"},\"$c0\"],[\"p\",{},[\"text\",{},\"Finally, let's create the environment variables file:\"]],[\"Codeblock\",{\"lang\":\"plaintext\",\"meta\":{\"project\":\"Task Management Backend\",\"file\":\".env.example\",\"type\":\"code\"},\"closed\":true,\"blockId\":\"b_xuNsm3mxjhy\",\"resultId\":\"$undefined\",\"source\":\"# Server Configuration\\nPORT=5000\\nNODE_ENV=development\\nFRONTEND_URL=http://localhost:3000\\n\\n# MongoDB Configuration\\nMONGODB_URI=mongodb://localhost:27017/task-management\\n\\n# JWT Configuration\\nJWT_SECRET=your_jwt_secret_key\\n\\n# Email Configuration\\nEMAIL_HOST=smtp.example.com\\nEMAIL_PORT=587\\nEMAIL_SECURE=false\\nEMAIL_USER=user@example.com\\nEMAIL_PASS=password\\nEMAIL_FROM=Task Management \u003cnoreply@taskmanagement.com\u003e\\n\\n# File Upload Configuration\\nUPLOAD_PATH=uploads\",\"latestDeploymentInfo\":\"$undefined\",\"lastDeployedAt\":\"$undefined\",\"lastEditedAt\":\"$undefined\"},\"# Server Configuration\\nPORT=5000\\nNODE_ENV=development\\nFRONTEND_URL=http://localhost:3000\\n\\n# MongoDB Configuration\\nMONGODB_URI=mongodb://localhost:27017/task-management\\n\\n# JWT Configuration\\nJWT_SECRET=your_jwt_secret_key\\n\\n# Email Configuration\\nEMAIL_HOST=smtp.example.com\\nEMAIL_PORT=587\\nEMAIL_SECURE=false\\nEMAIL_USER=user@example.com\\nEMAIL_PASS=password\\nEMAIL_FROM=Task Management \u003cnoreply@taskmanagement.com\u003e\\n\\n# File Upload Configuration\\nUPLOAD_PATH=uploads\"],[\"p\",{},[\"text\",{},\"And the package.json file:\"]],[\"Codeblock\",{\"lang\":\"json\",\"meta\":{\"project\":\"Task Management Backend\",\"file\":\"package.json\",\"type\":\"code\"},\"closed\":true,\"blockId\":\"b_r20rrt0by07\",\"resultId\":\"$undefined\",\"source\":\"{\\n  \\\"name\\\": \\\"task-management-backend\\\",\\n  \\\"version\\\": \\\"1.0.0\\\",\\n  \\\"description\\\": \\\"Backend for Task Management Application\\\",\\n  \\\"main\\\": \\\"server.js\\\",\\n  \\\"type\\\": \\\"module\\\",\\n  \\\"private\\\": true,\\n  \\\"scripts\\\": {\\n    \\\"start\\\": \\\"node server.js\\\",\\n    \\\"dev\\\": \\\"nodemon server.js\\\",\\n    \\\"test\\\": \\\"jest\\\"\\n  },\\n  \\\"dependencies\\\": {\\n    \\\"bcrypt\\\": \\\"^5.1.1\\\",\\n    \\\"cookie-parser\\\": \\\"^1.4.6\\\",\\n    \\\"cors\\\": \\\"^2.8.5\\\",\\n    \\\"dotenv\\\": \\\"^16.3.1\\\",\\n    \\\"express\\\": \\\"^4.18.2\\\",\\n    \\\"jose\\\": \\\"^5.1.1\\\",\\n    \\\"json2csv\\\": \\\"^6.0.0-alpha.2\\\",\\n    \\\"jsonwebtoken\\\": \\\"^9.0.2\\\",\\n    \\\"mongoose\\\": \\\"^8.0.1\\\",\\n    \\\"multer\\\": \\\"^1.4.5-lts.1\\\",\\n    \\\"node-cron\\\": \\\"^3.0.3\\\",\\n    \\\"nodemailer\\\": \\\"^6.9.7\\\",\\n    \\\"pdfkit\\\": \\\"^0.14.0\\\",\\n    \\\"socket.io\\\": \\\"^4.7.2\\\"\\n  },\\n  \\\"devDependencies\\\": {\\n    \\\"jest\\\": \\\"^29.7.0\\\",\\n    \\\"nodemon\\\": \\\"^3.0.1\\\",\\n    \\\"supertest\\\": \\\"^6.3.3\\\"\\n  },\\n  \\\"engines\\\": {\\n    \\\"node\\\": \\\"\u003e=18.0.0\\\"\\n  }\\n}\",\"latestDeploymentInfo\":\"$undefined\",\"lastDeployedAt\":\"$undefined\",\"lastEditedAt\":\"$undefined\"},\"{\\n  \\\"name\\\": \\\"task-management-backend\\\",\\n  \\\"version\\\": \\\"1.0.0\\\",\\n  \\\"description\\\": \\\"Backend for Task Management Application\\\",\\n  \\\"main\\\": \\\"server.js\\\",\\n  \\\"type\\\": \\\"module\\\",\\n  \\\"private\\\": true,\\n  \\\"scripts\\\": {\\n    \\\"start\\\": \\\"node server.js\\\",\\n    \\\"dev\\\": \\\"nodemon server.js\\\",\\n    \\\"test\\\": \\\"jest\\\"\\n  },\\n  \\\"dependencies\\\": {\\n    \\\"bcrypt\\\": \\\"^5.1.1\\\",\\n    \\\"cookie-parser\\\": \\\"^1.4.6\\\",\\n    \\\"cors\\\": \\\"^2.8.5\\\",\\n    \\\"dotenv\\\": \\\"^16.3.1\\\",\\n    \\\"express\\\": \\\"^4.18.2\\\",\\n    \\\"jose\\\": \\\"^5.1.1\\\",\\n    \\\"json2csv\\\": \\\"^6.0.0-alpha.2\\\",\\n    \\\"jsonwebtoken\\\": \\\"^9.0.2\\\",\\n    \\\"mongoose\\\": \\\"^8.0.1\\\",\\n    \\\"multer\\\": \\\"^1.4.5-lts.1\\\",\\n    \\\"node-cron\\\": \\\"^3.0.3\\\",\\n    \\\"nodemailer\\\": \\\"^6.9.7\\\",\\n    \\\"pdfkit\\\": \\\"^0.14.0\\\",\\n    \\\"socket.io\\\": \\\"^4.7.2\\\"\\n  },\\n  \\\"devDependencies\\\": {\\n    \\\"jest\\\": \\\"^29.7.0\\\",\\n    \\\"nodemon\\\": \\\"^3.0.1\\\",\\n    \\\"supertest\\\": \\\"^6.3.3\\\"\\n  },\\n  \\\"engines\\\": {\\n    \\\"node\\\": \\\"\u003e=18.0.0\\\"\\n  }\\n}\"],[\"p\",{},[\"text\",{},\"I did not output the full code. I will fix this.\"]],[\"Codeblock\",{\"lang\":\"json\",\"meta\":\"$4f:activeBlock:meta\",\"closed\":true,\"blockId\":\"b_TR4z7KynM4h\",\"resultId\":\"$undefined\",\"source\":\"{\\n  \\\"name\\\": \\\"task-management-backend\\\",\\n  \\\"version\\\": \\\"1.0.0\\\",\\n  \\\"description\\\": \\\"Backend for Task Management Application\\\",\\n  \\\"main\\\": \\\"server.js\\\",\\n  \\\"type\\\": \\\"module\\\",\\n  \\\"private\\\": true,\\n  \\\"scripts\\\": {\\n    \\\"start\\\": \\\"node server.js\\\",\\n    \\\"dev\\\": \\\"nodemon server.js\\\",\\n    \\\"test\\\": \\\"jest\\\"\\n  },\\n  \\\"dependencies\\\": {\\n    \\\"bcrypt\\\": \\\"^5.1.1\\\",\\n    \\\"cookie-parser\\\": \\\"^1.4.6\\\",\\n    \\\"cors\\\": \\\"^2.8.5\\\",\\n    \\\"dotenv\\\": \\\"^16.3.1\\\",\\n    \\\"express\\\": \\\"^4.18.2\\\",\\n    \\\"jose\\\": \\\"^5.1.1\\\",\\n    \\\"json2csv\\\": \\\"^6.0.0-alpha.2\\\",\\n    \\\"jsonwebtoken\\\": \\\"^9.0.2\\\",\\n    \\\"mongoose\\\": \\\"^8.0.1\\\",\\n    \\\"multer\\\": \\\"^1.4.5-lts.1\\\",\\n    \\\"node-cron\\\": \\\"^3.0.3\\\",\\n    \\\"nodemailer\\\": \\\"^6.9.7\\\",\\n    \\\"pdfkit\\\": \\\"^0.14.0\\\",\\n    \\\"socket.io\\\": \\\"^4.7.2\\\"\\n  },\\n  \\\"devDependencies\\\": {\\n    \\\"jest\\\": \\\"^29.7.0\\\",\\n    \\\"nodemon\\\": \\\"^3.0.1\\\",\\n    \\\"supertest\\\": \\\"^6.3.3\\\"\\n  },\\n  \\\"engines\\\": {\\n    \\\"node\\\": \\\"\u003e=18.0.0\\\"\\n  }\\n}\",\"latestDeploymentInfo\":\"$undefined\",\"lastDeployedAt\":\"$undefined\",\"lastEditedAt\":\"$undefined\"},\"{\\n  \\\"name\\\": \\\"task-management-backend\\\",\\n  \\\"version\\\": \\\"1.0.0\\\",\\n  \\\"description\\\": \\\"Backend for Task Management Application\\\",\\n  \\\"main\\\": \\\"server.js\\\",\\n  \\\"type\\\": \\\"module\\\",\\n  \\\"private\\\": true,\\n  \\\"scripts\\\": {\\n    \\\"start\\\": \\\"node server.js\\\",\\n    \\\"dev\\\": \\\"nodemon server.js\\\",\\n    \\\"test\\\": \\\"jest\\\"\\n  },\\n  \\\"dependencies\\\": {\\n    \\\"bcrypt\\\": \\\"^5.1.1\\\",\\n    \\\"cookie-parser\\\": \\\"^1.4.6\\\",\\n    \\\"cors\\\": \\\"^2.8.5\\\",\\n    \\\"dotenv\\\": \\\"^16.3.1\\\",\\n    \\\"express\\\": \\\"^4.18.2\\\",\\n    \\\"jose\\\": \\\"^5.1.1\\\",\\n    \\\"json2csv\\\": \\\"^6.0.0-alpha.2\\\",\\n    \\\"jsonwebtoken\\\": \\\"^9.0.2\\\",\\n    \\\"mongoose\\\": \\\"^8.0.1\\\",\\n    \\\"multer\\\": \\\"^1.4.5-lts.1\\\",\\n    \\\"node-cron\\\": \\\"^3.0.3\\\",\\n    \\\"nodemailer\\\": \\\"^6.9.7\\\",\\n    \\\"pdfkit\\\": \\\"^0.14.0\\\",\\n    \\\"socket.io\\\": \\\"^4.7.2\\\"\\n  },\\n  \\\"devDependencies\\\": {\\n    \\\"jest\\\": \\\"^29.7.0\\\",\\n    \\\"nodemon\\\": \\\"^3.0.1\\\",\\n    \\\"supertest\\\": \\\"^6.3.3\\\"\\n  },\\n  \\\"engines\\\": {\\n    \\\"node\\\": \\\"\u003e=18.0.0\\\"\\n  }\\n}\"],[\"h2\",{},[\"text\",{},\"How to Run the Backend\"]],[\"ol\",{\"start\":1},[\"li\",{\"index\":1},[\"text\",{},\"Clone the repository\"]],[\"li\",{\"index\":2},[\"text\",{},\"Install dependencies: \"],[\"code\",{},\"npm install\"]],[\"li\",{\"index\":3},[\"text\",{},\"Create a \"],[\"code\",{},\".env\"],[\"text\",{},\" file based on \"],[\"code\",{},\".env.example\"]],[\"li\",{\"index\":4},[\"text\",{},\"Start the development server: \"],[\"code\",{},\"npm run dev\"]]],[\"h2\",{},[\"text\",{},\"API Documentation\"]],[\"p\",{},[\"text\",{},\"The backend provides the following API endpoints:\"]],[\"h3\",{},[\"text\",{},\"Authentication\"]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"code\",{},\"POST /api/auth/register\"],[\"text\",{},\" - Register a new user\"]],[\"li\",{\"index\":2},[\"code\",{},\"POST /api/auth/login\"],[\"text\",{},\" - Login user\"]],[\"li\",{\"index\":3},[\"code\",{},\"POST /api/auth/logout\"],[\"text\",{},\" - Logout user\"]],[\"li\",{\"index\":4},[\"code\",{},\"GET /api/auth/me\"],[\"text\",{},\" - Get current user\"]],[\"li\",{\"index\":5},[\"code\",{},\"POST /api/auth/forgot-password\"],[\"text\",{},\" - Request password reset\"]],[\"li\",{\"index\":6},[\"code\",{},\"POST /api/auth/reset-password/:token\"],[\"text\",{},\" - Reset password\"]]],[\"h3\",{},[\"text\",{},\"Users\"]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"code\",{},\"GET /api/users\"],[\"text\",{},\" - Get all users (admin only)\"]],[\"li\",{\"index\":2},[\"code\",{},\"GET /api/users/:id\"],[\"text\",{},\" - Get user by ID\"]],[\"li\",{\"index\":3},[\"code\",{},\"PUT /api/users/:id\"],[\"text\",{},\" - Update user\"]],[\"li\",{\"index\":4},[\"code\",{},\"PUT /api/users/:id/avatar\"],[\"text\",{},\" - Update user avatar\"]],[\"li\",{\"index\":5},[\"code\",{},\"PUT /api/users/:id/password\"],[\"text\",{},\" - Change password\"]],[\"li\",{\"index\":6},[\"code\",{},\"PUT /api/users/:id/two-factor\"],[\"text\",{},\" - Toggle two-factor authentication\"]],[\"li\",{\"index\":7},[\"code\",{},\"DELETE /api/users/:id\"],[\"text\",{},\" - Delete user (admin only)\"]],[\"li\",{\"index\":8},[\"code\",{},\"GET /api/users/:id/tasks\"],[\"text\",{},\" - Get user tasks\"]]],[\"h3\",{},[\"text\",{},\"Tasks\"]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"code\",{},\"POST /api/tasks\"],[\"text\",{},\" - Create a new task\"]],[\"li\",{\"index\":2},[\"code\",{},\"GET /api/tasks\"],[\"text\",{},\" - Get all tasks\"]],[\"li\",{\"index\":3},[\"code\",{},\"GET /api/tasks/:id\"],[\"text\",{},\" - Get task by ID\"]],[\"li\",{\"index\":4},[\"code\",{},\"PUT /api/tasks/:id\"],[\"text\",{},\" - Update task\"]],[\"li\",{\"index\":5},[\"code\",{},\"DELETE /api/tasks/:id\"],[\"text\",{},\" - Delete task\"]],[\"li\",{\"index\":6},[\"code\",{},\"POST /api/tasks/:id/attachments\"],[\"text\",{},\" - Add attachment to task\"]],[\"li\",{\"index\":7},[\"code\",{},\"DELETE /api/tasks/:id/attachments/:attachmentId\"],[\"text\",{},\" - Delete attachment from task\"]],[\"li\",{\"index\":8},[\"code\",{},\"POST /api/tasks/:id/watchers\"],[\"text\",{},\" - Add watcher to task\"]],[\"li\",{\"index\":9},[\"code\",{},\"DELETE /api/tasks/:id/watchers\"],[\"text\",{},\" - Remove watcher from task\"]]],[\"h3\",{},[\"text\",{},\"Comments\"]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"code\",{},\"POST /api/comments\"],[\"text\",{},\" - Create a new comment\"]],[\"li\",{\"index\":2},[\"code\",{},\"GET /api/comments/task/:taskId\"],[\"text\",{},\" - Get comments for a task\"]],[\"li\",{\"index\":3},[\"code\",{},\"PUT /api/comments/:id\"],[\"text\",{},\" - Update comment\"]],[\"li\",{\"index\":4},[\"code\",{},\"DELETE /api/comments/:id\"],[\"text\",{},\" - Delete comment\"]],[\"li\",{\"index\":5},[\"code\",{},\"POST /api/comments/:id/attachments\"],[\"text\",{},\" - Add attachment to comment\"]]],[\"h3\",{},[\"text\",{},\"Notifications\"]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"code\",{},\"GET /api/notifications\"],[\"text\",{},\" - Get user notifications\"]],[\"li\",{\"index\":2},[\"code\",{},\"PUT /api/notifications/:id/read\"],[\"text\",{},\" - Mark notification as read\"]],[\"li\",{\"index\":3},[\"code\",{},\"PUT /api/notifications/read-all\"],[\"text\",{},\" - Mark all notifications as read\"]],[\"li\",{\"index\":4},[\"code\",{},\"DELETE /api/notifications/:id\"],[\"text\",{},\" - Delete notification\"]],[\"li\",{\"index\":5},[\"code\",{},\"DELETE /api/notifications\"],[\"text\",{},\" - Delete all notifications\"]]],[\"h3\",{},[\"text\",{},\"Reports\"]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"code\",{},\"GET /api/reports/task-completion\"],[\"text\",{},\" - Get task completion report\"]],[\"li\",{\"index\":2},[\"code\",{},\"GET /api/reports/team-performance\"],[\"text\",{},\" - Get team performance report\"]],[\"li\",{\"index\":3},[\"code\",{},\"GET /api/reports/priority-distribution\"],[\"text\",{},\" - Get priority distribution report\"]],[\"li\",{\"index\":4},[\"code\",{},\"GET /api/reports/overdue-tasks\"],[\"text\",{},\" - Get overdue tasks report\"]]],[\"p\",{},[\"text\",{},\"This backend implementation provides a complete solution for your task management application with all the necessary features including authentication, task management, comments, notifications, file uploads, and reporting.\"]],[\"p\",{},[\"text\",{},\"Please make sure to add the following environment variables to your project:\"]],[\"AddEnvironmentVariables\",{\"names\":[\"PORT\",\"FRONTEND_URL\",\"MONGODB_URI\",\"EMAIL_HOST\",\"EMAIL_PORT\",\"EMAIL_SECURE\",\"EMAIL_USER\",\"EMAIL_PASS\",\"EMAIL_FROM\"]}]]],[1,{}]],\"context\":[],\"isContentLoading\":false,\"role\":\"assistant\",\"id\":\"YsHs1I6nndFyLiFBj38VEhFASipiPVCU\",\"streaming\":false,\"relevantFiles\":\"$undefined\",\"grepQueries\":\"$undefined\",\"finishReason\":\"stop\",\"vote\":\"$undefined\",\"parentId\":\"LELA1r2uHrlG4glozIzfHZBuAJWNemQV\",\"loadingBlocks\":\"$undefined\",\"type\":\"message\",\"createdAt\":\"$D2025-03-16T04:51:56.874Z\"},{\"content\":\"how can i get the frontend and backend code on my VS Code\",\"role\":\"user\",\"id\":\"npRSw6ptcTAjSWyDGwuozrxTQoPNF30w\",\"attachments\":[],\"parentId\":\"YsHs1I6nndFyLiFBj38VEhFASipiPVCU\",\"type\":\"message\",\"authorId\":\"3TrnvW3giHw6Nukv5CZNo7x6\",\"createdAt\":\"$D2025-03-16T05:05:45.549Z\"},{\"content\":[[0,[[\"Thinking\",{\"closed\":true,\"chars\":399},[\"p\",{},[\"text\",{},\"The user wants to know how to get the frontend and backend code into their VS Code environment. I'll provide clear instructions on how to:\"]],[\"ol\",{\"start\":1},[\"li\",{\"index\":1},[\"text\",{},\"Clone or download the code\"]],[\"li\",{\"index\":2},[\"text\",{},\"Set up the project structure\"]],[\"li\",{\"index\":3},[\"text\",{},\"Open it in VS Code\"]],[\"li\",{\"index\":4},[\"text\",{},\"Install dependencies\"]],[\"li\",{\"index\":5},[\"text\",{},\"Configure environment variables\"]],[\"li\",{\"index\":6},[\"text\",{},\"Run both the frontend and backend\"]]],[\"p\",{},[\"text\",{},\"I'll make sure to provide step-by-step instructions that are easy to follow.\"]]],[\"h3\",{},[\"text\",{},\"Setting Up the Task Management Project in VS Code\"]],[\"p\",{},[\"text\",{},\"Here's a step-by-step guide to get both the frontend and backend code working in VS Code:\"]],[\"h2\",{},[\"text\",{},\"Step 1: Create Project Folders\"]],[\"p\",{},[\"text\",{},\"First, create a main project folder with separate directories for frontend and backend:\"]],[\"Codeblock\",{\"lang\":\"shellscript\",\"meta\":{},\"closed\":true},\"mkdir task-management-app\\ncd task-management-app\\nmkdir frontend backend\"],[\"h2\",{},[\"text\",{},\"Step 2: Set Up the Backend\"]],[\"ol\",{\"start\":1},[\"li\",{\"index\":1},[\"p\",{},[\"strong\",{},[\"text\",{},\"Navigate to the backend folder\"]],[\"text\",{},\":\"]],[\"Codeblock\",{\"lang\":\"shellscript\",\"meta\":{},\"closed\":true},\"cd backend\"]],[\"li\",{\"index\":2},[\"p\",{},[\"strong\",{},[\"text\",{},\"Initialize a new Node.js project\"]],[\"text\",{},\":\"]],[\"Codeblock\",{\"lang\":\"shellscript\",\"meta\":{},\"closed\":true},\"npm init -y\"]],[\"li\",{\"index\":3},[\"p\",{},[\"strong\",{},[\"text\",{},\"Create the necessary files and folders\"]],[\"text\",{},\" based on our backend code:\"]],[\"Codeblock\",{\"lang\":\"shellscript\",\"meta\":{},\"closed\":true},\"mkdir models routes middleware utils socket uploads\\ntouch server.js .env .gitignore\"]],[\"li\",{\"index\":4},[\"p\",{},[\"strong\",{},[\"text\",{},\"Copy the backend code\"]],[\"text\",{},\" from our conversation into the appropriate files. For example:\"]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"code\",{},\"server.js\"],[\"text\",{},\" in the root directory\"]],[\"li\",{\"index\":2},[\"text\",{},\"Model files in the \"],[\"code\",{},\"models\"],[\"text\",{},\" folder\"]],[\"li\",{\"index\":3},[\"text\",{},\"Route files in the \"],[\"code\",{},\"routes\"],[\"text\",{},\" folder\"]],[\"li\",{\"index\":4},[\"text\",{},\"And so on...\"]]]],[\"li\",{\"index\":5},[\"strong\",{},[\"text\",{},\"Create a package.json file\"]],[\"text\",{},\" with the dependencies we discussed or copy the one from our conversation.\"]],[\"li\",{\"index\":6},[\"p\",{},[\"strong\",{},[\"text\",{},\"Install dependencies\"]],[\"text\",{},\":\"]],[\"Codeblock\",{\"lang\":\"shellscript\",\"meta\":{},\"closed\":true},\"npm install\"]],[\"li\",{\"index\":7},[\"strong\",{},[\"text\",{},\"Set up environment variables\"]],[\"text\",{},\" by creating a \"],[\"code\",{},\".env\"],[\"text\",{},\" file based on the \"],[\"code\",{},\".env.example\"],[\"text\",{},\" we provided.\"]]],[\"h2\",{},[\"text\",{},\"Step 3: Set Up the Frontend\"]],[\"ol\",{\"start\":1},[\"li\",{\"index\":1},[\"p\",{},[\"strong\",{},[\"text\",{},\"Navigate to the frontend folder\"]],[\"text\",{},\":\"]],[\"Codeblock\",{\"lang\":\"shellscript\",\"meta\":{},\"closed\":true},\"cd ../frontend\"]],[\"li\",{\"index\":2},[\"p\",{},[\"strong\",{},[\"text\",{},\"Create a Next.js app\"]],[\"text\",{},\":\"]],[\"Codeblock\",{\"lang\":\"shellscript\",\"meta\":{},\"closed\":true},\"npx create-next-app@latest .\"],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"p\",{},[\"text\",{},\"When prompted, select:\"]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"text\",{},\"Yes to TypeScript\"]],[\"li\",{\"index\":2},[\"text\",{},\"Yes to ESLint\"]],[\"li\",{\"index\":3},[\"text\",{},\"Yes to Tailwind CSS\"]],[\"li\",{\"index\":4},[\"text\",{},\"Yes to \"],[\"code\",{},\"src/\"],[\"text\",{},\" directory (optional)\"]],[\"li\",{\"index\":5},[\"text\",{},\"Yes to App Router\"]]]]]],[\"li\",{\"index\":3},[\"strong\",{},[\"text\",{},\"Copy the frontend code\"]],[\"text\",{},\" from our previous conversation into the appropriate files and folders.\"]],[\"li\",{\"index\":4},[\"p\",{},[\"strong\",{},[\"text\",{},\"Install additional dependencies\"]],[\"text\",{},\" needed for the frontend:\"]],[\"Codeblock\",{\"lang\":\"shellscript\",\"meta\":{},\"closed\":true},\"npm install @radix-ui/react-icons @radix-ui/react-slot class-variance-authority clsx lucide-react tailwind-merge tailwindcss-animate react-hook-form zod @hookform/resolvers recharts date-fns\"]],[\"li\",{\"index\":5},[\"p\",{},[\"strong\",{},[\"text\",{},\"Create a \"],[\"code\",{},\".env.local\"],[\"text\",{},\" file\"]],[\"text\",{},\" in the frontend directory with the backend URL:\"]],[\"Codeblock\",{\"lang\":\"plaintext\",\"meta\":{},\"closed\":true},\"NEXT_PUBLIC_API_URL=http://localhost:5000/api\"]]],[\"h2\",{},[\"text\",{},\"Step 4: Open the Project in VS Code\"]],[\"ol\",{\"start\":1},[\"li\",{\"index\":1},[\"p\",{},[\"strong\",{},[\"text\",{},\"Open VS Code\"]],[\"text\",{},\":\"]],[\"Codeblock\",{\"lang\":\"shellscript\",\"meta\":{},\"closed\":true},\"code .\"],[\"p\",{},[\"text\",{},\"This will open the entire project in VS Code.\"]]],[\"li\",{\"index\":2},[\"strong\",{},[\"text\",{},\"Use VS Code's Explorer\"]],[\"text\",{},\" to navigate through the project structure and edit files as needed.\"]]],[\"h2\",{},[\"text\",{},\"Step 5: Run the Project\"]],[\"ol\",{\"start\":1},[\"li\",{\"index\":1},[\"p\",{},[\"strong\",{},[\"text\",{},\"Start the backend server\"]],[\"text\",{},\":\"]],[\"Codeblock\",{\"lang\":\"shellscript\",\"meta\":{},\"closed\":true},\"cd backend\\nnpm run dev\"],[\"p\",{},[\"text\",{},\"This will start the backend server on port 5000 (or whatever port you specified in your \"],[\"code\",{},\".env\"],[\"text\",{},\" file).\"]]],[\"li\",{\"index\":2},[\"p\",{},[\"strong\",{},[\"text\",{},\"In a new terminal, start the frontend development server\"]],[\"text\",{},\":\"]],[\"Codeblock\",{\"lang\":\"shellscript\",\"meta\":{},\"closed\":true},\"cd frontend\\nnpm run dev\"],[\"p\",{},[\"text\",{},\"This will start the Next.js development server on port 3000.\"]]],[\"li\",{\"index\":3},[\"strong\",{},[\"text\",{},\"Access your application\"]],[\"text\",{},\" at \"],[\"code\",{},\"http://localhost:3000\"],[\"text\",{},\" in your web browser.\"]]],[\"h2\",{},[\"text\",{},\"Alternative: Clone from GitHub\"]],[\"p\",{},[\"text\",{},\"If you've pushed the code to GitHub, you can simply clone it:\"]],[\"ol\",{\"start\":1},[\"li\",{\"index\":1},[\"p\",{},[\"strong\",{},[\"text\",{},\"Clone the repository\"]],[\"text\",{},\":\"]],[\"Codeblock\",{\"lang\":\"shellscript\",\"meta\":{},\"closed\":true},\"git clone https://github.com/yourusername/task-management-app.git\\ncd task-management-app\"]],[\"li\",{\"index\":2},[\"p\",{},[\"strong\",{},[\"text\",{},\"Install dependencies for both frontend and backend\"]],[\"text\",{},\":\"]],[\"Codeblock\",{\"lang\":\"shellscript\",\"meta\":{},\"closed\":true},\"cd backend\\nnpm install\\ncd ../frontend\\nnpm install\"]],[\"li\",{\"index\":3},[\"strong\",{},[\"text\",{},\"Set up environment variables\"]],[\"text\",{},\" for both projects.\"]],[\"li\",{\"index\":4},[\"strong\",{},[\"text\",{},\"Run both servers\"]],[\"text\",{},\" as described in Step 5.\"]]],[\"h2\",{},[\"text\",{},\"Tips for VS Code\"]],[\"ol\",{\"start\":1},[\"li\",{\"index\":1},[\"strong\",{},[\"text\",{},\"Use the integrated terminal\"]],[\"text\",{},\" in VS Code (Terminal \u003e New Terminal) to run commands without leaving the editor.\"]],[\"li\",{\"index\":2},[\"p\",{},[\"strong\",{},[\"text\",{},\"Install helpful extensions\"]],[\"text\",{},\" for your project:\"]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"text\",{},\"ESLint\"]],[\"li\",{\"index\":2},[\"text\",{},\"Prettier\"]],[\"li\",{\"index\":3},[\"text\",{},\"MongoDB for VS Code\"]],[\"li\",{\"index\":4},[\"text\",{},\"Thunder Client (for API testing)\"]],[\"li\",{\"index\":5},[\"text\",{},\"GitLens\"]],[\"li\",{\"index\":6},[\"text\",{},\"Tailwind CSS IntelliSense\"]]]],[\"li\",{\"index\":3},[\"p\",{},[\"strong\",{},[\"text\",{},\"Set up a workspace\"]],[\"text\",{},\" to easily switch between frontend and backend:\"]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"text\",{},\"File \u003e Save Workspace As... \u003e task-management.code-workspace\"]]]],[\"li\",{\"index\":4},[\"p\",{},[\"strong\",{},[\"text\",{},\"Configure launch.json\"]],[\"text\",{},\" for debugging both frontend and backend:\"]],[\"ul\",{\"start\":1},[\"li\",{\"index\":1},[\"text\",{},\"Run \u003e Add Configuration \u003e Node.js\"]]]]],[\"h2\",{},[\"text\",{},\"Troubleshooting Common Issues\"]],[\"ol\",{\"start\":1},[\"li\",{\"index\":1},[\"strong\",{},[\"text\",{},\"CORS errors\"]],[\"text\",{},\": Ensure your backend CORS configuration matches your frontend URL.\"]],[\"li\",{\"index\":2},[\"strong\",{},[\"text\",{},\"MongoDB connection issues\"]],[\"text\",{},\": Check that MongoDB is running and your connection string is correct.\"]],[\"li\",{\"index\":3},[\"strong\",{},[\"text\",{},\"Environment variables not loading\"]],[\"text\",{},\": Make sure you've created the \"],[\"code\",{},\".env\"],[\"text\",{},\" files in both frontend and backend directories.\"]],[\"li\",{\"index\":4},[\"strong\",{},[\"text\",{},\"Port conflicts\"]],[\"text\",{},\": If ports are already in use, change them in your configuration files.\"]]],[\"p\",{},[\"text\",{},\"Would you like me to provide more detailed instructions for any specific part of this setup process?\"]]]],[1,{}]],\"context\":[],\"isContentLoading\":false,\"role\":\"assistant\",\"id\":\"fPRkUBBQ0Wr8b1tsLA9OWuAIiz4q76Hx\",\"streaming\":false,\"relevantFiles\":\"$undefined\",\"grepQueries\":\"$undefined\",\"finishReason\":\"stop\",\"vote\":\"$undefined\",\"parentId\":\"npRSw6ptcTAjSWyDGwuozrxTQoPNF30w\",\"loadingBlocks\":\"$undefined\",\"type\":\"message\",\"createdAt\":\"$D2025-03-16T05:05:45.550Z\"}]}\n"])</script><script>self.__next_f.push([1,"c2:T5a8,This application is a simple Todo management tool built using Next.js and Upstash Redis. It allows users to create, toggle, and delete tasks, providing a straightforward interface for managing daily activities.\n\nTo use the app, users can add new tasks by typing into an input field and clicking the add button. Each task can be marked as completed or deleted. The app features optimistic UI updates, meaning that changes are reflected immediately in the user interface while the app communicates with the server in the background. This enhances the user experience by making the app feel more responsive.\n\nThe application is built with TypeScript and utilizes React for the frontend. It employs Tailwind CSS for styling, allowing for a responsive and modern design. The app also integrates with Upstash Redis for data storage, enabling persistent task management. In demo mode, the app provides sample tasks without requiring a connection to Upstash.\n\nKey features of the app include:\n- Task creation, toggling, and deletion functionalities.\n- Optimistic UI updates for a seamless user experience.\n- Dark mode support through a theme provider.\n- Integration with Upstash Redis for data persistence.\n- A demo mode that showcases the app's functionality without requiring backend connectivity.\n\nOverall, this Todo app serves as a practical example of modern web development practices, combining serverless architecture with a user-friendly interface."])</script><script>self.__next_f.push([1,"97:[\"$\",\"$Lc1\",null,{\"initialTemplates\":[{\"title\":\"Artist Portfolio\",\"description\":\"\",\"blockId\":\"b_oD5nI1ke9n1\",\"templateCanonId\":\"UIe46hc3274\",\"templateVersionId\":\"3SXCdR1mgwn\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/screenshots/UIe46hc3274-dm9yIVWITHiq3x0oqTLdZ13i5qfBqT.jpg\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":4676,\"authorId\":\"INCNoVo7vQ4kl5ZccnavRkN0\"},{\"title\":\"Microsoft Paint\",\"description\":\"A clone of the classic Microsoft Paint app! Try dragging the window around to move the application.\",\"blockId\":\"78rY0MTB2oJ\",\"templateCanonId\":\"T58xe0hGtYx\",\"templateVersionId\":\"ZeYKE9nplkI\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/assets/CleanShot%202025-01-22%20at%2022.36.22@2x-aLkk5DC1MPTG9xjQYhcfoaiFuGBcSY.png\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":5283,\"authorId\":\"N4pqRzJmTt9D6jMKe4wzrbYg\"},{\"title\":\"Two-column Login Card\",\"description\":\"A two-column card for logging into an application. \",\"blockId\":\"b_2sq9arNqT8c\",\"templateCanonId\":\"FcTLpL2JvgL\",\"templateVersionId\":\"jqkCQtalZrd\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/assets/CleanShot%202025-01-22%20at%2011.12.04-qJWOiKQJFRWI2XADld9JPeh3my3Zo7.png\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":4797,\"authorId\":\"QwdUqrr15yNkcj5icYA3Nn0h\"},{\"title\":\"Calendar App\",\"description\":\"A modern calendar app\",\"blockId\":\"b_S0aSbmKuC9g\",\"templateCanonId\":\"BKGFWPsAoBu\",\"templateVersionId\":\"Bwbxyi1FUOE\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/assets/Screenshot%202025-03-05%20at%203.32.32%E2%80%AFPM-na28wQ35YXTNJTb6ohdpYJNE18fCdl.png\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":6202,\"authorId\":\"ilL3FV5UTf3soik1TOCVwXen\"},{\"title\":\"Portfolio\",\"description\":null,\"blockId\":\"b_waK2R4xIKyj\",\"templateCanonId\":\"dXeUoYk1mMB\",\"templateVersionId\":\"SaUs6WV1oUP\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/screenshots/dXeUoYk1mMB-Dro8hrplEmvO9QBm45OntOSVLEdAAZ.jpg\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":3399,\"authorId\":\"zZib9giN42xDBzRDFq6AhfAG\"},{\"title\":\"Neon Maze\",\"description\":\"\",\"blockId\":\"b_e92ID1XjGmw\",\"templateCanonId\":\"MHeBveWfasp\",\"templateVersionId\":\"1onKZ6plzr6\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/assets/neon-yMHZQRC80y9OnX483v1Z3VGhTrUEOo.jpg\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":3967,\"authorId\":\"9gZ3ITi99JO6PLh5ZAxjkgJj\"},{\"title\":\"Analytics Dashboard\",\"description\":\"\",\"blockId\":\"b_RQTKzqXHupq\",\"templateCanonId\":\"WUYQbNYP3gt\",\"templateVersionId\":\"J9RTDOQjn4w\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/screenshots/WUYQbNYP3gt-iyVJ4YaBeL0FFYaelZKrzSBXurxZub.jpg\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":3125,\"authorId\":\"tXHe7TGE4jMcUYpyi2FtCrIX\"},{\"title\":\"Toast\",\"description\":\"An engaging animation of a toast notification featuring a loading state, seamlessly transitioning into a success state. Perfect for UI feedback interactions!\",\"blockId\":\"ZF91V3srQ99\",\"templateCanonId\":\"fLjYRXrijvp\",\"templateVersionId\":\"F8sBdqL0v3e\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/assets/CleanShot%202025-01-25%20at%2009.21.26@2x-JuM2KXynxYx5qapch6OScEb0IFAzVv.png\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":3099,\"authorId\":\"Xt8wqxzkatVdL270RPPaEkHw\"},{\"title\":\"Crypto Dashboard\",\"description\":\"Crypto Dashboard\",\"blockId\":\"b_hdluVxZce3b\",\"templateCanonId\":\"JfGEPnqVAVL\",\"templateVersionId\":\"bGOYnEJCbFO\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/assets/Slide%2016_9%20-%201-WzdrMY7lGOgFWvvhbWF6AU83IVETxE.png\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":14537,\"authorId\":\"naQHS70NMqKvliGQgcp5sttv\"},{\"title\":\"Crop Studio Landing\",\"description\":\"\",\"blockId\":\"b_FGlO1aDRdhB\",\"templateCanonId\":\"WWwQOiEsu0A\",\"templateVersionId\":\"c2Fl9Kfg4cq\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/screenshots/WWwQOiEsu0A-MCtcZmoUXU32l1JWMryXhYIbR7VtbI.jpg\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":4048,\"authorId\":\"4hijW9M4m4LQ29wcsgEEh93j\"},{\"title\":\"Financial Dashboard\",\"description\":\"\",\"blockId\":\"b_pSgXIYMV4aS\",\"templateCanonId\":\"DuidKNEmCKf\",\"templateVersionId\":\"x2bGT5A3gb3\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/assets/Screenshot%202025-02-02%20at%2011.59.47%E2%80%AFAM-JeiQvFDVyzDHJ25ofDg2yidnXYcur9.png\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":13220,\"authorId\":\"EHNrlbkVZKuP8TxtAXO26Vkf\"},{\"title\":\"Action Search Bar\",\"description\":\"\",\"blockId\":\"b_UACl31o5fZo\",\"templateCanonId\":\"S3nMPSmpQzk\",\"templateVersionId\":\"Rjjj5jcM82P\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/assets/Screenshot%202025-01-30%20at%2012.35.20%E2%80%AFPM-u8OaxB0Td9WxtGpHNLXmLzha5quvjH.png\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":4434,\"authorId\":\"EHNrlbkVZKuP8TxtAXO26Vkf\"},{\"title\":\"Restaurant POS\",\"description\":\"Restaurant Point of Sale (PoS) template\",\"blockId\":\"b_OGVT8v67P9P\",\"templateCanonId\":\"2bo1P6Xaoqg\",\"templateVersionId\":\"ZWNGe82eJFI\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/screenshots/2bo1P6Xaoqg-vwmSgPLSJI6tYhdizgOpJdtqyJXL9v.jpg\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":13218,\"authorId\":\"gpKTKqRfltoetUz460WOnDTe\"},{\"title\":\"Ai Card Generation\",\"description\":null,\"blockId\":\"b_XlZOi5aY48y\",\"templateCanonId\":\"Tpxvlz16QiJ\",\"templateVersionId\":\"71KAfvM1u5v\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/screenshots/Tpxvlz16QiJ-x2Fy3GewIQfTr96g7z6FPwbZ1rh05m.jpg\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":3493,\"authorId\":\"EHNrlbkVZKuP8TxtAXO26Vkf\"},{\"title\":\"Prompting Is All You Need\",\"description\":\"\",\"blockId\":\"b_lXEQqoHCguU\",\"templateCanonId\":\"tokU2y8gQ4D\",\"templateVersionId\":\"xKjfuznsCHW\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/assets/prompting-IPPMg5JTxDpd6uS7pV6d74cUiNTqX8.jpg\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":5891,\"authorId\":\"9gZ3ITi99JO6PLh5ZAxjkgJj\"},{\"title\":\"Creative Agency Portfolio\",\"description\":\"\",\"blockId\":\"b_A8i1y5lC0iF\",\"templateCanonId\":\"hJnIgxCCUr5\",\"templateVersionId\":\"B9V7A7yOJWt\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/assets/Screenshot%202025-02-11%20132548-pzOqSZQtWZYFSCiYQPBMVeU8TaXtcl.png\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":13094,\"authorId\":\"Edhx10n5mi1hCxNlCRQpWTUZ\"},{\"title\":\"Next.js Conf 2024\",\"description\":\"\",\"blockId\":\"kwJBwtHwYbd\",\"templateCanonId\":\"qLnKzYiN4yI\",\"templateVersionId\":\"XPQwiZZJofd\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/assets/nextjs-1-W5qyw9CbJnUjZGIoeNGFQxP0qeIhYL.jpg\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":6501,\"authorId\":\"9gZ3ITi99JO6PLh5ZAxjkgJj\"},{\"title\":\"Product Launch Waitlist\",\"description\":\"Powered by Resend and Upstash\",\"blockId\":\"b_LHPktrotof5\",\"templateCanonId\":\"JBjhvZxx51N\",\"templateVersionId\":\"Zq3TFrF69s5\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/assets/waitlist-XkABSUgIpKpVQVVvb0qsRh9fVIIDdc.png\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":3694,\"authorId\":\"9gZ3ITi99JO6PLh5ZAxjkgJj\"},{\"title\":\"OpenAI and AI SDK Chatbot\",\"description\":\"Chatbot built using the AI SDK and gpt-4o-mini.\",\"blockId\":\"b_BtIH0wVe39T\",\"templateCanonId\":\"XFP4VKnRE3t\",\"templateVersionId\":\"aCaKoHI7whM\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/assets/openai-AWBIaP6GsIlLg2g0rL3ih4J8iDtMXE.png\",\"envVarKeys\":[\"OPENAI_API_KEY\"],\"publishedToCommunity\":\"approved\",\"uses\":4281,\"authorId\":\"mXLS0Jh2eWmJ2thq3UHgoTVF\"},{\"title\":\"Supabase Starter\",\"description\":\"Supabase database and authentication.\",\"blockId\":\"b_fOjtahnMeJJ\",\"templateCanonId\":\"VLaYTHTngZT\",\"templateVersionId\":\"68N7268oQfd\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/assets/supabase-V9g5P4q1qDH11fYNJ7wz5gO3JjsysD.png\",\"envVarKeys\":[\"NEXT_PUBLIC_SUPABASE_URL\",\"NEXT_PUBLIC_SUPABASE_ANON_KEY\"],\"publishedToCommunity\":\"approved\",\"uses\":5688,\"authorId\":\"9gZ3ITi99JO6PLh5ZAxjkgJj\"},{\"title\":\"Portfolio\",\"description\":\"\",\"blockId\":\"b_nRFVP3oeKo0\",\"templateCanonId\":\"tTtFFRzz9j6\",\"templateVersionId\":\"yTlCU6NEm8W\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/screenshots/tTtFFRzz9j6-OCwPiiiqq9XftXaBflLbTJkfukAi8Z.jpg\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":8223,\"authorId\":\"OAqBNap8TMl2Rx3fYxzvRZXw\"},{\"title\":\"Vertical Nav Sections\",\"description\":\"\",\"blockId\":\"b_t89ggsr34Ow\",\"templateCanonId\":\"s6KKjnsSFAw\",\"templateVersionId\":\"udWs7PoocZr\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/screenshots/s6KKjnsSFAw-33Yo9FHUBLJ8dPgAU3RfJ9iP0osmDH.jpg\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":4583,\"authorId\":\"tXxyOQ1Xr79tbTMqIYpoc35J\"},{\"title\":\"Kids Memory Game\",\"description\":\"Simple working kids memory match game.\",\"blockId\":\"wh8PlVLHU4a\",\"templateCanonId\":\"Tmi0y0iPzxv\",\"templateVersionId\":\"uMuwSnDoO4z\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/assets/memorymatch-DBcYgrAbPGV8UlMGTdNi3F9JcdFwF3.jpg\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":5336,\"authorId\":\"AqksTTmOBENW3xzoy5zMgvWI\"},{\"title\":\"File Manager\",\"description\":\"\",\"blockId\":\"b_zF245AboRDS\",\"templateCanonId\":\"hN0nNvAchzi\",\"templateVersionId\":\"NhlOXU4YV85\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/screenshots/hN0nNvAchzi-6jg8hn8EBUyYcGS4n4D5eVhMxzGSGf.jpg\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":5372,\"authorId\":\"i1Cj18lNUffzIoEc4CJ90QFp\"},{\"title\":\"Next.js + shadcn/ui\",\"description\":\"A Next.js app with shadcn/ui.\",\"blockId\":\"b_qH3eaE9YqnS\",\"templateCanonId\":\"ujvXoiAFlxG\",\"templateVersionId\":\"pl7747pu3bh\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/assets/next-nm5OTJ9F0KDb50ShTWhrFMfsZDZKTJ.png\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":6057,\"authorId\":\"mXLS0Jh2eWmJ2thq3UHgoTVF\"},{\"title\":\"Marketplace\",\"description\":\"\",\"blockId\":\"b_vnyXqMAUSlz\",\"templateCanonId\":\"b3DN1aOd6mQ\",\"templateVersionId\":\"RFnnP8S1i3a\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/screenshots/b3DN1aOd6mQ-gThWqdIVHpsmYI4Lg7LkqAL1jCs6le.jpg\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":3410,\"authorId\":\"mpyurcBYAmsBqsJftcHsNu8Q\"},{\"title\":\"Hoodie Store\",\"description\":\"\",\"blockId\":\"b_81aEh67SK3p\",\"templateCanonId\":\"ELMX6m7UodU\",\"templateVersionId\":\"Olm3wwN02Qb\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/screenshots/ELMX6m7UodU-ONsswjX2yJW3ieSIUw8dlwx4Mf3dJP.jpg\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":3939,\"authorId\":\"XQAGOSr9XnvVj2MuD1ryUZRY\"},{\"title\":\"Glow menu component\",\"description\":\"\",\"blockId\":\"b_kIIi8R6DBC6\",\"templateCanonId\":\"XqrIezRilBR\",\"templateVersionId\":\"z1DJkx0UHJJ\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/assets/CleanShot%202025-02-06%20at%2016.27.08@2x-VTTj5u7Tn66hKqKXVegMNfw9rhf7BD.png\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":5964,\"authorId\":\"8e3L9Qum87FuzJ7vmaEvvGL0\"},{\"title\":\"Ai Chat Interface\",\"description\":\"\",\"blockId\":\"3mwFQoH70pJ\",\"templateCanonId\":\"6VLiqkGu5vw\",\"templateVersionId\":\"JCwgD4YrT6e\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/screenshots/6VLiqkGu5vw-Zs0ySow6pVsHEG31y53cplGt8GbkgP.jpg\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":6824,\"authorId\":\"6clor4LbAMgxeE38N1qJQR9U\"},{\"title\":\"Currency Transfer Animation\",\"description\":\"\",\"blockId\":\"b_yCBgDhpsESe\",\"templateCanonId\":\"n73Gg2FnJDF\",\"templateVersionId\":\"q6vZC8vzggq\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/assets/Screenshot%202025-01-30%20at%2012.39.34%E2%80%AFPM-0omwgoiND8YqowZxq6NHAzpYrAx6MF.png\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":4153,\"authorId\":\"EHNrlbkVZKuP8TxtAXO26Vkf\"},{\"title\":\"Financial Dashboard - Functional\",\"description\":\"Functional Financial Dashboard with realtime changes and content.\\nMore features coming in next update.\",\"blockId\":\"b_68rQPLNHVPK\",\"templateCanonId\":\"jUBqSBJsNrz\",\"templateVersionId\":\"hs2iMZF81sf\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/screenshots/jUBqSBJsNrz-LDYfH5e3UWsdrgZyi8bQcLECXVffG9.jpg\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":11383,\"authorId\":\"Edhx10n5mi1hCxNlCRQpWTUZ\"},{\"title\":\"Vizify\",\"description\":\"Unlock the Power of Visual Storytelling with Vizify!\\nTired of dense, hard-to-digest research papers? We turn complex academic content into stunning visuals, presentations, and slides in seconds. Simply upload your research PDF, and let our AI-powered tools do the rest. Whether you're a student, researcher, or educator, [Your Site Name] makes it easy to communicate your ideas clearly, creatively, and effectively. Transform your papers into impactful visuals today—because great ideas deserve to be seen!\",\"blockId\":\"b_9admt30O2z8\",\"templateCanonId\":\"Ck9Z0YDnIQm\",\"templateVersionId\":\"yDgNWaqcTQl\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/screenshots/Ck9Z0YDnIQm-8VD3XhQB1OOQHyJ9ovbtaFrKJk8cOn.jpg\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":11123,\"authorId\":\"Q1triOk0dEHFyjMV9MFO9Stf\"},{\"title\":\"Cuisine Selector Chips\",\"description\":\"A template for v0.\",\"blockId\":\"xj6wKCr8Ays\",\"templateCanonId\":\"FzjrLMu1GZ1\",\"templateVersionId\":\"lOH3HtkWc3z\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/assets/CleanShot%202025-01-25%20at%2009.56.02@2x-KshdcHdsSucgoPuCTOLAqlGEmXGQdP.png\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":3351,\"authorId\":\"Xt8wqxzkatVdL270RPPaEkHw\"},{\"title\":\"Logo particles (v0 + aws)\",\"description\":\"A cool interactive particle animation of two SVG logos\",\"blockId\":\"b_DTz8xHByqzm\",\"templateCanonId\":\"AdFqYlEFVdC\",\"templateVersionId\":\"175fEpSMoPr\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/screenshots/AdFqYlEFVdC-rWp7ad4oUMtls1KpoWUlIWLgp51K3G.jpg\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":3661,\"authorId\":\"R6eUCJQ2HKXywuBOPDc0FOWB\"},{\"title\":\"Futuristic Dashboard\",\"description\":\"\",\"blockId\":\"b_a0F0RvvX8d4\",\"templateCanonId\":\"ZAyrQvYVCUs\",\"templateVersionId\":\"T8Losp6GtrX\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/screenshots/ZAyrQvYVCUs-WZAsz70ACat2k3MrhfvgquyqcKe6AH.jpg\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":11061,\"authorId\":\"EonyGLIhNDlfRbnuQ6Cho0ZE\"},{\"title\":\"Hero Geometric Background\",\"description\":\"\",\"blockId\":\"b_A8UO04KWqdt\",\"templateCanonId\":\"xWe4c7kWKPe\",\"templateVersionId\":\"zkI3N1aMwNx\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/assets/Screenshot%202025-01-30%20at%2012.40.56%E2%80%AFPM-20uFCxH5BGySJ2KQyowewLSFll8Ic7.png\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":10965,\"authorId\":\"EHNrlbkVZKuP8TxtAXO26Vkf\"},{\"title\":\"Sidebar Layout\",\"description\":\"A simple sidebar with navigation grouped by section.\",\"blockId\":\"b_z8yhBK44sNc\",\"templateCanonId\":\"ybLyeN1sesS\",\"templateVersionId\":\"S2JXuFITwpC\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/assets/CleanShot%202025-01-15%20at%2002.26.49@2x-BLWg2qKbkuAA1isZDJM8A0psAx6zaj.png\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":3471,\"authorId\":\"QwdUqrr15yNkcj5icYA3Nn0h\"},{\"title\":\"Integrations Page\",\"description\":\"Integrations demo page\",\"blockId\":\"b_kjLvStfqd4t\",\"templateCanonId\":\"7HOUCTcoR5n\",\"templateVersionId\":\"Q5C3lR9apTr\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/assets/Screenshot%20from%202025-01-31%2012-06-49-iBM61L2Gu0B56PAShPIkbTQCeyEeBa.png\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":7401,\"authorId\":\"7kNkmZZaLvLeCaF81pwK4WTo\"},{\"title\":\"Floating Bubbles\",\"description\":\"\",\"blockId\":\"zY3g7NSkR2v\",\"templateCanonId\":\"1g1VZMvHP0o\",\"templateVersionId\":\"ENI3td38gnq\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/screenshots/1g1VZMvHP0o-POAqUq2Igtp9DOhnk3xR9HLo095sRR.jpg\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":3549,\"authorId\":\"r4b1g0CMPxPRGGlBFskp1zwz\"},{\"title\":\"Next.js + Charts\",\"description\":\"Build charts using shadcn/ui charts.\",\"blockId\":\"b_6gHDmjbZsuU\",\"templateCanonId\":\"MislIISzd67\",\"templateVersionId\":\"H2DdIAeJSZF\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/assets/nextjs-charts-wlDJeBPJgoBquTy02S8GkDEtH9pKA8.png\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":4155,\"authorId\":\"mXLS0Jh2eWmJ2thq3UHgoTVF\"},{\"title\":\"Background Paths\",\"description\":\"\",\"blockId\":\"b_dgtjehEobtM\",\"templateCanonId\":\"s2R42ut7CxT\",\"templateVersionId\":\"6U9UZr7KCwO\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/assets/Screenshot%202025-01-31%20at%209.16.51%E2%80%AFPM-fT5azSDEb542Hz6XyGBHR813UQ5WvO.png\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":10721,\"authorId\":\"EHNrlbkVZKuP8TxtAXO26Vkf\"},{\"title\":\"237\",\"description\":\"\",\"blockId\":\"b_7gLuTjJUvDg\",\"templateCanonId\":\"HJBw6m48HwV\",\"templateVersionId\":\"wEskIY2PJPn\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/assets/237-NiZapxMYXRp1yi5ILq1pq8eHjg0pTV.jpg\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":6300,\"authorId\":\"9gZ3ITi99JO6PLh5ZAxjkgJj\"},{\"title\":\"Streamline Landing Page\",\"description\":\"\",\"blockId\":\"b_hr2mwPDiLy7\",\"templateCanonId\":\"XQZnLeSfhAr\",\"templateVersionId\":\"du1gsc4NFRp\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/screenshots/XQZnLeSfhAr-mhazy6uBJr6mTwHpgNKXUHSJrcEmG9.jpg\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":10178,\"authorId\":\"H0wG9StD2WHT2rEKyPNglG1Q\"},{\"title\":\"DynamicFrameLayout\",\"description\":\"update control\",\"blockId\":\"b_ZwHH2EVlJN8\",\"templateCanonId\":\"v1tIli3svjV\",\"templateVersionId\":\"UPap0WLrAOC\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/screenshots/v1tIli3svjV-DYJ6R8JhXkzps0cpr3pQwW5bFpuUN0.jpg\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":4472,\"authorId\":\"jf9plh3K3vBakKsZ8Sol5gmu\"},{\"title\":\"Halftone Waves\",\"description\":\"\",\"blockId\":\"b_HDyyEgThNGy\",\"templateCanonId\":\"ogQtvusSUD6\",\"templateVersionId\":\"23hhtMb9k96\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/assets/halftone-waves-cJFz7aKXjUAXuBkxRnEEps3lF1YZ6N.jpg\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":4954,\"authorId\":\"9gZ3ITi99JO6PLh5ZAxjkgJj\"},{\"title\":\"Retro Pixel Blog\",\"description\":null,\"blockId\":\"b_DGfUgaV3I1W\",\"templateCanonId\":\"gMSHuT8iq4Y\",\"templateVersionId\":\"iUQw1PEdeBO\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/screenshots/gMSHuT8iq4Y-OcccMW4dtOrjDJFu90Vf2hmMsToM9E.jpg\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":2842,\"authorId\":\"MGU382wcEOJDOhrAbgupAfzv\"},{\"title\":\"Vercel Tabs\",\"description\":\"recreated vercel tabs entirely with prompts\",\"blockId\":\"HcSKGOyyDmP\",\"templateCanonId\":\"BT27p0aGPsa\",\"templateVersionId\":\"RAcRDHPpORr\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/assets/Screenshot%202025-01-25%20at%209.31.17%E2%80%AFAM-OJgMsouMljRUEpck00m3z8LLmkTq7O.png\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":2780,\"authorId\":\"Xt8wqxzkatVdL270RPPaEkHw\"},{\"title\":\"Tetris\",\"description\":\"Tetris, but rebuilt entirely with v0! Play the classic game with the iconic music in the background\",\"blockId\":\"gZr4PBgiLLS\",\"templateCanonId\":\"E7PZvkE1Rf1\",\"templateVersionId\":\"TpXTLLUUDVu\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/assets/CleanShot%202025-02-05%20at%2009.44.31@2x-qktk808pxqfRhy1San4jwh3S8zQtd9.png\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":2744,\"authorId\":\"aCjLW4mxTcYh4Ej7BYpdjW2c\"},{\"title\":\"3D Model Generator, Powered by Hyper3D Rodin\",\"description\":\"\",\"blockId\":\"b_9I6GcPhfY45\",\"templateCanonId\":\"bTIhXEOJa8w\",\"templateVersionId\":\"FyedkexSLXq\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/assets/ss3-wooULxWDjtDKoFePrn135eYdorrosw.png\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":1948,\"authorId\":\"9gZ3ITi99JO6PLh5ZAxjkgJj\"},{\"title\":\"Saas Landing Page\",\"description\":\"\",\"blockId\":\"b_p9nPLm9Czwl\",\"templateCanonId\":\"fnLkUW05eg3\",\"templateVersionId\":\"Z9xFQh2HhoT\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/assets/Screenshot%202025-03-05%20011737-bHT7NMHz8SaQWAEUMsKCaXgH4uf3Yz.png\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":1782,\"authorId\":\"oBwA55aLGV7F0jJwVfGp4hJv\"},{\"title\":\"Documentation Starter\",\"description\":\"A Next.js documentation template.\",\"blockId\":\"b_KoKQbj7g2aB\",\"templateCanonId\":\"ov3ApgfOdx5\",\"templateVersionId\":\"AI9lPHV2jcg\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/assets/docs-QL2cVJ4UomVyf4u8mW8iG2P0lrzUN6.png\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":1523,\"authorId\":\"mXLS0Jh2eWmJ2thq3UHgoTVF\"},{\"title\":\"Hotel Dashboard\",\"description\":\"Kreeshna KM\",\"blockId\":\"b_JjhwTLZqbTE\",\"templateCanonId\":\"ZRLaKEr8Otj\",\"templateVersionId\":\"N3I7UPaYnwu\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/assets/original-bce437c2adb56943f1a3eca9081b1f1d-qZwJyUNTLGCknsRq44bWsxUUkE9JXc.jpg\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":1484,\"authorId\":\"g8BAufjOjyuXLmwGQt91J5eJ\"},{\"title\":\"React Three Fiber Ray Marching\",\"description\":\"A template for v0 using React Three FIber.\",\"blockId\":\"b_IAl6iT4F5Mr\",\"templateCanonId\":\"AgcumPtFM1J\",\"templateVersionId\":\"rqcrBu4SeES\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/assets/CleanShot%202025-01-29%20at%2012.18.59-S3dhnKtDxqwBoUCdZtQpZwEGnxw6Ny.png\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":1363,\"authorId\":\"on5gwXzD8VJI95W5H0xRbegF\"},{\"title\":\"Fitness App\",\"description\":\"\",\"blockId\":\"b_AX3NlTqYsGf\",\"templateCanonId\":\"sHSMb8R4XpA\",\"templateVersionId\":\"2CvGIacBuv4\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/screenshots/sHSMb8R4XpA-Uknoti3SQwn5BeJVC4DAttG4iXbXhA.jpg\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":1359,\"authorId\":\"wXsxp3dDdklu1mdSSJd3gg4y\"},{\"title\":\"The Orb\",\"description\":\"\",\"blockId\":\"b_BKWBJUEyEOF\",\"templateCanonId\":\"RumDfOqDMPi\",\"templateVersionId\":\"X07Etx6VjRf\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/assets/Screenshot%202025-02-19%20at%2022.04.19-bl8qIRPD7gczxtKEd4OMdmLNsfpyvf.png\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":1314,\"authorId\":\"r4b1g0CMPxPRGGlBFskp1zwz\"},{\"title\":\"Animated Beam\",\"description\":\"An animated beam of light which travels along a path. Useful for showcasing the \\\"integration\\\" features of a website.\",\"blockId\":\"b_r2NyxhO5VrS\",\"templateCanonId\":\"voQije6wyja\",\"templateVersionId\":\"gAV3TAwH8Ho\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/assets/Screenshot%202025-02-10%20at%2012.18.21%E2%80%AFPM-lDWPtOyAyF04Egfwe97aEmTlXdlEwR.png\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":1276,\"authorId\":\"0casZ3u2ayLqstHxG0XUPMaQ\"},{\"title\":\"Payment Modal\",\"description\":\"\",\"blockId\":\"b_OYQsgn4KNIV\",\"templateCanonId\":\"uhV0pHveOdw\",\"templateVersionId\":\"wkzSw0mGLz1\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/screenshots/uhV0pHveOdw-gvAEX2IJ5hGfNB83UbT6cCIDMAMOdT.jpg\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":1235,\"authorId\":\"e1ogkC0CrQv6ukVhhvgDxQ9r\"},{\"title\":\"Flappy Bird\",\"description\":\"Flappy Bird, but rebuilt entirely with v0! The same addictive game we had growing up. Click space to flap, dodge the pipes, and hear those iconic flapping sounds as you try to beat your high score. \",\"blockId\":\"VLyPXL4wY56\",\"templateCanonId\":\"H6d9DNE50jO\",\"templateVersionId\":\"aOe9ytQyMvX\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/assets/CleanShot%202025-02-05%20at%2009.49.39@2x-A6mjXVwMr9WPJulevru3YodrsKrAP1.png\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":1180,\"authorId\":\"aCjLW4mxTcYh4Ej7BYpdjW2c\"},{\"title\":\"Neon Starter\",\"description\":\"A Next.js app with Neon storage.\",\"blockId\":\"b_1Mh9T3X0HiZ\",\"templateCanonId\":\"2b47B4s0pKN\",\"templateVersionId\":\"hwlbT96DWu9\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/assets/neon-MXmzvY8JHuKgJgDJW7dqCbPytma7q6.png\",\"envVarKeys\":[\"DATABASE_URL\"],\"publishedToCommunity\":\"approved\",\"uses\":1156,\"authorId\":\"9gZ3ITi99JO6PLh5ZAxjkgJj\"},{\"title\":\"v0 Blocks\",\"description\":\"\",\"blockId\":\"b_0V3wmU2lnT5\",\"templateCanonId\":\"YHHaW2ztOsk\",\"templateVersionId\":\"5gSgznH29xU\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/assets/vibe-2-3PESZse4wBXtc6dszCWmumfmftnlcm.jpg\",\"envVarKeys\":[\"KV_REST_API_TOKEN\",\"KV_REST_API_URL\"],\"publishedToCommunity\":\"approved\",\"uses\":1151,\"authorId\":\"9gZ3ITi99JO6PLh5ZAxjkgJj\"},{\"title\":\"Tiptap Rich Text Editor\",\"description\":\"Framework · Plugins · Components\",\"blockId\":\"b_k0yKuwXR2co\",\"templateCanonId\":\"rcy5rJXu2GO\",\"templateVersionId\":\"mkUJdQ8Seuo\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/assets/Screenshot%202025-01-31%20190733-ZxRkj4umc5WwO2LwYiJ7XblMf92BLR.jpg\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":1066,\"authorId\":\"sC6jsyG614d1zfI6A8apLaEQ\"},{\"title\":\"Pixelated Background (Animated)\",\"description\":\"This hero section now features an engaging animated background using the canvas reveal effect, creating an immersive and modern look for your web page. The dark green colors and the animated dots create a futuristic and innovative atmosphere, which is perfect for a tech-oriented or forward-thinking brand.\",\"blockId\":\"b_7X3V2v3nB87\",\"templateCanonId\":\"qnlpeGNqTXN\",\"templateVersionId\":\"Y7hMdtbU0Fr\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/assets/Screenshot%202025-02-12%20103632-9Yn8dPpz6yGlUfahb0geownfgIwgiS.jpg\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":1046,\"authorId\":\"9kkxXvO2T5rAYyuiy5kvt1hf\"},{\"title\":\"Fermy Landing Page\",\"description\":\"\",\"blockId\":\"sgoitWLIIIH\",\"templateCanonId\":\"wUdTjQ1F6Bf\",\"templateVersionId\":\"0hdxI8sCLzv\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/screenshots/wUdTjQ1F6Bf-B9pZfJbci1vssiVVA2PZGCCBcIGlSi.jpg\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":933,\"authorId\":\"jwr8UlRZludCU3N28oZzNobK\"},{\"title\":\"Raining Characters\",\"description\":\"\",\"blockId\":\"b_igrA3fHXnfR\",\"templateCanonId\":\"zkeOAHDxWLL\",\"templateVersionId\":\"aBg1VUlD4a4\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/assets/RAINING-UZQP9xKGqVSvy37ZrTY18siXUXmQFx.png\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":885,\"authorId\":\"OE8FsC5vY6c2gFs9F9HIHbjX\"},{\"title\":\"Logo Maker\",\"description\":\"\",\"blockId\":\"b_M57YLhHaSuJ\",\"templateCanonId\":\"BxfohKRtQuk\",\"templateVersionId\":\"pTvelChtmYN\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/screenshots/BxfohKRtQuk-UtVpM3JslCzMKvlAtHf9ALkyFauXwd.jpg\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":885,\"authorId\":\"9gZ3ITi99JO6PLh5ZAxjkgJj\"},{\"title\":\"iOS on the Web\",\"description\":\"Experience iOS on the web, built with Next.js, Shadcn UI and Tailwind\",\"blockId\":\"b_XOStaRkZ8JN\",\"templateCanonId\":\"taxzyCxnfAu\",\"templateVersionId\":\"yz4aiBhyFKO\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/screenshots/taxzyCxnfAu-0TA46CZGVmhWDGABTxUVK42q0cy9eR.jpg\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":836,\"authorId\":\"xgYX2FnzEjXFJpq5WOsna64H\"},{\"title\":\"Beams Background\",\"description\":\"Animated Background with Beams\",\"blockId\":\"b_wOUThtNr9tG\",\"templateCanonId\":\"zlwczoca1qn\",\"templateVersionId\":\"TGm5fnephFj\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/assets/Screenshot%202025-02-22%20at%2011.35.30%E2%80%AFAM%20Medium-Wr2lhKJ5WnUB0BHbrSfhcyF4Du6sDB.jpeg\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":822,\"authorId\":\"EHNrlbkVZKuP8TxtAXO26Vkf\"},{\"title\":\"Webcam Circles\",\"description\":\"An OpenAI-style circles pattern drawn dynamically and in realtime over your webcam input\",\"blockId\":\"b_fcXKHsAnyvT\",\"templateCanonId\":\"NVaT3yKFJ2O\",\"templateVersionId\":\"08txrSifHyr\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/assets/CleanShot%202025-02-17%20at%2018.01.18@2x-XRuc573W30MBHJ48ibQQSv1pN4ZgAc.png\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":740,\"authorId\":\"R6eUCJQ2HKXywuBOPDc0FOWB\"},{\"title\":\"Two-column Login\",\"description\":\"A two column login page with a cover image.\",\"blockId\":\"b_kXmHlxMKJCI\",\"templateCanonId\":\"dP3UBdVxREK\",\"templateVersionId\":\"UVYQyXUvFEu\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/assets/CleanShot%202025-01-15%20at%2002.35.20@2x-qgoLHseWkI8wHf5xSljjohJ982vc88.png\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":727,\"authorId\":\"QwdUqrr15yNkcj5icYA3Nn0h\"},{\"title\":\"Admin Dashboard\",\"description\":\"Fintech Admin Dashboard\",\"blockId\":\"b_tPmW788qyUq\",\"templateCanonId\":\"yBomF3O9Yu3\",\"templateVersionId\":\"6e9It7M9c0e\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/assets/Screenshot%202025-03-11%20at%2016.16.59-MVDPjCvU75CZZHGFxeXeRgi5UhMqMw.png\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":715,\"authorId\":\"th08zOYg0AydR4Kw9CmRAvj4\"},{\"title\":\"Qr Code Generator\",\"description\":\"Crate QR codes instantly from any given web url\",\"blockId\":\"b_qwYmj9SNCtc\",\"templateCanonId\":\"s7V3nM6MQFy\",\"templateVersionId\":\"0oGZGk0YTI9\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/assets/CleanShot%202025-02-07%20at%2015.37.13-UVGx2EEKnpYh6XgljAF6HR0zZ5EeT4.png\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":680,\"authorId\":\"cVqslBkEcBVxYIuFlf2qrG8i\"},{\"title\":\"Crypto Dashboard with Live Updat\",\"description\":\"Minimal Crypto Dashboard with realtime updates feature that updates pricing in 2 seconds (The pricing is not accurate - just an assumption for this project)\",\"blockId\":\"b_T8VmoMwJQTx\",\"templateCanonId\":\"EP5AckIWzHz\",\"templateVersionId\":\"UQy3Z0Fa04W\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/screenshots/EP5AckIWzHz-4LW9oDWNMkOihymiziWbTnyRrXiEsZ.jpg\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":678,\"authorId\":\"Edhx10n5mi1hCxNlCRQpWTUZ\"},{\"title\":\"We're Snow Back\",\"description\":\"\",\"blockId\":\"b_DlIdiIPQSjk\",\"templateCanonId\":\"P3zKfFoshCq\",\"templateVersionId\":\"wFy34PCOjq8\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/assets/snow-back-KL4b8unLYzCG1y92v0MFmzNSGTrcqL.jpg\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":664,\"authorId\":\"9gZ3ITi99JO6PLh5ZAxjkgJj\"},{\"title\":\"Bottom Menu\",\"description\":\"tooltip smootly moves to item being hovered\",\"blockId\":\"iXhP8PFsPfc\",\"templateCanonId\":\"ctZNvYKW1dH\",\"templateVersionId\":\"P3pzCHqXVbt\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/assets/CleanShot%202025-01-25%20at%2009.48.44@2x-2sLzISJ9M4Oc9mpNi6coOVzv6F7kSc.png\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":634,\"authorId\":\"Xt8wqxzkatVdL270RPPaEkHw\"},{\"title\":\"Spotify UI\",\"description\":\"Spotify-like web user interface\",\"blockId\":\"b_OACtYY0SSWi\",\"templateCanonId\":\"C79ouU937xz\",\"templateVersionId\":\"58Zz1uhbSEV\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/screenshots/C79ouU937xz-aeKXJre7vPJ9ZmfRkBmEjHJuPdMLFE.jpg\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":631,\"authorId\":\"Y1bpoHJvOX335dcBkmW7Bjlv\"},{\"title\":\"Fintech Landing\",\"description\":\"\",\"blockId\":\"b_AtnChw3FVqM\",\"templateCanonId\":\"niKscZHbRy7\",\"templateVersionId\":\"BwY0GVdoyHG\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/screenshots/niKscZHbRy7-xZmyCv6P8HstE2LU09zCupVcEitA4S.jpg\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":617,\"authorId\":\"QdS7EnnLprZYxyYtqGoCnDCF\"},{\"title\":\"drannelwebsite\",\"description\":\"\",\"blockId\":\"AvLqWrubuwI\",\"templateCanonId\":\"Tc4iM9HNx3M\",\"templateVersionId\":\"MTKWEAUfkEi\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/screenshots/Tc4iM9HNx3M-M4uUL2Krv19goZJJ560QxH1WK4lqjZ.jpg\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":612,\"authorId\":\"efdXr6DjVdHtEOt8m0MsVrGC\"},{\"title\":\"Minimal Shop\",\"description\":\"\",\"blockId\":\"hU4S5HI90lD\",\"templateCanonId\":\"vxcruW9ipr4\",\"templateVersionId\":\"8ZMiajxQhUv\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/screenshots/vxcruW9ipr4-8sc96fCWq5Dqwgmz9nZyRiXY6MaHcw.jpg\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":604,\"authorId\":\"EHNrlbkVZKuP8TxtAXO26Vkf\"},{\"title\":\"Ved Indicator\",\"description\":\"\",\"blockId\":\"b_kMXdt4bS63H\",\"templateCanonId\":\"1fBclIbbYiL\",\"templateVersionId\":\"xyjyeRs4pKz\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/screenshots/1fBclIbbYiL-BVHD7tra80KRBcB7tG5VPMBybXpXUe.jpg\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":601,\"authorId\":\"zhajl9D1GmczfivKsWmGZABB\"},{\"title\":\"Login screen\",\"description\":\"Two column login screen\",\"blockId\":\"b_srI3wQf6mm6\",\"templateCanonId\":\"QgiMxaR9ag3\",\"templateVersionId\":\"YxL45fnRaiV\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/screenshots/QgiMxaR9ag3-dy6530i0dmBoSUqdKn9AyPqNVppdPL.jpg\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":597,\"authorId\":\"ANfPgJI7dR5aKbkFIiEODZVo\"},{\"title\":\"Bloomberg-like Terminal\",\"description\":\"A Bloomberg Terminal inspired UI with dark and light mode\",\"blockId\":\"b_oPt58NeDJuW\",\"templateCanonId\":\"Ywgao7dGBbN\",\"templateVersionId\":\"sLPehxjvVXX\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/screenshots/Ywgao7dGBbN-bOAlsbZDzyBMn0a4QUxD7tcYk5zoPn.jpg\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":595,\"authorId\":\"R6eUCJQ2HKXywuBOPDc0FOWB\"},{\"title\":\"First Person Starter\",\"description\":\"\",\"blockId\":\"b_pILNQrE8uMK\",\"templateCanonId\":\"90Cd8ykGmY6\",\"templateVersionId\":\"jalJaUoybTH\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/assets/first-person-lB9j3IyvF48IeFOZQhx0dhkCNvm1vb.jpg\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":590,\"authorId\":\"9gZ3ITi99JO6PLh5ZAxjkgJj\"},{\"title\":\"Luxury Portfolio\",\"description\":\"\",\"blockId\":\"b_gr7WRd2ZAee\",\"templateCanonId\":\"rdC0sxEhnod\",\"templateVersionId\":\"vMgZFLVSJJD\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/screenshots/rdC0sxEhnod-Oy4bu5oZe2BEeezOVYByHGLSynZht4.jpg\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":587,\"authorId\":\"d3jvQWXFIedAyiUjYu9HPPfg\"},{\"title\":\"Digital Agency\",\"description\":\"\",\"blockId\":\"k2vJbiczxuz\",\"templateCanonId\":\"czwSPwY5mkS\",\"templateVersionId\":\"lKaXwpjTf4v\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/screenshots/czwSPwY5mkS-EZXI4n4EOprV1H7SKM24BFvbfeHSLU.jpg\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":580,\"authorId\":\"ZxjJ7KyDaOzDJeI5GWokvbk9\"},{\"title\":\"Chat UI with Vibration\",\"description\":\"A Grok-inspired chat UI featuring vibration on iOS, scroll anchoring for messages, and a minimalistic style.\",\"blockId\":\"b_F1K0smuGWF3\",\"templateCanonId\":\"xf3RmrkKlxc\",\"templateVersionId\":\"xvmzXG9whRI\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/assets/CleanShot%202025-03-04%20at%2013.31.45%402x-XGsBn3AgWJBBSp29lh1DsKlifkOuZ5.png\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":570,\"authorId\":\"R6eUCJQ2HKXywuBOPDc0FOWB\"},{\"title\":\"Light Dark Image Transition\",\"description\":\"Built a tool in V0 that lets you drag to seamlessly reveal Light, Dark, and Image transition themes. Perfect for showcasing dynamic design interactions!\",\"blockId\":\"2RleqOxxmpV\",\"templateCanonId\":\"0WSCfiIps92\",\"templateVersionId\":\"w40gaUQrQV2\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/assets/CleanShot%202025-01-25%20at%2010.17.22@2x-qbeGCXmeJVfaLh0jbpJ3ZvEMOJ6Sjt.png\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":564,\"authorId\":\"Xt8wqxzkatVdL270RPPaEkHw\"},{\"title\":\"2048\",\"description\":\"Play the classic game of 2048 recreated in v0. Use the arrow keys to slide tiles in any direction and combine matching tiles until you reach 2048—or go beyond for an even higher score!\",\"blockId\":\"b_iZmAG31cUNX\",\"templateCanonId\":\"A889OrJ2nD0\",\"templateVersionId\":\"Lex4thA1Ln8\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/assets/CleanShot%202025-03-07%20at%2012.27.32%402x-AkQz5dGXrWOgTy6JpyYfjBxoE3ZGpO.png\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":551,\"authorId\":\"aCjLW4mxTcYh4Ej7BYpdjW2c\"},{\"title\":\"Crypto Trading Interface\",\"description\":\"\",\"blockId\":\"b_ClKoZYtEcHA\",\"templateCanonId\":\"8nva3X158lL\",\"templateVersionId\":\"3cMLK0RwDm6\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/screenshots/8nva3X158lL-SxwVaHtTebHy5fNikQwuPZgtpeS2q9.jpg\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":538,\"authorId\":\"micmDxA0SVKxqrqlYEmc9CXp\"},{\"title\":\"Card Stack\",\"description\":\"\",\"blockId\":\"b_edFlyBCH51G\",\"templateCanonId\":\"uSZsV7bdjgP\",\"templateVersionId\":\"0A2Xv1Knxp6\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/screenshots/uSZsV7bdjgP-Wzp8VhjAlrLAjlntMYK4cJi5lbortv.jpg\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":534,\"authorId\":\"OcobxoP65Gniy6QhgnaVcXFd\"},{\"title\":\"Ai Kit Landing\",\"description\":null,\"blockId\":\"b_9QrQsAWdVDc\",\"templateCanonId\":\"cdTqs6CbKqG\",\"templateVersionId\":\"exjf2tHnY7n\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/screenshots/cdTqs6CbKqG-KGUe4r6giSovSzuuBh3Bn0toY50RMp.jpg\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":491,\"authorId\":\"chYH4IkSaOGPVAPH9FJDgKtq\"},{\"title\":\"Card Hover Effect Demo\",\"description\":\"\",\"blockId\":\"b_eNuOpt5zq8w\",\"templateCanonId\":\"ROnXwZZ14cU\",\"templateVersionId\":\"WeSC4hsec9S\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/screenshots/ROnXwZZ14cU-3e7gnREoo8SnxwtgKReX0gUE9Apz7w.jpg\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":489,\"authorId\":\"Z9LcqIiG9UODYlW218p00iIg\"},{\"title\":\"Fluid Dropdown\",\"description\":\"\",\"blockId\":\"b_4Vikr2rlnUj\",\"templateCanonId\":\"zWgCGYGZIcx\",\"templateVersionId\":\"lhE9Rf5iXxD\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/assets/CleanShot%202025-02-05%20at%2015.48.06@2x-McKupkFfCmsHcfwnc9OuQZTH1DMub8.png\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":488,\"authorId\":\"8e3L9Qum87FuzJ7vmaEvvGL0\"},{\"title\":\"3d Card Demo\",\"description\":\"A CSS perspective demo with shadcn/ui\",\"blockId\":\"b_6LjxSks73RR\",\"templateCanonId\":\"wyO2R1L07lK\",\"templateVersionId\":\"ZBOBL62EDmR\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/screenshots/wyO2R1L07lK-8pHGNtGI34ntM0sdQig26zUV9TsPmd.jpg\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":468,\"authorId\":\"1sr15izJ3oKPF5IHChwijl8r\"},{\"title\":\"Design Tool\",\"description\":\"\",\"blockId\":\"b_RHU4Ak4XR4x\",\"templateCanonId\":\"dJAT4gFWmAi\",\"templateVersionId\":\"Didl201KJ7u\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/screenshots/dJAT4gFWmAi-xX9rkNwUV1ROEx4MZvfXBGhaXfDYL0.jpg\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":462,\"authorId\":\"4DEkrGE6KiIGc4sysJpX5KJm\"},{\"title\":\"p0: Minimalist Linear Task List\",\"description\":\"Stay focused on your Top 5 P0 tasks from Linear\",\"blockId\":\"b_ZP3wgZNm9lu\",\"templateCanonId\":\"hvjn7tu440z\",\"templateVersionId\":\"KGCxDzJ6H8l\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/assets/p0-2-a6UHty5BLIuxDt5d6wjQ4WvBF1SDmP.png\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":450,\"authorId\":\"9gZ3ITi99JO6PLh5ZAxjkgJj\"},{\"title\":\"Upstash Starter\",\"description\":\"$c2\",\"blockId\":\"b_0se7thSMcN1\",\"templateCanonId\":\"UU5PnmA1vlN\",\"templateVersionId\":\"HWXkxViqKE7\",\"imageUrl\":\"https://gvsmhepiuiax2e6y.public.blob.vercel-storage.com/templates/assets/upstash-n9zR9iLCrSyNbtAFX8SYPsmOdTo6j6.png\",\"envVarKeys\":[],\"publishedToCommunity\":\"approved\",\"uses\":448,\"authorId\":\"9gZ3ITi99JO6PLh5ZAxjkgJj\"}],\"pageSize\":48,\"emptyText\":\"No Templates Found\"}]\n"])</script><script>self.__next_f.push([1,"8f:{\"id\":\"3TrnvW3giHw6Nukv5CZNo7x6\",\"title\":null,\"twitter\":null,\"github\":null,\"website\":null,\"username\":\"~3TrnvW3giHw6Nukv5CZNo7x6\"}\n53:null\n"])</script><div hidden id="S:4"><div class="animate-pulse bg-primary/10 h-6 w-36 rounded-full fixed bottom-2 right-2 sm:bottom-3 sm:right-3 md:bottom-4 md:right-4"></div></div><script>$RC("B:4","S:4")</script></body></html>